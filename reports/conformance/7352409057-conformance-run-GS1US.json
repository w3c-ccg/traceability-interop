{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "c3ea6cd9-5dd7-4c72-bd71-6d88097c9e06",
        "name": "Clear Cache",
        "item": [
          {
            "id": "499a6a3e-ca62-4e02-baee-97765b988261",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "22973ef5-9925-467c-ad50-94014e24dbcf",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "3c436aa5-b4db-42db-a391-b1cebbbc3870"
                }
              }
            ]
          },
          {
            "id": "2046f560-1d5f-49a2-804a-c6d5943c5a66",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a42241a1-66ea-431a-88a5-8ebe7dd3786c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "d9b2febd-ab96-4176-9537-ff8b227e4909"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "f6f8e526-26a8-4831-b889-88cf823f80c2",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "31ce1a8d-98e9-4628-afd1-cc0f07207c1f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d645090c-c6aa-4345-980a-145e6ce0cadb",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "269e26d8-8728-414a-8301-91396c4f1737",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0c117d32-f660-4e39-a77f-2b4b0bb608f6"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "815b4fb3-972e-42ed-be78-d98c8fcc24ca",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d550ca4d-b847-42d1-b9d2-7d8dcdad3375"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "79f8913f-059e-4589-b685-bb949722bab3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "190d942d-5b71-4e64-aeed-10217451cbe5"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8fc9e75b-1292-4037-8889-11cc30623f41",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "0ddde767-7dfa-4749-a500-61b58574664b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "71b8f9db-4a63-429e-8052-bc9b63a87288",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "00e570f8-a78a-4c16-a32d-da97a6e33547"
            }
          }
        ]
      },
      {
        "id": "00bad68e-381c-4580-9876-5eead5fd22cf",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "679f8468-5ef0-49e9-8637-1f3816e8528b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d37c678b-ba83-47c8-a2a7-3c4c8c45cee3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "72cdf1e3-f1c3-48cb-9010-a4ce761ec97b",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a9f9733-ecd8-4519-9654-9fac08b6b046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5c33edf0-4c7e-4e40-bb02-59b44850e4de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54568c2c-0b90-47f6-9c6a-2cc7c6f70e6f",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a112e97a-1119-429a-a60d-ba3cbc55f768",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d88e2ae2-29e4-4b85-92b6-3da84481343d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73bc9808-491a-42e3-a549-4f82ae7b1a18",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a0d7ede-2e6a-448d-9122-d543386757e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0d69d72e-274a-4822-b221-5d86cbeba97e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "95f83bb8-df5c-4e0c-b252-da419f6b3d48",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4cc4f0e4-25c6-4be6-bc75-8748336da949",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b79d2fb-1e21-4efe-9453-8e46b64c10e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aae93cf5-4929-4cff-ab42-7641fda2b18a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e688b56-ff53-443d-acf3-acd1c4204965",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a04196d-f7ac-428f-a4eb-c0e3ebea81a8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "3854f386-b47d-48b2-b9db-52b9033f7ce1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5023fdad-614c-4fe3-8279-1e8bc443a383",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2ff8d7c8-8a42-409d-a7fa-4c04f30f3451",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "36b81313-a543-4cc0-9a60-0c2c4e4a0fef"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "aaaaa51b-130e-44e4-a6ba-0a5b99404364",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "2f51602a-15ec-46ce-adfe-d2441be35522"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "43feb0d7-2694-43ec-8a2e-355696212f16",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8b0b76e8-53a9-4660-91a4-9071b5149ade"
            }
          }
        ]
      },
      {
        "id": "0865e541-de2a-4082-ae00-7e7dccb555d2",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "b9d0920e-be1e-4b15-acca-6a456dcc5920",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1c398086-5c6c-4972-87c4-7ab00abd1ff2",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "a05b3ea4-de9d-4d72-ad29-b57228ee8f5d",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92300fde-8e49-4259-b44e-9299cb96d58b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3190962-a804-4b33-8761-85f907acbaac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cdd3dcc-57c4-4524-8a04-89418cfadfb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "730bf845-edbe-4677-b06a-ee97d85ff47a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8da03851-4a52-46ee-85da-a3013bbc8c80",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce911eff-c2e1-4f88-982c-4309833e99b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "869890e3-de98-4133-9bb8-556f166c3e94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80200405-866d-438a-ad66-c983635225de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4c494520-7a80-44aa-ba01-3a58eadd199b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "588a5560-ca2a-4b7c-a433-2d7e6fc91640",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8de9bdfa-0fe8-4d2d-964e-c0d3959dac2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be9cddfd-106a-4c21-8e8e-d4a8e66f1bf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3934db37-fea8-4e45-9e60-b1daecf32e2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d2ecb1b2-1eee-49d9-bde3-578706d12911"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e0c21db-fd42-4398-99a3-73d663e21225",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a9e2b0f-1c99-4eef-aeee-40dd5b5397d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50fb8feb-2ea7-4500-afed-71da268ffc56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5baebe5-2e10-4615-befa-8484d2d1b1d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6bf3a6a4-bf3a-4bc8-b8eb-bcb513c5792f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad23f7d5-659e-46f5-b8d0-fba3162a3072",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67a85c35-b680-4baf-b667-fd4143a7303f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9cd2f1e-e94c-4c1c-a184-c0ce8e731d4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15f46e00-d334-45fe-8d96-689dd575a1bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d8e33318-abba-43a6-a888-a93ac8044b0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc5d9150-c4f8-430d-b510-b4f4af60921b",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf29da5c-6d55-49e3-b0ac-7ab8772c8159",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb7a8b5f-d7d4-4556-9986-446b7ebfd0fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "939cfb90-877d-420f-8d5f-dd3a413a61b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bc1cf4e1-e988-479f-ad17-baa1866ac07c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ec25eb5-f3e9-462b-80b4-071de5b6e0b1",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e28100b-6bd0-4353-be15-46be3186622c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29526268-c082-4b27-b723-5a35d5711212"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7cc90e7-2748-4a30-b89e-cc5aedfa89da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "21e0df19-4022-4836-9621-a3b740957f79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66345197-0251-41af-9231-95928eab1be2",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87405aeb-49a0-43fa-aa66-c9b5bf081d56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b85a19c2-ac57-4c9f-b29f-54e9b113a551"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "124e584d-89b5-410f-b199-23b8517afb30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "93760fee-eba9-423c-a4d0-cca4d678ecdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "647230f1-6805-414a-aa5c-92515b636c4e",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f242e20-a617-485e-a976-fa4fb2e59c70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2135b47-f1ae-40f2-b111-00c265ff6fa8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e3f004d-ea0c-4ef6-8b86-ab87bef289ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e7d66c15-5ee5-4b4e-ba04-9eda3032d666"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fd0ceb0-3544-4c19-96f1-152bb258afa4",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4f36ca3-1dc3-4ce4-8edf-9cedfc4ecc12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd214f45-0621-4fab-a488-08e595e73e2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8e3ee96-d595-4e55-b04a-eb6056823f9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "65e012d5-c929-4f7d-9fb6-2bc513fab9cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95960705-b1a7-4949-84a2-fa02af616fd4",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6305ef99-8304-4656-9faf-f59b4a76d4c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e328bc14-c6b5-4cee-a8cd-d35924c2ac5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ad8cfd3-c030-4346-867c-1b279b209ee2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "69879e26-6b04-48dd-a0fb-bc5a2bd0f930"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f856460-d34d-41fa-a3b2-c04b75dece30",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd14b164-20da-4347-a7a9-8d32ad1875fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e42e5b2-4e65-405a-9f1e-f7ed8e3596f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f56001bd-2a68-464c-94d7-87ae72f1795f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "31fdf276-e4c4-485b-86c5-429602040096"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0fe60fe-b892-4d38-997b-96891a100fc8",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "988e90de-aa86-41d2-b832-ff6d43c7c4f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65e6bb3c-d2b6-4e1b-a78a-3e3498500ca4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ce1f189-8178-4d61-97b7-8c65f03a6d0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "206317f6-f6f2-4b94-aa96-0fce48087df9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f48bba5-5b79-4106-86b2-e15c7202fc81",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96bde9f8-87d5-40a3-bc8b-8250fa3e040b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e09a080-75e4-4ce7-a16d-dbe369db1248"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "708f765a-d8f5-4c21-96d2-fe5607a88929",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a940f208-e3da-4cd4-99f1-6680f057a8cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d04283de-a609-4105-8c34-bc1793e8b318",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "605d61c3-df56-4371-a6c2-b50430680b13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90504e5e-9a6c-4d5f-b527-0ea4d3af7dd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcffc520-c0a0-436b-a0e9-c64d8bb3f4d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "026455bb-6fae-4cdf-b30b-1bbffb7f65e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b3a53b2-c83e-4e7b-b657-980f5cf75555",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bebb055-2ed3-4584-a79a-c5173ea7329d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0a24661-b9c0-4787-ac67-b1c77528b44b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7589fbf2-f55d-4b07-85bb-74bc13b5704c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b823c483-6c31-4865-b95c-afa64a62641e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5773cdd-2a79-4869-8804-38f16db058dc",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "043dd153-cc8b-44c9-904a-f3e9d6203a28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d458945-64c1-4552-9fdf-766c8c181731"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30bc4685-f70f-46c1-8e54-624e6f6b0d79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a1f4ba38-0b4c-4fd7-a536-45303c7d5a0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3de8e345-5002-4981-816f-c274b3f21d65",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f32c983-9ae8-4beb-84b1-77effd77bed0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdd420c0-2d39-4f28-8c99-811bc46fea53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e82cb6f6-4ec5-44a4-89e6-c44dd21fc966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "d13856e0-5905-416e-9249-588c2a1dee77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "770da521-5a80-4147-9224-ad824c6f6b5a",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7194afa-f9d8-403d-a723-990112f7c86d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df269490-8d5a-4166-9bd5-8e96055513c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "100dc60a-2839-4489-bb8e-6aa1dd1dc8fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "864fb730-a105-4ead-9dab-4b8b0110f959"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6474b9b8-1746-4185-ab21-c11867c2f2a0",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "136cd68d-8375-4ce1-85c5-79bd652b88be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbdf2a81-1296-4a31-af55-8e7ff300ee28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4db613d7-c17a-4f57-825e-1e629c391713",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3efef682-2b7a-424e-8a25-65a53118c43a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60f265c1-6ab2-4d76-9161-cb6e317557ea",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "061e88a6-c398-4812-b95f-d9fb61487446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0203d229-67e5-43e2-bd49-5b3c661e4800"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "660fd992-1bb2-4920-a9ed-8eeb9985882a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d1a4275-5a34-4200-bf5b-364223d50803"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be7c5b20-8424-45ce-afff-382f3e1b7797",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b972444-23c3-4fd6-9fe0-59627e1907b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b3e46b5-613c-46db-b11e-e10ec5d084d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8068b66-6f80-41d9-8ef2-df425a72b17e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "432f84da-437c-4ab3-ae49-8597684c2a0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3c49819-359f-426a-bb6a-8b1d7308ffce",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff1f9bb3-d4e0-4481-b4e6-3d44f0de52f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38d98a1e-4734-47fb-93f0-666ed8be3be7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b757e668-ad19-43dd-96f8-73ab7d8684ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "651fafe8-2dfd-46a6-bcf6-5428d30a559a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d685008b-03f2-4d13-9af7-53415e58a111",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f2b9b00-51c9-4afc-987c-e19e91df9ded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "730d28ac-499e-429c-a85d-db167c9041b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a11c6552-24b5-4afd-aab2-c09e3bcbbe5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a2b067c-5c2e-4d21-97f1-7b3490f2a71c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4095ec95-c265-40ca-adad-304a7330957b",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e988c4b0-4646-4dc6-8b11-48f5a430cb57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b7a22e3-49fe-42e9-8499-4fba494adedb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11442e23-9640-46ec-bd32-bad0d6f4797a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7685140-df2b-44c5-bdfe-d1abcbd4fd6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f987400-5823-4606-8e30-e1689162b4ca",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43639fd0-223d-4fb7-a52e-3c13fb0db6c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "732ef6cb-98b5-4428-88b1-4ee588a51c38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1522a507-22c1-4066-bb52-59764781d7aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4caf6ec-64b4-4d8a-b76a-50dd1260a41d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1519cd2-313b-40bb-a4ce-27e13a929682",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fa497d5-6449-42a5-988a-f54f90e767a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7b720ff-4ec4-4be7-811a-0916f1a48de1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0662b189-8ca0-4829-90b1-eba4d8600903",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0bd63876-b60f-4e8b-9467-c3cd65b61e7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c682b872-5cdf-4eaf-b9b6-306f3d528adb",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "deea6be8-aac8-4c8c-a0f8-875fe27ed46a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4741685-6782-43c5-b6e1-1b8d18f9c3dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23545c49-29ed-47cf-9a43-acbc16a5b982",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e5a99d4-787d-4365-a0b9-491c125ad8d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3adc8d8-72b2-4233-abba-6a751663ff69",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3297afab-bb9e-48b1-ba87-e761cb0c9292",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b636cab-8f86-4d31-bb44-69180444124f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5872991-335b-47e3-a81a-151c2e7ccbcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1560ce8-0aca-4eb4-8721-f77865a550d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40555fa1-2ba4-4aba-8c71-368eb2b89ff7",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5632805a-4a9b-4b1f-88cf-be81448390af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93146df6-48e8-4061-925c-57241c109e7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aaa1d08-fc45-41bd-a47f-5e3374531e7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "fcee9c4d-a9fd-4977-a1f8-e8b6c7d77d3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d5ceee7-5290-4795-8c14-47706ff744cf",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9cb913a-c50a-43f3-911e-d18c9745e64d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8380f944-fd03-467f-aa01-e53e81c57e53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d683b02-901a-48bf-b475-ec5bb730a9b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "881953c7-d5b1-411d-bf72-c41adb524356"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1aa3be7-1877-4295-93d6-757419291906",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b838db8-1c4b-45ee-b304-390bb5137754",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08ebe286-799c-4db8-a72f-14e05e84e1ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cc8b681-d8ee-4dac-9d1a-7286669dc3d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "57be2231-c8fa-4458-b4e7-bb3df1a34051"
                        }
                      }
                    ]
                  },
                  {
                    "id": "821b8429-fbe7-482a-ae4c-99c6a8b7471d",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7004264c-3076-42b8-b20c-676a924308ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07b2abe5-07e3-4891-b805-f90e6ee5059d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67b1a1d2-5797-4836-bfbc-6b4088020eef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c76c0367-9e4b-4522-a6c7-66aeee41248f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66756e58-334a-468b-8cc9-a497bd23686d",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb558f81-98a3-491f-bee3-6fedccfa2720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b9f7aec-eecf-4c78-b70f-83cea9a09727"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f4cf88c-2abe-4cf8-ab05-523f3ac3f360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3609e38a-a80f-4145-87fa-300fae959a62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ebd21d9-7b24-4e2a-ac10-7f65ee601001",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe83b542-a5f2-45b8-965b-54e4d2fa919a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b65294fa-13a7-4219-8ccc-f17c03a13e49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9194e4f1-9338-4fc4-8a6a-a0bce46aef6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "7963c7b4-958b-4998-8602-b2be3e3432c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e67e5220-7493-4265-b352-f7583f1a2205",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1030b924-54d6-478a-9d5c-d0d129c6e21a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "865502f3-7d2e-47c8-a544-9ccf178b8ccb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50f7be2a-d067-4f62-a583-d746c7fe97de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "629baae6-e24f-46b2-b9a8-f114bdeaf372"
                        }
                      }
                    ]
                  },
                  {
                    "id": "195d8ca8-1848-4bdb-b431-2c2147b6ca11",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b273750-67c2-4613-9cfc-49defa64093e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30f3822c-91af-42d6-b440-38b369df9e2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dea98b1c-ec10-48ef-8f63-f12802c6d49b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "80af1030-31b0-4839-8739-d2b570b47edb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "787ae6dc-91d1-4333-9d4c-50d49e9854a7",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74695496-4eed-4d84-a1c8-49054c8830f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b2d47fb-d530-479e-bfdb-d66eb08acffc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "913f230d-836b-4f8e-a2de-4f640673da91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7c4dcd7c-0fd2-4189-9f37-9d2128b778f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d878323-40a4-42c2-8ac8-06061ddd365d",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec8c94c4-1a8b-46d2-8c08-1428d860dd10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1e2f6a5-8fb7-47bc-b754-6a8d52186e6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f6a76b8-2cfa-4c64-ac9a-fda5e8092744",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "59147ea7-6d4b-47be-bc30-0f7d0d35635b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3d6fd3b-5aca-4ace-9038-f9519deb3d59",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "331930c4-97bd-47cb-b728-881b039d4aca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12c4a768-2a6b-4cb1-9a23-7ef629ee2a97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fba6d8f4-d478-40f1-a716-d23ea4ed0ed5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "560d566e-4f43-44ea-9c4e-12c40ae3240c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64223398-208e-4000-8175-5bdd9e8e2848",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09a34704-32ef-4ce2-80f6-a072c31607ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb5b0de1-432a-41b9-86f3-0cd2c43cddfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0e6a583-6777-4c9b-b6b4-caa796e28a37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "868bef79-8858-4f0a-9e7b-add3eababb8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9279ec43-2ec3-4997-9aa6-14fafa5508d0",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0add322-ae0f-457d-a8bf-3769abb37ecc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48c2bbeb-e732-4241-b91c-6ff7877ae1d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cee984b-1203-4990-b561-66d77f8fe24f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "1e2bc4bd-ee94-453e-8d53-79573e5cde73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d3fdd42-6f88-4d78-89c5-f094ab921bdb",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6967fe46-fc2a-424f-a5a7-05708287d995",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56358cf4-d51b-40b0-bda9-1171cdef8ecd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dc4484b-0017-4013-9b94-0b6964ee8499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "9341eae8-392f-4fec-b256-0680a023b70a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f15e8a8-287d-441e-95b7-35cc0fd51f38",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbfc9544-e2e1-42f8-9701-1f37a96f0903",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60a25141-03c2-43c0-b65d-eb88c451d081"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a7af7e4-c41b-4693-babf-6a283da9939f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "74aefc27-0ad9-496a-8cf6-da95232f2eb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9ae4ac7-295d-498c-9c3b-6b627382a105",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca101f32-de52-4e12-a961-23a2436b436c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf8dbe40-6ad1-448c-8c8f-ee2cb9c8eca8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07925175-d3ae-458b-b036-b5f279316226",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb9e193d-5edd-4145-a897-a77546a2cfdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f1bef8b-8cb5-4b77-8b19-0f3460ccf45e",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bef88974-2d7b-4234-a031-0f2942c33f17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96edaa5e-2682-4d32-bd79-0d61677f42f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "253c22b7-a51a-4263-a6ae-bc35d3090c00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c142c5ce-08b8-459b-963f-c8b44eb870a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1681b111-b095-4f21-8a38-36a03702e6af",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aadc156d-818a-4f38-9a6f-1052d1872337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e35c090-66a1-4a11-8c13-7ea880cb37c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "807eb254-1602-4bfe-9861-04dc2216ac43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "63cdb0f7-c5d5-4bd0-b1e9-5a3b981db228"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b77a40f-fda2-4847-a55c-73ceb9612006",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b262ee09-2316-40e7-bcab-44e701be6b83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b945dc5a-9cb2-4c65-acd5-dbfbda4f63f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7385ccb6-1bc2-4d27-86ee-46eddb25b794",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f382c46-dff0-4ba0-98b6-2133fea6df67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30e90855-542e-4a69-af62-f1356ba634c8",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9ff5a6c-e390-46fe-94f5-98a2a82c9fc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6a7f741-ad8f-44ad-97a8-1531ae9b0219"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd37fa12-8daf-46a5-a92d-212e32e660ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2ecd9db6-d3d4-4613-a16a-917b6bc38711"
                        }
                      }
                    ]
                  },
                  {
                    "id": "401f7e4d-8fc7-4e46-ada5-fe6d63d88d35",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1190842d-7bd7-4c49-8573-afa3cd9f2585",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6a6cb83-715a-41ad-a363-72e80e2a8e73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e39ead88-aa86-41ff-ab95-fc7ad1bc5de6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3fdaf076-bb98-4230-bfab-3671fddff7af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2b77023-2428-49e1-86bc-89a663e16a33",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef1ae024-7954-4569-b1ac-991811e9b622",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da7f4474-aaf5-4656-af82-b1b2e8832dd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c287eb92-ad05-48e8-b0f3-e7f16ab16ec9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5336b7d-01a5-4b0a-9026-cecfec70c572"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e06984e8-d3fd-470e-bbe3-eaeebbe4e0fb",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebf11ab0-9c7e-4084-8ad8-c477a12fe032",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0db92d99-a588-45a6-8c07-4d8f672b4ddf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f69dc66-f783-401b-9b20-17cfcca875d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d6f7dac-b001-40f8-9528-699cfc855aec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c44951c2-43ea-40c8-b20d-03d6e3dde612",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97569c5a-806a-4358-b894-2aea2db25f76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f0e45a5-c288-475c-8242-a1ac139630ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd82f6a0-bf49-4563-84c8-3e9d36fed2be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d97eea62-a402-42d8-ac3a-a10f9cae9014"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3be9a05d-2ff3-41e7-9b0d-638a6675697c",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67cd703d-a729-4b40-9591-ef7da75d0251",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f02fb9b-7597-4b20-a3ae-0344eca5a6c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4a87cff-0304-49ee-956f-9525d9de729e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e03634df-9fca-42ea-8430-201d4d8005c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ada8d1e9-5d61-4b97-a90b-2b0014d3f466",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ca6e0fb-cd60-40ce-9f61-d973b1285415",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21add71a-3cc0-4dd4-8dab-a3736c084d49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48ae0ac8-1fa7-415d-b647-c7b6633faeb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f810c2fe-60c1-4eb9-b069-8e968832b875"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c119a6e7-deb8-45c6-9492-77c2524ebea0",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca30081a-2746-496b-9b5c-3ace35333559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae130737-1ee9-4739-8a83-0097f4cd43f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15815c42-36e4-4d77-8937-162dfc865148",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "1586b837-e20c-4d15-9800-2249547f5cec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc578a46-3e02-4760-b5dd-27a3de3fbb02",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79632322-9ecc-4801-87fc-dd4fddfdf348",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a0231c3-5aaf-450c-8455-b9c8ac98178f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3016ce45-bf21-414b-a703-f6d558ac19e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d79de146-ec26-49cb-9075-9823268f79a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "406a6b9f-5701-4640-b1ca-aeafa1b73d5c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "876a6767-e675-4ce9-9b43-d5790016f4cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6ab95d6-8d46-4f49-87bf-5d6287c64500"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05552c19-1dfc-4e37-911c-437e359f5e60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a978647c-8582-4f1d-a82f-f7d70945add7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fc4af8a-d7df-4094-8a8b-dd92c1e09721",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be147856-1531-423c-b4ec-fc7eb3bbfae5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f7a5b81-efab-485a-b8e7-590569489620"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "448e843b-ace0-40fb-82bb-7514f6ad0402",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1d556121-869c-49cd-9f5e-df9d627a84bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed084d59-ca7d-4027-ac55-3a3bfd7ac019",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1693dfd6-3fef-4f1c-ac58-d68382f67530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1a85b81-e60e-4ea7-8769-8b786a84030a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bfdd510-48e6-40e1-93ea-6a575fc4bcc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c3942d55-553e-4adc-b75d-744b240fc476"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26d0084c-5930-4d7d-acec-e1ba449298f9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eee11f60-6b43-4cac-bd5e-9850a0b6ad6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68fdd8ee-ee04-4bf3-9009-584bb97565fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50c9da35-d5c9-42a7-a842-3b2fc3e57ccf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3dbeb06b-6fae-46d3-a149-f7f4d86966fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31f929fa-3848-44a1-bc45-95438d2a24af",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a24b785-c09a-4a81-879a-5ba95be79483",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cc13917-d34e-476f-b803-2ea4a8df21b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c77b358-b33d-4533-b081-835bc14dfd07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb2655fd-8cda-47b2-b768-6e3c11e0d17b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47b12810-b54e-4951-9b27-c13f87af7b31",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b903f5ff-8505-4028-b806-4ac0f32c55d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ccc2e6f-72e4-4d77-b529-d081744fd08c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90c2f6be-1d13-43d1-adfc-bc897178402a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "5be557e8-3fad-43ff-8af7-9d4a3f4dfa55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7ef3843-c0cf-445d-aa8d-e97e7f3de350",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef1bd93d-35f2-4717-843d-ac32c5442d13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78148d24-c995-4c00-b31b-9ab8aef7534e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14fdba1e-96f8-417e-9775-26f697f9a341",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "06e83b08-3830-484e-a8e2-a52fdd6b77a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a10384c6-1d38-477a-8179-132ef4daf3e7",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6ee4026-8fb3-4a2a-9fb5-f384bf439b1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c25f98d9-0401-4e61-a497-c9d21434dd2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12f2e906-9345-49fb-a433-67cba2e9a4c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bfb64cb3-a00b-4041-92b4-3268105ea2b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "233047f5-8944-46c0-8dfb-7e4e8fa98a36",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "070b6575-37d3-4d0a-a3e1-143b009ac08d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86ab4a27-35c6-4731-b3ce-31de7d93be8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d03d5eca-f95a-45e6-a8d9-7c488380de69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7877ab6d-ea66-4a98-8cd2-4c4b4bbdb283"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e29b7fb-2bee-446a-ae6d-d5174d885568",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6f47872-45a1-46eb-875d-6f1e6a54ad22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a996ac7-461f-4b82-b7fb-e53c46f7e1e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21a2f508-fde4-45a1-ba3b-48fd0ed0c9e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4dda84e9-21ce-42f7-a4fb-c94f1373e3f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e23cd0f0-8924-48dd-8d7a-44185a051dc4",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24fb6d1a-81ed-49ad-b3a0-b8626d601a96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a296124-7167-4a76-af01-b93f30931d10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33a424db-62f1-4147-9ba5-ee93f5b40289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c5eed4c8-f767-49b1-827d-4e416ade6df9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "401b748f-28ce-4979-992b-53f7e824f918",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3bdb3b4-668c-4321-a403-337044057019",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b19e922-f002-4139-aa79-88609bd42b04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4be2e468-1b40-40b0-9113-89a33027888a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7cd14db2-bd27-42a3-8d89-f39386e9b877"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da4d1fc2-2c74-47f5-8fb9-881089430c8a",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "919462b3-6554-4708-b01f-46075675b225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "913f9caf-40ed-43f8-8ff0-c3a7b51b035c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bcb41df-802c-4f66-8092-de547bbd173d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4af12e82-49da-4d8f-937d-d03dd9c26797"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25cce4dc-fa2f-467e-98ea-71355fca3d76",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8d0f87b-585f-4bc4-a573-5b3c276eb460",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3d733da-f14b-499c-a7d6-b6816caee8c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6e5fd07-8e38-455c-aa1f-b41e88a1bcaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc2437a8-a0d7-4918-8d0c-a5ec5668393d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b049cb5-a37b-4215-b3f0-a7edb0d94460",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01440689-6108-4a8e-9b50-3890cd1dcfa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26e69fb9-b31c-4d40-9366-6618b2b31457"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07d50cec-6329-4c2e-9be1-ddce8c3e8ba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b28c3dba-7b8c-4c22-ab00-5214ba92f8ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab10d67f-f554-4c49-8f87-37b60308cf06",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f00c36b8-b18f-4c75-abe4-947075a8e52d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05b93f33-817c-4df6-aec4-ba1cdb027e5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3894238-1b93-4e26-b3f6-a6efc3336458",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "de61f260-1c38-462c-bc6d-91b2392a955c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f839d2f-fbe3-4ffb-9c54-472c88ecc749",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a0de55c-6fad-4639-85fd-cbfc5003ab0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf8c0199-09a7-401c-b05a-0297f731269e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34a9f319-6d0b-4c65-b1ca-a1d868ea06ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ad7c317a-21e5-48de-a201-82c9aad75cb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b370c1e8-46ab-45ff-81c2-2398490fa9b5",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfa0b1cb-0e71-42df-92db-4249edfacaf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3d1be92-0528-4c53-a9e0-7a28b9e7bb8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beae9792-8f8e-4443-ae7a-14b74900f941",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "11a22e9c-cd4e-4943-b395-deb058a4d543"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b6229d8-162c-4962-b3ac-e7451053ca73",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd81fbe3-fdd2-4fdc-a18c-e4a23a427a2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd296c3e-2f45-499e-924f-62690e90720f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34f5f969-45f6-42d2-86f6-a37ac4a44fd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "428b99f1-077e-417b-b4ce-ce7987bbc2cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b44f3b8f-95f9-4fb2-9c71-d2ed17ca8804",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc077469-2bb1-4036-a4aa-44eac9d882c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7455bb9c-0555-4f3e-9a02-621f9ef27eee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd7aeb4b-1629-4d79-9641-8413bc5547c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ee6a106-62f1-49c8-a360-e95f5b795977"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aa20ba3-61a1-48a6-93ca-2e5532aa5a5f",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1daa4848-0230-4a6f-aac0-cb069c82e7b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf0f8873-2e9c-4947-909a-8e1247eb7360"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a18918c-0766-4583-89af-9528253d2436",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "011d0866-52ed-4e42-a1bc-acb738322784"
                        }
                      }
                    ]
                  },
                  {
                    "id": "089770e0-fc95-4e48-8890-e86177a1df54",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f430926-3707-4f79-9d3b-66c8983a9133",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbca02be-ffcd-45b2-ac0d-3ab45ec1ec36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a07864ca-8a61-48ac-8361-efbd9ca6b550",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "785be1cd-8d5e-4a2b-99b5-0d6d9a8f6346"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b573e77-a588-4251-a76d-b85ebad8e95c",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09c9ddac-73b5-4c69-a92f-221aacd9f459",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b68ffbd-c6a2-449f-9fc5-15d77a41e9a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce393c18-a153-408a-bb9c-986e06e39ce7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5c2827ae-5da5-4803-9cd3-228be8d8178e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b763471a-bb9f-418b-9ad7-706482deec97",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "889458e4-2392-4c97-b219-ba36becfd7c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1fd3885-aa08-4018-89cc-d326d2a1a44d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deae0586-cec0-42a5-be8c-4f2e62a03acf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f042c71e-afac-4c5f-8536-92b76b5c8929"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aa27d28-0062-4ba7-9318-2070e7adfae4",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4aa1109-847f-4aa0-8c45-fd671fb5b82e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e96a2a67-f10b-44fd-aa9c-0e8bfcf6263d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5020f50-e2bc-4181-b763-2723c61b3604",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0486524b-407b-4243-b061-6e1c2f8d15cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d26bef7a-f104-4267-991f-28013ce65998",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe06fde8-9640-4371-9769-f8a3d5249383",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0455eddb-5057-4fd9-95d2-77bc596de8e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6c16b7f-3f56-44bc-a608-0e27757e8f04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "47b9d9ef-c7dc-4499-aaa8-851f84cef897"
                        }
                      }
                    ]
                  },
                  {
                    "id": "625f6b79-4a3d-433e-8685-7652e3858c94",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4d964f6-39d6-467e-bb5b-5461fb4750c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9325ce9c-322a-4205-a901-1449e11256d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b91695d-3003-4d55-9510-8c1eb0f1b5c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1253f98-3052-4c1f-b075-29ef7d571313"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5071e46c-be0a-4bb9-8ac5-923dd8d30158",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c26f163-d05a-42e9-8616-a4d8320d220f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8db3012-d95a-441e-a349-3e67e1705aaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a10dc0b0-bf12-41dd-a5df-b67933baea8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a11a1b69-1e66-41be-83fe-816380537184"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aa70977-59aa-4682-8a8c-0aa3fe1d0b6e",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "652fdbb5-3841-4b39-90e8-c475f520fb2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb58fb3a-e811-4891-98da-ed75527a5dd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71997e5e-b2b0-47f6-8e9c-4ff24a06c98e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5ac746a7-b17e-4f4e-901c-10acf36feca5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e5bc216-823a-4467-927d-482fd967d154",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "722a6186-cc33-40ff-90a3-e525168d2e5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6c27ea9-0f61-4687-9305-fd2c9f41025c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82ff2919-7d44-4afd-b195-ccc1e1918e36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "dc25ca16-68ea-4c87-a79b-546e9cf15f01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2a46782-9205-4e93-986a-a60cdc69a34b",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a61ee42a-3add-480a-93a5-b3b4f20c1fcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f163e5ee-29c6-4316-b81f-4ab8cde4b18f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5cc655f-f596-4a75-b3b3-8a29ee998471",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3ed602ab-cfc1-4f2c-9ef6-b6e42309bd6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93e14354-83fe-400b-9f4a-4f49e458e75f",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b4d4200-f182-4e31-878e-f233c1068604",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e962f7d4-1a14-4412-81b5-5ee0b79ca5aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4712026-33ec-4f05-a432-55b1a4c7bc10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "57012a6b-dc5e-4cf7-b4cb-3a9fd6d907b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea6a2d42-2dc1-4e0d-bffa-6f24ee6d2920",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08a91a97-c801-4667-94c7-8d055a2dcc08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ada4ab6c-cca7-41c3-85ac-8676a9f5e4b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2cac56d-33b6-422b-95c3-1f5737c4fe46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4620be68-5542-4960-bba0-1eecc7dbef38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9fb9ee6-27f0-438b-9b5a-a60a7c8b277a",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2888ff30-b583-4712-a258-5260832f0bb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70ad9ca8-aff0-4c7f-96f6-e1705678ef99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc7f7a51-feb7-4033-9ef9-52e2cabe9834",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "1c093a17-0a36-4397-aa58-06469d7bbbab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b389d6a8-9d57-460a-9817-0d173a49ae71",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce3e1490-a24a-4d97-8523-b535ea08ee1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "214913d6-275b-4502-9b80-e23476c95249"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d4e86c6-e35c-4d27-b6ce-fcf81d7ff4a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "089995a6-f8b6-4288-a843-49974892dcb5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9f50205c-2349-465e-b37c-76025c9ec92e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a0b2711e-ad80-49cd-a246-6a2d8c42afdc",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37a6ecb4-f0ae-4b55-9bcb-6163a00af66c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "26a75498-19c3-492a-9f9d-560f4a73c701"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0000e587-3136-44ff-a913-c4e90aec53c8",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8260fd0e-cd60-4380-a626-826ba099bb81"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2ebabcb4-6d06-4f4d-94c7-cbe44c5bd6d5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4be9fa73-1e8c-4cca-93dc-bd9020d7cbfd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fea83d42-0caf-4a19-8a4f-3d26726a60e3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "410ad23e-c48d-4c3c-a67c-ecaf34899239"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6319be93-856b-4775-8b8b-964fe9b5080c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "dab6f834-f86e-4a92-9053-44d211a6a09d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9792771d-0ed3-4e56-a8b9-2cb314526739",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3ac1745f-8ba7-4d27-9675-cbc16208490f"
                }
              }
            ]
          },
          {
            "id": "42461384-c983-4e59-ba58-fc2f39351e6f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6b74258a-90c2-4a31-a144-8b316933365d",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "94d68c05-2e9b-4eea-991b-805ae5b227c2",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54bf3b39-cefc-46d9-85ba-2f7438979b91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "81a4be27-5ad6-44d1-8602-340633f04615"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d02210fb-377d-4bf9-8d6b-0c23e419be1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bbce6b3-a514-45b1-83d0-3278d73fddfc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ceb6c912-c352-445f-b369-68f465288cc8",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "122a1eb4-a8fa-4ae3-9bfd-60f5e0f6dbdc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8b017957-1f3b-4f64-b3f2-1140421ada06"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "176e462a-6616-411d-b904-454328e3ec3f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "51b45f50-470b-4318-8bf2-473f4a6647db"
                    }
                  }
                ]
              },
              {
                "id": "73e27a0b-9d1d-4ac0-b960-ea06fee12551",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "28c8e94b-9d58-4136-9e68-ee7e870d8c81",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "00931efb-70e2-4242-b324-13aae508eeb1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a39865a4-fea7-4d5e-a0f2-332c2a6d2a57",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "29bbeb9c-b559-4c52-a222-5dc12524f89e"
                    }
                  }
                ]
              },
              {
                "id": "a170cadc-5d23-4d6d-8483-c2ef3b162fc0",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "06da3a54-45cf-4f38-91b1-095622b5c88f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a2bd37ba-ea54-4f13-8ad4-f116d01995d7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "623766bc-9507-40f9-bf9a-f28620fd8dff",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "963a95be-687b-44f2-9d28-f81837f7f82f"
                    }
                  }
                ]
              },
              {
                "id": "35be5c73-3fb5-4cca-be61-4d76501931ff",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a94b0b89-071e-4809-bd6b-193be81692e6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "74532eb5-4d1e-4baa-ae01-9774d01e6620"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5732f680-1c93-4aaa-a5db-5f0a904f78b9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "24529871-ef86-4e63-9004-995be01f64ff"
                    }
                  }
                ]
              },
              {
                "id": "9a713407-4a23-4cc4-ba0f-9e6144839dc4",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "538ab93a-bca7-4ce1-9597-d0faaf14a4c7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3f8c5875-1460-43d6-84f6-c26d7b935972"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c1ed9ef0-0f1d-4aa1-8172-bb216d7a1a27",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "605cec8b-147a-44e4-9ae1-0e355b59dd02"
                    }
                  }
                ]
              },
              {
                "id": "37fa6d67-39dd-4560-972c-9049bcea6809",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dda58c8b-9413-4abb-9c35-728cecc6dd4e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ea06ddb8-115d-4523-9a33-ee73606b5376"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "03fd5057-f2c6-492b-bef4-8d3309ec07a6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "fc442521-07fc-45a7-b3d9-d2b565fed536"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fe931490-460c-4286-8506-7966c15cad66",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "259822ab-6682-41cf-97e7-ec0964e1f734"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "52cd50db-2240-4c63-80e5-294992d09698",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5df5c691-2fc4-4449-9fcc-e39f12b571fd"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f81d612f-04ce-4f1c-b750-e11d508fe32e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "01e1a9ad-fb3c-469e-b872-0054fc2dc97a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "92804736-23d4-49c6-9fbd-ddb684b4e2be",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7ab18d79-73ea-484e-9500-0fd5f6adaac8"
            }
          }
        ]
      },
      {
        "id": "65c9c531-f8f0-4e45-b70a-b3b13e1fc834",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "d51e8b74-61c9-4d83-9627-9c6dfeae370b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "66ea0e61-824a-49ee-b434-0573e2b2bf9c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f0e81e86-3801-48e9-a848-130cbb0d547e",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01fee468-c807-44cd-963f-6a0f703fd9e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc98842c-a689-40c0-8b1a-5d728ab5d7a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5711909f-39f0-4990-8653-dfe5b8ff656f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3032ac0-0de7-4d3e-9144-cb50c4046ff2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4e4e2ff-f99d-473b-af74-bde86073066b",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1153bac7-d4d8-4cd8-999e-5d8ef9ad0709",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3618fc79-633d-4378-9b41-014ac88caa2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd7cc42f-64a5-47db-b549-b4d858fb2c95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "518a3d61-b596-4b4b-a8c1-8ec5d3e8d2fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c7c86d5-c355-4532-8b47-37de29237c57",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba372825-cb90-42a7-bff3-899a31703002",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec494ee6-7340-491a-8ba7-bd66a7eb5270"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4931c47d-9a97-42ca-b378-eee407bf6a63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "032bbbe2-d0e1-46da-b770-a26af65d6f51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e0083f8-6e3b-465e-93cf-489845fe7a45",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b51ec1c1-ecfa-471b-90ed-de07348e241f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1aed5c67-cbec-4dfb-9e18-e0c3b227e5c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29eb3a25-cd5a-47d6-9842-d1bef5f64466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2960b9f1-42ed-41ef-bbaf-a2e8058b2557"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d5b6d32-fed3-4739-bd67-688421c2c905",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d86ea057-93eb-4f44-b3c8-6ccf4f6d132d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92a4960b-1e64-4250-a1b4-b1c5f3666dbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8caeba29-f493-4df6-bd5b-b2b013c96509",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d40d097-9e07-4165-ac65-d8d61f625ffa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "821e898a-83a6-4c69-9252-a152d596ac22",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cdd7571-63b8-464c-bce7-c7ff2639fd37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b97a13b1-6182-4800-978e-4cf4f8117361"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dc5efb5-61d8-4ed9-a33c-16bb71eae5c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5c8f394b-8173-4ad0-9ba9-3f37f59b659a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4252995d-760e-4acb-b08d-b83dcadb0ddf",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d97eed66-4edd-48a2-95c9-3eef1a3e6742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69263081-b4d6-4c3f-a5d3-c0a625fc44e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d6b7325-a8f0-4376-9bb1-7eb8918880f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8cb9de9-ea2d-4622-bd89-5694c787adc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94635106-6fca-4bfd-a576-8df94e65940b",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bbf30db-81c2-423e-b5d8-f5b545e79320",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a87c34f-8bfb-4e57-8178-446c50509991"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "426dee8d-1ef7-4553-b442-945027b9b261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b2a2df4-6b85-4440-bfad-7285b7686bcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8da26e39-44de-4035-ad63-e31204410dfb",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d654548-c983-4c2b-a086-92929781b762",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e69bd90-c32e-4bcf-bc39-7870e2ea0a44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2932577-c456-4818-9563-2fd8eb6e5fd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "aff3e86e-8c51-45ad-8450-c730faaa6d96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f59d1d55-5857-4c0e-890a-d2aed9acabf1",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c790d69e-2078-413e-add0-fbfa587c5abf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2787ea36-334b-4508-8cfb-4a5c81ea747d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55178361-37a3-4fc7-a99b-08e9fd6ea486",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "49400cf7-65a5-4b0b-86cb-e0d8c2920d0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dd6e59d-abf0-4324-84a5-12108ccffed0",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d633cfee-ac22-43fd-a32d-01e6719932d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a8cc826-e186-46ec-9d8b-26efe789f1ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "914195fc-48b8-418e-b543-5f1ff7c4e0ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "7b899c55-8352-4b98-8c7f-f07e24fc678f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80f802df-5c9b-42a1-abb7-0b4309e1c942",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "599628c1-1922-468f-959b-ae1febb92f50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea403001-8336-43b8-a367-73e9eb93867f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b64e06aa-8d6e-409d-8ab9-5a18cf1f070a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7e0ecb73-284a-4542-b173-dd9580d5d36e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25f2ce46-cd4d-4e4c-9e31-836c7858776d",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1547615-05c0-46ee-be38-7950c8e3601c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cf5bf66-4ee5-4c6a-be3b-3e97b6146f0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e53f95a5-8cc1-4fb0-a8fc-7d374d7fb9e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4908fac7-dbba-4f13-b268-33d8dd901e06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f370377-28a1-4cd7-914c-5464aeec4f47",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc8c412d-46a3-4abe-83b6-aed27f7a023c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f862dd4b-dbcb-42b8-9a03-d87def581a41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfc92cc5-a133-4a62-be96-6ba1b0364742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "caa06a83-2e84-4bd9-baec-927f0238d0ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dee40d8a-979b-4b38-afb9-b00c506236ee",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f3245e6-1ea4-436c-9844-b5ab382720a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c3b1374-356a-4974-8691-95b7874c4f3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72d9ec14-b9c8-446a-ab3f-4b9c1014433b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "950e49ba-314b-4209-95df-6d526db5779b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8492b8ae-532d-4131-ae01-8baf42aeb040",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4480fa66-1f68-4da0-8330-425e55ba29ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd9eff03-d62d-4b6d-bf88-8edfb6bf2622"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4f6c2cf-b98f-499c-a8aa-26217cc887ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5821499-3481-44a2-acfc-49cf0f4dc9ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30418035-1026-4500-b943-66543ab0f7b5",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1459604-1c7f-4218-8f77-db09fdd6bc9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bd1d106-f588-48a4-bc43-394ec684b8e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f50a408-2b7a-49e1-99d2-c8098ad0a61b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "daf7f578-564c-40d1-a861-66f2e2b0142c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cfc9cd1-38bf-44e0-8ceb-eae1b560e2ab",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70d7abfb-5605-4105-b908-2b1675ba3e20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a01ce81e-dc1c-4bf0-b34f-17e62fa4b54d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "146d3353-2a21-49e5-af27-cd8a6a765734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b44374aa-00b3-47a7-a0f1-24ee1d616557"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6224673-f1cc-4efe-97a3-307bb525c2f8",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c4f60e5-3f14-4b56-9505-25b592fd40f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd21906c-2033-4b94-aa79-b595fc26d3a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e50ed4e-4a02-44ad-8de8-aa70f8cbe488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9abff3f-3e42-4668-9e64-ef781e22179f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07d936ef-e70f-4a8a-922b-9c6dcfa0f4b3",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3779ff3-1264-48fd-96d3-77f5bcec2f92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad9af5bb-bcad-4433-b8b2-7c657c16d842"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ade43c87-3015-455e-a9f0-947fff18c0a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "67c91189-951d-4e7e-9bf0-6473bd1d3dd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff7bc829-e388-41e3-b3a6-f56d341fc400",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0addc0c4-72db-4e5f-b086-9245a2c7d5a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd058b71-10b9-4bf2-be05-dec5a79931c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2866fc0-4d0f-4094-a199-3ab1e4210da5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4bcccaa6-d4af-43ad-a144-9a548aa1a735"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6fa14d5-7ab0-4bf7-b9bc-d6ab49383781",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93da193e-2742-4cf1-9abd-ade70f5c943e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e311876-c8a7-4f6d-a76d-086ccf24b77a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebd58d59-d6cd-4af0-b183-d1553b89af78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bffe3ed9-e1e7-4a0c-8919-d0249e0c2f8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f829bef2-8fc3-44d4-b2ca-d23bccd4dd30",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bec466b7-03ff-49a1-811e-1a5181127a18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "738cd0cb-6d42-4e8a-bab2-bfa3dec984a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0915c688-1ead-458f-9bab-d46795ef0e2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0eb2db21-94d7-4f85-b087-8e520a51dee8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87d00429-2be9-44cc-983f-76e6fef4059f",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dff249ad-23d3-474b-8cb3-01b0e8cf5407",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c6231e0-d6a7-4462-b875-795184e5691d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27e3bc60-3e42-448b-a5d9-f066f3e2ee08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e36137d-d54d-44ae-a0ee-6ed1dc8c6873"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7a05a69-1704-4c9c-86ac-61e5d382f42a",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b84bed8-6b0d-4c5c-91fc-6cb88402ab7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3ce45ca-35ea-48ef-9c40-31c1a4034615"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6f9d711-27fa-4692-8a27-d6310104b62f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "871e5f84-0948-4522-a214-193bab7de3f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7af97eb9-42d2-4963-bd8a-4f8c5d6fbb1e",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "425c2f15-d7a5-49c6-87e2-077aa6a713db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26334e85-efc3-4ada-abc6-f3b8cbf0062c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "783dcd3d-8790-4340-826b-9ec0df10b6c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e454bd3d-7af3-4459-b012-379e421550ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5658777-e84c-4e75-a859-f93f17f1bd41",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "660dc8ad-ed2d-41c8-a5c3-d9de3e9cfd9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2920e31f-0809-4336-8f68-98a59ecac23f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd2f329a-6aeb-40cf-8702-2fe37a9224b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "40a0b526-10c4-44da-99c8-0a43274b59c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24943e25-f5c2-4e1a-9b0a-ec3c057a3c2b",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a542fb5e-7985-4180-88e3-535edf125016",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86439c28-e1da-4bb1-99ee-3abbcb1bbb0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14d42953-5b13-4181-b3a8-053f903731c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fcf66172-83d7-432b-8822-968a29b719e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b9ab3b5-fc66-4128-b87b-12f487fb105b",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df61db85-564e-494e-997a-ccf2bb7aa7c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f9cb04b-a2bc-423a-83a6-c72e79dc543c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e8c82b9-1bbb-4ca9-b7dd-16641856d883",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe5dbbd2-fa1c-456a-b4df-b9fbbe0bcd4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f87b729f-34ba-4e16-993e-0cb5f61ca51c",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81f08ae5-b80c-41d9-a95c-6bd69a28988d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "829b2889-d933-40f5-ae4d-6a7545735835"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2468bb67-f0bb-4fdd-a5be-1458b4aef78e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "54b4250f-f3af-41b3-bf8e-6740823d8116"
                        }
                      }
                    ]
                  },
                  {
                    "id": "057f9932-0c55-4f66-ab41-12820a54c9fb",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "290f6d1c-cefa-4ddc-aaf6-9ad68d955468",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e711af11-19bc-419b-b74f-9e38fe9aac6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a140d5cf-ecdf-4619-bf44-8c122f4230d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f05498c-a58d-4cf0-81a8-87aa735a9f7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05c94e11-83d8-4dab-8f09-eda45ca5dddc",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c625b58-ecdf-4ccd-8698-9e8f3931b08d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0c52073-51c3-4fa9-9a37-0aa1ddd63754"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe7f6d48-2c4e-42ce-81e6-a0221195577d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "43bc0d19-c225-4ab7-bd76-ce0a40e0f3e1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d7db64af-ef82-4c29-82cd-113b2ad3c14f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ce64ed8c-9530-4c6d-957b-f9e0dcbeaaca",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ead3c705-1687-40f8-9642-786a755ae047",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "3ea8904f-70e2-4915-8dae-3256be7404a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a7c123a-bc25-4736-b1d7-288e5c1630c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "60c44174-b380-4201-82b8-876b5a990cc1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0854dea6-6961-44c0-8d47-cd747760ae50",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c0732c38-3142-4731-a1e6-df8a4801a6f6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5d6cbadc-89bc-4c7c-880e-bb5d45afc4f6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "715fd36b-4c3c-48da-ba06-bade7f6d8df6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "74ff0eec-620e-4f60-bc95-c00de2fe9748",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "02393215-082d-4a81-8cf1-6a4447a7a851"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "22289c98-ef9f-4dae-8ca7-99ccf395c493",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e105da0a-dc19-44ed-8c03-3ceae5fca933"
            }
          }
        ]
      },
      {
        "id": "fe2d01f2-cf72-4a68-a4b2-0fdd4566e380",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "5be1000d-69b8-4abd-b4e4-8d4c24a53d25",
            "name": "Negative Testing",
            "item": [
              {
                "id": "060346d3-93fe-4a28-8ecc-2ddf32716801",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "912a8ed0-05c6-416b-bbe8-491d5b0f1c31",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06e07700-cb62-49f9-b4c6-0a040606c7b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5288aa63-f3c0-4746-8001-bcb8d5cfce62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b37681e-9689-469a-b7fd-90c8aee5f0d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "51ba90ab-7bb9-4429-97cb-3d4acee06570"
                        }
                      }
                    ]
                  },
                  {
                    "id": "834c930d-a2a1-479f-b046-1219d2517ab6",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9923195-86fd-4b1d-9ce0-efb412b36ed2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f082c3cc-bce6-492d-92e4-d6bdb941b524"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88650df3-c4f4-42f3-b450-f2aad41c4e8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c061b13-01b4-491e-a415-dcdf13243804"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16471c51-680a-421c-a456-4dd270331008",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "631d7b2c-b996-4e93-bded-7c80904e67c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "529768e1-7fbf-40bc-a56c-7dbd68cec03c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eaf2b3e-cd44-4965-8941-5ff75cfa8a20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf5b829e-e0f7-4451-a4cc-9a71e77cdcdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "253e19dd-c097-4a09-ac53-269a0ceaab34",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ac024d0-5348-4377-b5d0-525acf5971d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6859121e-1f07-4082-b274-5320aa593c0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99355879-ebb6-4ed6-99a2-0d0a14916140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0254ff58-3aaa-43db-9541-a080adf65d16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c380088e-cf1c-45cf-88ab-8ee775dcb6d6",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c28ff19d-1c94-4ec5-b271-bc586e6f0e5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c21ef7f5-470c-4cf8-b583-64fe2c4956c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44a3f128-a130-4873-a1c0-794eb9dda4e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3a3e3a8-7c86-4896-82e6-a7a6bfd00842"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4b0c673-6fab-49ce-a52e-a233b33f7f9a",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a888e02f-22a2-40c4-a27a-ca5d5f1f648b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa8eba5a-c89a-4236-b805-1c987eeb441b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30dc6a6c-ff2d-43a3-8313-26408c5776db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a879693b-08d0-4fd4-8f54-5fc45364f840"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5158fb0-9c28-4335-b9e7-c985e0a7e9c9",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43fc8151-53c6-4d52-a9b5-c38b73e512c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81330bae-0595-4b58-97ab-7a915dfe8cfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a09b467f-5c72-423f-90c1-885d0ad8196b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a3a8ae7-087c-4dfe-99db-27397235c95c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f4ab3eb-bd3e-4ad0-b491-42324b97f6dd",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05bd1d98-1da4-48c3-9c88-5a38ef6ae351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "014677e1-fa13-4181-8fdf-a97c4a4ebb12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da904dee-7510-4da3-8c4e-0f75b281c3a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5aaaa193-8d6d-4dd5-b603-941796db514a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93e00b38-794a-4be6-8724-a1dc446764f2",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ee186fd-e4eb-4e4d-b26e-4a7beeb241af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2eb05dd3-4f39-4a59-a938-2ea063ecfac4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f2b5863-5e1a-4d4c-b41d-ab4b28363e1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dac12fa5-2b16-48b4-933c-8de0725c0c45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5b19903-3701-44d7-8a73-2f554fb42914",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19d68418-58ec-49fc-b6db-af538927530d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b4f74e6-34ac-4b0f-ba30-41a225eb70b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13ed9636-fc2b-4c42-86f5-dfeec2db4109",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "be0b3cba-77dc-4152-992b-4652d256b645"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b5301f0-802d-4604-8eb0-6447287b0759",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4c781c4-a4c1-4dfa-bd9a-7f542029adfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4aeef2f5-9155-4efc-9dd1-dc6b40363b20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cfeb510-074f-44d9-899e-2765a5a5cbea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "3e74206d-c376-4921-b930-b0b2e4ff912a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "186e7083-e441-4206-9b3a-ab55951b2cec",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa7228b5-1263-4ec3-99c3-8a56eba9ad68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72109953-6a60-439a-b638-08d3f578bf07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7abf112-a8a0-43b3-bf3f-6d43880c855b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0917a9b9-8de4-47f3-94c2-d80798255688"
                        }
                      }
                    ]
                  },
                  {
                    "id": "938e9070-54d7-4fad-9448-a78f04a36f8c",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaf7d68e-0f8e-4a3d-b4e4-46ce578a9b2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c6aec3c-3932-4201-9762-1695010e28d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96866a8d-f7f3-46d8-a2e0-da232f8de112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f02034c-ab3c-454e-9354-9d233cdbcd29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93061a25-fdf0-4f86-884e-ad0fd31d5847",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0e99e96-6ec3-4a2e-91d7-0fb4183343c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "317eeaad-c2be-4c2d-bcdb-0fad1b648f85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d840686a-d522-403f-8f2f-300ac635d07a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb882047-63a6-465e-8267-e929add35732"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8819c66c-808a-455d-977b-b6d530281773",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c1b93d7-ce98-4e30-92b2-779d9522a2bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "598a553d-72cc-45d8-b12a-b309acf61c63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "248c80d1-f2f6-4e14-bd1f-95b87c2c1630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "de839f81-74ef-4246-be8a-8f6bc8e8782c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d894d2be-9087-4e46-8777-73ff72415367",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f71b6361-8ad2-4097-a811-769f91a8e1fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcb61644-4ec6-44b9-a2be-50739927583d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "156d77c9-c72b-4fa1-91eb-e2e2a18179e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "911ec25e-7913-4314-a178-f42675ed5efa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce195af9-6a1e-4023-b46c-0636da0e4112",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d29e6e8-d2b1-46ca-aea6-50cb79fc3bfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47a41091-fe49-466f-baf2-1bafc2dcc898"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cf8c2a9-f252-40d8-a015-911e561ad1bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "240bdc69-13b3-4557-a9df-fa80634e4235"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85fd4184-b226-4939-9a63-8edc2da07eac",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac3d0f2b-bdba-4bdd-ba93-3c2a8fbd6937",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd4b8f43-d91f-47d6-9ab0-39a8f77b7b39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ce3c4e6-2515-4417-9883-bd636d093fab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "01db3370-89c1-43b0-89fd-5302a3975a96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14b97c44-52bd-43e1-9d62-89b0b247917f",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c237d24-9ce5-4683-954b-9ef73b768de5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42c44237-0d39-417d-a6f9-60e03c0c9d7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb3fded2-8d43-4686-92fd-7d266e392ca1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e895d92-7ed3-474c-b4cc-05517ab4be9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0fbfeab-c5ea-4482-a79f-16fc899c8aae",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a69887d2-96b3-4fe0-b0d4-f8cc84257a1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "640e5a3d-f68c-4b44-b4ab-3038442f343f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6db5f2e-45a3-44b9-9c7d-b7e22e6bef0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7dd877bf-6542-435f-a626-7f67d300e27c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d586d5b-4737-4c90-9bcb-9a2a9ea81563",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c46b421-fe84-4b34-8c9c-9e6a38cdacd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6d85cf9-53e4-48e4-bc38-38bd4db337f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16b45d54-8521-429c-b941-b9e01bbbd4ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8bf547f-b6b7-4dd2-9502-b0809c7982f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebab33bd-d0ea-48bb-a210-fdeb48ba2133",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a1eea0e-0f73-4b7b-90c0-b2a76fada5b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdb1077c-34df-42c4-b42f-bc88cf396169"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdffdad4-1601-4c12-827a-9abdd5a35be6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "10ec9763-63d4-4091-b0b1-f139e0df19cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79841c42-3069-4f35-8d4d-0be9ac0690be",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "483da3dd-2fb1-4d9e-bb59-3c29460458d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1032932-3f06-454e-94f3-f29985f0d5df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "540d410a-71eb-43c7-a2e9-e636db35de18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d74987cf-ec77-45b5-a41f-e7ed8a8a5423"
                        }
                      }
                    ]
                  },
                  {
                    "id": "607ccaf7-69b6-4a0f-8634-c6c605995089",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c63a1601-5744-4f98-94af-468fe06ffb2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b498fb4e-a119-464b-ac60-423dd88408f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a46d6c30-64c0-4e10-b980-8fcbadc6b065",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b90fa68-8f70-4c26-befb-fe0575711d46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d484199b-ac64-4a14-afaf-7e19b6f57357",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "684f6ba3-555a-40dc-adb1-3277180f8d77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c3357c2-c327-43af-80eb-5ce4461b168d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65c66d24-e0f8-4aa9-ab20-ebcacd2143ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "77c81bd0-46ce-4ec9-ad5a-11218b1c8ed9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "492501c8-5c8c-4674-8a9c-5e037efc984d",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45412358-abd6-489e-8cd7-123821b483dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "268571b8-3ca1-4ff3-bf71-67297bf95f22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac769322-e15f-4c6f-a425-bc5a2b8181a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "18185f5c-73c9-4c4d-9dfd-69618e1ba0cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3c05901-ff89-4d5c-832a-da406bf80b32",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bb3cc19-98ce-40e6-9e71-d99fb80f0e6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d108c5e4-84b2-4a3e-89d7-fef94a26be9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc0924d3-cb5f-4a3f-b65e-8a9d83d91a69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a16c7ea-876e-4024-83cd-913e3fd5597a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66b5a17d-03cb-4b51-935e-61db7c663af5",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f78b7eab-1994-476c-9652-6be0f93ce5b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b0e18ab-2652-4005-93f6-75a575dc2257"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75005867-2718-4c54-8753-271cd5e1be5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "77468386-0b7b-4947-bddb-d5ce300902ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a80c4da8-3ba5-4f2e-a26a-993ef28b42f9",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5aecd0e-fd8f-478f-8668-09aa30fcd0c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93fd7d7f-0a09-4671-ad78-07ef8d5053e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9a5ba5e-905b-4074-b29b-7b0459ac22e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3376ca6b-585c-4087-80bb-9af27d324f22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8b93393-1070-474a-a0c6-112a2153d3c4",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c346885-5a17-41b2-80a1-9bc4b90fad21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61cf8172-34dc-41c5-9a1f-ee75c5e25cc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fdefafb-6689-4c18-82f8-d478fae3cc04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dfe0e57b-0887-4e1a-99a2-782e7c85c59e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fceccd1-5614-46eb-9df7-04bd52980bf3",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b401169-336b-4fdd-b218-91335e444aa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12a9cf18-ae67-4c0f-a47c-d43aad8de32d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "743ab6b4-cdbf-4bc7-a69b-d11943be222a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ab4efc1-cca8-4691-8652-2df2a381ab88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f04cea50-64b0-4687-b6ef-e5b31372551c",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bf6c862-6989-46e1-be92-36efa993f357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90a6a29e-6344-4412-a645-409f394746dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31cf2f09-44b5-4ec7-a220-1d106d71ca66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "50bf60df-3f24-4acc-9b57-54a072143bbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c77a3ee-8ae8-45c5-b684-0b5ac921a3f9",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2be5bc6-48a9-43fe-8472-07997742070a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28a28dcd-ea5c-4dd9-a535-14b29b7b0e10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59affa3e-67c2-4a26-a8c1-1eaa4759c732",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3dcebe54-aabd-44d1-9426-cd33200705d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee0bae52-7e09-4d0a-b2d1-218ce19dda35",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4066d695-610e-47ad-b038-b14ed0986fa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb507c8d-13c4-4592-87c0-a5905fb030f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67649332-85e4-4736-b322-b8cdfe1e45aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d9b6866-7f42-452b-816e-ffd792966a67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49212fde-85c8-4033-bb20-f3aa86d43574",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "930186fe-66e8-4387-a17d-fff32bab28b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cc346bd-2d93-4181-93b9-243d1a427ed0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6af68471-a729-4d72-ab6e-46348edb88ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ba01292-73e1-4508-9788-cec5b256fbce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae93b8be-77ef-4c8e-b220-28b21d4ba482",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "571296f3-32b0-4c1b-a3b6-832bc59c4584",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd8920aa-d034-40e6-b5f7-e49f3c18fd58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67cb82e1-f6f0-47b8-aa3d-534c39240b56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "72616627-ec2d-4b5b-9e49-3295f7426387"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdef2df1-9ff7-49e0-8a3f-b6642488f605",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b77947ed-2466-4b89-8fa7-8d091a11ac43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b450cca0-6497-40d6-b1b7-b86adbda13e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3e69687-bdbe-4569-b23d-14fc78f28f34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "952d1817-c1d4-45fe-8f56-25cc835caca1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "907fafec-d444-4644-bec1-04b7cdcdf92a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "73bb35d1-dd45-41a0-86af-500400357a3d",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bf4eec8-87c0-43fa-b969-ba023d40aca0",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f03ee7bb-0e7e-4596-b61b-1ffd7f5d7d69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f37aef56-05e3-4db1-8df7-9dcd436b60cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "346bc620-fabf-41d1-bdda-a6cc3b66e366"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "36d50cd6-2358-49f8-a3cc-9d5ce03887f0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4a157bc5-9148-487d-8e06-fed937491640"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6f015dea-caee-4ab5-87ac-e739a4f0f74d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "58eefce3-d552-4bb7-8c54-7e5256da440a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "eb4cdce1-b3c4-4a6b-a64d-1ceda9526d53",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "358ee07b-2d92-490f-85a1-6ca643d62f09"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "697aa56c-aa38-442d-aead-78c5f833aa51",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9074e01c-dc9a-4f4e-b897-7439ec389a50"
            }
          }
        ]
      },
      {
        "id": "0a190629-12d3-4cb5-ab88-6a3c4816ab92",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "e435f35c-d5b0-4152-96e9-1def3f0ed2af",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2e0ca404-50ef-436b-ac71-5928d5d0a770",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4fee981d-14d9-4b3b-94a5-51c8b08690e0",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9c44a4e-5c7d-4a9d-8bac-88bb00a51821",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4079095b-1c04-4f08-a5b1-2e205be9ad8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c6bc4de-a9f3-442d-b520-b42e2db17db9",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "727f8719-e9a0-402b-8f17-6b598a8dae55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bda91e15-f844-44c8-a65a-392b970dd3ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d08fde63-ee93-4f6d-b6a0-6ef8ce62f70a",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a1f4173-21a4-44b9-81b9-2f54cb531e03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e35dd8b9-7da0-4ccf-b379-8feb27588350"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f967c2d5-cff1-4236-a7ea-831ec2999bf0",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f201c508-4b5f-45b4-85b8-b356bebc2009",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80ef8e7d-59c6-4efb-a2fc-2c4fb2a25e51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc1150f0-9fc4-4ad4-bc2a-ad61f02d8a8a",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d946c94-98d3-4495-8da8-2171d99dbc90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "081ffab1-135e-4de7-8231-2003559d66d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61f21290-409f-4f9a-9b70-16a4bf478f64",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74839c30-b89e-43e3-af34-66e2f03586f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45f7269c-b801-4d15-8947-ef31bcd6a55f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "483a133b-57c1-440f-b033-e00128a75885",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27e7659d-6579-406e-86e8-a2fbbafacf0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "267bbc7f-4307-4067-9f9d-68178536ea88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99ec0a04-7829-451b-aa9a-1c9782ac5073",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6289a2fa-4aac-45f2-9d88-9a97518c8106"
                        }
                      }
                    ]
                  },
                  {
                    "id": "758db990-0b0b-43eb-9873-f247951e77be",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d87d2c0-f5e3-43ac-ac8c-ded316e1eb24",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2def8140-b17e-428e-95c7-28b8b25f8762"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bac1db4b-b8a1-4f89-b8a5-ac9df32a5275",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52cff4aa-3dc1-4e66-9e52-246609513c82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "035cd6ef-71d8-470f-95d9-6ac5ca04569e",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "370421e4-8ef1-4846-9391-c0247a804ade",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ddc05b5e-a5a0-44e0-8b72-8329c3db5d87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d635886c-0205-4838-9359-059286ce6dc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95be715a-591d-42c7-9b8b-b6ee35a0bb30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4abe294-bc6c-4561-9200-fad05c7f79ef",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1321b342-4baa-4091-bec6-258dcfbf5fb1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c30cc6ff-8cb8-4833-82f6-2df3d79368ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f9f2549-6476-4b98-85c3-57284645d982",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a1f313f-98c0-4d89-b295-c55f7d71677e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7813eebc-f8b2-4075-827d-4b565d301c59",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99dd025f-c0bf-4c3a-8d2b-69d5afc410eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99647563-5875-43d6-9982-ce3d8e98130a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "837ec52c-8001-47ca-a09d-c6d4846cc21c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7eda94ac-7c96-48d7-a287-7af729a34bb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a917be8-9a1a-41cf-ad62-87b57638be1c",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e1f94e9-e6c1-4270-a018-b64df8519cb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e57868a0-754f-4df8-bb6b-5f7b1184f483"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc08605c-c27d-45fe-b09f-a372315e0f19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bd81ceb-865b-4828-a52a-b5e710652073"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9151185-34d9-4b0a-8524-81b334161bfa",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f42096d-01e4-41ab-b478-b48d7ab3a726",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91ff99e5-0905-4f63-a153-631b35da8b30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0de970f6-f3d4-4371-90c7-7fc37c2347c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a3081af-aeef-4c69-9a54-85c93e0c4d79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2b19f20-e057-4d95-a4e7-5c9c56a13385",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "665379e1-4027-4a7a-83ec-5fb5bf8cb76c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10094067-b65d-491d-b6cd-762d272c3a8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b686199-0b55-4f9d-b750-8d3b89d9fa40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edde6810-02eb-46b8-b28f-4538f63e9ecc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d00a05b5-a5b0-4ffb-83c7-6dd2627f8b1b",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bfa2442-be7d-4367-ad9f-e98bb05c92ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c9c9438-2f37-460d-9680-76b7a125e60f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "116acc3f-4180-49ec-be5c-6d0d9f00da8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd95f091-1008-40de-8830-4f7da0b06178"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6773747f-9db2-47cc-bbbb-2ece27341424",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ab5c0b7-19a6-4e05-8769-c35656956a3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2611f936-60bd-48a8-b400-064650d736a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10228ddb-35dc-4a0c-a3cd-5869c5e1ee85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "972afeff-250a-43de-9668-91500b4866b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72c06dee-afcc-419d-85c3-16f3e4a4dd0e",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b053f09a-8413-4e40-93b9-1309e70b9c25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c124152-1480-45d1-916a-a89503d0fcd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e49703b5-89a5-4ed8-9f30-c4fb2696964e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "316bf0e7-7d95-4393-a0b6-3fd4ee19fdaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1124bfc5-2daa-4900-8416-8aa55ba268ed",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85a61b7c-b22b-4e89-a0e2-dff58821851f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24441250-84f4-4e35-a3de-cef75a7ba43b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee4759a4-3b9b-4915-8801-663381537ca4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83c44d60-31d0-4af5-ac1d-b3ffc5ded193"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a793881-9fcf-496c-b0ec-27b4aa98eb85",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1968576e-fe6d-45cf-98ab-b36acb465cab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef5c06a2-4985-4ff4-bd87-a2c19493cf4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b80f5f60-5caf-42d8-a675-49510b99ca54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "984527e0-e542-4604-8039-a21293fb672b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66124a4e-dd3c-4749-9160-7cac3dd1be34",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61930ca1-efd1-47bd-bc55-22a3a4599463",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0d9fb8c-d381-46ab-8e1f-4efe2ecd7ace"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cb6d99e-5854-4c0f-a4f5-e7aa7aede17a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "639b5f49-13e9-4817-b367-cca4a2f54729"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0f5d882-122e-48e7-9ca0-11a6afff0077",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "112db381-cac5-40ff-89f0-66a7759cbae7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c4ce57b-e139-4996-9de0-8cf57e42a798"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fd27d11-a73d-4c20-ad31-847ac6ce1811",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b1c11f8-082c-409d-a5db-2b3e495dd1b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e5993a2-2d2c-4a13-853d-900383266bfd",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b127a167-1183-4de9-b7e3-d0553b5bb664",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db330b8e-e6aa-44b4-baaa-ef8292d9b6e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6af7e900-c9e5-458c-9c26-f62c27cf28b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55e6f734-a2e5-4e31-bcfa-af78bb3e7894"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c86b2397-fbaa-4819-bd3b-7cf57947d359",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acadef51-aa43-473c-a184-0c655c421132",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfd2d0db-7733-47ba-b977-84e7bdd6c04d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cf9cef6-ab9f-455d-abbe-d8c473706438",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68ae51f5-45cd-44c8-aad2-3fdd58a01195"
                        }
                      }
                    ]
                  },
                  {
                    "id": "951f64ec-4dcd-4f4f-af0d-07fce4a919ca",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a76ce6d8-5baf-4531-93a2-ea4917a324e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9717236c-6a0b-42bc-ba90-846779e8037c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bd71d2e-a548-42f7-8663-882210366781",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1f540bc-24f4-49eb-b4c2-7c83ce9b2122"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db986c03-ac67-4b10-940c-5532aa770eea",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4ef0aac-e5b1-4b1d-be4e-1949e10478ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3899b072-319d-448d-9f6f-a9a15318cc94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdff545e-0295-481e-8ef5-a9025c2536be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bac5cd40-0329-4719-9f6f-544107cb5e97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37e9360a-eb43-44c7-bb45-5671e224bb46",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "686ec1e9-c551-4414-aeed-ac2f84593e02",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "691f6013-47d1-40e5-82d2-cff942002591"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31cf62f4-d797-44b4-b716-8c799d14c20f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e0875d6-84c3-4a58-8436-70ee5585ee37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6422ef80-b811-4d25-a5e7-eaf39fae3392",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ad628d4-41b7-463c-9a68-aa2b4dc8c3d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54ea64e4-e276-4cf5-9e12-e6baca551ace"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00d95206-d47b-4c9f-8fb7-ff699841780d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d842a9a3-ca02-4fc0-97ef-b31c8660ede1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75dda71a-6fdb-4bde-afb0-d9f3e0b85b74",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1363104-2a74-41eb-855e-563698bf0302",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67c3a3b8-e530-4c39-81a9-910c3a99c443"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "670f2161-57c4-4365-9a58-75f1b6914f8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30c9d1cb-c32e-49c8-84ef-9106bc089293"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c0551b5-4ed5-402d-9259-20f81dd7f4b2",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc0c50c0-73a9-43a0-b1c0-9ea0af167efe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bcc08a39-60f8-4218-9705-ae569a7539ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff1a1b8b-89e8-4750-b84b-1d18eb581694",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c08b069-6afc-4533-95e3-0ab55eeb36f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "079ce121-893d-44e1-92bd-9cea6d2e99a5",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2b6f391-1e60-4523-905f-7d4029cc59b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9dae03e-3456-4e3c-a2e3-1e414d34c87b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36e29ac3-b364-426d-b3d6-2b4546cb3c3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb386ec5-3528-4413-ad5b-1981e56f5d5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feccc2ad-aa6e-4602-b5da-13f7cd3691cf",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbdd13e9-f435-4623-be70-a4e8db62cb88",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5b71c3b-5bea-4aaa-b976-374ae92009af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "112cc80b-4e3e-49eb-a203-ebd0c7df8653",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93ef0b89-bded-4f34-a07b-384197221ff0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb599612-3342-491e-861e-d599a396cea4",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b235adf6-0c2e-45d7-bfee-68c877574b3f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f96adacb-68c8-4044-8576-b631102445dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f984bf8-f8c3-4705-956c-12ecac80f23e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c250f0c4-d81b-4503-bfae-8c765e354029"
                        }
                      }
                    ]
                  },
                  {
                    "id": "087c043c-5923-4db6-87d4-a9cf29b6c2ae",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f2b4a38-c954-4308-be2c-bf8433ed7440",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4780ca2-b72f-47ef-a75a-f519d8b2de28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2a01b25-4086-4cd3-983e-c42ba0c4d214",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "028f7f24-dd00-474b-9477-3fafffbe0513"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8723594d-9657-4f7c-ab33-b592ecaebb0d",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c7f01a6-f1dd-4ebc-93aa-0d5958ee114f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a26af72d-90b4-4109-8833-2ee0a078f295"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfadacd0-e0e4-462b-ab05-3a64a01efac1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36368168-adfd-4f95-a2bc-8329e2b92b7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5209fd1-9ac8-4d80-9093-c8d133c0f077",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dfcbd2d-1ecc-404d-93ad-4eda6d02264f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fb5faea-5ced-43aa-976b-df602f797683"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03f9f67d-2628-42d0-a152-16655fedae5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5eec51a-25f3-4d60-ba1c-658e59e3435c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20177bba-2edc-4486-b61a-fd4609ab5a72",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7ce86c3-ee7d-4c2e-8abc-64cc8d813d27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3138c9e-d7d0-4ab5-af18-2fc7b051f8a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50bd3db4-c999-4892-9d55-36cf6cd77ddf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99161f68-a358-45e4-a512-78f19185d571"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18556cf8-af0d-4271-87e7-92f9f3d46851",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7603d2cf-4957-4cae-9eb0-106d2cf2d7ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64b32881-2cda-4bda-a0c3-3f372d318522"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c90713ab-70ab-488e-ac36-3742423bf389",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a16c952-096a-4e29-b431-84b9eea2a5be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddf15400-b1c7-4386-a94e-8386ab06afac",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f1c7f26-64a8-4894-8ce6-35d11495ea10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc3c3677-5728-47d5-a02c-460d365ab74f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "135db912-00a4-4170-8d9d-73573dd740dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94f2f576-8f6e-4e07-ae9c-375adaacc874"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb27a462-8cbc-4537-809f-c2e6506c950b",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99b17c1b-6610-4373-9c91-3a30fed30ad9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d87d56e1-2a86-405b-badd-c938d5fcd7c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b36f90b4-4df6-42fd-af2a-cb4601281f5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9617a517-f86f-4b41-a080-8fa518a8f303"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b798697-5a21-4552-9e66-c7893e9e8873",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "988065e8-8e6b-4e10-9fd1-adba224e020d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d706be9-8dbf-4411-b151-b8b89e9e1995"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e28ad57-d2ff-453b-b8b1-c1243afc5571",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57733df4-86a9-4667-b325-d33219e8fbb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbd9762d-9b49-43aa-928f-36211911fe94",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "451cd65b-8b77-4ee0-aca7-b56552e1af7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86488004-a589-4779-9f17-19d1e19bddd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89ee9b35-3ece-43b3-9cd1-dc485c9670ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ad54dcf-63b1-4362-8cd1-e68f16a108c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68191aa1-8a0b-41ef-9135-966e0170b186",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86dc1bd9-6410-4090-baaa-e08897654277",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "637acdb4-a0ce-429a-ab3a-8e12545a11bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d958028c-b90d-4e1f-9134-2c69f268dee8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f87d8794-8731-40ce-9eb7-f67a419d78b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16cda659-c3ec-4140-be3c-696c8508f6ae",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "296ab0ed-3efe-4c9b-b61e-5e86e864b2c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9a0be1f-ec36-4704-811a-4830ac786b14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85a77af6-1543-40cf-aacb-d76becea1a19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a914c4b-bf7c-42ac-b82f-6864fd6fb181"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2be50cf-8e9d-47e0-af60-597611436cce",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4b7eaf0-1af7-41fc-b9e8-873629116419",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f239eca-07fe-41a5-8e20-13943fe21e57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0549484-72e9-4c84-b741-7b2ca85a3bb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce4b819e-9d70-40b8-ab0f-38930593fe0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54d6b3b5-2821-492d-bbc8-dde1602a30cf",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eb173aa-d2fa-4175-a8ee-941d28b9b275",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8333f49d-8cb6-494e-a918-89e1cae4cfc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7599fec1-134e-4625-affe-60743c3fb6a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "603f01ed-1134-4135-b555-03a518269f1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecea6c65-da6d-4cca-a74d-637df6a629bd",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc53d8e1-ae9c-4e84-af15-33270c6ef8f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8009a9a-f8d1-4012-9a00-e13c5d226708"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6ea2a5a-efa5-463d-b9ea-84df4c3b99e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "291422e3-e710-4c29-a63c-4e153f0441b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23cfc3a1-17bd-416a-8995-ebd17f7a8f4d",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da0002bb-178e-49e1-883f-a1ed51232caf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf72aa1d-e119-4969-a280-54708f9eab9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a98c11b-26e9-4bcc-816d-0df6f640f2b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c4a41f9-5de9-46cc-91cb-41379dc1efd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d114ca72-bfc7-436a-a085-5306dd2770f0",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c65f977-e40b-45c9-aef6-d8142d8a4e78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef5b4f52-6dcf-4ae4-8a6c-522c98eb7a6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "333b226a-0d33-4374-b126-7ba31dcff7bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9faa537e-ac0b-4dc9-bb06-cb6c6d553432"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa223583-8e7a-4a94-a62f-f4cf1fada5c7",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7b5904c-8828-40f9-97d9-d9aa9ef3be4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "921f73af-2b30-41bd-ac8a-f986320c253d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ededab5-7a1d-4d15-ac9e-20e40bf2b6a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cfeee62-7e8a-4bd8-8585-7ea74cdf9d31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8373e04c-7890-40ac-a700-e4ad36dad2b3",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0d5f300-2e02-42e8-90d2-782daef9f600",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0c50c73-c434-4a36-bb08-5ac5ae86b9e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8965f05a-0907-4040-806d-f64ffb36718c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bed6c63-51c7-4769-b572-6b8a95ada67f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "614d5320-b66e-409a-8e1f-3f162d016798",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48e60038-82d5-4e6a-b89b-8a4237da702f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "902e3abf-f403-4539-b7e6-35d8c75b7eb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fea42cff-3cd7-4d0c-a657-ea50679e79d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "852bbdb3-05d4-485b-b3f8-f4df19a77140"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e04520bf-120d-4e0e-94cb-128c704eb6bb",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85f95cd4-053f-41fe-96e6-c5ddc8f036c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "065bab8f-17c4-4f98-94c1-1a492d88d4f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3487e192-4573-42f9-add4-c0c924e863ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bad2246f-ea5d-400b-a1e5-9856cec87017"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9308ec92-444e-48d5-9df6-acef5c21df78",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9f5c16e-93bb-4a20-9c78-1fbd9a11d1b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2603346c-a281-421d-a6ae-29c028bbc7e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c602bc8-81b2-44ee-b257-64139e2302ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afdaa19a-a1c8-4c79-9ef9-35911d06a7db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e380c4e5-4f0a-496f-9b10-12db76023b81",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43713c2e-9179-464d-a5fd-73f5d0b82f25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45453e3b-1ff9-426f-9947-3055d72f704a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abcf211a-e75a-44f2-9ae1-d41d4ba29a70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aac9e75f-6bfe-4969-9399-c53926c102d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea576b40-64c4-497e-a42f-8c02f99efcd9",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22c4406b-0a31-4ad5-8ad4-8e353244b0da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46c4a584-3f0d-4d4d-baf7-1daf8a57440c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9be12d82-7605-4ee3-b1ff-0c0719a661a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "234849b0-9941-4025-903d-8a5fe2cb4d7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bbd74f8-a4db-454f-83e5-9b6cfcdf5036",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35662ff7-00b0-4f0e-914d-5b555b5284ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9da53c4f-c0bb-417d-b0c5-2501e67fef58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99a56b25-5c37-4836-9b30-c1e2a6278883",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02cd0b11-2e87-49c9-b179-2419c3e26ccf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9856ddaa-94db-4322-86e7-1591d4145a6f",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57d01e16-cfff-4bd9-8e14-40923e7e3781",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d51cc6e7-32f9-4f7a-8fa4-38c1b4118ce5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be9966d3-4362-4458-8b50-656c76ed2905",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8fae545-2764-458f-b583-d28f5724fbbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2de6177-ac7a-451c-88bd-c0724c8554e1",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9512deb6-6cc8-4999-bfe5-4f307fffb32c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14d78477-d187-4c33-a1dc-296be87aee1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7a4cd7c-f5a5-41b9-9aef-ccd190f70240",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "220aa53a-241d-42e3-a788-44c98afb84d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e1f6da7-b122-414c-bd47-44a9236ec2f2",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aa4712a-3866-4cc2-85fa-637ccb98280b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5761364-5125-4870-8670-2a11a78b8536"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f81d97ee-376d-4474-9690-2af6d4b53711",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b01813f5-cbd1-4e7b-842d-709d73a8abe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b5c7942-593b-4ea3-87f9-7489a8d716c8",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4339f358-4c92-4b1b-b627-7575b5977bf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80e1c947-cc34-471b-ae87-b277bd05ec90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ad31484-84d7-45e2-9257-1a1c1540dc17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "945ee519-f6a1-490b-b79c-7f1af71a63e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0effc9e6-145d-47ca-a25a-8f2a3a92ab41",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fe54b96-9b68-4ca4-bec3-191b3ad50bc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a6e0c1c-ddb2-43ce-af69-4d1bb6484fe3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4a7ad5d-be4f-4852-82e1-917bccfaca80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ed9f2e9-9345-4472-9608-f83796540f54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5f195eb-6229-4c82-9dbf-2ebc68f8fc08",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bef6eafb-3fc6-4cb4-a709-2822b5ab9111",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35f166f2-6897-46ff-aa99-5f101199e945"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "725e0306-eeb4-4dee-b1ae-3db0725fc02e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e131f39-a497-48f2-9907-1cb2649045bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1095583-4d2b-4e3c-b864-53298613f2ec",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "319a93bd-e047-40d1-9cba-383a90bce199",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a459875-e3b5-4356-884e-d3b86f06cedd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "273af408-9c1a-4840-91cc-5753e1a5b65a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21e42d2a-22ad-4a94-bce1-7eabb5aca6c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ab083c3-3ccf-4b37-bf3e-2d7998f4c1ea",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "676819e8-5f66-4648-b090-d9b082aba5af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "768ae851-10d2-4d23-af5c-537959319ff8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aa1676a-e635-4870-b83b-825e5ed8b07b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31288cdf-50c6-41fb-a316-16fa0aecf81f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4ebda31-e354-48ae-b207-ceb9605ba2f5",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39ef6a8d-601e-4849-bc8f-8de4aad8014d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bbfeeb71-a322-45c4-847c-16a28cfd87bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86f64198-116b-4eba-b78d-aaa2e634784e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62586526-9df5-47d4-bbe6-67329af0af40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87511dd8-4bfe-4bd8-9453-fb3a12efd32b",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fbce75b-6051-40a1-8277-d9f3a819c9c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "530a43d4-9bdf-409d-a337-f393cc6193ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e947c5e9-247d-464a-a499-4524edfc6426",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84885448-62cc-4001-8b70-be5380d38261"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5d46fd6-1033-4e30-965c-da7b67a53e48",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e807be9d-c35a-438b-9239-7206331c4043",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa0be682-813c-4537-86a1-3275c13a3718"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b218116-e464-4608-b8e2-5ac4428037ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ffb85bb-e0a7-4739-bdba-c04336d3c799"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31b1e86f-af09-4676-91d6-b981364458db",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce5dbb57-046b-4df8-9b57-876188c967c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08bd24c0-9434-4ac8-aea8-35a874fcdbd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd003b96-fbb1-40cc-877f-a7f5f9245bf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbcff169-131d-49ea-a7ac-b19914c47980"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a21dadc-ad0c-466b-8e0b-816693b2448e",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67ba499b-e81f-4d6f-9654-9cba23b24d4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd9fe7a2-8b57-4156-b7ad-d7e2e8f777b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ea01bb1-25ca-4592-90fa-3117f8980f51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "144a8bef-feba-43c9-8065-6baa668f444a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "751b2bee-a51d-4b2e-a69b-ecd5624418f8",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81ea558a-fa92-47cf-b374-231d07abd2d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75c9640f-e0c4-42e2-9466-c55861f86ea9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "393006cf-703b-49a4-849f-0fb3f90248ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abaa91de-5d6c-4be3-9a90-fe60b596369e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60c0ffa4-5465-4c71-98df-de68db6bcdd3",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05c83cbf-63d7-4d4d-a1c3-607be9228857",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93911bbe-f272-4d85-b50c-edcf296da929"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8abc63e-0504-4542-b697-37b7e7b84937",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "730c184a-4910-4f29-8357-850fbe41aa2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df9b8e62-8962-461d-b236-31f2c04c3ed8",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d31f838-0853-4209-82c8-0489e78ae329",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "888f0e6b-c97a-491b-8ec6-9792e6326aa8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cefa43d0-cab6-497b-9566-3b3b0bea0b0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a15cd2e-cc5f-4f3a-9104-df95035ce49b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65953bb3-e80b-43b4-869c-4d46a71a2194",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8111a8c6-c7a4-4ec0-b928-7da5ac4303f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c86062c-7943-4d60-8681-0f13a61b72e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8cfc8ea-ec5d-4a02-a5a4-9f2f9e1f2e50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0168826-4807-4dea-bc0c-f9544855cd1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29391f0f-8c04-43ec-86f6-6691d4556463",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eaca880-e778-485c-a497-29d8e94bf9f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5df8a8e-c020-4a77-9383-cc632149e922"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f0d4eb0-06ca-415d-a3e9-57c843408742",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d1b5ba0-99fa-4204-b76d-f1f337a56164"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a24783d6-ce23-4921-b075-d2a066b0c36b",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e779819-1d6d-4c79-8d3e-66c2e0ced36a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1437b35-344e-48b2-8d5d-2272c02d887f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "485fd29c-106c-46c6-9470-7033fcb42f4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea551b87-509b-4515-a494-73c20fdc81d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd7d64d0-7375-4936-93f9-450c8322a352",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b658c0b3-6c46-41e5-ac58-cb1ff4781afb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e99d910-d007-487c-8e6f-e6863c937e0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e5c431e-d207-4cb6-95d2-9db4cfb230ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dfa8111-4d7e-4853-b3fc-f573cde6b11d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7c7f945-4fac-413c-ba05-8c9cc32418f5",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86413858-b404-431a-bb72-273d8084f575",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8f05bfd-89fd-43a4-bf75-5cfe26110793"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dbe9c63-70c9-452f-9e2d-6a1788f4d363",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13a5084f-83ae-40ee-92a9-b0448025d78c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "705bbd6d-d177-48ee-946d-31573e01692f",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aab81d56-3054-4370-a427-9b8941eb6ccc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b1cc533-4c0c-440a-80bc-bde4a83a0bf2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83d382c1-0dd2-4434-995b-012106fd7639",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79daa2ed-5b4e-46af-9c48-897df1267eec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8be8e91-1a6f-4fa7-b7bd-056f63d22f0d",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "936b5375-d286-4e68-afe9-1a9061565ecf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60c0ea19-1a12-4d63-be27-9bc7f47fac25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22e7c3d4-40dd-432c-8734-e085b75648b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ec056fe-759e-4c68-8e7d-0ae5908e1ae1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9101df9-8548-4f54-ade7-920c1226023d",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2833b62c-a66d-4451-a07c-3d1a60a4f8fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "449852a6-4ba1-4973-9bb8-67a1beadf291"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05cb7b61-a1c6-4b88-bccd-8aa475c7e10c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cd71ed7-d65d-425e-b4e3-8dcf44ce5a04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c445880-bf79-41e7-8eab-6105acfaa71e",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "516d1d74-4ccb-40b9-aac2-bfb82b5ea5e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5d2d324-a78b-4ab0-86b7-9a904196c6d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b7b3823-de23-48fa-8ea2-775ce977379a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27ac62e4-ea1a-4383-8211-3692c17aef51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b65fa18-544f-4e0b-a66e-52b25ff75e9b",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61f35feb-cf65-4489-a0c7-38722d3a52aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3570e56-6f60-4f46-aba6-bb2029756ba8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d35c6e60-8c2e-44f8-8175-f67ec0cde87f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa7d7c35-3f9a-4cc3-ac7f-b3f1b9a0d527"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d11d81c4-2104-4595-8e06-a904cf351c6e",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c4818fe-224f-4d72-a72d-d2f2157309a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94215eb4-27ee-4658-8942-3f84913dfd82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd81e509-0381-4427-bb55-77a82c9b6919",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7deb6a31-b2d9-401f-8d25-969112dbdc45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab1fdf0e-e3e6-4393-8290-1e3b321c8dac",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2728dc3a-175d-43e7-9e75-9ae0c8cb6fb7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "456cf02a-96bb-4f86-a3a9-85f10f5a6acc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50c97aeb-1579-4dea-8fc6-8a73b643f1e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58ee114a-cdc3-4e82-b57d-c15c4b0f8186"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6162fe3-1996-44ff-a6e3-c02be528e736",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5248be7-833d-4bda-a6d1-adecb6ed1dfd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73b19d1b-faaf-4a1a-bc00-f27af876b07a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ace904e-481a-41a9-aca6-2230cad244d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0329432-0c3c-41a4-8c3b-2b37d354fa8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eecbdc2-cf05-4787-b60a-b3d11b35f9e5",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "927bfbb5-cc39-4e7e-8eae-bd6e4e4823aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "717a7d69-8006-4f32-9fa2-7719666a5970"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e5070cc-8a69-4128-a530-cab4a98b7f67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d7e6313-647e-4226-b3d2-48ecbe70363a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1edd84b9-6c0d-44d0-8a68-bd786b68463c",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f535fafe-0173-4626-a3f6-f7b8826c96a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5ddfa9b-d76b-4a19-b23b-787dfc4f1f00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd5d5441-6add-477d-bbcb-cf81fe3fc20f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53b37745-772f-4d8a-915d-772bbca1fd2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "066609f6-3a58-44d8-b0f5-48773b380233",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73cb4a26-ab8d-4212-b8ae-c738def63edd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c624106-be5b-4c75-84d1-6f5a18b274dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f5d95cb-b7fa-43c0-9260-a48bcae11bb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd2bc5ca-04cc-471c-9499-64ff7ef48281"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2a7dd9e-3056-4c34-92e4-536f4fa3259a",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3061df58-295a-4bf4-91d6-7f716df7b5bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d842d223-af1f-4296-b865-852b9c5561c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "468fb3fc-83bc-49dd-9f2c-764c8c676e59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0a1542b-5425-4a4e-8cc5-ee360de74940"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f1a8ebb-02b3-4bfc-b42c-74d41f07754c",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58ca3ed7-2063-441e-bdb3-6c2e1c16daf4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cecc463b-3775-4f1b-bd89-3758e2501e79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "281fa95f-cf13-487c-95e5-f576f815c158",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64ce88b5-a5d5-420f-ae22-dc751aae3894"
                        }
                      }
                    ]
                  },
                  {
                    "id": "342e6bc6-8396-4421-b830-2f8fc13953e3",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afdea8b3-7e8b-4f1c-83d3-e69567bdfc9b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e03eb90-1874-4585-8c1b-d56c366002dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e540d8c3-82e0-4517-a352-d389579c2b1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fccba21-029b-48d8-83e7-653dd86dadff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4d389b0-032b-459d-9b7b-1ddbe963def8",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ec66e84-dbb3-4927-a49a-ed5def1687ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb2c9327-909a-48d8-b3a8-2a010bb497f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0491cb5-c64b-4679-9450-645ce1e96590",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebb4cfba-9796-4169-80e8-eaacf85685ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb22abf1-1b2d-42e8-aeaa-a251a80eedb6",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec1f0866-14cf-4f5b-af68-2ad1e7748309",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37a59d31-0851-4999-bd4a-e84156497199"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c902e02f-d025-4145-8add-8fc9835d6d6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dab038b7-d2e5-4ffe-9d65-59815b81f135"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c878adc2-1052-4bfb-9af5-d2a53bd6acf2",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f16d6830-ec1e-4744-a740-4417ce94640b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0e98bcb-4031-4e24-a3fb-6de292096764"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b69a024b-49f3-40e0-adcd-9a60520c1b63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a81ab3a-d434-488b-bbd7-e6f791f2ba16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e7a59ef-922c-4e65-a9c5-65cbdc8dcc92",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fde41b12-89d0-4dc2-9967-4e8fe0327087",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4d57f40-4f6d-4bfe-95c3-9e40e823f8a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7314884-438c-4b86-99cc-9b18257dd499",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa35f5a5-591e-4b76-8550-67a8698fa4ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5737111e-331f-4f75-b58e-ca70b87c4548",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6a84527-4a69-43fe-9fbe-bf7f0528e531",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28819478-c0b1-473e-beb4-93000d4d723e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea820d5f-bd39-44a6-b647-fba592b7733b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64c38d49-9ad7-4c6c-9641-7109812023d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2c0901c-9a2e-478b-a996-e9822dfb6410",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d8f88da-e01c-47e2-b122-4e671e247591",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21c1dc55-3499-4cf9-83e3-8fcf36dff245"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b6ac6a7-de0c-4287-bff1-6c93b60d0c7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d847c15-8e65-4e8c-8eb2-2d44053b7e3b"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c8f3ec8d-42d4-4214-9082-2f49d6487267",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cf48df19-5ec5-43ae-90f9-a825023f81be"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bef5f28b-1e45-4878-b86b-268e863e18c4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9c25181d-8a16-490b-81db-0f3d2360f8ea"
                    }
                  }
                ]
              },
              {
                "id": "2ac8dc1f-3cd2-42f2-aa94-8775758baa55",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "067e1211-e7cc-43a3-beb8-d7cf65446073",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a60d62e-3f17-46f0-afe3-d9227baa4830",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "4662e55f-75dd-446e-a98b-cfd098c1dc6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d786ac99-2e86-4b6b-91a1-5ee0040c58fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a62ce1b4-0e14-4ad0-a5f8-ab968aabf9b5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "26895e31-0142-46e7-b647-ad88409ae23e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ea765f75-04c7-4ad9-adf2-17ef4fc5278a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "52d47a2e-3847-49bd-a73b-edf8b2f3364c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "086b3311-0f6b-48f5-ac55-dc05046de33a"
                    }
                  }
                ]
              },
              {
                "id": "ba634d90-d95b-44e8-90e5-358b5a752899",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "69b22392-7cba-47f4-8817-2a6173762b46",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3e3bda4-8718-41f8-bda3-0e07ff755659",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "1bd20cdf-fdd4-414e-85b3-4eb0cf587b8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "365a3366-35d8-4886-ab9f-acf61109aebb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e68f6eae-70c3-40c0-9d7f-9bf444ee11c8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "8173835b-762f-4c3a-927c-d45b7c4ad6a8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "fed46837-8fab-4177-b2e7-d94cf2c3fc63",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4d6e0aed-0edb-4982-9a40-b9a32af75607",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "31b1bbf3-3a73-47c2-8585-f5fb2c2d5195"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e91bdaf8-60cb-4621-bbee-051a3ca07f3f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9de173c2-e085-4f91-9a04-76bdba57de9f"
                    }
                  }
                ]
              },
              {
                "id": "14675743-3134-4a5e-93d2-bb2e45fa0b16",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "51b440a4-8137-4dbe-89b1-e482a8ae255b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "3590d3b2-f5da-48c2-92ff-7cdf659e8e2d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0846e124-8aca-4bd2-aabf-027a6d0e1e0b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ce94d050-cb99-4131-b908-a54aa3dc5866"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7be0da3a-889b-4834-b0c9-a64581709bcf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "49be4bb8-2680-4096-8abd-87ed5f873ac9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3f091b77-b84f-4fe3-b638-603623d89545",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7d428f96-628e-4972-9f01-abee3037689b"
            }
          }
        ]
      },
      {
        "id": "4b5e7206-a8cb-473d-a4ad-6bd1051fa052",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "0410d35b-77ff-4c81-b629-8439fef6ddeb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "52d1cc88-d26e-4f6f-a21a-0521fdf82ef5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "24473743-aef5-478b-a54e-a966989745b9",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba6c554e-cc94-4267-a934-c986fee66128",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "808b569a-5b0c-4f96-88ee-01166518c6f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd179665-5610-42a1-aed0-ad3ab5b94b72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3ee6cda8-2829-49bb-acaa-414f485663e4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "13e3eb95-e700-47a6-9a05-a3c9d0ddbbc4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "75d6ca30-7f9b-4f9b-aea3-84a97f69eb9e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f87cbb8a-2fa4-499b-aa29-5cbf626fe02a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eeeb904a-837b-4886-b99a-e0fc72eccab8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fbe5c51e-45b2-43ff-86f1-e35f77677803",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "46c8a535-7145-4760-9a3e-e33a119b4fc7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c0a00f72-3df1-4db0-a424-30612f89a704",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1e10aa7e-5d39-4114-ad3f-d404a74d564f"
            }
          }
        ]
      },
      {
        "id": "60f161ce-b0c0-4828-bcdf-c29d6e54bf34",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "7d6f90ba-8768-4f25-bc7d-7d3db0722dc8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "93b44f72-5a03-4dca-889e-f135ebd6d11b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bbdf15ee-0a15-4ee1-9342-ec60c4d29ef3",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a8bb891-6b2a-48b0-a57e-69a588f7034e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "69c9673a-c781-4899-b494-32f76c1e24d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46b24847-b3cb-4a97-ace6-c4e2778a2fcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "34265616-b6fd-49e6-bd14-beafca87fb51"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "10ac4195-0485-40e0-afc5-a0b4b926a448",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ca86715f-f1af-4517-b4cd-168203e73d98"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c49f39af-6f4e-4979-a28d-15a61f46aff3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c93258c3-26d2-4ef8-92d4-25fda926c006"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8060c024-2cdf-4ef4-ba71-a46e8e062443",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a6ec470e-4c05-4fe9-a56b-8925ed325ad3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "24a1d3c5-3559-4920-8615-1a5869514089",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "48641207-490a-4b7c-95de-ca101be60a09"
            }
          }
        ]
      },
      {
        "id": "f2f589be-c7bc-4780-bf09-b04c4a541dc2",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "2ea931d4-f090-48d1-9503-d5fa99fdfe2f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a3aae956-4060-47d9-ad08-4b581dd6abe5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bcb004ed-f1c8-4067-a030-16f67cf83c35",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "874a5a08-a050-4c91-ad0c-8f2312da7102",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "977f539f-25b7-45d2-9a87-74393260603d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19a149ee-3652-4635-a702-cc3b4b9a5f5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "712454bc-cbbf-4cac-91a9-978187f4b9fc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ca4c3f40-219e-4331-9885-7e0dbdf49743",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f0df6daa-e5f0-4ffb-bc00-37e25cc617a1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "76ca9307-994c-410c-b6ee-1ebfe07bcba0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "538b91f8-d230-4bb4-9108-9877c9052a31"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cb21dcc7-0f32-476b-8b14-cf1b6c6489df",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "56233ed3-b6e2-43f6-9823-e5b80e3f8381"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b3800836-bd6a-4066-9ec4-562592e230bd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "171dbce3-e905-44f8-bef1-22a165db15ff"
            }
          }
        ]
      },
      {
        "id": "1e6c6b87-2782-481d-8965-3d52142fc19d",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d16fbbca-bf62-42de-b527-ccd77570a646",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "27755aa2-841d-4ff3-95b5-7bef8d6aa0c8",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "b2eaff78-5abe-442a-8414-878f59166ea8",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "51360b1a-7845-46f0-a2bb-ec42bb235435",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cf3bfa59-3a37-401b-9d7d-c78b1c53ea1f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 24
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 156.61754385964915,
      "responseMin": 20,
      "responseMax": 8205,
      "responseSd": 566.7267521672478,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1703809728403,
      "completed": 1703809782473
    },
    "executions": [
      {
        "id": "499a6a3e-ca62-4e02-baee-97765b988261",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "356c259a-fa07-421b-ab15-9b117d39a2e4",
          "httpRequestId": "630c4fd7-0a2d-4218-8f8b-941d1368ea94"
        },
        "item": {
          "id": "499a6a3e-ca62-4e02-baee-97765b988261",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "adf4c257-2bab-46b7-8009-10de4ca08a74",
          "status": "OK",
          "code": 200,
          "responseTime": 85,
          "responseSize": 0
        }
      },
      {
        "id": "2046f560-1d5f-49a2-804a-c6d5943c5a66",
        "cursor": {
          "ref": "baf34bc3-9cc5-4056-9b1b-2a671a72e3eb",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "d3439b9c-0625-4427-8c49-4f30886118b0"
        },
        "item": {
          "id": "2046f560-1d5f-49a2-804a-c6d5943c5a66",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "59b46bcb-de43-4ae2-8be3-50e584367437",
          "status": "OK",
          "code": 200,
          "responseTime": 20,
          "responseSize": 0
        }
      },
      {
        "id": "d645090c-c6aa-4345-980a-145e6ce0cadb",
        "cursor": {
          "ref": "691dde6d-dbff-489e-b64a-22ee65898546",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "3d6e8370-6f8d-428d-bfb6-24d8d164b720"
        },
        "item": {
          "id": "d645090c-c6aa-4345-980a-145e6ce0cadb",
          "name": "did_json"
        },
        "response": {
          "id": "fd8f7f88-eea9-4f22-a9f8-8218c069299e",
          "status": "OK",
          "code": 200,
          "responseTime": 306,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72cdf1e3-f1c3-48cb-9010-a4ce761ec97b",
        "cursor": {
          "ref": "dad4475a-42fe-43bd-8916-6c7b59eedf3b",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ac03b767-2003-4e1b-89b5-9eac80611f80"
        },
        "item": {
          "id": "72cdf1e3-f1c3-48cb-9010-a4ce761ec97b",
          "name": "did:invalid"
        },
        "response": {
          "id": "5d5f2b84-c458-4595-a3a6-a26fae3852ba",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2067,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72cdf1e3-f1c3-48cb-9010-a4ce761ec97b",
        "cursor": {
          "ref": "dad4475a-42fe-43bd-8916-6c7b59eedf3b",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ac03b767-2003-4e1b-89b5-9eac80611f80"
        },
        "item": {
          "id": "72cdf1e3-f1c3-48cb-9010-a4ce761ec97b",
          "name": "did:invalid"
        },
        "response": {
          "id": "5d5f2b84-c458-4595-a3a6-a26fae3852ba",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2067,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54568c2c-0b90-47f6-9c6a-2cc7c6f70e6f",
        "cursor": {
          "ref": "01131d04-225d-4c56-a27b-84f1ee488e51",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "9bd8867d-0cac-422c-87d4-069b01b21852"
        },
        "item": {
          "id": "54568c2c-0b90-47f6-9c6a-2cc7c6f70e6f",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "c33671c8-e62e-45c7-ae1c-bc3bbaa56b3a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 481,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73bc9808-491a-42e3-a549-4f82ae7b1a18",
        "cursor": {
          "ref": "7f10e73c-fad2-4871-87c9-9fcdc986fba6",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "dcbedc07-2f0b-49e2-8855-8d3d805cdd25"
        },
        "item": {
          "id": "73bc9808-491a-42e3-a549-4f82ae7b1a18",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "1407322a-3d8a-485b-8173-4dafd63125b4",
          "status": "Not Found",
          "code": 404,
          "responseTime": 148,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cc4f0e4-25c6-4be6-bc75-8748336da949",
        "cursor": {
          "ref": "35dbf250-b2c3-4467-b462-94de15842df1",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "7ce945e0-2603-44d7-9afc-cd17601c8dba"
        },
        "item": {
          "id": "4cc4f0e4-25c6-4be6-bc75-8748336da949",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "1ec33beb-6e35-408a-8ea3-aa315374b565",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 81,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5023fdad-614c-4fe3-8279-1e8bc443a383",
        "cursor": {
          "ref": "2b767f1c-5795-4cf3-8f67-40016325d2b8",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "b196d617-c53c-4708-b6ca-d2318e9c2c1c"
        },
        "item": {
          "id": "5023fdad-614c-4fe3-8279-1e8bc443a383",
          "name": "identifiers"
        },
        "response": {
          "id": "9a295d0f-aac5-48d0-8119-2732f0dceb50",
          "status": "OK",
          "code": 200,
          "responseTime": 106,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a05b3ea4-de9d-4d72-ad29-b57228ee8f5d",
        "cursor": {
          "ref": "58ee5e52-8d97-4e8d-be34-186602a95bd0",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "db29db44-da3b-42b4-858c-6b636557a7c7"
        },
        "item": {
          "id": "a05b3ea4-de9d-4d72-ad29-b57228ee8f5d",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "f1cfa757-ba9a-4c0d-9e2e-24e8be4040f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 107,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8da03851-4a52-46ee-85da-a3013bbc8c80",
        "cursor": {
          "ref": "8119ff0a-bdce-4ac3-a9c6-a5c0c6b3c3a2",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "f874958f-c82a-4e7c-93cc-b5be0f7c6064"
        },
        "item": {
          "id": "8da03851-4a52-46ee-85da-a3013bbc8c80",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "953090e7-3088-4aa1-a208-f4536c2dd252",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "588a5560-ca2a-4b7c-a433-2d7e6fc91640",
        "cursor": {
          "ref": "2d7b5d5d-d017-4c5f-a7ec-a413c3d4b5f4",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "e2e283d3-4227-4183-9532-3ef63d61804f"
        },
        "item": {
          "id": "588a5560-ca2a-4b7c-a433-2d7e6fc91640",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "fd1f8e99-d09d-4bca-bd57-8f87dca90ff3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e0c21db-fd42-4398-99a3-73d663e21225",
        "cursor": {
          "ref": "4336db60-c164-4d9c-b96f-ad3b33f15b2a",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "ed459e3f-d87f-4062-bdf6-a5cef9f7e70f"
        },
        "item": {
          "id": "5e0c21db-fd42-4398-99a3-73d663e21225",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "289310b0-3997-412a-b0f4-085fb067ef0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad23f7d5-659e-46f5-b8d0-fba3162a3072",
        "cursor": {
          "ref": "26094be7-7942-4fec-930c-f7fa4328c185",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "d6dea791-5c01-4141-8678-7727ad79b123"
        },
        "item": {
          "id": "ad23f7d5-659e-46f5-b8d0-fba3162a3072",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "aa2e9734-219a-44c9-b62d-d0b20a233cde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc5d9150-c4f8-430d-b510-b4f4af60921b",
        "cursor": {
          "ref": "1db8949a-b529-49b8-ad3c-6dc6ce05f5c8",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "8c057037-c78d-488a-8124-295bd333b92a"
        },
        "item": {
          "id": "cc5d9150-c4f8-430d-b510-b4f4af60921b",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "c3f64ddc-4aa5-421f-bbef-6d9dacefb92b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ec25eb5-f3e9-462b-80b4-071de5b6e0b1",
        "cursor": {
          "ref": "a1f56ea1-f0a3-4549-abb3-204019f1b274",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "53f956ff-02bd-46b2-b9a6-60a823820178"
        },
        "item": {
          "id": "5ec25eb5-f3e9-462b-80b4-071de5b6e0b1",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "f98d3b01-c4a0-4425-8122-c3558eb71dab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66345197-0251-41af-9231-95928eab1be2",
        "cursor": {
          "ref": "c78fb7c9-e198-40e6-849f-1b6994497ebf",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "a3ef5fac-5692-46dd-b0d7-13ca2352ce11"
        },
        "item": {
          "id": "66345197-0251-41af-9231-95928eab1be2",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "99d6afa7-a419-4792-a459-5e49ed700647",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "647230f1-6805-414a-aa5c-92515b636c4e",
        "cursor": {
          "ref": "3c60823b-55f0-4708-ad09-83d8e496e057",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "1288f733-1322-45a3-9d8d-09f09596c6a6"
        },
        "item": {
          "id": "647230f1-6805-414a-aa5c-92515b636c4e",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "1c0c2364-3dd0-4aec-947b-d747e04db3ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fd0ceb0-3544-4c19-96f1-152bb258afa4",
        "cursor": {
          "ref": "9a180ed9-ef5f-44f4-a036-baee3bc1efae",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "6a33497d-cf8f-4b02-a248-9608d34de9f5"
        },
        "item": {
          "id": "0fd0ceb0-3544-4c19-96f1-152bb258afa4",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "ec8932ca-c039-41a3-a126-2a94fdcd4e9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95960705-b1a7-4949-84a2-fa02af616fd4",
        "cursor": {
          "ref": "9a168d64-a394-47f8-af1e-05047560d21f",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "cb51bc30-4a85-4383-824a-1859dd84abac"
        },
        "item": {
          "id": "95960705-b1a7-4949-84a2-fa02af616fd4",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "5aaaef42-8714-4919-b4a0-fbf809df1a5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f856460-d34d-41fa-a3b2-c04b75dece30",
        "cursor": {
          "ref": "a64df429-f415-4eca-a29c-4decf21fe184",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "fea755d6-da0a-4586-a62d-d5078f9d72dd"
        },
        "item": {
          "id": "8f856460-d34d-41fa-a3b2-c04b75dece30",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "7c3e412d-cc8d-44a7-a1fc-85f47e44d26b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0fe60fe-b892-4d38-997b-96891a100fc8",
        "cursor": {
          "ref": "f300d56d-daae-484e-9350-e8b7dd6e7c63",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "c1af63a5-0b80-443a-9bee-d9efc6cbf668"
        },
        "item": {
          "id": "f0fe60fe-b892-4d38-997b-96891a100fc8",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "e8059cae-0554-498b-ace7-2a9cd8a7d9a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f48bba5-5b79-4106-86b2-e15c7202fc81",
        "cursor": {
          "ref": "27484360-3bb6-4828-9fcd-4bc445160b5f",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "43b08430-bf39-4389-8335-e7e910b003be"
        },
        "item": {
          "id": "1f48bba5-5b79-4106-86b2-e15c7202fc81",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "3545c08f-e4b8-43f5-a16f-a62e91aa8a94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 124,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d04283de-a609-4105-8c34-bc1793e8b318",
        "cursor": {
          "ref": "80668956-d99d-4676-983d-e1281ae8d893",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "e1c275fa-29fe-466f-8590-3eaa449a4d3b"
        },
        "item": {
          "id": "d04283de-a609-4105-8c34-bc1793e8b318",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "6691556d-1513-4791-932c-da51ffe2fef5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b3a53b2-c83e-4e7b-b657-980f5cf75555",
        "cursor": {
          "ref": "a0bdfba3-8d1b-4079-b6bc-a9f4e42c6aa8",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "aab24cda-d1c2-4a97-9fd8-ef5f0944532c"
        },
        "item": {
          "id": "4b3a53b2-c83e-4e7b-b657-980f5cf75555",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "cc0638e1-2496-45fe-bb89-65340f4540c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5773cdd-2a79-4869-8804-38f16db058dc",
        "cursor": {
          "ref": "01bed7b1-7625-4a04-8c57-0b1ef23f4496",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "4b840cc0-dbe7-4414-8318-6d341f1a4828"
        },
        "item": {
          "id": "f5773cdd-2a79-4869-8804-38f16db058dc",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "ffe499fc-8678-4284-8daf-30b23b8f1e4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 119,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3de8e345-5002-4981-816f-c274b3f21d65",
        "cursor": {
          "ref": "70f54cab-c434-47d4-b1a5-bbb511426589",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "0402b7a8-a4aa-450e-b828-77bc082bf21d"
        },
        "item": {
          "id": "3de8e345-5002-4981-816f-c274b3f21d65",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "a0284fbc-5975-40ba-9b45-f3121414536f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "770da521-5a80-4147-9224-ad824c6f6b5a",
        "cursor": {
          "ref": "1b81b161-70bc-4ff4-b3c7-8a4da7a9cacc",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "fb4f4d05-e804-469a-b188-a29662532e6d"
        },
        "item": {
          "id": "770da521-5a80-4147-9224-ad824c6f6b5a",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "5ea5347e-94f5-44e4-ad98-0344192c8a82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6474b9b8-1746-4185-ab21-c11867c2f2a0",
        "cursor": {
          "ref": "eee998b0-9ac2-4d00-a578-c6e1d26b3865",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "62f066cb-bc17-4e74-9f53-7793da8a0d26"
        },
        "item": {
          "id": "6474b9b8-1746-4185-ab21-c11867c2f2a0",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "d9fdffa7-7f69-4d92-9bf1-a4bba2cb69d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60f265c1-6ab2-4d76-9161-cb6e317557ea",
        "cursor": {
          "ref": "db67cee4-44b4-47f5-a120-ac30e4e9c571",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "8d884aa0-e250-4bdd-80df-8a4d92b97223"
        },
        "item": {
          "id": "60f265c1-6ab2-4d76-9161-cb6e317557ea",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "dee29116-ef04-4188-9bf3-cf0a97718d78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 108,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be7c5b20-8424-45ce-afff-382f3e1b7797",
        "cursor": {
          "ref": "d414916c-2bf2-4e15-aec9-743c5e1979e3",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "c5ad164f-ea6c-4da0-950e-79dae77d0a91"
        },
        "item": {
          "id": "be7c5b20-8424-45ce-afff-382f3e1b7797",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "cc649ba8-2ab0-437d-a831-af2979f17c14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3c49819-359f-426a-bb6a-8b1d7308ffce",
        "cursor": {
          "ref": "8171f883-7fbc-490a-8789-28334a9701a2",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "91c764d9-7e53-4982-98ad-5190a4e2dda3"
        },
        "item": {
          "id": "b3c49819-359f-426a-bb6a-8b1d7308ffce",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "051ec5da-8c3a-4e3d-97ba-494d948977e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d685008b-03f2-4d13-9af7-53415e58a111",
        "cursor": {
          "ref": "d67ec2aa-0fa1-4133-a142-6f8348759371",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "de66429c-ee90-4c19-a59f-4961fae8ebef"
        },
        "item": {
          "id": "d685008b-03f2-4d13-9af7-53415e58a111",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "04986817-e79e-4fda-a721-6a5c41b5ffaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4095ec95-c265-40ca-adad-304a7330957b",
        "cursor": {
          "ref": "fa1b8582-8b1f-4edb-a723-5fd75b0cd642",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "47f79b99-5144-4702-868c-2a090847419a"
        },
        "item": {
          "id": "4095ec95-c265-40ca-adad-304a7330957b",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "312808a9-183e-49d4-aa26-3faf383fb394",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f987400-5823-4606-8e30-e1689162b4ca",
        "cursor": {
          "ref": "9459fa3c-e864-4576-81ea-786a32e12ba5",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "fa3c4b41-32e0-4559-bde9-6ee0d5e67cec"
        },
        "item": {
          "id": "6f987400-5823-4606-8e30-e1689162b4ca",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "32250671-fc48-4561-83a9-cdadcc3e45c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1519cd2-313b-40bb-a4ce-27e13a929682",
        "cursor": {
          "ref": "8451db92-ddbf-4a04-a1c8-4af543467f1e",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "f1271869-22da-409c-8ef3-50c541520c7b"
        },
        "item": {
          "id": "a1519cd2-313b-40bb-a4ce-27e13a929682",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "95348aa6-b2dd-46d5-921a-60f36e28439c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c682b872-5cdf-4eaf-b9b6-306f3d528adb",
        "cursor": {
          "ref": "2c9ab948-518d-48d1-8728-ddf48536de06",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "9a6f212b-e417-4c3d-a81a-5f6a86c4c2c4"
        },
        "item": {
          "id": "c682b872-5cdf-4eaf-b9b6-306f3d528adb",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "f3d1cacc-60d3-496c-9c1a-cdf6e3876920",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3adc8d8-72b2-4233-abba-6a751663ff69",
        "cursor": {
          "ref": "2441ef9e-b2c2-4451-a25f-965ad4cffe1b",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "2762026f-f7aa-44c0-ab46-fd4f18eec2e3"
        },
        "item": {
          "id": "b3adc8d8-72b2-4233-abba-6a751663ff69",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "4974e5fa-30c6-4ed0-9bca-1dc1e363dff9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40555fa1-2ba4-4aba-8c71-368eb2b89ff7",
        "cursor": {
          "ref": "0a4b10f1-a6fa-4369-b4c0-56224d7a7f71",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "82857412-8489-40fc-81c9-165db4708f2f"
        },
        "item": {
          "id": "40555fa1-2ba4-4aba-8c71-368eb2b89ff7",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "0848b3fa-9f10-4065-838a-48974b993ed2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d5ceee7-5290-4795-8c14-47706ff744cf",
        "cursor": {
          "ref": "cb23d96a-e1e1-4b98-aa44-9485d3495cee",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "c89972e7-07f9-4ec3-bb34-85f2cfa61789"
        },
        "item": {
          "id": "9d5ceee7-5290-4795-8c14-47706ff744cf",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "dd856582-a282-4942-b41a-7f6f51f6a3e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1aa3be7-1877-4295-93d6-757419291906",
        "cursor": {
          "ref": "603fa4f9-c384-4944-aa10-3fcfd00cd7aa",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "2bd31f3b-c72d-4959-afce-b2b8be9a71c2"
        },
        "item": {
          "id": "f1aa3be7-1877-4295-93d6-757419291906",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "addefc52-7455-43c5-810d-df30e532e7ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "821b8429-fbe7-482a-ae4c-99c6a8b7471d",
        "cursor": {
          "ref": "db74c983-33c1-4158-8c2c-0044b8392f67",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "c4897cf2-a7e4-4437-8e17-731a47906a16"
        },
        "item": {
          "id": "821b8429-fbe7-482a-ae4c-99c6a8b7471d",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "7fc96907-3ef7-48ce-8449-c22a81ea260c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 124,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66756e58-334a-468b-8cc9-a497bd23686d",
        "cursor": {
          "ref": "89080487-7ebe-4cc2-9ec0-118a239b399b",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "34e93614-c202-4223-aa8b-e4872f39cce8"
        },
        "item": {
          "id": "66756e58-334a-468b-8cc9-a497bd23686d",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "794f69aa-27a5-47bd-a923-e2b2c5baf4e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 107,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ebd21d9-7b24-4e2a-ac10-7f65ee601001",
        "cursor": {
          "ref": "6f4bb380-218e-4e50-b8f7-9afee387b9a8",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "41a74202-6b39-423a-99c8-53cf6bfc63c4"
        },
        "item": {
          "id": "9ebd21d9-7b24-4e2a-ac10-7f65ee601001",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "bc250f6c-101a-4f93-825a-4e24c7222dcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 139,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e67e5220-7493-4265-b352-f7583f1a2205",
        "cursor": {
          "ref": "8feae21c-2ff6-4b8a-ae2f-07f1ea433aaf",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "e1784334-9b1c-4bdc-b85d-04695cd1b1dd"
        },
        "item": {
          "id": "e67e5220-7493-4265-b352-f7583f1a2205",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "0025f909-05fb-4704-99b8-96245d71ea63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "195d8ca8-1848-4bdb-b431-2c2147b6ca11",
        "cursor": {
          "ref": "b507d7d4-ed9f-4f8a-a909-65dac2fa8696",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "75cbfe2c-9a44-472a-9e9b-30cc04c71fbb"
        },
        "item": {
          "id": "195d8ca8-1848-4bdb-b431-2c2147b6ca11",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "c26f3f6c-da85-41ec-acef-895c90248180",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "787ae6dc-91d1-4333-9d4c-50d49e9854a7",
        "cursor": {
          "ref": "636c78e3-cd67-4a1f-8a4b-1c632c7e90b8",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "ed18c14d-0890-4caa-94dc-df8c49d42836"
        },
        "item": {
          "id": "787ae6dc-91d1-4333-9d4c-50d49e9854a7",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "52e8c240-9391-423e-9a75-6b332c7c5add",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d878323-40a4-42c2-8ac8-06061ddd365d",
        "cursor": {
          "ref": "333a538e-7213-4d9d-87f0-6020ab7651a9",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "73bb6ede-9f0e-4646-927c-2b01378fccd4"
        },
        "item": {
          "id": "6d878323-40a4-42c2-8ac8-06061ddd365d",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "73a7d54d-eb9c-4d48-89a6-0ea8004a6cdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 667,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3d6fd3b-5aca-4ace-9038-f9519deb3d59",
        "cursor": {
          "ref": "4164d067-5b04-47e7-be9a-e3040ec73bf0",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "385db03f-d48b-4df0-84a2-250b3ddf180d"
        },
        "item": {
          "id": "d3d6fd3b-5aca-4ace-9038-f9519deb3d59",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "8ddee280-cd79-4565-b61c-20b5fdfa70f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64223398-208e-4000-8175-5bdd9e8e2848",
        "cursor": {
          "ref": "d270ffc8-79e1-4db3-829d-e2fe78f541a4",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "fe1c8146-e7dd-4bb6-b1b0-37f6f8c1ff0e"
        },
        "item": {
          "id": "64223398-208e-4000-8175-5bdd9e8e2848",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "d18ebd9d-3f1a-49c7-9d5a-93adc6908312",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 426,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9279ec43-2ec3-4997-9aa6-14fafa5508d0",
        "cursor": {
          "ref": "f8c6d894-3e52-4b0d-aef7-01bcd17538b6",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "4a5732dc-7dda-4553-8a73-bc6b33c980c9"
        },
        "item": {
          "id": "9279ec43-2ec3-4997-9aa6-14fafa5508d0",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "c0cc61a8-a927-4a69-be39-c869f179d91f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 116,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d3fdd42-6f88-4d78-89c5-f094ab921bdb",
        "cursor": {
          "ref": "e850620c-aee9-4268-9ebf-b70db35beeec",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "b009ef60-acda-43fa-a90d-1adecc663122"
        },
        "item": {
          "id": "9d3fdd42-6f88-4d78-89c5-f094ab921bdb",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "ff1ff868-133f-44aa-83be-c562289d4224",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f15e8a8-287d-441e-95b7-35cc0fd51f38",
        "cursor": {
          "ref": "7e68b0d0-7eeb-4564-81c4-054049439817",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "5e4b2660-664c-4fec-8023-0e7f995041c6"
        },
        "item": {
          "id": "3f15e8a8-287d-441e-95b7-35cc0fd51f38",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "339bd30a-7a35-4ce6-9634-6333a5009b5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 334,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9ae4ac7-295d-498c-9c3b-6b627382a105",
        "cursor": {
          "ref": "d29bad6e-e9fc-4312-9210-73b75479de48",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "73a51947-1599-4fc7-8ecb-a873b09c3be9"
        },
        "item": {
          "id": "e9ae4ac7-295d-498c-9c3b-6b627382a105",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "a1bb0925-198f-4b0d-b98b-be6b72b32bcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f1bef8b-8cb5-4b77-8b19-0f3460ccf45e",
        "cursor": {
          "ref": "cdc42e69-ae45-40d0-9f61-d8a8556863f1",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "6447193f-2925-4ebf-9231-cddc07966dab"
        },
        "item": {
          "id": "7f1bef8b-8cb5-4b77-8b19-0f3460ccf45e",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "07b6f6d6-6553-4f78-b1f5-e8c7a17fd5c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1681b111-b095-4f21-8a38-36a03702e6af",
        "cursor": {
          "ref": "9245d4df-3fff-43cf-b0ba-1f630b8fb4be",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "eefea5e7-dfa0-4d7a-92be-3a726aaf027b"
        },
        "item": {
          "id": "1681b111-b095-4f21-8a38-36a03702e6af",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "9b5f9ce6-a5f0-4b2b-a22f-af63a0374ab9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 122,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b77a40f-fda2-4847-a55c-73ceb9612006",
        "cursor": {
          "ref": "634ac40d-8e8a-41eb-969a-14652fe4afce",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "3e5a4438-e5f7-47d7-939e-481ad95b64c3"
        },
        "item": {
          "id": "0b77a40f-fda2-4847-a55c-73ceb9612006",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "4f99aa18-be87-437e-ba7b-c2aa65644ba1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30e90855-542e-4a69-af62-f1356ba634c8",
        "cursor": {
          "ref": "3ff76eb4-617d-4d68-9d16-79fb49613b7d",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "a3fe3f7a-e7a9-4e1e-bb44-24c0c26f5358"
        },
        "item": {
          "id": "30e90855-542e-4a69-af62-f1356ba634c8",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "5c943d9f-9ab3-49c6-b1b7-2a375ecabc46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "401f7e4d-8fc7-4e46-ada5-fe6d63d88d35",
        "cursor": {
          "ref": "b8cfbc43-6c78-4972-84c6-c10b2fe8390f",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "ea154ddb-8330-4fd9-93c3-4c203eb1d635"
        },
        "item": {
          "id": "401f7e4d-8fc7-4e46-ada5-fe6d63d88d35",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "4dbfe000-cf98-4e64-8414-051ceeae8a15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 131,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2b77023-2428-49e1-86bc-89a663e16a33",
        "cursor": {
          "ref": "9b7a00e8-4b8a-4c4f-9902-b98cb2b62556",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "2c73349a-88e3-477a-aa81-012550b9f95f"
        },
        "item": {
          "id": "e2b77023-2428-49e1-86bc-89a663e16a33",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "193aacd1-d42d-48ac-9bd1-f58b2aaf36f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e06984e8-d3fd-470e-bbe3-eaeebbe4e0fb",
        "cursor": {
          "ref": "a934ed41-cf8c-40c2-a535-3223c350e224",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "813b8f5a-028f-46e3-a6e9-458757064836"
        },
        "item": {
          "id": "e06984e8-d3fd-470e-bbe3-eaeebbe4e0fb",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "db971209-f8f0-449d-8d95-85e5d8aab9fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c44951c2-43ea-40c8-b20d-03d6e3dde612",
        "cursor": {
          "ref": "fdf9aab2-88f3-4128-baa4-816f1398837d",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "2eea7eac-966d-45c3-a91d-cb013c7d7ebb"
        },
        "item": {
          "id": "c44951c2-43ea-40c8-b20d-03d6e3dde612",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "a81161c5-72fe-4665-a654-5a25f781a9a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3be9a05d-2ff3-41e7-9b0d-638a6675697c",
        "cursor": {
          "ref": "1922da45-a0a6-4cee-810b-0dff906c4a79",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "3bf93df1-3aa1-4bfd-8220-351f71d90a70"
        },
        "item": {
          "id": "3be9a05d-2ff3-41e7-9b0d-638a6675697c",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "fc7fefae-5a12-4bd9-afa9-331f290d019e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ada8d1e9-5d61-4b97-a90b-2b0014d3f466",
        "cursor": {
          "ref": "20d82525-7306-44b3-852f-4dd0134f47b1",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "dbaf03d4-640f-47aa-9899-4aae1a39e150"
        },
        "item": {
          "id": "ada8d1e9-5d61-4b97-a90b-2b0014d3f466",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "bb413cbf-b32a-4b67-b5ce-9de1ab6d3ccf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c119a6e7-deb8-45c6-9492-77c2524ebea0",
        "cursor": {
          "ref": "fee0fb18-6438-4002-a425-1826144bd4b7",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "6ab2cafc-a60c-4c9b-947b-2f31f8817245"
        },
        "item": {
          "id": "c119a6e7-deb8-45c6-9492-77c2524ebea0",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "1d891ff2-9d22-4d78-87d6-5ce9db89898d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 217,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc578a46-3e02-4760-b5dd-27a3de3fbb02",
        "cursor": {
          "ref": "1c704b45-9167-4a1a-8a2e-3eec70b7c6e7",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "b4c4989b-7851-433a-883a-1fd9177c5cbf"
        },
        "item": {
          "id": "dc578a46-3e02-4760-b5dd-27a3de3fbb02",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "ab8da535-4739-40cb-bbc8-c25ffbea1292",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 188,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "406a6b9f-5701-4640-b1ca-aeafa1b73d5c",
        "cursor": {
          "ref": "8b9b4bed-4460-461d-a312-5df50d35f4a2",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "d6b97d13-3199-4cf4-86c7-7a471d26493a"
        },
        "item": {
          "id": "406a6b9f-5701-4640-b1ca-aeafa1b73d5c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "3c9cdff6-5b10-40fe-96b5-ee9d617f3648",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fc4af8a-d7df-4094-8a8b-dd92c1e09721",
        "cursor": {
          "ref": "913a9fc6-4b7b-4eb0-b7fb-cbafa2d88de5",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "9a5f24b7-85e8-4e9b-a436-f9195084ba45"
        },
        "item": {
          "id": "8fc4af8a-d7df-4094-8a8b-dd92c1e09721",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "25b2d16b-5aff-4fa1-b73d-b8b3f5b062a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed084d59-ca7d-4027-ac55-3a3bfd7ac019",
        "cursor": {
          "ref": "847ebc50-6ee4-4c4b-bc01-2619828466d9",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "c5bec9f0-eacd-439a-bf72-7f2656cc0a72"
        },
        "item": {
          "id": "ed084d59-ca7d-4027-ac55-3a3bfd7ac019",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "2739cc76-3151-426f-a60e-8c05ec1b3825",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26d0084c-5930-4d7d-acec-e1ba449298f9",
        "cursor": {
          "ref": "b2cfae8f-e9fa-4c56-a255-d481cb9f7ad2",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "11919135-a7b1-495c-9799-97e6c9db1224"
        },
        "item": {
          "id": "26d0084c-5930-4d7d-acec-e1ba449298f9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "dba9201f-3493-4215-8e4a-7ecf78b329d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 153,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31f929fa-3848-44a1-bc45-95438d2a24af",
        "cursor": {
          "ref": "f22fdf65-300a-47f1-ad7c-c54ae63bd684",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "7e12fd9e-a9bb-4036-be66-08cf8599c5a3"
        },
        "item": {
          "id": "31f929fa-3848-44a1-bc45-95438d2a24af",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "5d12f548-31eb-456b-bcc3-60baa13c412b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47b12810-b54e-4951-9b27-c13f87af7b31",
        "cursor": {
          "ref": "413f47b1-c271-4c2b-b7ac-476af6664ce7",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "0a84491b-8c9f-44a3-b182-d9a29e76e61a"
        },
        "item": {
          "id": "47b12810-b54e-4951-9b27-c13f87af7b31",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "ae5f59b2-e2a3-4e94-9cb2-9e60ada34547",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7ef3843-c0cf-445d-aa8d-e97e7f3de350",
        "cursor": {
          "ref": "86155c79-1916-4802-a596-645733920fe7",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "fcbd777e-d10e-43eb-82a8-7e0db6f25563"
        },
        "item": {
          "id": "d7ef3843-c0cf-445d-aa8d-e97e7f3de350",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "6d08a1d0-2840-4466-9414-ed7b23752f55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a10384c6-1d38-477a-8179-132ef4daf3e7",
        "cursor": {
          "ref": "ad93e5af-3b7a-478a-8d73-fffda86f33a1",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "17b45c4a-eba6-4a17-86f8-ecc1df26a37b"
        },
        "item": {
          "id": "a10384c6-1d38-477a-8179-132ef4daf3e7",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "10f0cbb0-ec9b-43c5-8b35-84304c6143ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "233047f5-8944-46c0-8dfb-7e4e8fa98a36",
        "cursor": {
          "ref": "7fdd282a-f800-4176-98f3-3f50a4bb0038",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "27b37f43-4c96-4ab8-87b2-9cfcacc18a86"
        },
        "item": {
          "id": "233047f5-8944-46c0-8dfb-7e4e8fa98a36",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "72281ace-3594-4570-8f79-7de2f29699b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e29b7fb-2bee-446a-ae6d-d5174d885568",
        "cursor": {
          "ref": "e8454557-a51f-4051-ab71-db53463d721b",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "b34dbfa4-7bc9-4b41-b5af-3eb2443fe59b"
        },
        "item": {
          "id": "3e29b7fb-2bee-446a-ae6d-d5174d885568",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "d0b08e39-94d0-4a15-8e7d-f746197628af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 127,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e23cd0f0-8924-48dd-8d7a-44185a051dc4",
        "cursor": {
          "ref": "27f01daa-c65e-4b2e-ac5b-9cad6b65788c",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "cf78054b-e0c0-43dd-8249-5f66162ad1b3"
        },
        "item": {
          "id": "e23cd0f0-8924-48dd-8d7a-44185a051dc4",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "6ab5fd56-63b9-4845-9ac4-c9f313d59210",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 152,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "401b748f-28ce-4979-992b-53f7e824f918",
        "cursor": {
          "ref": "36410d3c-f1d8-4c20-a739-7c0baba0ca70",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "00294c4b-d23e-48bd-8d53-ca20c447b8c2"
        },
        "item": {
          "id": "401b748f-28ce-4979-992b-53f7e824f918",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "aee7071b-2180-4edf-9d77-0d6c533d42ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 160,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da4d1fc2-2c74-47f5-8fb9-881089430c8a",
        "cursor": {
          "ref": "e49c9b35-68cc-4a15-8426-790aa0aa0a0b",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "64cce25a-9c1c-4259-863a-8d5c641095ee"
        },
        "item": {
          "id": "da4d1fc2-2c74-47f5-8fb9-881089430c8a",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "e69f6d50-8a54-4a7d-8517-798afebbe61a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25cce4dc-fa2f-467e-98ea-71355fca3d76",
        "cursor": {
          "ref": "c696f945-6292-4e84-a261-7638984a6c8a",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "f7d0b1a9-0e8b-488d-971c-3f6888ce18d8"
        },
        "item": {
          "id": "25cce4dc-fa2f-467e-98ea-71355fca3d76",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "edccb15d-e3bd-4018-adc8-138c59805683",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 119,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b049cb5-a37b-4215-b3f0-a7edb0d94460",
        "cursor": {
          "ref": "1bf49a07-15d6-4f67-92ca-beaa64388843",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "07ff76fc-5925-49ee-a499-825920d84e79"
        },
        "item": {
          "id": "6b049cb5-a37b-4215-b3f0-a7edb0d94460",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "9bf16162-5ea7-4435-84de-5eb67e277804",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 131,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab10d67f-f554-4c49-8f87-37b60308cf06",
        "cursor": {
          "ref": "80537059-0a0a-4478-9605-fea3348ce524",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "21caefab-817d-4fdd-a864-83cb4036e71b"
        },
        "item": {
          "id": "ab10d67f-f554-4c49-8f87-37b60308cf06",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "bcb93afb-b280-44ea-8c04-41e989793efe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f839d2f-fbe3-4ffb-9c54-472c88ecc749",
        "cursor": {
          "ref": "61744ad4-333c-4f09-92c4-3fe8c891c0b5",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "bfa60a91-a5fd-489e-972b-1a855c467a42"
        },
        "item": {
          "id": "5f839d2f-fbe3-4ffb-9c54-472c88ecc749",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "aa9cab36-8c06-4549-8087-dee7213e1a16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b370c1e8-46ab-45ff-81c2-2398490fa9b5",
        "cursor": {
          "ref": "ff165f30-5b26-4b1d-a1c8-136384bed786",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "bad517bb-d9c8-4633-9d39-67c70340afe8"
        },
        "item": {
          "id": "b370c1e8-46ab-45ff-81c2-2398490fa9b5",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "0f742f07-1a44-4d09-8cb6-b3fbc1653c62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b6229d8-162c-4962-b3ac-e7451053ca73",
        "cursor": {
          "ref": "adff2492-f7a9-4a98-bc46-4d710068a483",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "5426b378-9be3-4967-9d33-a1b8f1b606f6"
        },
        "item": {
          "id": "5b6229d8-162c-4962-b3ac-e7451053ca73",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "94d26521-bb77-4605-8bda-08d94cb17cec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b44f3b8f-95f9-4fb2-9c71-d2ed17ca8804",
        "cursor": {
          "ref": "c5eba4a6-94d9-4a06-b31c-e9d53bff3b56",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "bc79f750-2059-4f61-9313-5c924c4d163c"
        },
        "item": {
          "id": "b44f3b8f-95f9-4fb2-9c71-d2ed17ca8804",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "9d04aea7-5594-4454-8721-2d46af7e2926",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aa20ba3-61a1-48a6-93ca-2e5532aa5a5f",
        "cursor": {
          "ref": "3a82cfa9-1d2e-46e0-ba9c-27d69bca404b",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "9c0dac42-6104-47fc-b3bd-f2f1d3f77212"
        },
        "item": {
          "id": "3aa20ba3-61a1-48a6-93ca-2e5532aa5a5f",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "5f8d584e-adc2-4762-aeb9-c3c6d2514ac8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "089770e0-fc95-4e48-8890-e86177a1df54",
        "cursor": {
          "ref": "b1bc972f-7fb4-4712-b103-f9d86b3c8414",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "d93cbca1-f367-4629-ab2b-5ad57ac08ab9"
        },
        "item": {
          "id": "089770e0-fc95-4e48-8890-e86177a1df54",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "4679d698-cb88-49a5-9160-957c8ae552b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b573e77-a588-4251-a76d-b85ebad8e95c",
        "cursor": {
          "ref": "cd3933c9-21b3-44b7-8707-2fac6872f235",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "8049ce33-5e11-490b-9516-becdb4d25774"
        },
        "item": {
          "id": "9b573e77-a588-4251-a76d-b85ebad8e95c",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "eac2d5af-2c1b-4674-8dfe-bf0c5b1fb876",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b763471a-bb9f-418b-9ad7-706482deec97",
        "cursor": {
          "ref": "fc5a7c80-2424-4e8e-b8ee-d830fb2b0c07",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "89f6677f-c1b0-4e98-ba22-29e978bea525"
        },
        "item": {
          "id": "b763471a-bb9f-418b-9ad7-706482deec97",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "6af83a2a-9df2-41ad-865b-2de876361b9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aa27d28-0062-4ba7-9318-2070e7adfae4",
        "cursor": {
          "ref": "0c70644c-c043-48b5-9ac4-f67d2c0626e8",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "6d1abe84-e984-4c22-b83f-80b20ad69856"
        },
        "item": {
          "id": "7aa27d28-0062-4ba7-9318-2070e7adfae4",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "5134c298-3fab-4aa8-ae4b-31485ec294e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d26bef7a-f104-4267-991f-28013ce65998",
        "cursor": {
          "ref": "54c758c4-5d9a-4d93-818c-458e9c970b6a",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "845138f5-cde3-4af7-bfb3-a4cfdfd07cd5"
        },
        "item": {
          "id": "d26bef7a-f104-4267-991f-28013ce65998",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "48162b33-5ece-428f-82a7-63d29a82dd06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 167,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "625f6b79-4a3d-433e-8685-7652e3858c94",
        "cursor": {
          "ref": "53bb6f8d-4c70-45ec-8a9d-bc0a2d56c80e",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "cd4ca63d-ae9e-4535-984c-5b1cc26aa756"
        },
        "item": {
          "id": "625f6b79-4a3d-433e-8685-7652e3858c94",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "b52a8eca-c443-4266-a01f-7bc0eeb7db50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 160,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5071e46c-be0a-4bb9-8ac5-923dd8d30158",
        "cursor": {
          "ref": "5f03c085-5ada-4120-9246-cdcb9d1da0d2",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "37b7f004-a4cf-483b-af68-7177bd5d398e"
        },
        "item": {
          "id": "5071e46c-be0a-4bb9-8ac5-923dd8d30158",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "07ed4898-2993-47f8-9b0c-464082f6f590",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aa70977-59aa-4682-8a8c-0aa3fe1d0b6e",
        "cursor": {
          "ref": "62a76a5b-aced-4834-915d-7ac4f46abe66",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "7af7082a-5ca1-4366-a940-ec454fbffb56"
        },
        "item": {
          "id": "4aa70977-59aa-4682-8a8c-0aa3fe1d0b6e",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "150fc743-6efe-435e-84f6-8b6a5edaf256",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 155,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e5bc216-823a-4467-927d-482fd967d154",
        "cursor": {
          "ref": "d5255f15-84aa-43f9-b835-3deed84ea238",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "626151f7-4fdd-457e-a324-aefcbd3fd1e6"
        },
        "item": {
          "id": "3e5bc216-823a-4467-927d-482fd967d154",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "aa9f5ce8-5cd7-4901-b067-136880f6a036",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2a46782-9205-4e93-986a-a60cdc69a34b",
        "cursor": {
          "ref": "8166298e-95f0-45b6-81cf-d64341cbfee7",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "a1917d57-e1f3-45ac-9c46-50505626f6df"
        },
        "item": {
          "id": "d2a46782-9205-4e93-986a-a60cdc69a34b",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "ed7de572-d8f7-4d24-8086-9356e74794fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93e14354-83fe-400b-9f4a-4f49e458e75f",
        "cursor": {
          "ref": "6fc5e4e1-4ba8-491c-9ce6-40562f7605ed",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "1afabeeb-af0d-48bb-a542-0ccee1414f58"
        },
        "item": {
          "id": "93e14354-83fe-400b-9f4a-4f49e458e75f",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "a7986c00-6784-4d0a-85e5-2a5f760b0e07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea6a2d42-2dc1-4e0d-bffa-6f24ee6d2920",
        "cursor": {
          "ref": "64d0b616-5995-4162-80e2-deed4c921e27",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "29a4de42-4629-4301-bc6b-07f4bdf21080"
        },
        "item": {
          "id": "ea6a2d42-2dc1-4e0d-bffa-6f24ee6d2920",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "51a6a459-4e86-4477-9494-87c82bcafa66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9fb9ee6-27f0-438b-9b5a-a60a7c8b277a",
        "cursor": {
          "ref": "09f2b562-b61f-4f2d-884d-08936ad0561c",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "5916a9e8-939a-4b10-b70c-cd0ce1f39ec7"
        },
        "item": {
          "id": "a9fb9ee6-27f0-438b-9b5a-a60a7c8b277a",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "6d4f1873-76c0-4810-9d08-45616c58b90a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b389d6a8-9d57-460a-9817-0d173a49ae71",
        "cursor": {
          "ref": "c60ca291-2c64-4af6-a6b6-12c9437ea754",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "920ef54e-c549-4858-b790-f6726c4bfae3"
        },
        "item": {
          "id": "b389d6a8-9d57-460a-9817-0d173a49ae71",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "dc6d74d3-b60d-412e-9617-661739a9b377",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0b2711e-ad80-49cd-a246-6a2d8c42afdc",
        "cursor": {
          "ref": "68e0d94d-1ffe-429f-8ffc-a8549de07211",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "673f7c46-fff6-43a7-8bbf-aa039cb106b2"
        },
        "item": {
          "id": "a0b2711e-ad80-49cd-a246-6a2d8c42afdc",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "5d7ec78d-77da-4341-9db5-95fcaa5b7bcc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94d68c05-2e9b-4eea-991b-805ae5b227c2",
        "cursor": {
          "ref": "6d54b56f-af93-4a6d-8494-bd14af8d2b56",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "546a3c77-a290-4bba-8385-2bbb38af1919"
        },
        "item": {
          "id": "94d68c05-2e9b-4eea-991b-805ae5b227c2",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "c268726f-256e-4b0c-8283-0fbe0b05fe28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "ceb6c912-c352-445f-b369-68f465288cc8",
        "cursor": {
          "ref": "2badcfc7-1b51-40a5-80c1-e3e2589bf590",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "dbaac642-baae-45fd-8af5-ac09294bd7e9"
        },
        "item": {
          "id": "ceb6c912-c352-445f-b369-68f465288cc8",
          "name": "credentials_issue"
        },
        "response": {
          "id": "9bbf1904-b34b-4274-bda7-43d705e47865",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "73e27a0b-9d1d-4ac0-b960-ea06fee12551",
        "cursor": {
          "ref": "5f278596-5b04-42cd-b794-798ea7a7d9ee",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "5a141e49-5e8d-4137-9c76-b33510565fcb"
        },
        "item": {
          "id": "73e27a0b-9d1d-4ac0-b960-ea06fee12551",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "901213f9-6b42-4064-9e15-bb2a0fa2b1ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "a170cadc-5d23-4d6d-8483-c2ef3b162fc0",
        "cursor": {
          "ref": "592a0c82-daf4-42e2-9dc3-c9a93e606bfa",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "a15d837d-5261-4ae5-828f-b9ababded571"
        },
        "item": {
          "id": "a170cadc-5d23-4d6d-8483-c2ef3b162fc0",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "756eb368-ceb4-4595-b786-b6af6d1932c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "35be5c73-3fb5-4cca-be61-4d76501931ff",
        "cursor": {
          "ref": "358a0686-f470-4b98-8eff-edf1574b7f38",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "7b18362d-33b0-49f0-bc47-7bf173b67d6c"
        },
        "item": {
          "id": "35be5c73-3fb5-4cca-be61-4d76501931ff",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "bdf5b991-ff0f-45a1-9c6b-328d4cf29754",
          "status": "Created",
          "code": 201,
          "responseTime": 8205,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a713407-4a23-4cc4-ba0f-9e6144839dc4",
        "cursor": {
          "ref": "0982ea2c-725d-4ea1-b68b-a58484940aeb",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "8de00c20-c75b-4a4b-988c-a06c935bccc7"
        },
        "item": {
          "id": "9a713407-4a23-4cc4-ba0f-9e6144839dc4",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "7f8d08b6-7a71-4713-89be-ae7f39b29819",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "37fa6d67-39dd-4560-972c-9049bcea6809",
        "cursor": {
          "ref": "903e8686-55d6-4672-9a80-3fb621970a1b",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "da610b59-a79c-46cf-9e3d-178cc1a4c920"
        },
        "item": {
          "id": "37fa6d67-39dd-4560-972c-9049bcea6809",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "f1a16af0-7383-4c52-9e9e-11191540cfac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 132,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "f0e81e86-3801-48e9-a848-130cbb0d547e",
        "cursor": {
          "ref": "b8ca9eb0-df59-4c24-b28f-01619d37ffc3",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "67955eb4-e67b-45ec-aa70-164616350d4e"
        },
        "item": {
          "id": "f0e81e86-3801-48e9-a848-130cbb0d547e",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "e6d03f16-e1f2-44ca-849d-9a5d390a2026",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4e4e2ff-f99d-473b-af74-bde86073066b",
        "cursor": {
          "ref": "772c340a-2cbe-4dda-bbd6-2d27a6d0c8d0",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "3d57202d-8901-40f4-9b83-d16f75d3d4fa"
        },
        "item": {
          "id": "c4e4e2ff-f99d-473b-af74-bde86073066b",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "6ad238c8-c6e2-4724-b80b-851281239874",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c7c86d5-c355-4532-8b47-37de29237c57",
        "cursor": {
          "ref": "6c58e368-adf9-4bda-89dc-012f80e13a2e",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "8b9a3907-3d0c-42d2-8ba8-2ab7d26da599"
        },
        "item": {
          "id": "6c7c86d5-c355-4532-8b47-37de29237c57",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "bcdbe9fb-7f8f-4e05-bcf9-74b12884db83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e0083f8-6e3b-465e-93cf-489845fe7a45",
        "cursor": {
          "ref": "6d159ef4-efee-4227-9045-8f5551affb40",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "766c750b-e1be-4cdc-b9c9-dee90d177e9d"
        },
        "item": {
          "id": "8e0083f8-6e3b-465e-93cf-489845fe7a45",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "0826d1b5-9137-47e5-b27a-6f256dcec7de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d5b6d32-fed3-4739-bd67-688421c2c905",
        "cursor": {
          "ref": "0bb89907-9eaa-4fb3-bca1-fea40a3d4f49",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "e01fe22d-131b-472c-bf81-c07f28cf6fa6"
        },
        "item": {
          "id": "4d5b6d32-fed3-4739-bd67-688421c2c905",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "a5b0ce74-36c2-4082-8fb4-869244f5a4a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "821e898a-83a6-4c69-9252-a152d596ac22",
        "cursor": {
          "ref": "20292a70-6eb1-4cc8-9710-b7e16f4d329c",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "3f8eb881-173e-4773-96de-1ae3856828b7"
        },
        "item": {
          "id": "821e898a-83a6-4c69-9252-a152d596ac22",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "799d2b3b-0cfb-49bd-8380-a7dda9582adf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4252995d-760e-4acb-b08d-b83dcadb0ddf",
        "cursor": {
          "ref": "fea8e367-1c22-4602-b800-5c4925106457",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "754d2523-8f7c-4a39-8588-cd5d62435405"
        },
        "item": {
          "id": "4252995d-760e-4acb-b08d-b83dcadb0ddf",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "215a647c-5a81-4bf7-8b0a-13c22de31366",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94635106-6fca-4bfd-a576-8df94e65940b",
        "cursor": {
          "ref": "ee1e3c6f-40a7-42a5-b46c-400687cf3e17",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "a955ac8c-432f-4ad1-bbf0-27d96d04136f"
        },
        "item": {
          "id": "94635106-6fca-4bfd-a576-8df94e65940b",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "5c45db54-c9ab-4d31-b7f2-9c078aec7fd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8da26e39-44de-4035-ad63-e31204410dfb",
        "cursor": {
          "ref": "88484138-08e8-49b2-9728-df681f8ee097",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "d62c4734-5630-45bf-8e74-d05fe1671d9d"
        },
        "item": {
          "id": "8da26e39-44de-4035-ad63-e31204410dfb",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "cccf5d11-253e-4a53-b0dc-c0090a78970d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f59d1d55-5857-4c0e-890a-d2aed9acabf1",
        "cursor": {
          "ref": "ff7b2d3d-83e7-4f9e-a4f0-8c66d72f9624",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "0d219672-d25b-41c1-be26-1b70402ef65d"
        },
        "item": {
          "id": "f59d1d55-5857-4c0e-890a-d2aed9acabf1",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "d29d3d83-cb5d-4de6-afdd-3eede4640b85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dd6e59d-abf0-4324-84a5-12108ccffed0",
        "cursor": {
          "ref": "1d1a5a6b-11a5-47b8-8ea2-982c3d6e1598",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "3c5dd14e-a7f7-4355-8517-6dfa11c3a8bd"
        },
        "item": {
          "id": "5dd6e59d-abf0-4324-84a5-12108ccffed0",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "4fa03f4f-e007-4082-9148-819bae28a94c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80f802df-5c9b-42a1-abb7-0b4309e1c942",
        "cursor": {
          "ref": "d5a92682-9538-466e-9110-652855478ee0",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "0c1bfab7-6125-4158-adfd-11ef3753c1ae"
        },
        "item": {
          "id": "80f802df-5c9b-42a1-abb7-0b4309e1c942",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "2c2fc4fb-650d-421a-a3f0-e401fe3f9df6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25f2ce46-cd4d-4e4c-9e31-836c7858776d",
        "cursor": {
          "ref": "bdbdf8fc-6122-4667-92fb-fe482057d909",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "78021b2c-7fee-451a-82ec-a045001ae5d9"
        },
        "item": {
          "id": "25f2ce46-cd4d-4e4c-9e31-836c7858776d",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "d4674079-73ff-4312-9a45-19dc7cf712a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f370377-28a1-4cd7-914c-5464aeec4f47",
        "cursor": {
          "ref": "ec0c2041-c6f9-4272-aac3-0c5aceb32ce0",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "c0b625e9-6454-43d4-8f8b-7a91baa83182"
        },
        "item": {
          "id": "3f370377-28a1-4cd7-914c-5464aeec4f47",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "e60bec37-8c8f-40e2-8cee-8f5d2844f43c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dee40d8a-979b-4b38-afb9-b00c506236ee",
        "cursor": {
          "ref": "b54e7c93-3a4e-44f9-9c69-c1477d70707f",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "158b75a9-947f-4180-976d-bd83843cf8a0"
        },
        "item": {
          "id": "dee40d8a-979b-4b38-afb9-b00c506236ee",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "9a4bf45b-5849-4518-95e2-bdf5b8efef7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8492b8ae-532d-4131-ae01-8baf42aeb040",
        "cursor": {
          "ref": "7e4f578e-d170-4a55-a4a0-699683c2efcd",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "554a2c01-3ceb-492c-9364-9e8424659574"
        },
        "item": {
          "id": "8492b8ae-532d-4131-ae01-8baf42aeb040",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "97054470-6d09-49c4-887f-eb516289b229",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30418035-1026-4500-b943-66543ab0f7b5",
        "cursor": {
          "ref": "afaad392-7354-423c-8ea1-584cb4099320",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "dda6c65e-b24a-45cf-af93-e0f3ba2b4743"
        },
        "item": {
          "id": "30418035-1026-4500-b943-66543ab0f7b5",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "1141e62a-5a9c-4945-a475-ed10673cfe95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 114,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cfc9cd1-38bf-44e0-8ceb-eae1b560e2ab",
        "cursor": {
          "ref": "4e3b41dd-514d-4de8-867c-23dd6c6788ff",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "803346b0-d3eb-4213-9710-1a95a54737ce"
        },
        "item": {
          "id": "8cfc9cd1-38bf-44e0-8ceb-eae1b560e2ab",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "68eba154-40f2-45c9-ab40-91c8ed5a3912",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6224673-f1cc-4efe-97a3-307bb525c2f8",
        "cursor": {
          "ref": "f2f04959-5ed7-44a7-a28b-7d5901d55a61",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "d13c3ce4-a3a1-448a-b4d1-3ff536b5e9ed"
        },
        "item": {
          "id": "a6224673-f1cc-4efe-97a3-307bb525c2f8",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "3b22947a-2646-46ed-932f-a96a65e50164",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07d936ef-e70f-4a8a-922b-9c6dcfa0f4b3",
        "cursor": {
          "ref": "facc5447-8fd2-4db4-a85f-26a5f617bf35",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "d4155b5e-745c-4ae3-81db-68d0850bcdb0"
        },
        "item": {
          "id": "07d936ef-e70f-4a8a-922b-9c6dcfa0f4b3",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "495012cf-e097-4bfc-9a18-a75d6a8e1206",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff7bc829-e388-41e3-b3a6-f56d341fc400",
        "cursor": {
          "ref": "1cce9a90-6003-433d-b405-c2cace6044f0",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "445dde66-6683-497b-a87e-02a31131b9ff"
        },
        "item": {
          "id": "ff7bc829-e388-41e3-b3a6-f56d341fc400",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "9b1214f3-6dce-4b17-8cec-9abcd1c8a869",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6fa14d5-7ab0-4bf7-b9bc-d6ab49383781",
        "cursor": {
          "ref": "4ecb5bc1-0ed5-4315-8f49-d1d60d20597e",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "cfd2eae2-2ac6-4224-82b4-7304b77f747b"
        },
        "item": {
          "id": "c6fa14d5-7ab0-4bf7-b9bc-d6ab49383781",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "e364c7fa-322a-4a69-b7cc-bc7c7e88a0c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f829bef2-8fc3-44d4-b2ca-d23bccd4dd30",
        "cursor": {
          "ref": "1e9b61bb-a0f7-4368-b122-ea4d2db68345",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "23ab699c-c9ac-4b56-9c7a-3f02c5151f34"
        },
        "item": {
          "id": "f829bef2-8fc3-44d4-b2ca-d23bccd4dd30",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "b0044f05-efb4-4804-92d2-d83f774aba1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87d00429-2be9-44cc-983f-76e6fef4059f",
        "cursor": {
          "ref": "9dc8dddf-c765-4d42-95f1-57c40f9f391d",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "df9dc242-9dcf-4e51-ab86-0405ea783937"
        },
        "item": {
          "id": "87d00429-2be9-44cc-983f-76e6fef4059f",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "991f5510-1589-4769-9bca-da2f7bc29531",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7a05a69-1704-4c9c-86ac-61e5d382f42a",
        "cursor": {
          "ref": "6910fa67-b6f0-4d4a-bfe2-bfba0e697153",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "2a5731f6-5dc7-4bfe-9b2c-c17c3c516d1a"
        },
        "item": {
          "id": "e7a05a69-1704-4c9c-86ac-61e5d382f42a",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "a962b582-fccf-4417-9cd5-8f4dfc5a8f59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7af97eb9-42d2-4963-bd8a-4f8c5d6fbb1e",
        "cursor": {
          "ref": "58f2848e-6d7c-4c97-9121-16c226b95a19",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "d24be913-965c-464f-8835-7b2de9fe6d12"
        },
        "item": {
          "id": "7af97eb9-42d2-4963-bd8a-4f8c5d6fbb1e",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "a57910eb-46be-4cfb-9b62-8280ce17c332",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5658777-e84c-4e75-a859-f93f17f1bd41",
        "cursor": {
          "ref": "95e6a7ea-ecf0-44a9-ab2e-244be226bb4b",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "a76d2b53-5c56-45dd-a1d2-d1ce5ef67644"
        },
        "item": {
          "id": "a5658777-e84c-4e75-a859-f93f17f1bd41",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "6dae7127-d0b6-4ecb-9667-375764e121e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24943e25-f5c2-4e1a-9b0a-ec3c057a3c2b",
        "cursor": {
          "ref": "c77f380b-c211-4145-b055-a359210b1832",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "bbe7124a-6ed5-44d5-8ae4-83012d81a8c5"
        },
        "item": {
          "id": "24943e25-f5c2-4e1a-9b0a-ec3c057a3c2b",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "aea1c7c1-b561-4c9d-9814-81f6121686ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b9ab3b5-fc66-4128-b87b-12f487fb105b",
        "cursor": {
          "ref": "7e411671-f148-4d64-97ee-d5cff934dc5f",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "d5538b60-1357-44bd-a198-757e19a5c242"
        },
        "item": {
          "id": "3b9ab3b5-fc66-4128-b87b-12f487fb105b",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "367c5017-16f5-4e21-99f6-4c35bda0ab72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f87b729f-34ba-4e16-993e-0cb5f61ca51c",
        "cursor": {
          "ref": "04a3601d-da49-4df3-b85f-540976da87df",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "ee76f02a-36ac-4009-a390-27fb74a412ef"
        },
        "item": {
          "id": "f87b729f-34ba-4e16-993e-0cb5f61ca51c",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "d6d2b54e-69c4-4530-8d80-8a89e69df0d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 107,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "057f9932-0c55-4f66-ab41-12820a54c9fb",
        "cursor": {
          "ref": "e381285b-8ae3-4bf9-aa6a-c9bce87e5ab6",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "d9058937-f3b8-488f-8254-446bef5b6172"
        },
        "item": {
          "id": "057f9932-0c55-4f66-ab41-12820a54c9fb",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "fdc0fd22-3d2b-436c-a7ac-df2413c49c37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05c94e11-83d8-4dab-8f09-eda45ca5dddc",
        "cursor": {
          "ref": "67f700a0-ee11-435c-9eff-68bc3b4ad84d",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "d27960aa-fe16-4bf6-99d6-ca331c2efb3b"
        },
        "item": {
          "id": "05c94e11-83d8-4dab-8f09-eda45ca5dddc",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "4d12b430-eae4-46f3-8d14-578ea21b4963",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce64ed8c-9530-4c6d-957b-f9e0dcbeaaca",
        "cursor": {
          "ref": "2c51c61f-5204-4c58-b3e3-3a84de2e2b0d",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "0e944c66-b989-43cd-9c2b-b9d8e3306cef"
        },
        "item": {
          "id": "ce64ed8c-9530-4c6d-957b-f9e0dcbeaaca",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "335ff077-4b60-494d-86d8-8068bd8d96c7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "912a8ed0-05c6-416b-bbe8-491d5b0f1c31",
        "cursor": {
          "ref": "f0776777-f90f-4588-8749-22f6c0c90c46",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "0c5a2e7b-afc9-4d4e-94e1-64cadfe268d3"
        },
        "item": {
          "id": "912a8ed0-05c6-416b-bbe8-491d5b0f1c31",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "ae555805-0aea-482f-9743-2744220cb759",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "834c930d-a2a1-479f-b046-1219d2517ab6",
        "cursor": {
          "ref": "4f698343-2a3d-43f4-8464-62a3c9a5211d",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "88520a81-1579-429e-b6fe-7c2187a5190b"
        },
        "item": {
          "id": "834c930d-a2a1-479f-b046-1219d2517ab6",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "241037e6-5d48-47c5-aefb-1833edc1883b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16471c51-680a-421c-a456-4dd270331008",
        "cursor": {
          "ref": "584b7b3e-ec6a-419b-b992-8997f3476c78",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "c1cbad03-1994-4e91-b629-0440977b2220"
        },
        "item": {
          "id": "16471c51-680a-421c-a456-4dd270331008",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "01bd06a3-bf4a-4a0c-9fe0-aff9f986a33f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "253e19dd-c097-4a09-ac53-269a0ceaab34",
        "cursor": {
          "ref": "7e0f60a0-0163-4a3f-bec4-07f875d2c513",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "cd9054dd-77ac-42c3-89da-dcff38289c11"
        },
        "item": {
          "id": "253e19dd-c097-4a09-ac53-269a0ceaab34",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "f0e67776-8a30-4363-9e50-6ea62cfb197e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c380088e-cf1c-45cf-88ab-8ee775dcb6d6",
        "cursor": {
          "ref": "92d1af08-3530-483f-86a3-7dd648d783ce",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "49629afa-13a1-4c92-8c70-94cdc6c0a3a0"
        },
        "item": {
          "id": "c380088e-cf1c-45cf-88ab-8ee775dcb6d6",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "d15f80fa-4686-44de-a29c-edc2a3a3a017",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4b0c673-6fab-49ce-a52e-a233b33f7f9a",
        "cursor": {
          "ref": "857da53d-7b18-4204-b504-6211e9929163",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "89bd0d19-cbe4-4c33-a350-00ab7d4e8521"
        },
        "item": {
          "id": "a4b0c673-6fab-49ce-a52e-a233b33f7f9a",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "526ba099-7d46-4cf8-83b1-654c4684c404",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5158fb0-9c28-4335-b9e7-c985e0a7e9c9",
        "cursor": {
          "ref": "a0d92633-ecb0-4269-8292-b0373abeda6d",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "56a618cf-33de-410b-8aa3-3286f29cb176"
        },
        "item": {
          "id": "a5158fb0-9c28-4335-b9e7-c985e0a7e9c9",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "c208e57a-9de1-4abd-addf-4cf66222b2d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f4ab3eb-bd3e-4ad0-b491-42324b97f6dd",
        "cursor": {
          "ref": "bae046ab-1f35-44d6-b936-7c6a84efbec7",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "9d254e40-54c2-4e6a-bb17-a5fa91ef139e"
        },
        "item": {
          "id": "2f4ab3eb-bd3e-4ad0-b491-42324b97f6dd",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "2d59ec25-0541-44fa-8258-c379eab8b6f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 228,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93e00b38-794a-4be6-8724-a1dc446764f2",
        "cursor": {
          "ref": "6462abc8-2baa-4971-a6a8-f6116ac907bc",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "f87b1f9a-1270-4e1e-b881-a2953e92091d"
        },
        "item": {
          "id": "93e00b38-794a-4be6-8724-a1dc446764f2",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "6f954b9a-caaa-4802-b9a3-2847069ed8e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 126,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5b19903-3701-44d7-8a73-2f554fb42914",
        "cursor": {
          "ref": "b4760e96-db2a-44d6-b4c3-c4ff10b2bf93",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "4e836de7-d658-46f3-91bb-02a86798fc3c"
        },
        "item": {
          "id": "d5b19903-3701-44d7-8a73-2f554fb42914",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "a038da81-92ea-4391-876a-999ad0d407e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b5301f0-802d-4604-8eb0-6447287b0759",
        "cursor": {
          "ref": "dd8003f6-f843-47b2-84cb-429565c7bc93",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "debd4550-7b02-4617-b5cb-9bfd3b2d3984"
        },
        "item": {
          "id": "7b5301f0-802d-4604-8eb0-6447287b0759",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "86a5343d-f184-41a5-855a-15e492ce72d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "186e7083-e441-4206-9b3a-ab55951b2cec",
        "cursor": {
          "ref": "428d4a1b-9704-42f4-8300-a47b906c6fdd",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "2114d4fd-4109-4511-a046-3763904217d5"
        },
        "item": {
          "id": "186e7083-e441-4206-9b3a-ab55951b2cec",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "482a483b-af5a-4426-85fe-5a9d650b6498",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "938e9070-54d7-4fad-9448-a78f04a36f8c",
        "cursor": {
          "ref": "4f5507b1-57af-4fdc-abce-7101a8e96e61",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "989e29b6-669f-4679-ac1e-0d49377c6b49"
        },
        "item": {
          "id": "938e9070-54d7-4fad-9448-a78f04a36f8c",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "8286f1b9-ef14-46f0-acaa-4c61a5778890",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93061a25-fdf0-4f86-884e-ad0fd31d5847",
        "cursor": {
          "ref": "86f9b7db-fde9-40ce-8fe5-128057d80c4d",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "7fd34d56-2dab-40c4-acb4-0500a6baed06"
        },
        "item": {
          "id": "93061a25-fdf0-4f86-884e-ad0fd31d5847",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "f8850ae7-67ac-47ed-84e4-8b429bf82a5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8819c66c-808a-455d-977b-b6d530281773",
        "cursor": {
          "ref": "81c00573-7afa-4e76-882f-10630f50da30",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "641f9324-49c1-47d9-844a-06ee7a83fcd8"
        },
        "item": {
          "id": "8819c66c-808a-455d-977b-b6d530281773",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "4c3eb8db-4dc9-414e-b7bd-76416c43e55a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d894d2be-9087-4e46-8777-73ff72415367",
        "cursor": {
          "ref": "65799820-8f41-46c2-a407-75337830d95e",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "6d792573-02d0-4b0e-a620-cdc3d9f57599"
        },
        "item": {
          "id": "d894d2be-9087-4e46-8777-73ff72415367",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "cdbad5b0-b1ec-492a-b228-c9fbe6238002",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce195af9-6a1e-4023-b46c-0636da0e4112",
        "cursor": {
          "ref": "6f37e0de-4903-4338-8b55-1a056b4da613",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "85741611-bb38-4b19-8d3d-8d14f381da21"
        },
        "item": {
          "id": "ce195af9-6a1e-4023-b46c-0636da0e4112",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "575bf128-7394-4ddc-9f68-3dce78f34da1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85fd4184-b226-4939-9a63-8edc2da07eac",
        "cursor": {
          "ref": "ae8bbb4f-fd85-44a2-a729-8f117c940405",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "dd98915e-26dd-4ea9-91f9-7d13758c205f"
        },
        "item": {
          "id": "85fd4184-b226-4939-9a63-8edc2da07eac",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "0ca81735-ef5d-4f12-b348-142201c7c960",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 112,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14b97c44-52bd-43e1-9d62-89b0b247917f",
        "cursor": {
          "ref": "b40ef72d-39da-4950-8b88-0eb0627eccf8",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "c14658c8-4e79-488e-b285-6abe9033a06c"
        },
        "item": {
          "id": "14b97c44-52bd-43e1-9d62-89b0b247917f",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "658189dc-022f-4bc3-9eaa-54492f30869d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0fbfeab-c5ea-4482-a79f-16fc899c8aae",
        "cursor": {
          "ref": "b6243e68-51e5-4046-a35b-4abf292cc36e",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "1ff5de0b-0c43-44db-8dfd-a1d2a471971e"
        },
        "item": {
          "id": "b0fbfeab-c5ea-4482-a79f-16fc899c8aae",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "1569082b-1fd0-480b-ad98-472d984adcfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d586d5b-4737-4c90-9bcb-9a2a9ea81563",
        "cursor": {
          "ref": "51b3d430-36c3-4f33-a892-4eb51bdc3508",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "ddbdd027-8dfb-46a1-a8c1-32d6f69093fa"
        },
        "item": {
          "id": "7d586d5b-4737-4c90-9bcb-9a2a9ea81563",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "e7b36b76-0d1c-480f-a0c7-bcbd91094c87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebab33bd-d0ea-48bb-a210-fdeb48ba2133",
        "cursor": {
          "ref": "75a41961-a682-4a46-98db-28f0d6ad35bb",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "01d72eed-2fff-434e-b5c4-0eb675aa08a0"
        },
        "item": {
          "id": "ebab33bd-d0ea-48bb-a210-fdeb48ba2133",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "6478a276-1dae-496c-9631-df4ecdeba1c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 114,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79841c42-3069-4f35-8d4d-0be9ac0690be",
        "cursor": {
          "ref": "d446a060-cd2f-4268-97bd-88c68d005472",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "e57b348b-676e-49f0-a176-613bc8fc65bc"
        },
        "item": {
          "id": "79841c42-3069-4f35-8d4d-0be9ac0690be",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "eb3aa971-01fa-4f0b-bb91-6e15b2ac6a5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "607ccaf7-69b6-4a0f-8634-c6c605995089",
        "cursor": {
          "ref": "340d3b1c-ae29-4668-b78c-9f952a8cd8a9",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "12589adb-8512-44ec-9167-621e60cc3728"
        },
        "item": {
          "id": "607ccaf7-69b6-4a0f-8634-c6c605995089",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "0be4e927-9db6-4f95-adf4-bf6e4ddb8dc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d484199b-ac64-4a14-afaf-7e19b6f57357",
        "cursor": {
          "ref": "3fbc321d-eb58-471f-9e04-5ebc56b8df96",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "03ffc3d5-a3e5-4c40-bb96-9c634c9c8128"
        },
        "item": {
          "id": "d484199b-ac64-4a14-afaf-7e19b6f57357",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "e5d2fc26-51f5-484f-a47d-f758432e516c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "492501c8-5c8c-4674-8a9c-5e037efc984d",
        "cursor": {
          "ref": "9044899a-d752-4429-bf6c-f17654bad856",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "a6b3d84a-d503-4d74-b2e7-992bed83d559"
        },
        "item": {
          "id": "492501c8-5c8c-4674-8a9c-5e037efc984d",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "ab626a4d-b93c-4bcd-b873-0604e7b36041",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3c05901-ff89-4d5c-832a-da406bf80b32",
        "cursor": {
          "ref": "3bc9c44e-41ca-4327-a13d-e1df57168122",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "9875ac33-7b31-4664-be54-cfd5fd66bb0f"
        },
        "item": {
          "id": "b3c05901-ff89-4d5c-832a-da406bf80b32",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "4a193f1c-bfc1-4479-95a5-3b23525d31a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 146,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66b5a17d-03cb-4b51-935e-61db7c663af5",
        "cursor": {
          "ref": "3713cf70-9c49-4602-a370-88fab6765a7d",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "964f4126-3871-44dc-be8b-3554a53fdba7"
        },
        "item": {
          "id": "66b5a17d-03cb-4b51-935e-61db7c663af5",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "7bfd6227-823e-4a6a-a1f1-90151b0feb5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 138,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a80c4da8-3ba5-4f2e-a26a-993ef28b42f9",
        "cursor": {
          "ref": "1ed67a48-faf7-4eed-843c-495f215c9912",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "7ec1b6a5-282b-44bb-b9ae-eae2bebed87a"
        },
        "item": {
          "id": "a80c4da8-3ba5-4f2e-a26a-993ef28b42f9",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "2a2596a9-022c-4835-b282-d5125c0f1787",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 173,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8b93393-1070-474a-a0c6-112a2153d3c4",
        "cursor": {
          "ref": "b10d136a-b037-4985-87c5-728991a5c7dd",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "ad26c8e0-0fcd-4026-af04-69fcfcb48c32"
        },
        "item": {
          "id": "d8b93393-1070-474a-a0c6-112a2153d3c4",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "8da07403-48f0-4f82-b93e-88643f09cb40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fceccd1-5614-46eb-9df7-04bd52980bf3",
        "cursor": {
          "ref": "2d60df59-14a1-410e-86fd-118b35f377f0",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "1fec5baa-35e9-4699-a40d-7c228332b57b"
        },
        "item": {
          "id": "3fceccd1-5614-46eb-9df7-04bd52980bf3",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "dbe18fbb-9b06-420c-ae34-93672cb596be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 123,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f04cea50-64b0-4687-b6ef-e5b31372551c",
        "cursor": {
          "ref": "acff7524-1d4a-4068-b8df-efc03f1e369b",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "61416fb6-7faf-4a8b-aef2-4d01a27643fc"
        },
        "item": {
          "id": "f04cea50-64b0-4687-b6ef-e5b31372551c",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "7bbf850a-fc42-4efb-a160-43b45386fe62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c77a3ee-8ae8-45c5-b684-0b5ac921a3f9",
        "cursor": {
          "ref": "dae7b72e-4e03-46fd-8f4f-0ac7c0b3c23e",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "d7cb9822-2e9d-4c17-b36f-9cd9eabe9d18"
        },
        "item": {
          "id": "8c77a3ee-8ae8-45c5-b684-0b5ac921a3f9",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "558b79f9-e72a-4bae-8ee1-92bba560a78f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 114,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee0bae52-7e09-4d0a-b2d1-218ce19dda35",
        "cursor": {
          "ref": "7321b66c-802e-4b68-8a2d-90a8bd8f5f60",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "641a3539-1a4e-423c-b350-6eadd17c14e9"
        },
        "item": {
          "id": "ee0bae52-7e09-4d0a-b2d1-218ce19dda35",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "db018753-b5d3-451b-ad7b-30643cf8eeff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49212fde-85c8-4033-bb20-f3aa86d43574",
        "cursor": {
          "ref": "1a51d8b8-52e2-49a3-963f-b918cd5eaa0d",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "0605039f-a87a-49dc-85ed-a5a2cdd9d5e2"
        },
        "item": {
          "id": "49212fde-85c8-4033-bb20-f3aa86d43574",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "84a9cd6f-b22b-4710-a1f5-e0ecbdaadcb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae93b8be-77ef-4c8e-b220-28b21d4ba482",
        "cursor": {
          "ref": "5d5f48d8-c614-42e6-beac-ee3b0cd34920",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "9fd832b0-c01f-4d30-9ff4-257662101021"
        },
        "item": {
          "id": "ae93b8be-77ef-4c8e-b220-28b21d4ba482",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "a3be6254-0469-4d2b-8b64-d8a7c38ea7a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdef2df1-9ff7-49e0-8a3f-b6642488f605",
        "cursor": {
          "ref": "4ca8fc09-601f-4228-959a-ab7e1ec2aeaf",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "83a49205-e238-43ea-9c72-3de802e5e6a8"
        },
        "item": {
          "id": "bdef2df1-9ff7-49e0-8a3f-b6642488f605",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "7a1a76be-4600-420d-8c3e-51438d80c612",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73bb35d1-dd45-41a0-86af-500400357a3d",
        "cursor": {
          "ref": "8829666e-287c-483c-9a86-0897c4174e48",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "346281e4-3f66-4680-a791-8b123a5a36f2"
        },
        "item": {
          "id": "73bb35d1-dd45-41a0-86af-500400357a3d",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "113eb0d3-50d3-4018-83cf-e0c3da843fec",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fee981d-14d9-4b3b-94a5-51c8b08690e0",
        "cursor": {
          "ref": "f965ba6d-e8ad-4653-a0c3-e9b7d6d2b518",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "ae468a11-13bd-486e-a3fe-b8e1528c24b6"
        },
        "item": {
          "id": "4fee981d-14d9-4b3b-94a5-51c8b08690e0",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "87c6596a-3bde-4dc1-aaa7-78e242b1d8a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c6bc4de-a9f3-442d-b520-b42e2db17db9",
        "cursor": {
          "ref": "b5c9370d-e3c1-43d6-bd71-ef2aa520f427",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "7886c562-2dbb-41e6-ba6c-2088a3105b81"
        },
        "item": {
          "id": "6c6bc4de-a9f3-442d-b520-b42e2db17db9",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "f06636e3-f1de-4a6d-a679-bb998bd7967a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d08fde63-ee93-4f6d-b6a0-6ef8ce62f70a",
        "cursor": {
          "ref": "f52ed117-9c1d-4cdf-9600-362a3f260320",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "fee255c5-44e3-479f-bf16-9db873441de9"
        },
        "item": {
          "id": "d08fde63-ee93-4f6d-b6a0-6ef8ce62f70a",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "332cd77f-73a9-4b13-8dd7-83e8b6c9dee4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f967c2d5-cff1-4236-a7ea-831ec2999bf0",
        "cursor": {
          "ref": "5b7406ac-5948-47d5-894a-88167dd8fb6b",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "bfd49e10-49df-4ecd-bcab-bc37d64c42ad"
        },
        "item": {
          "id": "f967c2d5-cff1-4236-a7ea-831ec2999bf0",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "ed79c1bc-ed5f-4bcc-9ff3-0b1c45d18b7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc1150f0-9fc4-4ad4-bc2a-ad61f02d8a8a",
        "cursor": {
          "ref": "5f0db6d4-5f4e-4ff6-86ed-cd8ffc273363",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "635b72a4-63d0-4c1d-a934-b02a6220fdca"
        },
        "item": {
          "id": "fc1150f0-9fc4-4ad4-bc2a-ad61f02d8a8a",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "27710a20-424e-4f30-9446-8c3de96c398a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 749,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61f21290-409f-4f9a-9b70-16a4bf478f64",
        "cursor": {
          "ref": "009dc286-e68a-44c2-a672-68a4b5800905",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "c8d0e3ad-6c7b-4bef-b47d-ff69f9017eb9"
        },
        "item": {
          "id": "61f21290-409f-4f9a-9b70-16a4bf478f64",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "0cc22b81-df9e-4dd4-8fa3-dd734df9ba5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "483a133b-57c1-440f-b033-e00128a75885",
        "cursor": {
          "ref": "b3923a99-dcb0-4668-a733-b9ac4d9704fa",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "00514e7f-90e6-4210-afc6-c9470d3992d4"
        },
        "item": {
          "id": "483a133b-57c1-440f-b033-e00128a75885",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "57de235c-0176-4c78-ae3f-ed0c0189bb7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "758db990-0b0b-43eb-9873-f247951e77be",
        "cursor": {
          "ref": "8e6e61ff-41c2-415d-8f06-8cbf90d62194",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "fe81ae8e-3669-43e8-bb2c-ca62db61d68c"
        },
        "item": {
          "id": "758db990-0b0b-43eb-9873-f247951e77be",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "f839c1c3-2444-4e29-9bb8-e01b741d036e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "035cd6ef-71d8-470f-95d9-6ac5ca04569e",
        "cursor": {
          "ref": "9e63fa4c-848d-4021-93cc-94d773075dec",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "f25a0757-f95a-4586-92fc-c6c109df7c6d"
        },
        "item": {
          "id": "035cd6ef-71d8-470f-95d9-6ac5ca04569e",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "f3cabff0-f3c4-4000-be4a-00f7d4c1ad47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4abe294-bc6c-4561-9200-fad05c7f79ef",
        "cursor": {
          "ref": "645028be-9307-434b-a992-d2fcc49925d7",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "28ec6dd4-f682-41cb-813f-9c1b0396c7ac"
        },
        "item": {
          "id": "f4abe294-bc6c-4561-9200-fad05c7f79ef",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "cea3751f-a27b-435f-90ea-25e51be79701",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7813eebc-f8b2-4075-827d-4b565d301c59",
        "cursor": {
          "ref": "d81a3c43-09fc-4659-8f48-d0dc8fb65f70",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "92068c84-4ccc-4585-89ee-e87a2c27ede9"
        },
        "item": {
          "id": "7813eebc-f8b2-4075-827d-4b565d301c59",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "5efda86d-9fa1-4828-b34d-9a452052bb19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a917be8-9a1a-41cf-ad62-87b57638be1c",
        "cursor": {
          "ref": "bdf16aa7-8bc7-435c-a0db-fd0276c46076",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "fa21fee0-5ef4-4aaf-9b98-d2d5f373412b"
        },
        "item": {
          "id": "9a917be8-9a1a-41cf-ad62-87b57638be1c",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "f381bd69-18e9-40d0-9f8a-711a0297ce45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9151185-34d9-4b0a-8524-81b334161bfa",
        "cursor": {
          "ref": "b7f6018f-367a-46d6-9a3f-e37f3fef91a2",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "e4fdcd02-6c16-424f-bbdd-16acc2b25b8f"
        },
        "item": {
          "id": "f9151185-34d9-4b0a-8524-81b334161bfa",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "30a249f3-6452-4776-bc47-fa52ee9558ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2b19f20-e057-4d95-a4e7-5c9c56a13385",
        "cursor": {
          "ref": "6d2d1049-0749-41a6-9509-455c58cf3135",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "30cd76f7-b30f-48e1-b9fb-f9def505bac6"
        },
        "item": {
          "id": "d2b19f20-e057-4d95-a4e7-5c9c56a13385",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "daa36643-2e48-4e61-a029-1cdb17717b45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d00a05b5-a5b0-4ffb-83c7-6dd2627f8b1b",
        "cursor": {
          "ref": "4ff2676c-cc1d-4c89-9cee-9740abeff00b",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "5f38ec66-51bb-4304-9557-f30e12b1666f"
        },
        "item": {
          "id": "d00a05b5-a5b0-4ffb-83c7-6dd2627f8b1b",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "3704b13f-bcb0-4f97-ae17-32e5296edc6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6773747f-9db2-47cc-bbbb-2ece27341424",
        "cursor": {
          "ref": "11185055-9701-41aa-8eb1-5daf5627f907",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "4e00ce60-a663-4e1d-ad05-cc063e7e0263"
        },
        "item": {
          "id": "6773747f-9db2-47cc-bbbb-2ece27341424",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "ec94217c-c658-49d8-9d5e-316330ea8eb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72c06dee-afcc-419d-85c3-16f3e4a4dd0e",
        "cursor": {
          "ref": "54b08bae-54c4-4192-9ef5-d450e265ae36",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "48d784d5-a7e6-4e64-8b1c-05986fff308e"
        },
        "item": {
          "id": "72c06dee-afcc-419d-85c3-16f3e4a4dd0e",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "ddedf37b-7f4a-4f83-9bee-270e1afa45b4",
          "status": "OK",
          "code": 200,
          "responseTime": 130,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "1124bfc5-2daa-4900-8416-8aa55ba268ed",
        "cursor": {
          "ref": "4d79878c-37ec-467c-8a8c-7988bc9711ba",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "6091cd2f-5384-42a5-b353-99f68aad0ef2"
        },
        "item": {
          "id": "1124bfc5-2daa-4900-8416-8aa55ba268ed",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "42d054cd-814d-4989-800f-e68ca433f9b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a793881-9fcf-496c-b0ec-27b4aa98eb85",
        "cursor": {
          "ref": "e89e76b1-69e2-43d7-a937-d91775fb1dc3",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "a3fd2dfa-6a4b-4194-9613-24d1ba9ae06b"
        },
        "item": {
          "id": "0a793881-9fcf-496c-b0ec-27b4aa98eb85",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "207166c1-d569-46f2-8779-c85f58f5bd30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66124a4e-dd3c-4749-9160-7cac3dd1be34",
        "cursor": {
          "ref": "d52249d6-a3d9-41be-a1e9-91ea19a6cf5c",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "00350800-11d0-4c81-aa21-d8788f48e3ce"
        },
        "item": {
          "id": "66124a4e-dd3c-4749-9160-7cac3dd1be34",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "3d8e9300-2610-47e5-94cf-826a9cd7c5a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0f5d882-122e-48e7-9ca0-11a6afff0077",
        "cursor": {
          "ref": "053d3726-7fae-4aca-88d9-7c12f6312ad1",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "34af9880-2d05-4b98-ac8a-bed20cc48f03"
        },
        "item": {
          "id": "f0f5d882-122e-48e7-9ca0-11a6afff0077",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "c417d5cc-96a6-413d-b868-29c899b4aab9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e5993a2-2d2c-4a13-853d-900383266bfd",
        "cursor": {
          "ref": "794c4ac1-ae60-46f5-99a9-4625377b55d5",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "151916cf-0447-439b-8545-7c28b54df752"
        },
        "item": {
          "id": "0e5993a2-2d2c-4a13-853d-900383266bfd",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "b197e24f-fa07-435d-8eab-de76ce94f56f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c86b2397-fbaa-4819-bd3b-7cf57947d359",
        "cursor": {
          "ref": "27244739-6e8b-46fd-9c88-b341bab91101",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "0e1b3138-8841-4b3b-b661-652f0d39e91f"
        },
        "item": {
          "id": "c86b2397-fbaa-4819-bd3b-7cf57947d359",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "e59af6b9-1696-4ae8-988f-6a88a15f7a18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "951f64ec-4dcd-4f4f-af0d-07fce4a919ca",
        "cursor": {
          "ref": "0f0ee027-cd24-403b-be82-ca66dc0eecf4",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "a76dd58e-4002-4303-bb8e-c96981eb387b"
        },
        "item": {
          "id": "951f64ec-4dcd-4f4f-af0d-07fce4a919ca",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "e932a4f6-1798-4414-9ce4-d2273b7d2a36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db986c03-ac67-4b10-940c-5532aa770eea",
        "cursor": {
          "ref": "eed56785-8aa3-456e-a567-65ab2d375f95",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "ee63f7cf-d5ec-4daa-b705-b2a1fe7668d8"
        },
        "item": {
          "id": "db986c03-ac67-4b10-940c-5532aa770eea",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "a3c421aa-181d-47c8-b01a-0588090d56b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37e9360a-eb43-44c7-bb45-5671e224bb46",
        "cursor": {
          "ref": "b771edfb-e99f-4d92-bb7b-206cadefa401",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "6b5728e1-b45e-4786-9c09-b456cd3aed5b"
        },
        "item": {
          "id": "37e9360a-eb43-44c7-bb45-5671e224bb46",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "797ead18-879f-4b4f-98db-74614a75bf69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6422ef80-b811-4d25-a5e7-eaf39fae3392",
        "cursor": {
          "ref": "93aa8113-e789-4cc4-92b0-16ea46f3f337",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "a12f6d00-2081-45dd-bbe3-100ce2b12255"
        },
        "item": {
          "id": "6422ef80-b811-4d25-a5e7-eaf39fae3392",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "60681146-bc6c-4cc0-8b2f-9917b82759ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75dda71a-6fdb-4bde-afb0-d9f3e0b85b74",
        "cursor": {
          "ref": "f0905a6f-2582-479d-92f4-98687067f96b",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "bebc439a-22b6-4811-9f5e-6a97bc71f707"
        },
        "item": {
          "id": "75dda71a-6fdb-4bde-afb0-d9f3e0b85b74",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "b5f91280-85c0-47d2-9613-d4f8131862e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c0551b5-4ed5-402d-9259-20f81dd7f4b2",
        "cursor": {
          "ref": "ab7c93a7-0d6b-4dcc-92c4-f004dc66f1fa",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "2a2299bc-24c7-48c3-bb25-c96a248ab601"
        },
        "item": {
          "id": "8c0551b5-4ed5-402d-9259-20f81dd7f4b2",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "cba2b0a3-2e82-4c3d-b94b-2e0c590d6a3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "079ce121-893d-44e1-92bd-9cea6d2e99a5",
        "cursor": {
          "ref": "3dc92542-4496-4153-a1d4-e6b62d40a93f",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "bd30c304-e31d-4d14-bbba-424b11a1f805"
        },
        "item": {
          "id": "079ce121-893d-44e1-92bd-9cea6d2e99a5",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "8d929af9-5c42-43fd-8279-8bc14198206e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feccc2ad-aa6e-4602-b5da-13f7cd3691cf",
        "cursor": {
          "ref": "87784134-4b59-47f0-8c2c-d1228b3376cb",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "ed8797cd-7f8a-4aff-b30d-767232bff031"
        },
        "item": {
          "id": "feccc2ad-aa6e-4602-b5da-13f7cd3691cf",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "cc825efa-9d0f-4a9f-a9bd-ee98f1a3366f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb599612-3342-491e-861e-d599a396cea4",
        "cursor": {
          "ref": "929cddf1-1024-4f34-878d-623a3856919d",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "763d3c9e-e731-48ca-8d25-f655880c755f"
        },
        "item": {
          "id": "eb599612-3342-491e-861e-d599a396cea4",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "b0460fa2-bb11-4eeb-9d6e-176e77650cd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "087c043c-5923-4db6-87d4-a9cf29b6c2ae",
        "cursor": {
          "ref": "eb461d5d-8b53-40d6-aa8d-f6be0e3858f0",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "d1531371-1e23-4706-ba73-b9956f651217"
        },
        "item": {
          "id": "087c043c-5923-4db6-87d4-a9cf29b6c2ae",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "aee35f8c-8c4c-4420-9aa7-31f7b73060a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8723594d-9657-4f7c-ab33-b592ecaebb0d",
        "cursor": {
          "ref": "a35614ff-5d03-495d-a329-c6b54a81386c",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "1051e476-3934-4d93-8c01-c3ba5f4c29e0"
        },
        "item": {
          "id": "8723594d-9657-4f7c-ab33-b592ecaebb0d",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "dbbcba54-fe05-4309-8b48-b95ca4131b64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5209fd1-9ac8-4d80-9093-c8d133c0f077",
        "cursor": {
          "ref": "3181fe79-fce9-4e45-acc5-c72de201126f",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "e9cf06fb-82ba-4cc1-9252-92d273c36430"
        },
        "item": {
          "id": "d5209fd1-9ac8-4d80-9093-c8d133c0f077",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "b5f4a46d-205e-4416-9b84-6b665b7bec12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20177bba-2edc-4486-b61a-fd4609ab5a72",
        "cursor": {
          "ref": "67e366dd-8368-4cae-b5aa-0dee9685e384",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "6b6ecfaf-c6d4-4b45-8ebf-8f102390a2f2"
        },
        "item": {
          "id": "20177bba-2edc-4486-b61a-fd4609ab5a72",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "0a389621-9069-4037-a490-14bfd71af6db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18556cf8-af0d-4271-87e7-92f9f3d46851",
        "cursor": {
          "ref": "822c35dc-f74b-4fa8-a4ae-63fdb3445357",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "3cd4bb3d-0ed4-4fec-8329-fdca982022bc"
        },
        "item": {
          "id": "18556cf8-af0d-4271-87e7-92f9f3d46851",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "5172646d-c0e7-48c9-abc6-fdc7a982f068",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddf15400-b1c7-4386-a94e-8386ab06afac",
        "cursor": {
          "ref": "6a05701c-12ba-44a3-8fb6-9af299c5fea4",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "e27bfbb0-541d-4fdf-9d97-ef6e43d79888"
        },
        "item": {
          "id": "ddf15400-b1c7-4386-a94e-8386ab06afac",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "74d4c2f3-82e3-4139-afd9-ed29035c59a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb27a462-8cbc-4537-809f-c2e6506c950b",
        "cursor": {
          "ref": "e5faea41-4d0e-4ab8-a296-fa61ac7c21f3",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "77a910e1-1d88-479c-beb5-5a66eb62d019"
        },
        "item": {
          "id": "fb27a462-8cbc-4537-809f-c2e6506c950b",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "7099ade0-1de3-4c3c-b3be-f0f3367b3bde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b798697-5a21-4552-9e66-c7893e9e8873",
        "cursor": {
          "ref": "25ce1784-da4d-4f02-85e5-db7ea2873b68",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "be469524-63bd-42a4-b652-ef475f00a9cd"
        },
        "item": {
          "id": "8b798697-5a21-4552-9e66-c7893e9e8873",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "9b5fd8b0-f90a-49db-bff6-3af328f53c33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbd9762d-9b49-43aa-928f-36211911fe94",
        "cursor": {
          "ref": "a1b92cbc-fd16-4338-9578-82d11f946888",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "305cded5-775c-4116-93ef-4308b5b2eb38"
        },
        "item": {
          "id": "cbd9762d-9b49-43aa-928f-36211911fe94",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "cd643f7d-555f-47a9-91f6-0ea874a19715",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68191aa1-8a0b-41ef-9135-966e0170b186",
        "cursor": {
          "ref": "6ebfac26-5b38-4ffd-8884-4e08cf93bcdf",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "02451a1c-9b19-426a-83c9-20cb512a050b"
        },
        "item": {
          "id": "68191aa1-8a0b-41ef-9135-966e0170b186",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "355db56e-b0a1-436e-9d32-97bd0b93b9df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16cda659-c3ec-4140-be3c-696c8508f6ae",
        "cursor": {
          "ref": "55553fcf-8c5a-4aac-9ed9-ed335e87223b",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "063e69c4-0930-4776-a93c-14956ef2f00d"
        },
        "item": {
          "id": "16cda659-c3ec-4140-be3c-696c8508f6ae",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "763b5459-d121-45b3-a39e-101b3dcb27b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2be50cf-8e9d-47e0-af60-597611436cce",
        "cursor": {
          "ref": "28f1f9d9-2d33-4383-85fb-e98673fb3b15",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "9ea38ae0-a1a1-4325-bb78-cd6be8c938b9"
        },
        "item": {
          "id": "f2be50cf-8e9d-47e0-af60-597611436cce",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "ee558d88-d58b-4141-bebc-a965dbb217a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54d6b3b5-2821-492d-bbc8-dde1602a30cf",
        "cursor": {
          "ref": "3a1c754e-1f58-4ae3-a8ed-dcdc2e8a3d62",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "1a65c486-6e2d-4299-9288-d648faec8a63"
        },
        "item": {
          "id": "54d6b3b5-2821-492d-bbc8-dde1602a30cf",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "68cd3989-f07f-4f63-bf25-e8de9b9c8faf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecea6c65-da6d-4cca-a74d-637df6a629bd",
        "cursor": {
          "ref": "f11e1026-5872-4aba-a661-9a3523116d13",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "93e33e6a-9140-485e-aa8c-d0c40629582f"
        },
        "item": {
          "id": "ecea6c65-da6d-4cca-a74d-637df6a629bd",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "82a3f4da-a61c-4793-8341-455525cc5c26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23cfc3a1-17bd-416a-8995-ebd17f7a8f4d",
        "cursor": {
          "ref": "05ad350c-15d2-40af-9c6e-9e110f43d55e",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "0d54a901-9391-4b89-84f1-79efe6652c76"
        },
        "item": {
          "id": "23cfc3a1-17bd-416a-8995-ebd17f7a8f4d",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "40c2a645-0918-478a-9114-53ad900c477b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d114ca72-bfc7-436a-a085-5306dd2770f0",
        "cursor": {
          "ref": "424fdd59-a907-4c7b-a44c-031dabfc42ad",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "37b53ab2-9fda-4c21-ab8c-6b8c813844b1"
        },
        "item": {
          "id": "d114ca72-bfc7-436a-a085-5306dd2770f0",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "03266d6d-2f8c-4528-be5e-dc3c06d591ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa223583-8e7a-4a94-a62f-f4cf1fada5c7",
        "cursor": {
          "ref": "21f2074d-6b52-4051-852f-c8701c64cec8",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "913b0e12-fcda-4b86-a633-86f04365f055"
        },
        "item": {
          "id": "aa223583-8e7a-4a94-a62f-f4cf1fada5c7",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "8ae0a4b1-fde2-4fcf-9283-fab08af5ad74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8373e04c-7890-40ac-a700-e4ad36dad2b3",
        "cursor": {
          "ref": "69ee5916-deff-4f40-9ad1-89642f40bd38",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "8d14f49b-9f41-4b9d-8b96-786a87678cdc"
        },
        "item": {
          "id": "8373e04c-7890-40ac-a700-e4ad36dad2b3",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "8a080358-a79c-4c25-b861-5fdcaf267e8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "614d5320-b66e-409a-8e1f-3f162d016798",
        "cursor": {
          "ref": "b49798e0-c43a-4fa2-82d7-2a7dfdeef58e",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "6fb1819c-7906-4d2a-9789-632e63752af9"
        },
        "item": {
          "id": "614d5320-b66e-409a-8e1f-3f162d016798",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "8c4b12e2-ca00-4ecb-bdd9-0784357332a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e04520bf-120d-4e0e-94cb-128c704eb6bb",
        "cursor": {
          "ref": "2b67168d-87fd-4660-b86b-c9478d21f22b",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "13501a80-7d9c-435b-9692-869609c34c36"
        },
        "item": {
          "id": "e04520bf-120d-4e0e-94cb-128c704eb6bb",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "b0948cc0-feba-421c-8450-dbf02b2d2bc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9308ec92-444e-48d5-9df6-acef5c21df78",
        "cursor": {
          "ref": "73dc4a53-04de-4e69-b999-e3a7e96af456",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "ac083131-4eeb-444b-af9b-fe21671f2c3d"
        },
        "item": {
          "id": "9308ec92-444e-48d5-9df6-acef5c21df78",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "47db6113-d402-4e0d-81c3-fd6b0e8e6565",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e380c4e5-4f0a-496f-9b10-12db76023b81",
        "cursor": {
          "ref": "4bd88e55-0bee-4423-8f2c-68f684d104a4",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "790b8f14-4a6f-4d98-8e51-e4efc84c99fb"
        },
        "item": {
          "id": "e380c4e5-4f0a-496f-9b10-12db76023b81",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "c39df616-2af6-4d96-934d-cfef82a8abbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea576b40-64c4-497e-a42f-8c02f99efcd9",
        "cursor": {
          "ref": "affe7ced-1766-4d85-9d0e-686e24cf9dab",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "5226a424-3d87-4353-9db6-b85158603167"
        },
        "item": {
          "id": "ea576b40-64c4-497e-a42f-8c02f99efcd9",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "bae89978-5064-4ea6-8a9e-d5518bf92ed2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bbd74f8-a4db-454f-83e5-9b6cfcdf5036",
        "cursor": {
          "ref": "6b6e78c0-f3de-462c-9945-a1659264f93e",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "a90eeec5-04af-49b5-a48e-1600050c6273"
        },
        "item": {
          "id": "0bbd74f8-a4db-454f-83e5-9b6cfcdf5036",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "30b4287c-792b-45b5-b9f4-215dcc236ba9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9856ddaa-94db-4322-86e7-1591d4145a6f",
        "cursor": {
          "ref": "c929c561-2332-48d8-a471-8fe69407c9a9",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "612151cd-2643-48eb-9aba-d76e88c7f35b"
        },
        "item": {
          "id": "9856ddaa-94db-4322-86e7-1591d4145a6f",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "57043e86-2a6a-4750-8a93-31da454beeec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2de6177-ac7a-451c-88bd-c0724c8554e1",
        "cursor": {
          "ref": "63a90d63-c3c8-41dd-90f3-c9cc0ad04a9b",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "5a4e2cfe-3ed7-4847-affd-85bcdf741055"
        },
        "item": {
          "id": "b2de6177-ac7a-451c-88bd-c0724c8554e1",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "9e1a72a1-977d-4801-80f4-e82a8945aa36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e1f6da7-b122-414c-bd47-44a9236ec2f2",
        "cursor": {
          "ref": "67f6ecaa-56ad-48c4-8487-31749df24e17",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "47f67f55-754d-489b-98f3-915c2cb7b4f3"
        },
        "item": {
          "id": "3e1f6da7-b122-414c-bd47-44a9236ec2f2",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "d7f28db3-1d0c-4241-aacd-3a98911164f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b5c7942-593b-4ea3-87f9-7489a8d716c8",
        "cursor": {
          "ref": "f96dceb2-d910-45b1-a1de-4ac9a118ac91",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "e8c761d7-0e8e-4619-93cc-4fa8e2726ba7"
        },
        "item": {
          "id": "4b5c7942-593b-4ea3-87f9-7489a8d716c8",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "bacf03cd-908b-4d4f-8277-c06e14ecfe10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0effc9e6-145d-47ca-a25a-8f2a3a92ab41",
        "cursor": {
          "ref": "75d52739-9b08-4323-9f27-17dfca9657e8",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "d296b0ef-b6ed-475f-bf2a-0150c255c9f8"
        },
        "item": {
          "id": "0effc9e6-145d-47ca-a25a-8f2a3a92ab41",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "313a9a70-6663-45e8-a817-50c0f8272b50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5f195eb-6229-4c82-9dbf-2ebc68f8fc08",
        "cursor": {
          "ref": "bf9b37c5-e6d2-449e-9a05-daa5f7febced",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "efdefba0-c138-42d2-911b-5c174343d5f5"
        },
        "item": {
          "id": "f5f195eb-6229-4c82-9dbf-2ebc68f8fc08",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "1170199a-d49a-41ea-91f0-7f15ef0d9c8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1095583-4d2b-4e3c-b864-53298613f2ec",
        "cursor": {
          "ref": "b9cdad8c-793b-4486-bfc9-ece125620179",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "52e361ca-24c6-47d1-bf2c-bd6f41c1fe6b"
        },
        "item": {
          "id": "a1095583-4d2b-4e3c-b864-53298613f2ec",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "ae17ddb6-da0c-4f8a-9c80-c0ee190c2a3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ab083c3-3ccf-4b37-bf3e-2d7998f4c1ea",
        "cursor": {
          "ref": "c7bc820f-f7e7-4210-98da-987a160c7599",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "c7c0a80a-d8db-4047-af79-5c492b01a090"
        },
        "item": {
          "id": "6ab083c3-3ccf-4b37-bf3e-2d7998f4c1ea",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "463f1ddc-cb4b-4578-afb1-a37f3dbacd8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4ebda31-e354-48ae-b207-ceb9605ba2f5",
        "cursor": {
          "ref": "7233ea68-f663-44f9-a754-3373cf5544a3",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "f79da772-233b-4b96-ba01-a0a1ef2b70e5"
        },
        "item": {
          "id": "e4ebda31-e354-48ae-b207-ceb9605ba2f5",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "6226e6d4-1875-4cfe-b104-42d16eee3691",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87511dd8-4bfe-4bd8-9453-fb3a12efd32b",
        "cursor": {
          "ref": "f2fa4d23-bd6c-47ea-843f-50fdfacb1810",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "1b5e195b-8a8e-460b-8652-58a5da5ccee9"
        },
        "item": {
          "id": "87511dd8-4bfe-4bd8-9453-fb3a12efd32b",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "b36d0dde-4909-428d-aa8c-02d87a9e091f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5d46fd6-1033-4e30-965c-da7b67a53e48",
        "cursor": {
          "ref": "52e5dbc0-f33d-443c-b1fe-782f41f5a5d8",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "4669e45a-5d7a-4172-8177-7dffc7e4571e"
        },
        "item": {
          "id": "a5d46fd6-1033-4e30-965c-da7b67a53e48",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "2d4ddba6-9cbb-4522-a51c-2b3bc10ac1af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31b1e86f-af09-4676-91d6-b981364458db",
        "cursor": {
          "ref": "9120e444-c481-48e6-94ab-2bcce8ca70ef",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "97b784eb-8a88-46af-94f2-268731f726fc"
        },
        "item": {
          "id": "31b1e86f-af09-4676-91d6-b981364458db",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "f052db61-3915-407e-9a27-6c4314d885ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a21dadc-ad0c-466b-8e0b-816693b2448e",
        "cursor": {
          "ref": "1c0c8bd8-28a1-4690-86b1-20ceceda1c13",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "4364f0d7-b363-4186-b3a9-af0a3f6b87a3"
        },
        "item": {
          "id": "4a21dadc-ad0c-466b-8e0b-816693b2448e",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "2353a3b1-bfde-44de-80c6-0d1951b3de27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "751b2bee-a51d-4b2e-a69b-ecd5624418f8",
        "cursor": {
          "ref": "9fdd14be-597f-4282-afde-d5321f57c6d0",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "021e5549-f378-4013-a896-bee6e7bb3706"
        },
        "item": {
          "id": "751b2bee-a51d-4b2e-a69b-ecd5624418f8",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "0eeb8677-a163-442b-a3c9-3097696bdde6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60c0ffa4-5465-4c71-98df-de68db6bcdd3",
        "cursor": {
          "ref": "3badec1e-1f7e-4aa9-9c32-183758a53a36",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "27afa7c7-aa45-43c9-94fd-205ef18015b5"
        },
        "item": {
          "id": "60c0ffa4-5465-4c71-98df-de68db6bcdd3",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "83bc93a0-9f80-4487-a327-42c57adbd483",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df9b8e62-8962-461d-b236-31f2c04c3ed8",
        "cursor": {
          "ref": "ae3f4f54-5383-4590-9fbb-e49180da5604",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "01d7418c-bc42-426b-a31c-22049290bec5"
        },
        "item": {
          "id": "df9b8e62-8962-461d-b236-31f2c04c3ed8",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "f28cbe7c-f6e2-4c40-9b8f-7c80b8694236",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65953bb3-e80b-43b4-869c-4d46a71a2194",
        "cursor": {
          "ref": "da523709-eb73-433e-8316-bfac75b19239",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "109d4e3a-f150-429c-a0a8-328ba80f5489"
        },
        "item": {
          "id": "65953bb3-e80b-43b4-869c-4d46a71a2194",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "af1e8f1f-4b0c-4b09-b8cc-1f3bc7537cd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29391f0f-8c04-43ec-86f6-6691d4556463",
        "cursor": {
          "ref": "8c3eb458-c907-4b9c-b1c1-93bd3b516b43",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "e1968e99-b6c7-4c35-af1f-e5c43e39ef03"
        },
        "item": {
          "id": "29391f0f-8c04-43ec-86f6-6691d4556463",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "99440ca7-8ddf-4fee-8ab8-8fddc4f97908",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a24783d6-ce23-4921-b075-d2a066b0c36b",
        "cursor": {
          "ref": "5af74963-8204-4278-b4c9-4dc222e29a95",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "a30b3982-87ac-44b1-99db-6c74f7d81462"
        },
        "item": {
          "id": "a24783d6-ce23-4921-b075-d2a066b0c36b",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "7adb63a5-cad3-4729-8f28-e169542c268e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd7d64d0-7375-4936-93f9-450c8322a352",
        "cursor": {
          "ref": "69c884b8-8c10-4629-9031-04971d10fd5a",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "15300100-1333-43d1-ae79-a44725e58582"
        },
        "item": {
          "id": "dd7d64d0-7375-4936-93f9-450c8322a352",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "64a791d8-feb3-4e06-b398-0ded4fbaf698",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 941,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7c7f945-4fac-413c-ba05-8c9cc32418f5",
        "cursor": {
          "ref": "0f3a4851-0ab1-445a-a0aa-792376f939b0",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "087b98c0-5598-4797-a9a5-9f972cd3c45a"
        },
        "item": {
          "id": "e7c7f945-4fac-413c-ba05-8c9cc32418f5",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "4d472c96-6c6f-4bbc-9e9e-f0e7060c9c7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "705bbd6d-d177-48ee-946d-31573e01692f",
        "cursor": {
          "ref": "949a1dcf-19ac-4511-8af1-d161ac3fea91",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "74497263-ba9f-4df0-8aa6-2bbc4bcc9d3b"
        },
        "item": {
          "id": "705bbd6d-d177-48ee-946d-31573e01692f",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "aaacdd5f-f24a-45c8-984c-af5cdd0224b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8be8e91-1a6f-4fa7-b7bd-056f63d22f0d",
        "cursor": {
          "ref": "1ecb7ff5-4181-4fc3-9369-9c0764cd28d3",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "227598f7-d4b1-4127-9d1a-45a15f4b8457"
        },
        "item": {
          "id": "b8be8e91-1a6f-4fa7-b7bd-056f63d22f0d",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "615b3d30-3a76-40c5-978d-bcead3cacb7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9101df9-8548-4f54-ade7-920c1226023d",
        "cursor": {
          "ref": "9efc5be8-545f-4fe4-96d3-3ccb976060af",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "d45120f0-fcfc-4840-a63a-d6d11652252f"
        },
        "item": {
          "id": "e9101df9-8548-4f54-ade7-920c1226023d",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "8c50665b-dbd3-4a24-b872-3fa98b9501b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c445880-bf79-41e7-8eab-6105acfaa71e",
        "cursor": {
          "ref": "e0c85fd3-4742-4cb7-bdc0-f47b68c5f8f4",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "8c936600-2974-45e6-8df7-c22f7389f892"
        },
        "item": {
          "id": "5c445880-bf79-41e7-8eab-6105acfaa71e",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "345a3e1a-406a-47d6-9769-6cde058a9edd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b65fa18-544f-4e0b-a66e-52b25ff75e9b",
        "cursor": {
          "ref": "5d1d1287-4e49-4e24-83e1-5e15e84628e5",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "5ccec924-31af-48a6-8c9e-342fb2bcbcbc"
        },
        "item": {
          "id": "3b65fa18-544f-4e0b-a66e-52b25ff75e9b",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "c70a1094-da90-44c3-9804-077c99dbae4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d11d81c4-2104-4595-8e06-a904cf351c6e",
        "cursor": {
          "ref": "361ed75a-d027-4271-afcb-3e87061fe290",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "ec3e3e7f-8f54-4807-b433-2752efbafd69"
        },
        "item": {
          "id": "d11d81c4-2104-4595-8e06-a904cf351c6e",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "13a7d470-66bd-451f-8aef-256cff663ddd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab1fdf0e-e3e6-4393-8290-1e3b321c8dac",
        "cursor": {
          "ref": "040e796c-ce71-4130-be02-0d24b9c135a4",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "9a6029cc-e678-4bf3-a794-0f3e80dc5e74"
        },
        "item": {
          "id": "ab1fdf0e-e3e6-4393-8290-1e3b321c8dac",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "52ec48af-654e-41bf-9718-a5ea9bcbcc29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6162fe3-1996-44ff-a6e3-c02be528e736",
        "cursor": {
          "ref": "e83ed644-e25a-4857-9232-1517441eba3f",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "eb9f1127-5766-4ca1-9d51-c67c25a2bd76"
        },
        "item": {
          "id": "c6162fe3-1996-44ff-a6e3-c02be528e736",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "9567825a-aa0f-4b3f-83b2-73b5ea0d63a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eecbdc2-cf05-4787-b60a-b3d11b35f9e5",
        "cursor": {
          "ref": "f57b0e09-8c38-4953-84c7-4266f3a0b5c6",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "83cc4d18-85b5-4bea-8707-ecfcdc4ddb9d"
        },
        "item": {
          "id": "7eecbdc2-cf05-4787-b60a-b3d11b35f9e5",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "45753bca-ab87-45bb-84fd-e5e900e1bd17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1edd84b9-6c0d-44d0-8a68-bd786b68463c",
        "cursor": {
          "ref": "fb711e1b-068a-43d8-9dc0-1c4a8f107ef7",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "bc77b8a3-4a14-40d7-b5b7-e64863a9a304"
        },
        "item": {
          "id": "1edd84b9-6c0d-44d0-8a68-bd786b68463c",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "7fc1fff3-9205-45ae-b31b-b1fd1a2fd555",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "066609f6-3a58-44d8-b0f5-48773b380233",
        "cursor": {
          "ref": "feab3264-4732-403a-82fd-e531f842bb68",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "175307ce-d155-4f6c-87ec-49299ae63113"
        },
        "item": {
          "id": "066609f6-3a58-44d8-b0f5-48773b380233",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "7433ec90-e6d1-4c7f-8dcf-c06a7dcb5689",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2a7dd9e-3056-4c34-92e4-536f4fa3259a",
        "cursor": {
          "ref": "67189938-f49f-47cf-b50d-ea2ac75cefb4",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "b18e45f2-32e8-494f-88de-5a463921081b"
        },
        "item": {
          "id": "b2a7dd9e-3056-4c34-92e4-536f4fa3259a",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "a498aef0-c24b-4476-9b2a-5cefe88a4b87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f1a8ebb-02b3-4bfc-b42c-74d41f07754c",
        "cursor": {
          "ref": "a6c0e812-61f1-4382-962d-821668a1739e",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "64ad9a68-305f-4ef5-a8db-32f1b3ddf628"
        },
        "item": {
          "id": "0f1a8ebb-02b3-4bfc-b42c-74d41f07754c",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "fa6e73c8-efc4-4882-a88d-853eaf8c308d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "342e6bc6-8396-4421-b830-2f8fc13953e3",
        "cursor": {
          "ref": "ed6e2151-9740-4b8b-95cb-c66ac3d1b1b3",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "d666fa51-3e19-4734-9976-75438f92e70b"
        },
        "item": {
          "id": "342e6bc6-8396-4421-b830-2f8fc13953e3",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "03a9471b-9231-4344-9b6d-0fecbcc4c566",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4d389b0-032b-459d-9b7b-1ddbe963def8",
        "cursor": {
          "ref": "cafa4587-b8c6-47d6-be33-2fcc75480738",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "dea5819b-6b2a-4e53-b668-cb2ccfb0aed0"
        },
        "item": {
          "id": "f4d389b0-032b-459d-9b7b-1ddbe963def8",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "cfd6e6a1-c32e-4bc5-84a1-30d87198c639",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb22abf1-1b2d-42e8-aeaa-a251a80eedb6",
        "cursor": {
          "ref": "f05d1e11-f14f-4a9a-8995-0611b9443f01",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "871c22a0-7ff6-4b25-aef4-985d4365452d"
        },
        "item": {
          "id": "cb22abf1-1b2d-42e8-aeaa-a251a80eedb6",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "dc279956-ce0e-4746-b894-5732ba331bc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 123,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c878adc2-1052-4bfb-9af5-d2a53bd6acf2",
        "cursor": {
          "ref": "0a43c6bc-1438-41e8-93a0-8deb46406ab1",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "bdcea716-0373-42f3-b781-60d99d59f87f"
        },
        "item": {
          "id": "c878adc2-1052-4bfb-9af5-d2a53bd6acf2",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "e87210bd-b38d-4914-8e26-af1600e95ccc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e7a59ef-922c-4e65-a9c5-65cbdc8dcc92",
        "cursor": {
          "ref": "58c707da-b713-467d-b1c3-3b82626bf80f",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "9d2dc5d0-eace-4e79-8dcf-21ebd38e7474"
        },
        "item": {
          "id": "0e7a59ef-922c-4e65-a9c5-65cbdc8dcc92",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "08c4e419-4e91-48e4-b3c4-09da47e643f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5737111e-331f-4f75-b58e-ca70b87c4548",
        "cursor": {
          "ref": "c6d0a9f3-89df-4e34-ab76-25aeb545392c",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "0c86a884-8422-49b8-ad80-fb7f0c6cfa2b"
        },
        "item": {
          "id": "5737111e-331f-4f75-b58e-ca70b87c4548",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "d0389c3d-fb12-48ec-ac6a-44d05a0f83a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2c0901c-9a2e-478b-a996-e9822dfb6410",
        "cursor": {
          "ref": "4e745065-135d-45ab-a4da-8d5b67fe2edc",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "20ff853c-2c83-4af5-b3e4-c7202aa8d6bb"
        },
        "item": {
          "id": "c2c0901c-9a2e-478b-a996-e9822dfb6410",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "389b5747-dbfe-4f85-a2fb-42273763bdf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "067e1211-e7cc-43a3-beb8-d7cf65446073",
        "cursor": {
          "ref": "6877dd22-fc1d-4c49-8313-46e762f10c29",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "c36e43a8-ae9e-4a7a-8fe9-8b8b18036127"
        },
        "item": {
          "id": "067e1211-e7cc-43a3-beb8-d7cf65446073",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "573a8eb5-53c2-454f-822d-3a6d941e10f1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69b22392-7cba-47f4-8817-2a6173762b46",
        "cursor": {
          "ref": "2a4caf06-afb0-4554-b203-f16fb2ccc423",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "c1b7fb9e-9f94-4724-9c5f-2ee8210bead6"
        },
        "item": {
          "id": "69b22392-7cba-47f4-8817-2a6173762b46",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "08016ee1-1627-4a95-ae0d-e96731309a71",
          "status": "OK",
          "code": 200,
          "responseTime": 84,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "fed46837-8fab-4177-b2e7-d94cf2c3fc63",
        "cursor": {
          "ref": "75a0f85b-ba6c-4de5-a609-0d4de048e275",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "1934c36e-f416-4766-bb86-97b51f0112b0"
        },
        "item": {
          "id": "fed46837-8fab-4177-b2e7-d94cf2c3fc63",
          "name": "credentials_verify"
        },
        "response": {
          "id": "4bf37a53-5693-4e18-8847-129ca50d7d7f",
          "status": "OK",
          "code": 200,
          "responseTime": 2621,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "14675743-3134-4a5e-93d2-bb2e45fa0b16",
        "cursor": {
          "ref": "2d39000b-089b-48c6-968e-baccffff3193",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "63eda412-99d3-48f2-a736-4f448ab2ddf0"
        },
        "item": {
          "id": "14675743-3134-4a5e-93d2-bb2e45fa0b16",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "5022de67-b9a0-4c3f-8ac5-e783b668ba8f",
          "status": "OK",
          "code": 200,
          "responseTime": 2247,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "24473743-aef5-478b-a54e-a966989745b9",
        "cursor": {
          "ref": "e795740a-9339-45ae-8241-784a39512f53",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "e46e51fa-a6d6-44cd-b61c-1f342a57af5c"
        },
        "item": {
          "id": "24473743-aef5-478b-a54e-a966989745b9",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "83d33542-77af-4e27-987e-f61e0a04c71c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24473743-aef5-478b-a54e-a966989745b9",
        "cursor": {
          "ref": "e795740a-9339-45ae-8241-784a39512f53",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "e46e51fa-a6d6-44cd-b61c-1f342a57af5c"
        },
        "item": {
          "id": "24473743-aef5-478b-a54e-a966989745b9",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "83d33542-77af-4e27-987e-f61e0a04c71c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbdf15ee-0a15-4ee1-9342-ec60c4d29ef3",
        "cursor": {
          "ref": "b2e96746-da39-44f5-94c6-98baf41263f7",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "51b4cfa7-7fb9-43cc-8331-36e583945cb7"
        },
        "item": {
          "id": "bbdf15ee-0a15-4ee1-9342-ec60c4d29ef3",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "cdf747a2-7d8e-413f-aca6-5ce1eb1b29d9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcb004ed-f1c8-4067-a030-16f67cf83c35",
        "cursor": {
          "ref": "31354ebd-19f4-4e7b-8499-3747b5fbe11a",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "92acdf2d-149d-4e21-a90f-19014f09ca8d"
        },
        "item": {
          "id": "bcb004ed-f1c8-4067-a030-16f67cf83c35",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "5cbabc97-c41e-4a4e-9790-d03969181670",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}