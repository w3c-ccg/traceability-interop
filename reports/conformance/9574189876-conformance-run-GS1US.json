{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "1483e6f8-0508-4416-ab12-0ee73a2cb3f7",
        "name": "Clear Cache",
        "item": [
          {
            "id": "b8a6a39d-fa8c-4760-bee3-3aafef7a8f43",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2ea0e3d3-a82e-473b-a32e-38e8573c28c9",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "47dff5f0-8c7d-4369-80a7-fd1ad340e7d2"
                }
              }
            ]
          },
          {
            "id": "11f32b98-3965-4f09-a481-6c5cd0fc3100",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "00b9fd1b-f416-443f-9eba-5d27eff28c3f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "77adb63a-4603-48ec-bfd9-f6bf465b3f17"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "4c63bf72-b58b-4acf-9fd5-00a42ba2ef21",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "cb01092b-ab5c-4499-8d7e-7ae40cd870d5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "fea8b7f6-001e-48b2-901e-ac1750b6333d",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "00c8e3c0-f0bb-45de-b65f-0d5771383d2b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "11701f28-fe3c-41f6-94b3-d788e57315b3"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6441d2c5-cab4-466c-b3dc-4dd9634a53b8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "eb26b444-2fc8-4409-a6d8-f4fda394771b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d25f45f0-0fa5-4b53-9983-2ada8321c9ff",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0e0b9e89-3c7f-4edc-8af9-469d8be7e155"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c0c4a5de-3aee-43cc-935d-106d6f46b940",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "40144452-07ef-44ed-b981-34109b369e44"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4950403f-346f-4843-88ac-3d19b0008f11",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f070558b-dcb2-4d3d-88e3-ab5a7dbf2edb"
            }
          }
        ]
      },
      {
        "id": "e2c271a8-422f-4a9f-a4c1-b563a90b1bfc",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "f1bb6613-96de-43f5-a8ce-4b793a6f09de",
            "name": "Negative Testing",
            "item": [
              {
                "id": "04158f93-e46b-4527-8402-1cfe093c3244",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "560cc09e-c190-43e1-a67e-68f7fa5eb694",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39f0585f-1eb3-412d-950e-40140907ee9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "628c31dc-08f7-4888-9267-7b5f4d17acca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "008b563a-6f63-4678-bf8c-dbd67a46dc5f",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bae63575-6cd8-4453-828e-e885c5784b4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d2992490-d25b-4795-9d9e-b413199ecc26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d092f48-7e6f-49cc-80c7-6e0ebdc903e4",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b239a34-c5ac-4854-be13-ae7437b87ac4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "68f72140-68b1-4802-9837-e6c6bec5d4c7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "af9a222a-12d4-4c9b-a2e5-36c8d0138fed",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "32ca25bf-edd4-41e5-ae79-b0c99532c133",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8503ec27-c488-4b62-9796-09865255baae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7958b8c9-9976-4809-9703-fcdabdd6b496"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa35a7d4-5c3e-4a4f-b536-87df2325a18c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51ba0f57-c88f-4aca-9170-5d5c8b7d8678"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "af77b8e0-9322-4514-a408-e12252d88c45",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7ec622eb-4cc3-4970-ae66-34960e4527f2",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f7afc233-bd82-408e-9726-e911eeb15284",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "d14f45af-4d9a-483a-a777-8c7f5417cbdc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f39bb7d6-6b43-4a79-afb1-ef3f28af158f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "85351579-dbc9-4871-b5f6-7906ad1f80f4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "52679034-5d9a-4f93-9bbc-a2f4006876d1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "36075f50-ca21-4c2b-a04d-80fae21f00be"
            }
          }
        ]
      },
      {
        "id": "f8578a41-d658-439b-a71d-1bc975297515",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "cfea40c5-fe35-4366-bcc2-f0336656a92b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7c07d353-fc27-48ab-82ab-09e1d3ebf9f1",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "fc7605cb-013a-4fb6-aa1a-d0c83efb9f8e",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d62c926-22e0-4515-ab08-7957585d8066",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcd27d07-934a-4f29-823a-ea92ac178420"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da7994fe-ced7-4445-8e5f-c1fb4bf61f8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fbcc06e7-9e3d-4ce6-8cf5-703bbf8c4c69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fff313f-c8de-44b8-acf5-262d44b464c5",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b25b4ede-8cae-41fe-860b-b9f194f0bcf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ed85f8e-cf16-40df-b39f-91747003b8b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ef195eb-ab41-4148-96b9-df7d22dd92cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7c83db8a-e783-4604-853c-cf81e4305972"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9f9fb66-0d49-481e-b47c-61eac2573836",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ac5616d-988e-4ada-8419-f123d88ac6b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dff758b-791d-4cf5-9b5b-b9be34080001"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f11c7f7-42c9-4f83-861b-0fd3c6c48898",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7d67cca1-496d-4219-947c-609ab3bdc6ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0de4464e-90cd-4896-8bd2-feff5f8f0f7b",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb3cc2a7-15d9-49d6-939f-640204fa2dad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a7b70fc-24b3-4eb8-9346-208a882d884b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "762a38aa-0c27-4fe5-b03f-5ff47bc5ff66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "85610983-757e-4160-8bc7-5d49cc40cf23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "077cb7a5-d93b-49cf-bfad-9aec2127ab0f",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e7a7231-17c4-4063-beea-c9ec5ecce7db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddd98668-6ea4-4b2f-a054-ae23d450bb70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "825c5e38-a114-41ba-83eb-6e74e7fe2817",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3d790046-b412-4f4c-afa8-b5b66564199d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9df5c0a4-c1bf-4f40-87e8-8a99fb1230cd",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca498dc5-a6b3-4ed3-9307-7e72427bd6f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e31ad295-5067-4ec5-aac2-8456a6934651"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0899ba0e-f640-4673-baad-83b503e63a8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "663c598c-bf68-4cfb-9322-e69a80904f1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1b52073-57af-4f9c-9e0b-fa9528375449",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "002a76cf-5355-42f6-a3fa-6464042381e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3a1ba41-6aea-4611-bc9b-a2223e97f0c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18ab8a9f-5114-4c0d-a06b-95e1689c5c2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "96f91792-9530-4da2-9185-76895d0e5e4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9f91dce-f4a9-41f9-abff-f520c8c8872f",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c71aafd5-d573-445d-a764-d4b0dc8db46d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67c9cad1-cb73-4cc0-9b10-144c41a2496d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c22e9089-630d-45d0-b1cd-2db7118b59b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b9b3aef4-b501-4583-8168-0c18ba19232f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f2e1875-05bb-421c-a5f1-dfcba7036bd3",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee9e00e4-a67d-4e69-839d-ac69fc19bfb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71d8703d-9737-46ee-b49a-537e968b89c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7212f774-c08d-4087-bb2d-a33aa7398e02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d6fe1a7d-d0c5-4e8f-9b1c-29f6565bd669"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2c22b6b-c62d-4bb0-b3fe-459c7884c180",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f35e248d-b2b6-4f5b-81c2-d3a798894593",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6923c4b5-88dd-47ee-9214-86a05cd6fb34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e1e5fef-c09c-4cf2-af16-8c9fe78740ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "21eabaa5-dbcf-40c8-9cf2-5f2b4cd39dae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5adcae21-6d34-47e3-88ad-3893068f1469",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b3b8089-fbbf-4be2-b7f3-f447e9af872f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9fcb45d-2499-4ea8-9c41-9e8b28188a59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f20793a6-d827-4416-9230-4736d6ca24b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bbda9868-a2d8-4b93-a9dc-08f78c8eb9bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c5c7277-11ba-4cd3-860d-6ebe362cb67f",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1ae54e4-5235-4a73-b7b3-0a8d798be7fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eecedc1d-6300-4bc5-bc2e-5d1207bab148"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a434bc2-86ec-4608-9912-c7621f1d7898",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "09c94e6e-e459-4261-9b48-622f75e0538e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d996b08a-b53f-4883-842a-ef734a370c98",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85812dcb-114a-46c6-91b7-ff9bdf299902",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "574fa6d2-d823-4fae-baf9-717959e9b4c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ec834d2-bc92-499d-a37e-ba370670e858",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "711d5873-0005-41f2-b5ca-e2f509f297e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e31a2190-0e52-476c-90fb-63b14346fff3",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d373f04-05e9-4391-8dd4-32536288f974",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f48b22e1-d12c-4ed4-ae45-d372031b2547"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ba35939-643a-40f9-a912-905ed0a95dcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0d7c2c7a-ac59-4d3f-bf0c-a005591c68a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b850620-ab96-4145-86fc-6c9d165e24f5",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce50feb5-591f-42b2-bbb2-14d79e9c2f61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da653a7f-0290-420c-8212-443453916d45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81793e32-f081-4197-9f73-0e8ab894e6b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e3f23a17-0e3b-461c-9c93-26fcc343be7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0d2d723-37c1-443b-abe1-13160afc9890",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12a2ec7d-b7bc-42d0-ae7b-8c7765bd4338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cecfffb-d871-4bec-98aa-720e230e0681"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de19aa7f-3d28-40cd-8008-b99a16fa8d69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2fe46e79-0817-4544-926e-e3ba95202ee3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "429c3b8f-53b6-40d1-9fd5-2ed472e633a7",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16a49740-5423-4bd8-aaa6-82a414d1ec75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61e5b695-6de6-47ff-9b8e-abb44d20ba03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68d207d6-c7e3-4c4d-9cac-2e89cc0b92c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b013171b-757b-4e74-87f6-40790847713d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6352ec0-6c80-4d01-aa99-b2e5931eb853",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d4fc0ba-5026-4e25-8cfa-5ca082628018",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fed8d6a-250a-4b7f-a27a-b672e70cccc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73337da5-59d8-4431-b066-2a9184e7d2af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "76b22e78-2c38-4602-b20d-ac6bee33e5c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4840f14b-4604-4d94-a54d-e5266701cebf",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6b86b8e-123e-42cb-b9a8-66ce83a956bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2244f237-9688-4b06-8db7-7e71b11cdf50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afa4f9b9-6016-4498-a58e-1126ff5f0772",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3d6d8bb-17f5-4233-8d49-ab832e299c5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d52257a1-7bff-4ef2-80e5-991a38276dee",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fb6fb22-8898-4e2d-abc9-479d3f34810a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2aa32bd5-3f5e-42ab-abcd-7c41dc265e24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b30ac173-1ae5-46c6-89ec-c5f21514a41b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ae5e36e-3aab-451f-9e0a-50c5b66c6284"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2dce9c1-6725-4839-a3f2-5295b7d41e94",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5e6bf4d-7be7-40ec-bd54-cf930a51646a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbe496d6-c769-48e2-a4d5-babff3cc828d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efea2704-fe70-459b-a07a-ed428118a6df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "79c71f84-2a46-47c4-a0ae-29c8ae182e4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01e01db6-ccaf-4f5e-9935-cc3f9eca50a8",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69fdbc9e-6782-406a-9ed4-fc1520ce9b0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b2f101f-044d-410b-a0cd-12428dbfe83d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d730f6db-456a-4154-bf88-ab8b3459b197",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c50cac6f-e317-44a7-a1b9-51eb041cde2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c0e6294-4c78-402c-a2e6-5aac9de26e89",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "740ed4db-3da8-4cef-8589-9e253a573b33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f98619a2-0cc9-4cb9-bd0e-b5c2531e538e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9377f2b7-420b-47c0-8df6-9edccd9a878e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1e6e4c7e-2abd-4592-9d4d-2275e253691e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7e443fd-0839-4ffd-bee0-dfdeb7545c56",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46e5daa1-83cd-45b1-924a-63f200988f4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d16c3222-b91a-4d81-96e6-711a994564fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad9e8b9e-f3cb-4693-8952-594b0edfbdfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c2c8d49-fc89-4e9f-ba3a-9ebf1270954a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfe5b6bf-7b7b-45e8-aff4-369c16f4a0f6",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bd062b3-2678-4cf2-bdfa-a04df810b72c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "249a6f5f-a16b-48f4-a765-729704c753ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71fdbd87-e662-4819-803f-e33200c7bd98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "71cb9aac-63b5-41e0-931f-94682ada13b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9d91456-6642-4ce6-bbe4-adc2571e2cd5",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10a61264-23f5-4f53-a6ba-ff81cffdbae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83a7bb59-6d8c-48fb-8f94-ab5e7b00cc08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25fcf37d-652f-41bc-b071-4aaf83ab2208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6c8d9a4-5f75-41c4-a645-93d137989860"
                        }
                      }
                    ]
                  },
                  {
                    "id": "641e12d7-1f63-4f78-acdf-17276dfaaef7",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20d05f76-44c5-4e0c-9c35-3bf80f1178cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df754755-3d3a-4583-978a-da9c2d4d620e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abb0e3d6-7952-4741-9400-1b6a3de9fed6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "11afb777-2104-4d24-934e-53a4bda0402f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9bd8ab0-7e0b-4cca-b143-c3b06220bb09",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9c249a4-d240-4227-80a4-c96a780a1828",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9aa8fe21-254a-4bf0-bc81-f0a648e22796"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd73c98f-3cc1-4366-aca3-88fcbc6519b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "44ec326b-6689-45c5-b29f-1fe0d97813d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "453ff7a2-a03c-422c-995f-f368c36e2d87",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "494cdb66-da1c-49f0-b1f0-a5069712a071",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73281590-77c1-4296-9b86-35d116115233"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95835aea-5015-4904-a1ea-2aed65cf2a36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7cff525-3119-45d7-a47f-4bafa08ea41b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51abdadc-4a15-4776-93f7-96c04bf37505",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0937b13d-d998-42a4-9ef1-932786e71b33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc349492-0e09-44e2-97e4-c16844e4d0a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb4d6e51-db78-4da9-b5f0-7e3c4282c1c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "2302de14-1ae5-4ed5-88f5-c96ab57edd8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "696f8fae-1a01-43df-9f08-cf74dce8d2f9",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c602630-af05-4d0c-b279-83f963e71184",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "941ba29e-101b-48d2-a653-a46f574bad3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca3d102b-3e73-4e46-9125-c928ca5d77a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "eff7f32f-f93a-4c80-96d0-025126b59c16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14fff2c5-c856-4d4d-bdf3-6ee9acb50444",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6388e9ad-07f2-405b-b0d2-cae0f17b1803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20c27de1-8e11-4237-a420-c83ff0f5541d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15a7ac55-dacf-4de4-9178-a922efa49feb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a751a11-f82c-4ba1-ab70-361cdda8bcb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b6c2fcd-940e-41be-b188-40d2e28d441f",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94e0077b-463b-4484-9f5e-5e8c62a6127d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf92996c-b96c-4206-ad28-cc65cc2961d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac4b2b3b-01e9-4fcd-a9ca-b5f1fc2db961",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "06fa9b79-eeb2-40d8-8629-0dc36c064738"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31238e77-5c06-4a2e-813b-acc4b337d483",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67378509-dc78-4312-99e2-0437938de76c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f8d29ca-8fde-4636-b04b-27560af2fa2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89b0dadc-cfaa-48aa-9f2b-0420b8bcdea6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a5dec09-502b-4226-bbce-cbf63ab83c6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "212c55cd-7fa5-4c00-963b-c1775729242b",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d86bda0-3f91-435f-aac9-59fc66276dab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0954d103-f864-406f-8ba2-223d315e22a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6582d8c-2c2c-4dd4-b5de-d7d093b419e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "d94f021b-a454-4ce6-9a4f-1d9abe0f221f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50aeb6e6-7b9e-4da9-9c83-5633028f5f2c",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "986d3e67-c070-4dc8-a888-0617ab2f54be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1301ce6a-2cd3-4253-9445-8aff891f0b9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20f146aa-e31a-4fe6-a042-a2d956a2875c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6796c5b3-7b21-41b8-b593-a55b6ae5f89b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c66b0660-4f30-4c56-83fe-4ab93a38e54f",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a648eda-c369-41d8-95ca-97bc815b6dd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27a5cc34-e953-4c19-806a-1aea31f60595"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e266ae29-9513-4f71-b8d1-8e4a5e7d9988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9abed3e9-c116-4b6c-93c8-ea16e39f7a99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84212ec9-ae6b-4899-94d7-0f47114ae018",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ab2727c-6d09-4e7b-8b35-983c1144e4f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5766d0b-6158-4a46-8217-ff17d9af0c43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "830d4aed-5d86-4319-8d67-0c98ff34ddc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "51dc4405-e036-4695-8288-5322850d375d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b244df85-39aa-415f-b538-cbe94807375c",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccd978a1-e67e-428a-9146-aca8224e5382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5fde5b5-07f6-4700-b3b7-3a5737d967f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74610a3a-0c1d-4006-87df-e62c319d48e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "18fe9aad-3558-4509-8129-efe7a35263f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec001ac0-2c69-4457-9d71-503c5438492d",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a21acdc-897d-4d0e-916e-ccb13fbad068",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80cadf77-dd1b-4ddd-b25f-19f19b5e0e25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3bbcc5d-d1fc-4192-8a48-d998e2048f58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e94a0f59-6f66-4a4c-a144-fc9ff763254d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c18f4693-c5db-43ce-b059-50cf32e6fbe4",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9628b876-cec4-40d4-ab4f-85a66c36235f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a49911e0-0448-4c56-8c69-94dd6fe7434b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aca109ac-9366-40f9-a4d3-6a8eeaf36884",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3600c6c2-e60e-4b8e-be4c-682eff28fe75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71c7197b-2c07-453a-8d6e-c32846921e59",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e72f31cd-df30-4bb6-97b1-fb3c3e84cc07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "875345a5-c633-438c-baa1-142ccf3eb67b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "776a0002-6b31-4fd7-96d9-fabba6a14c53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "08371075-a541-4ab8-bf8f-09e9fc7984b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4161bce-3a5a-46bb-a726-27bfdec49d66",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b001ba1-d42f-4115-88b0-a2b4e036504b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ebd9603-1641-4010-9f80-8ef0f579dff8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb6c000f-17af-4dce-9f8d-b8926c0fa69a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "c73bca19-297b-4985-95de-9c5d00ffaad4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97349cdd-fb76-40ce-b224-1e83c627f3d2",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e583cb64-589b-4607-95ed-fc4d30522a6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03bb3169-a64d-4131-92e7-26d32e076bae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f96d0ad9-f13b-4c9f-8133-b573c54ea3fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "138d667d-34f5-4ba0-99ce-544d0f9ac1cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b1c0f4d-a0e9-4685-945f-e4a80d9fc3df",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "280a3e05-8995-411b-90c8-03f108aa548d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a9219e6-dbc2-4ef3-9479-cf91223f28cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0c67acc-1fbe-4572-a61e-c1233a6deda0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "accdf961-a587-40cc-84e1-c598cf32e36b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe01f8cd-619a-4466-b502-13502b6816a5",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ee6f292-3373-4467-b8f4-9e0871853891",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c624bb7-3d7d-476c-a8d9-8e29d1e6028d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77056ffe-3014-4ffb-ae38-7be1bd15b7a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "92f93b22-7a9b-46ab-a891-4cc38a9aeec5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a94b32b-2b9a-46ad-a162-751ad5a0ec71",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b06d311d-08c6-44fe-be2e-4e21a3e1a06c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ce9a7e1-5faa-4729-b56c-48cef49592b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f5ad6ae-d6d5-4a77-b5c2-f3d24b29ae8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cfd29338-782f-48bf-84a5-e1478c504adf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc571fe9-2e7a-4b7a-b790-3fd0e3668657",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "636ae6d0-40d8-4b3a-ae4a-66d296e72f2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e797b5db-6f20-41fe-927e-357a19765a6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1595f96f-6584-430f-b229-42339e904ef0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9ea96d9-fd67-47d7-857a-bfdf82ab2adb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0a40c25-c4ac-4cff-92c2-80f7c60857a5",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70017f03-07a5-4f4b-92f7-d3435001fd08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75049d17-83f9-47c3-b9e9-7a780c61e4b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31b14aa6-a62e-4be2-8f76-a3a8e7792db0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "98e34c4f-f61f-49fc-bc71-723a260f0366"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b6b6e42-5f03-4216-a58b-4ce57e5d0e94",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "524d0b75-a4b2-4db6-bb7b-a2e1f8e2f9ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b2548cf-70b9-44c4-b3c3-4ed9dd35f200"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d9b9f6c-ca9a-4071-9eb2-6397e281287c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "87d038b9-e7ba-4091-996d-f0e6a3c1b999"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf87446a-6fc6-44fa-89f1-744934224395",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0441b2b-0aa6-465e-a57d-b3fed63dcb8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93181e6d-0ae2-430b-8267-00b98c988c9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7dd111a-1ad9-4181-b1e3-97b8bfca6a84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "b7c69fde-39cc-4c1b-81b2-21dae9dd2f2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7364a7cc-bf99-4600-afc1-49e95d8b60a7",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14d7ec3b-2583-4456-a7cc-cf2f512398b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2722117a-5b8b-4f78-a328-10a46f62314a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "758be46a-7f2b-43c8-aeb2-0c52ba1ab6e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "206e6e1a-9554-4b74-8ed1-d7ccba77ceb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f347521-e813-4385-955c-cd28145d236a",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e55128f2-9481-4850-a6f1-ec099aed31e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bbffeab-60d5-4767-a84f-46a28d6849b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9f0563b-06c9-468f-950a-23e3baf44d2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b2538301-5889-44f9-b76c-d397130fe09c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "880e7f54-3a85-447a-bb4e-44743d5c2590",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6643ce7-9143-4791-bd52-14b12065e265",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a74bfee-ac01-4cb6-8d7c-b6d73c870400"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13f44f63-ee04-4107-a6f1-4371d6321aa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "913aabb3-eab9-4948-9769-17e5c63b9c06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2b9eafb-7dc2-4218-a0f4-321e2c48e498",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ef11d50-af99-4f66-99aa-fd4452aa9407",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b05cb4e-27aa-4b27-8e13-76ee7fb2db19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1597fbb-c5b2-457b-afab-8f7b35ccaca4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "45ea7eb8-5732-4b24-82b5-2719ee9148d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f8b0522-4a87-4593-983b-61345548ebd2",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d09e3315-4b57-4c95-8cd3-91ce9f685f73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "216642de-f89c-4990-b266-4e579816c083"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79b36fd6-9b8f-42ea-8d48-7e990287da1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "dcd310e5-3d23-488f-abdf-239a851bd711"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5989d36f-4b02-48e4-92d5-53303b0a3d3b",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e2bd5b9-25a6-42cc-9773-19ed7a2bf4d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d324e777-a4a9-4c5a-96de-ddcd32542c0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "509ca002-05fc-4f3f-8332-0fa8310bb384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2fd1a789-c2f4-41ea-9357-e6cfab26d3c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c032f59-a6e9-480c-87e2-2ba0d1aee499",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8689624-47c5-4d63-9fbf-a09ad6284f9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dd4223c-9787-4eb8-92a3-60659a351332"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85782acd-4810-4bae-8965-d4160be987f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4e1b003e-2560-4bf8-880d-811a7902ade3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e28b8865-d985-42cd-b0cf-6bcfb12df806",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7433a226-8b73-49fe-9542-0ca5eb8fc225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b267f6f-5966-4bb0-9554-d7406a35cbde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e887762c-0c19-4956-9fec-e7e5d492867b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "34c82c8d-1648-424d-83c0-ef91877aa23c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22c94eda-4ace-4657-9581-44da25488872",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2523c9c4-1680-47cf-8b52-f1b8de33bc44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0406f55f-6654-47ff-99a4-9750f6a5bef9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b6bf543-df59-4680-9a30-ac38b28ec5e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2222dba6-dfc2-4331-b69a-d5b365b1e2f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8a98655-ea79-4edd-b49d-14eb0365b986",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdb711c8-1cd1-430c-b5e1-78c6d64b0db3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e453a5dc-9f9c-48d2-8cbb-1463a01c5ab6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8679786b-8048-4c70-a8e8-29e104f139bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "f8468c35-0e6f-4105-b0e0-9d535483c58e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8604ce28-93c3-4c16-955f-46937673f20e",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec809488-09de-4dfb-8cbc-6407e4397a12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb211b13-0b94-4576-b1f8-393c6204a553"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3e6826e-571a-4998-87e9-75f212629bfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b1f8ac2-050b-4c3f-b282-54d6fdb4db68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61a75dba-ab96-4f2c-8f66-b5294d4c204d",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bae8734-e6c6-4e9f-a061-1c6228b48f3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51711322-7183-4953-871f-2c425872773a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26cbb942-ac6f-47dd-a87c-6573b58dd1d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f9b2331-e6b6-4611-bfb5-174429922230"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ba76163-9b65-4bda-9ae5-efe1841f0062",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a1f88aa-4161-4418-b65b-c3b1715311d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c74cb062-8f9a-4cc8-b2b5-457a80809af3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60fa74c6-17a3-4746-9406-77f1d8515929",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "89da4765-6409-43c7-8c3c-d749394243ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57c00af3-e770-4850-aadc-c88d133258b2",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b101ee9e-6761-4054-a339-55aab88ead8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a69fe8a-e5a3-481d-bdb3-52055a40777f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "238d981c-079b-494f-bae8-88cde0c37f36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0124938-9cf6-4b12-8c73-dfdef2c62d78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03224784-e0cb-41b7-a045-a3aa103a4c84",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da1e8110-e5b5-49a1-9894-f383b9bb34a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c577eca-64d1-42ca-9151-ae085269941e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97ba3a58-20c3-4b50-be1d-c0d8790e22e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "342e61fb-d0b2-4886-84d9-b35b5076bfae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d880b4b-bdaa-4a01-8e89-32afdb359c5f",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7a8eb1b-cb0c-4d9f-8520-eb5f5a5e9ebf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "323f73ae-bfba-466e-ad74-bf024c393cd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2156dc37-9ee4-4811-9946-ede04be4a9d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "143b66c1-1a3d-462c-8ffa-2df8b4200ab8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aa9d09b-30f7-46e6-95c5-8dbc83d5152b",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "facad01d-7682-4cb9-958f-cf52c207ca21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40712732-a59d-4a34-ae26-cd79730f074a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e091f0f-bed5-4592-a503-832faa5f70a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c19eae8-fae7-4fe0-b8a8-39ef1a1e6b91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d621643-d7a7-49a3-8610-9ddaef75cfe0",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80340bb1-0ff6-43c1-8534-9cdfa57e7e2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de4f43ff-f2a9-4bc6-a9f3-4f24c5913130"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdfa0e94-4bc2-4599-aada-1c9599d8c594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b291b16-b01c-41a6-a78a-8d8bcb7b684c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2308c8d6-d5ef-47aa-b92e-476e76c8a0fe",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaa750fc-9ffa-43dd-82b7-ab1b94151630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ddb9a64-18a8-405b-9149-2bec6bc22b53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbc6b5b4-5dd2-4649-9053-b3f3fed97fce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "35cd75a0-9ef1-47d7-9f42-57062defe55b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16560c59-dd6d-4503-a6a2-827f5512942f",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90d9b011-92f9-4e28-975b-4a2cce2c9b12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47a7dab3-9c82-495e-a493-48c4976838fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17b92f8a-eb7c-4e4e-ab3d-1b2784add0b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a3ff4c3-9a2b-4ff0-9fb8-b3d7f4da44c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15261fdf-061d-41fa-b652-cb0949f3dab2",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "368016cc-0c49-4be3-809a-ec5fa52ec5c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "557a05df-cbd9-469a-8c49-998d812e7f69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef26b296-b953-4ed5-9142-82810bb02e68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6a0c803-b96b-4ec1-aa88-2409ca3a6eb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "719c6bfb-c95d-4374-a1c8-8d32c4609e60",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1817f365-5559-44e5-b71f-dc009074d49a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db651d0c-da9d-4109-9489-d0f46844410f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17efb3c0-8a48-4fed-9182-03ab0a8dc35c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8be2479b-823f-44cc-820c-d85abdb63674"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77c23b55-3a3d-40c4-84b1-07afd62507e5",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed945726-8bb3-4902-a965-f2abc931876e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16b2861b-7487-4cc9-b6da-f6e5e3e937dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce011803-24d5-48e1-93fe-e82c3aeacd74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0acb227c-a071-4c43-add1-8bd89fea544a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c22b069-16fa-4f31-8a27-179bf4c111a1",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2788f869-97e5-4bef-8f19-d6c23652e354",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b40116c1-ed6a-41a5-aa44-933937ee4541"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e0643ff-930e-4474-ad89-81f021e6821f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "937c9371-29d0-4dd0-a3b9-6dc0b0a9a471"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c00273b9-ad1b-456b-a8ea-51a0dce9b564",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e52d57a-7f17-436c-9793-8d9f9719a60f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df40d0fd-d063-4e72-8f23-5993db76dc63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3627cad7-71a4-4f7a-be60-42f133cebb2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2330cdad-d333-4bf0-9c00-847d6936f055"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a71cb9a3-94c3-4ab3-bfc3-67c52add6797",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a47f1bc9-f92a-4737-b5e6-affc40d8a13a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73221936-c0f6-4965-b13a-75f354e06484"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af3bacb2-fc22-4c8e-a4b2-12b647b4aee6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "81ff65c7-e105-4cf9-97a0-d313a1985c9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef314db7-67bf-4b38-a5c7-f72acb22e3a0",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d33b56e-e39c-4c1c-8814-b40a3be28955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bda84728-901c-4987-95aa-5ebeed9fce1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9c67fac-96b1-4b96-9502-8e158695544a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9b61db8-ca7b-4a7b-962b-f826f5bc3502"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd51002f-214c-410b-96ed-85528becaefa",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b603932-7608-4f3b-b981-443c3634a2cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd858ec3-f562-43f0-a99c-9f4f2770166a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2d592f0-aec4-4e53-ae22-3cc2a90c1db1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "274aa18d-a374-44fa-a042-b2555fdb9d3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c752f11-bffd-4572-8888-abbc3b3d8844",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "434fa1a4-226f-4eb8-9aa4-45200b915670",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "102145c9-e9fc-4513-8c97-3177997c1ec0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1a7c9bd-cfd1-4ce8-b5ed-d0e1a9d6e33c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "445cf37e-86cc-4965-bf01-843e2c0533b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5913ab46-5849-4996-90a9-b7d59ceaf348",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9599b9d-7df1-41da-9139-88cb550ec699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21c058be-7f09-4b7c-8c8b-29080353c05c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "119ba761-e600-43a3-a168-d0fa3f42cf8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "cee379d2-a260-4d5c-9d79-d7f766af1b97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef43367b-3d4c-4692-9b06-0cd8a202d871",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5533342-b95c-47f8-b615-7bfcc947d98c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bad6662-e4bd-4f22-b3ec-23ce9a980c06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b35b130-633a-4288-bbdf-0928d1e5cd5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9144ba14-0d07-4de6-b860-bded250aabf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "583bd5ef-c91a-41ff-a7cc-e785888e18b6",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc0cd7e8-3557-4239-affa-a427b52610cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "822f0507-5f45-4ca1-9a16-3afa9cde1f45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a28ed3f-f2c6-4f74-835c-3f94e18b4139",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a44599bf-8d73-41ae-b9cf-15e07228abcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8328e02-6247-4d5d-807d-39295138d25b",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24b499e0-b566-441a-b6f2-90bfb3ce52a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0aae813a-0f75-4570-ad31-ca53ae4b244c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "546e3101-2b09-4e84-b673-bbe1abebb93b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cdcfcd48-4593-490d-9897-0f14cd9de5cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21c8d5a3-21d2-4f4f-a508-e99dabf1eb51",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e0d7bad-ae57-480a-ba12-bdb52f266c4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70a72b56-dff8-48ba-a6f6-79a4c40666cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6162b645-55a5-4588-a365-6be73f288d13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c63fa333-a360-4509-9709-b2d36667f388"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3b8b640-0a8b-4028-b781-36931e0c0145",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1d59623-c0e1-4c3e-a022-e9d62924ca93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee402cdc-d426-4706-92e5-959f333a29be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d551e4b-9b11-47ce-bb83-d0d767db9458",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "255a4408-235c-4633-bbc4-d0f08fc78a63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19eeb614-d096-40be-92ee-c2a7ada62a60",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f62a74d1-0f59-450e-937d-d8d349f49718",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a0f9481-286c-4048-80c6-afb5581dd942"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5381d59e-fdcc-42ed-8ef5-8b94a002d475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2203c169-d406-4b72-a91a-c72674241be0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dea56c2f-eb4c-4f73-97d4-9c9aaf9b9c11",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a86cddb6-0301-42c3-8bd0-02dbcd89aea4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86b95711-a05f-4a24-b3fe-aa8aea72105f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2db8b34b-68da-4333-8660-c364b49264ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9eae8056-132b-4df0-a64d-4653141961c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c78a5e5-b3e5-48ce-bd6e-814732922368",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da8beb87-de41-4828-b9a4-9cbfcddb38b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7405d311-294d-4e76-b2be-842122303a28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a09f2739-136b-46c2-a53c-d352ad557b8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "42c55d3b-fde5-49d9-9150-38778f36f321"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77fcad85-1abe-40eb-a9f4-3da85166bdc9",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2702a67d-f591-404e-8236-e552df46024a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fe89d13-0298-4a00-8528-f968a5c0837f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fca0e01b-9e3c-47c7-956a-a7f6b38a60be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "33be67b1-2485-414f-bf3a-3c404015766e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fee239f-1960-4f7c-86d3-da87238a8446",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8367caa0-38b3-4350-ad9a-4be32217ec2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbb8d7a4-568f-4221-b12b-c6c40cb1a3a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e072d754-326b-48cf-ac0b-32011f275165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "df33f488-4dd6-4270-bf19-658d97ce41c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d1c9a58-96bc-4973-8636-067d98353320",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9ce6b51-06dc-4d8b-bda8-9b8a95bc7ffe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "649909bb-8e87-4379-890f-e15c501e5458"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e739a35f-7dfc-4298-80e9-13a5b1c229ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "79c763e5-535e-4686-a0dc-6845caad99bc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7518059e-1f2d-41e3-ad53-6a35f08d42fb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f7acb7b1-c644-4e8c-9877-490b4eff9b5b",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bcaed50-6e04-494c-ba8e-6fa20267fd0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "09595a01-965d-4d72-beb0-ba0fe8e05859"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cac119b-046c-41cd-b26d-611acef99f11",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0618b81a-6c47-4304-a47d-0dbe64d16e60"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4a59ed65-ef24-45b0-8f61-ba1ad096c6e5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bb489597-4f83-4a45-b692-9a767b47823f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e86dd48b-c3c5-40fd-91c1-476c2279f92d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1e76d416-816d-4448-8984-1cf955ef1789"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "660a5bcc-213a-4c00-acf9-75f288f323f6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d8ecd8c6-8023-4667-b003-509ef53728e0"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "04a5c6bf-18eb-4531-aa96-b2d727c5a68b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "69fece91-89e0-4cd3-b47f-8feb3c2d0ccc"
                }
              }
            ]
          },
          {
            "id": "38b84aff-73cd-4609-b801-95213b1dc591",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6f12dfbc-842e-4405-a193-dd40e4aff7b4",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "3ccfb433-82bd-4d5e-9935-1c937fd682ba",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42074df1-d277-41f1-9c88-d92b793d7153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "24dd8dcf-f590-4f04-bd06-efe13bc89de5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cf3082f-403b-4d80-9999-576ee256c072",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f3ca25c-dee9-40ec-ae0d-ca01ef5904d8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "413f5732-98d4-434f-aea7-c820f3e4a9c0",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2a2ebd9e-752f-4640-b6dc-22878b60052a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d2ab17c7-45f6-4de6-a03a-257667486242"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "313e3171-9054-4ccc-9da1-59ecde68d482",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6825a3eb-a1b8-4567-93be-811bd644ac65"
                    }
                  }
                ]
              },
              {
                "id": "3c5ce84b-5e7b-4cc0-994e-31f7cbc91710",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "475ff650-7827-4cb2-bcf8-24a12596015d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d8b7dff1-eb9a-474a-9d12-a0852a4b0ee3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c977b74d-b330-4c55-a091-a323d2085d26",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f1bf3544-9db5-42cd-9d7f-6df64677b97f"
                    }
                  }
                ]
              },
              {
                "id": "9ac97da5-3916-46df-828c-a31e9332b4a1",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2e80855a-6a5e-4bb9-bf8d-bc7f4b308480",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "96a953e9-41d3-4661-9bdf-bc3815626741"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4c06732f-294f-4437-ad34-00e023ab0f32",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0ea5eb70-98c4-4756-9e36-7715df62e594"
                    }
                  }
                ]
              },
              {
                "id": "7acfa738-87ff-421a-b35e-90aecd082197",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0bcf43d3-0aff-40a8-ac96-68a76b5025b7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6e6efad2-cded-4570-be0d-a0462e17c73d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1356ac36-024e-4ec0-8a43-82225110265c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "349f7024-4d09-43c0-9297-2b5fc5eaf594"
                    }
                  }
                ]
              },
              {
                "id": "c6fc9ad0-a9ed-4aa6-b5ff-6c42dff9c6d5",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "158bde3c-60b5-4a39-a86c-e09702c78ca9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fa301d32-c781-4b42-9553-d7c27b7868cb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d7d7f637-8fac-4e37-90a9-16e3864ef044",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "19b57af5-97cd-4760-9cd2-be1325eeeca1"
                    }
                  }
                ]
              },
              {
                "id": "cbd17bfe-3968-47a8-86f9-a44253b51aa2",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "879d5a5d-9d9c-4e33-94c7-f477f46abd4f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e4281bcd-d08a-4a42-91da-cb7a77fdf067"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "68e13a8a-3802-4433-a84b-8b1d80ebff49",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d4812356-7f10-4b12-ae1e-1bfdc7bebb84"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "17dfa1ef-f4b8-4198-a601-40c72e264996",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4d17d7e8-e1ff-4c92-b7bd-d482b8eec314"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6e892967-6d9c-4d95-bdb6-3065afd9874d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f9914441-834d-4b08-9deb-9f25942a60ab"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "45f6adee-3bf1-4247-a8b2-6b2ae03e5dea",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "d0ba2d87-1f0d-4647-a83f-b1e07a53511d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e37aac5d-747c-42d6-bc75-22d40baf4571",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "18ada3b5-9bfc-4a57-9ccf-efc0e757276b"
            }
          }
        ]
      },
      {
        "id": "8c2b11cc-fcc1-4bb8-be08-d6b71583c028",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "dcf2d15f-84a4-4001-b569-827859fc4a4d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a7bca656-9daf-4013-a8e5-ffb4642c1af0",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4ecb1ad9-c231-4ffa-99f3-3cb714e7594f",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4e934e6-b3b2-4bb2-81a6-b997ab3f4997",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78c4910c-bb18-484c-957d-bfa49ab83ae1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bf5b7e5-e365-45b6-8257-bc482001b64f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd3b4c69-c73e-48b1-9b4c-4802ac422347"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6b27c1e-b1c5-4dad-95ac-1af17cdcc062",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "648f39fa-e2d5-4807-a76a-78dc2650045f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ead69e9-332d-4122-a317-bb4bdaba79be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "196aa15a-944f-4176-a1bd-67b470e40f59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d66ee827-9adf-45a8-aeec-8b51c2a7c793"
                        }
                      }
                    ]
                  },
                  {
                    "id": "400d4f45-066c-4521-bf4d-6a571b9b1680",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8379956-be18-4b73-9ce0-4a152aa57a8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9060e776-3623-45b6-8926-838d28ee74c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf5bd451-ffb8-47bb-aff0-b95d68475b85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd22a386-8319-4b4c-a7ff-ba23674864c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db331aef-f3f9-4bb6-81cf-1fb512d99c9f",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3804856-0c38-4e87-b1e9-95870e5a686e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89b65d30-c4de-48d0-a38a-d4b5bdf68b40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7f2a6b1-b486-4980-9f36-3480acc1b87e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c37cb226-ad04-41e6-b9ce-0c82ff25498a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4da174f3-c8f3-43c4-9464-22d78eb2cf87",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aa4e1f0-1f94-4d4b-ae06-f503b158af4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dad12f8b-3e98-4d17-976e-b396d2172fd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "130b5eef-7873-4584-94e8-4fe018562336",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "312d39b9-089e-4dd5-8131-62630df8c9fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb57c2b4-37ff-4a96-b46c-5e9613068a05",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b5efaaa-f147-451c-acf8-79c7d0393622",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8deae265-00ac-4ad7-bc81-03fcf466c02e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f86b41d2-3925-4de6-a9bf-e7f27ede64a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dbdcb4ce-14ed-423f-885b-fd0a5b20a129"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb030802-bf58-48c4-9909-8f412be70399",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f033a9ea-a651-427e-a0cc-96d1b7ebdb60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68eaa0be-ac32-41d7-b17a-c44c5e9fa021"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34015fed-f1a8-42e4-b45a-41059eeb3abe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "742e3b1c-1ac3-42b1-b4cc-4664891aa1e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5174e6e0-5d9f-4077-b9af-48f2e6b9c75a",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "086fb360-d6db-44d1-971e-b1302f385bc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "919232b0-651b-4deb-9de3-356a941d2685"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ebdc47b-dc76-4608-84f7-3e7d135c8a17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "94915fb4-198d-4ec8-901c-5ee402f93266"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60c10c3d-8f41-4da5-8e54-e28e998eb7d5",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16a06fbc-f116-4afe-8cf1-093f4975d802",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de9cbf97-6c15-4f26-a173-3ffd17ef468c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12bb5446-875f-4b3a-8eac-ebeb64c0aa4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9925eedc-4f1b-4f65-b8e7-800c0b33e75c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68b95f2f-a0c3-40e3-a326-bcd7a28db71c",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d1ea494-b1e9-4d1f-9990-727e94133077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09091d87-04d5-4bcc-bbf6-9dbf8e0dd1e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f7cb9de-1c5e-43b5-a892-db63b404189a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "48ff0203-e0b3-48cf-965b-2f5efb60ba13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86664e3d-67b2-4a5f-9483-b2b8291661ee",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd6af97d-a211-418e-b776-1afcc513ee15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcfed842-bdbe-477d-8fdd-66429eaa05a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e7a1036-afe8-4055-b980-fd096f20437f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "88ca4ff0-4422-46a9-a161-1f8f0f43d469"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af61e906-282b-4c90-9d08-9b9a20fd99e2",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c99fe9b7-e3df-4fb8-88ef-f60569f5e3f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09efeb0f-1fed-4f06-a1b1-8cc91b130c5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dfa3060-697f-43a2-8648-5a36cc7e80ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ab6b22c7-10ac-4e1b-9de4-4392ad01b558"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47a00744-3707-4f7b-9975-b3eb95cf7fcd",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6a7be6a-17bf-4738-964d-2afe5baf484f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb7e16d9-2dd8-4f31-a30d-6c0f2d7c444a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f44dd4fa-7ad9-453a-bdde-3d79c7fc3884",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5d87dbf-c6a0-41ce-a6fa-9a2f94cd1e02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "929d088a-c264-48cf-aad8-a4e58ec3bff4",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c9d0452-41dc-488b-917c-e6aae6c06a24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c968edf-884b-4d74-815c-d63500d1f91f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89d4c3ee-6a1a-4f1f-8b98-d0587ac95eee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d1e6878-345d-47fb-b1c0-079363b605e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9efb90fa-4b84-4aa1-803c-baaeedbdc106",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e0c5247-2005-4446-a40e-889507cddc3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a56d2b3-81f5-4e0d-ad3f-3ec0241d508e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7ed81ac-00ff-40da-9c7d-edcfa5643382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "08705869-eaa0-47e1-9885-73ee85c285b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01d93e57-bdcb-4b5d-98b6-3faeaa78dc70",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c313e72f-0196-4ada-b674-393502e4ca3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34bf38df-084f-4b88-b2db-163b4040d81d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a120a00d-fa79-423f-91e0-82d53527cc1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c5cb64e-6b1b-4713-8f94-0b160f677114"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6e9dba2-90e0-4a7e-97c0-432f77a49b4c",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edffa9e7-dc6f-429a-a3ec-1e3fe5898f5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48771eac-5cb1-4890-8f10-f6d2070416e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82c30547-d731-4f15-b803-7a7a9cd936f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "266c9bb5-3a65-453c-b51f-9fa77ff18042"
                        }
                      }
                    ]
                  },
                  {
                    "id": "463a00e6-6b43-4091-8f8b-dda8da626f32",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f77ee7b-ceb8-4f4a-8471-b2f9dcc45333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3463bb9-0510-4a13-b171-f8bbf6aa53b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fabec3f3-1977-4ab2-babb-9b4e6584a8d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "68144fac-f1b7-4304-b888-7b315cd368d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd7df423-a68d-4be6-b999-572b8e703eb9",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df4541e1-ca95-4331-babb-0e4901d24d2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "325afad8-d773-4fbc-b9b5-db68f26c5f6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d30e82d3-8543-427c-94ba-99e2fb345947",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "299a84da-4099-4a83-ade0-7a55da0018ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99b3486d-b637-42fe-bbda-3b15ec457185",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2674cc13-1d02-4b48-ab54-5c2169877c12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "075309e4-4bb0-43c7-af7f-ccc0ababd519"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9bbf87f-4e73-4d0b-9fc8-713d5cc26d21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "30015c8f-ce1e-4efb-b5a0-b7b49511e14a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd0a46ca-edd1-49bf-b4f5-315e516af895",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfd0a3e2-ea65-4337-9185-a3cc62278b88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d50a1478-aff1-4ac2-874b-a49f90b418a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63269824-ca32-49b5-8fbf-07e5879f67f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0da271e-0f39-49cc-91a3-22d5a062d64e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "015bd10c-df8e-4873-9afb-099e6ad3da95",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21899ad5-3ae4-49c1-8cf1-b0f76700f073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa9ac098-e47c-468f-9019-e34a4162fde8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "855d8d1f-bd56-4821-9e07-e3e849e2a9b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2688fcc6-0564-4c96-978c-b32454d76d22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e73193a2-e0a5-4d7c-a7eb-86ae7cce68fc",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4284e48-f4b6-4842-9d97-8454149cacbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f84bae8-a69c-40c9-b615-bbbc4bcc561e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c563bbee-feee-4464-a522-e039e9da96e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "be2a815f-5400-4dd5-81e0-635974570665"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f813aae-420b-4506-8dba-87fe16063711",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca4ab717-6351-442f-8505-123a5d85cba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41df0e0c-24c4-460e-b523-883af5cd9e58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1d46020-5d75-4be7-9a4a-8d18a45dcc8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a57b063-daa8-4b71-90f4-8d0e10febea4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4a35a29-3314-45db-a8d9-f97427024444",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20393a35-742c-4342-80ba-5e5cc504042e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fdfb582-9cc7-489d-9c51-681ebad44a18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70ca422d-c2a4-4a97-a804-b5f03392c2e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4f10875-8f9d-43e2-b4c7-478e463ecc6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2382772e-6abd-4ef7-9284-de8c417096c1",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "141f05f3-9f63-4612-8d21-f90b9c9a6952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4671c677-7de1-4488-bb82-657b312e21e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a012299b-3837-43e6-a020-d43d5976d6e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd1dd994-6601-4a95-8c4e-c6d320c3d7a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fd88fc5-ed65-4eb3-b83d-80c70a36e5c0",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05388172-0227-42c4-bc23-f19eb515720e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1329365c-c623-4f80-80aa-9af52261fe95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "850a52dc-5026-4714-86d4-7d497bf1e110",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3718353-0812-467e-a8f0-3b80582fb457"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05e54c2e-fb9e-4e27-81ec-c71c67666fd0",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20c15da0-8d50-4878-9920-8361003c2196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07c391e1-2bbe-486e-9f14-568ab52c5486"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "202eb274-12b4-43ef-b7b1-b1ade57ad4a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9462e175-860f-4715-928b-a0e1e5b2cbf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5ac79a4-e9ed-473a-b276-26f8a34fa75a",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48a52596-76a4-4ec0-9e7d-71a0197c9a64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e2c860a-5636-4c1a-9d47-96e851b957ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fa1cd7c-c6e1-47bf-9c31-1e557372d408",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c7ffbeb-5d37-4738-ad7f-097b4508a672"
                        }
                      }
                    ]
                  },
                  {
                    "id": "468f329a-a48e-4722-a8e1-93190d4bacb3",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4effc8e-97c9-49cb-8fbb-555ee68b007d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "616fc4fa-81c4-4cca-9e16-261bea4153d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31dbe877-43e6-4672-86ab-b651301f71f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4756f0b1-3883-4b8a-bcb1-0bcbd64f1405"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2638ef32-0508-404d-a192-9db803045a6f",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9fc1e62-5143-49cc-8611-f7322d907c09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe9fd4a9-0c4b-43c8-91f2-2e46ce555253"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6e3af71-e51e-4c0d-84a0-c8b5d67503bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6289a8b4-2eaf-4ceb-b7ce-9c068e771a55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09715d50-b773-43b9-8dbb-43a087650796",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfae48c4-3de0-40e1-b209-af228a094f3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "233b6837-6638-4961-a9b1-db59247fe515"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e8de66e-14c2-40b4-9da6-eff0366c2acb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a63f38f-d917-4c00-b635-c991f75ee8b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8391f5d4-374b-486f-8647-b81df5c795cb",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc1a996d-805f-4034-a99e-90e4212f0123",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d142858-0e37-4cf7-9fbf-7dfb2bdca559"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf1f1b33-93fa-4a03-8d0c-788cc12c6cde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "45b0ab7d-98c1-4734-8d6a-20cdeed87adc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d832f25-1860-4636-9b8c-5060c70af78d",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c180fc79-4c19-41c3-9c45-34e476fa144e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "332da2ed-3f91-45c6-a973-b01a00557b87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c5a8c4d-2f32-4e6d-9821-0dd092a366a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "260f96fd-26cb-4a57-87b6-4942363e5f31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6778bac-1715-46c2-b161-e2e9801c7022",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51cb4b78-62c3-473b-8ff1-2bb47e767764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "934f2c0a-eace-4d41-a74e-11d61348598e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8abf1abe-3ad3-4ad8-9e12-fa11b645f648",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "52b4ff49-ad42-449d-b59d-e3c2645767a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ac193f7-ee30-4f20-9c58-d3f5db840ffa",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccb45818-30ac-4cd1-bb18-7b0cb478cb38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b331b39-94b5-4a10-a7e4-9d5dbcb07817"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd3b7156-7854-4c49-80f1-0d4991d33b33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4628621d-2326-421e-ad68-70910cb8b84a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcb45e43-e6c8-4c76-9c79-287e3e4c4456",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45404d46-5344-4785-99ee-d2da41370cd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fc08462-dea1-4c81-9b00-3111f8942794"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a1c2d0f-ab90-4c6e-adeb-8178c144b42b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "160bafd6-b573-4e05-942c-9d20548c69e5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "58c84444-15bf-4dda-9be8-3e605f84ba14",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1a9dc533-e5f0-41ae-9197-52fed4a3afff",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8222af9-3113-43c9-bc14-9ca7aaf38f5f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "7ca9960c-d658-4e1c-bcc4-e03483cb11d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "025b32da-f446-43aa-aada-f332927e8cfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5d67c2a2-fe98-4d84-a18f-b7207c012e5d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "48cad367-213e-498e-ba7e-c6a00c73398a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5ef3114c-35b1-4568-8bdb-b3c65075cb7f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "872100d5-9a90-4033-a23b-9c264b92b87a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "21a58e18-5514-4ff8-8517-4d8a16afe9d8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f20f469a-b6b7-4569-8565-e640f0eb0ae3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "003ff524-415b-40d3-9d84-64033834ee1f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "64857765-620f-4b88-ad47-87255452e43b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cccf5ad3-48c0-4b70-901f-91c420da4c2a"
            }
          }
        ]
      },
      {
        "id": "14e85882-118c-4ca8-8a78-a7234f254643",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "de546b36-0a0f-4629-923e-02c99a9ee2c1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b7c33db3-eefb-4c7d-bf1b-610698d792ba",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "37ab1f7c-28a2-4728-a2a1-d08b2787626a",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccd3b6b8-e011-45ac-92b4-58222b2e4d82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7639bf0-6929-4210-804d-383fe5faadcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5132c6fb-eeea-4bb0-ac8f-bd1bffa49411",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "470bd077-99cb-4a78-99e9-e3c78a834f5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ad6d2f2-96ca-4516-abae-d002416c22f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "983e2cd4-0277-4a19-8202-082a64dc8ca8",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3848c479-126e-4363-ac79-69c3baf3e029",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab513f1c-7b71-47eb-962e-136cbaf55ca1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8d025fe-6333-4c1c-b542-039cc7afd5f8",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "685038db-716c-4b54-93e4-4d24fa30157e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48b62436-a251-4693-a0a4-ec65ca5edcef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4cc71e7-0d21-40ca-85c4-0e9f90ae266c",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8a6cd0c-f7c2-4fc0-bff5-b39e9f967c94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9baf1deb-9f5e-416a-883c-728fe8c5798e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c75e502-07b6-461c-9cf0-d39481a7dc94",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a973042-5e0e-42d9-9fef-02c76e0018ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50044b9e-b5e1-46a0-9acf-36a1627e6405"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d54d7a9f-e4ba-4292-a875-f55661e8e9c1",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49ce682e-9bee-4e11-bc9f-e19fac6a5aa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0f28270-4c4c-4efb-9387-2eb4816dc4c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbaa4552-00c3-45a4-a8b5-e6576f3eba4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50abcce2-d132-4a4b-b719-f4671a0e73d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "667e0487-657f-48c8-8b57-e4514a63f6de",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c1a93d6-763e-4c6c-88b7-f11ea7ec4d9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16559881-8c51-427a-bdfe-9655f8e6a97e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "331968af-7d34-43ea-995b-2b99855b412e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a98b3f89-9553-4ae2-85ff-cbaaa0baa3e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f3fd8ec-2770-460a-81f9-da06b493647d",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68bf18cc-498b-4c88-9d33-254d9bc004c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ded9fec1-5f69-4430-91eb-5b7d349ebf5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5b0f460-432b-4a70-a38e-7a4f5f65d898",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13812d0d-e27d-41f7-89e4-b8495e177cd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f10fd903-0ff3-468e-8aba-113de1c8277e",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1f77d21-d22c-4d32-96a5-34ef3abe4660",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7bf5cd30-67d9-48e4-b25b-fc34c3214a68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1756f15-949d-4cb2-b0c2-20a0e03e953a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "503eafa7-7ce4-4479-81f7-2d50bd981f89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2435a3f-05d3-46c5-9891-faefbf328f51",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf07b2f0-0aeb-49b4-9259-f2bf9a797a75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b801dca-ed69-4231-bd36-5bf4a7f741ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "328f84f9-7501-4d7e-94b8-f5416c58da22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6770fcca-204b-44c6-976f-fd0088463baf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3606fdc1-7128-4751-bbdd-1a6f3e402565",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8043a393-0e46-4219-98c1-64bc241625d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2b81c55-33b5-48ce-8856-62607fdc7429"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7989d83-8c8a-4783-8310-e19ce90d36d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9258ed6-03d8-4317-871e-f80e24bc48a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03a92e74-ca2a-44c9-a0b0-e7aac6d8890a",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94583611-01d3-4646-a87a-3e58eb28887e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d68c7b1e-92e3-41a2-bca5-a20161a7de78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3daf6f78-91ee-4a6a-a603-685c9c517c3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fb80a56-83a4-4456-9975-2a4df7e2189a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db115bad-2c02-4479-95d4-28134e729884",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0a1ae64-05c5-4a16-b2c2-80493c0002a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c046a94-60ae-4db4-8334-4164ecb92ddc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1d52922-3d0f-4738-a857-bdc5ff0e201b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a9b04e8-1ae6-4c22-b084-cfa2fa6e280c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50ff0e20-83f0-4ca3-8aed-5c7235b483bd",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d560f6f4-4df0-433b-aa38-b945a6c6c8b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb9808aa-a4ad-4a40-b0a3-26ae95d38378"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdb473da-1b72-47e7-a5d0-4da09a05870f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4474b321-65e8-4bc1-b9e7-7c9a9edfc22c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4731a827-ad54-49d1-8d5f-e412ad0d6ec9",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82036218-007b-480e-bfc0-e995aaa62b1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3cf41505-f90e-48f7-b6c8-3b38ac68c413"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "383795d4-aaaf-49a0-956f-994e73b93dc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9d56b64-b77b-4073-964a-5470dfe2dfc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34634c37-04d1-490a-8b9f-0d9f680062d7",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ccfabb4-0c0c-40ee-adf6-586b32c2cf14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "165c6513-947f-440a-b8fb-83c8a9448d66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "391c4e64-8526-4640-b7a2-e115f0c8cc5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5e2fc20-4c79-4640-a067-133cb7b31996"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06adf260-82c4-41ee-b858-a57d8802a3e6",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06670157-6aaa-4186-9324-4489f6d0fcd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe7aea68-2cfa-440f-815a-3a637c23f2a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90a9d709-8b4b-413d-b807-90e069e703f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47e3d173-b57a-4cbb-b76d-35c7587cf110"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc3237f3-3adb-4a1c-a955-5ea6334e9803",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "869fd2c3-59e8-4106-9ac2-f30a27f22b77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e3bedd1-a642-41c9-bdd5-9f6591c3acc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c839492b-3bd3-4666-8070-f603c8599c60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5da096ec-4a38-46ca-bbdc-73b62ce8fa70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42ba9004-5ed7-4223-aae2-8c4f7ac58e2a",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a14f5ab-c848-4942-81f1-92e225de169b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0073844-f70c-4310-9590-ee7a213bad1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb74b21c-df7c-4d80-8e89-d44ef595aa4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7099637-c378-4b02-8a64-1f415a04adce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d8665ae-f269-42e0-928e-fe47baf44372",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9495b53-fde7-4d30-83be-1092fc7f696b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e2f749f-bffb-40fc-a9eb-2d8c870e77d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edfd7118-7b75-4a2d-85df-a773f5aa473a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ab5fbe2-542f-437d-a5f4-92d24fff7935"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c79617f-bdb6-4396-b1db-b513f0a9c22c",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd3775d5-4cbd-4134-8607-390596d3c258",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49a5450c-a2da-4e3b-8038-ad0b6a3ca453"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8b27821-c3b4-4567-921c-07845658081f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7538e82-b336-4ad9-990f-8f428bb228c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2ed730a-10f8-413d-9eab-d291cbaf4f24",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7964454-1193-4004-9b50-1a5c49c9f5b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20630b2b-7fde-4f51-822a-b5a9ac9bc695"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "148bad5c-4df3-4b46-8741-bb5d0a8770f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3faf7a7d-fe1d-4e5f-9ebb-bbc7db99e3cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb324115-893b-4d4d-a050-8716da19e07e",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9dc0850-8ce7-4039-8f5a-3a4e26f80a17",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45fa1d4b-338b-423d-b727-e1c207de8b8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bb58cb2-5924-49f9-85be-bcfe4f4505d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90ec7621-cd4a-4014-909e-bda8b3e033c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77fd86ae-d1b6-4340-b1ac-7605b34ba7c5",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72ff63b0-74d6-46c5-a40e-a3f29be07f2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c3b3530-909e-4fe5-8e05-b19346825021"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a80fb84-7ab4-403b-8b64-5474149405e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52716982-d608-4bbb-88fe-5dbf086a44bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6cffe9c-c1cc-4dfc-875a-149458819507",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58435a62-57fc-4fbd-b087-30a45bd68000",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c982e711-39ef-441f-9552-e17be2e2ca5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d8c821e-f6b5-4561-8313-03f3a22bc59a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2843cdc4-1df8-4d96-b5a7-b7d764f25f10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cf58465-58c3-47b5-bcaa-4e6e9731ba86",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16b532ef-d17f-43ff-ba1c-ab7341f3d299",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26d9a915-3301-4c06-98c8-38d9f8bfdbfd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a67caad-864b-4c84-9fea-2d4c4927177e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "509cbae2-ddee-4de1-8121-62312f9ba7f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78e5ca35-39c9-4e8d-8900-c2601cc83c3d",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01f94ff1-bc9c-40bb-9a0f-989010aede2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "981da1cc-b2b9-41e8-9f17-38d5e8780cac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0f29f65-9950-41e1-ada0-e92c738fd295",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d75db61d-0f38-4eaa-90b7-b0a44667e51e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec7bd1ad-7578-40f1-8f8c-629b823d9490",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3868d6be-9631-47e0-ba0b-66b1b381a657",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5352b2e3-3e0a-435d-8663-ff484b736772"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93eed6f0-80df-4f42-9c7c-bcdbd6cca5c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c839de6-b4ca-4a5e-9558-5f7d3fd1fc46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbabbbc0-1e3c-4e7b-9254-6be4751bbc0a",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1f27521-2ae0-4dfb-a788-fd207a1b9972",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a752ca9-637d-46d8-bc0a-051af34d36e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ad00615-cd7e-4149-b443-a62268843551",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f0fa445-4cbc-4c1b-8197-073a269a6fac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "551feb9b-3b16-47cd-8351-52206121bc89",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fb19605-63a6-42a5-9708-db6bf6bc2bfe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e21a81aa-1a14-4ae7-92a8-ff82af6158bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe1b0f29-5ae4-48fc-9556-ec052724c288",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7653135c-2986-4e38-94bb-66c21bcc0ec0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "366aa443-8fba-4eff-8909-ee92226ef001",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e92b3077-705f-453e-817f-07090b5c5a76",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d244247-d053-46f1-b057-f512d9b7dceb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08571995-4152-4a5f-9db3-ec156171135d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13ee4953-07c5-4f6f-9c42-054874b21eba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bd3fd0b-95a9-472e-bae7-005c3129d01f",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97db49c1-f5e5-4c7d-9fcd-6a18ff860f5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6774fb39-b817-429d-b788-f35ea5cb5315"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16a1c9d7-798c-4c9d-a7e9-e3a2009e50fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a2f1124-754c-4d1a-b5a7-9fe31785db76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ed25e8a-68ba-4abb-bdad-d47854d2e017",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1523ff9f-792d-4c34-a223-48048103dcbb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ead0527-5e48-4674-8f3c-6125f8b29fcb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12d496a9-1d97-452e-aa8f-0491af803d84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d956fab1-4f48-4b27-a968-1ce916eaec66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b6584f4-cc8b-4cb2-a91d-8af6b42e0464",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "398dee87-21a6-40e0-9bbe-0a4a40578a16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff408388-e5d3-4df0-94a6-837cd69a2b7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfa06c6a-f37a-44b3-9d4a-91e87aa0d98f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a36e1ba-207e-43c5-afc8-33965059bec1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc2a965a-0f18-4ae1-856b-cbd40cf3fe63",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72d57ce4-f3c6-4b22-b8ac-ea2b686d4dac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30d5ba91-d67b-4375-8987-d83e4be077da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db4bdc59-bd47-43af-85b6-a71699507b10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16fe7964-650f-47e1-aec4-2ae510204f8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84ab4523-6319-4414-852e-5bfbc12388cf",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33fc6e0a-c7ec-409a-8d8a-62795e3a4b18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d5c2dee-9c9a-45d4-a62e-04d189441c9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e376c31b-fc83-4c30-b2e5-c25b3cc1f2db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24fa30d1-665d-4cea-b298-a872d0e755e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d088eb08-b018-476a-b284-9dfb157473e5",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0758dc90-b769-4e1d-af6f-b608d7fba824",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b3b3a97-a614-45e1-94c0-b580cd387479"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ad33f84-3682-468f-89b2-123abf7fe96c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e95e4508-3ef2-4d1c-b20b-a7fff8adc44d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "743bc2a2-f404-4b87-bb14-63395f30611a",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e535120-5dad-4755-8d81-d7f47a955afe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03e7b447-23dd-411a-884e-383ade0c81c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78491d25-faad-4554-973a-4e4cf5fe9fd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3630e41-a781-4511-9274-3ed8097db75f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88bad31e-d70a-45a1-a5b0-735b17e54c9b",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59b8e6ad-50c9-47a7-97cc-5644d9156481",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c33ece9d-c0c3-4f26-af6e-9d1b46f2542e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dd57595-2486-49a1-8b4b-1b28291fe3a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "449f823d-7816-4272-9516-235a4766a6ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d34bf11-8331-4f52-9601-057c1cbdf24f",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d52ce10-4dde-443c-b571-2785f0992e03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5862137-0ba0-4d87-a9b1-3972f729bc90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9926df73-6600-4e6e-9931-471590b371ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c41a88a9-fa07-47da-8ecc-b0a90badced6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f127270-08e5-444c-b5f9-4302125bbd14",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "777fbab2-29c5-49c3-910c-87b26d6d229e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "381d7cb3-3d56-4a9e-9f17-1ec4933d3343"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfccca1f-615a-43d3-a1f9-157c99123adb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b3ff0b2-6d60-4175-8cc8-80595b4df101"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ebe1a77-dca1-4c8d-a826-a2b248aa52e5",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3497b312-766d-42fe-a487-fec32a23f9b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffcdceff-db62-4fb1-a241-8c8bbc467e56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e8b68de-54c5-42c8-a844-8f56ef474897",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ccd237f-c6be-4c8e-80cc-6a794f0dc94d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f7e146c-65db-40a8-b3d2-bcb48936cd0b",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c3d2f8c-b628-4aa3-920f-92d8738dc2cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d404e0a5-5012-4c88-9771-31c85fbe44cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e963ecf-aedb-424f-ad05-45dc0b52bee0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d871e07-c20f-48eb-b1a0-c1723beac3c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0ad6056-a93b-468c-99ae-dda967817e57",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e3436da-28fc-485f-8305-24c1e785367e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e0da52f-f596-4e08-b30a-69c2cff916f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7976ad4-69f5-4a96-a94a-02b4d8d0b632",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3421c14d-6544-42a9-b077-fec619ce4dc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e208f29-223e-4ef5-ae27-3c7a8764ff1b",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18820236-59a8-4092-bb32-73313a28cd24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c62f498-f3a6-4bd4-a1cf-c5ae2261cfce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4be81d7-7269-4d8f-ab8d-3bf62c54ac1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a05d953-3d7a-4926-912b-e9c72b12c9f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d963f91-c34f-4631-bf4b-733aa57cdd18",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb26eb0c-3a6a-494b-b42d-e8891f9ee187",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faa42d43-838a-4fbf-b4a0-0befe2751ee6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f848c820-2168-4e57-b7bb-1331293a8a1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6b6c590-5438-4b48-a82b-263d02f4c719"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5da2064f-14dd-4cef-abfc-9b343503408e",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1829942-b691-4dfb-b9d6-3d0c11c3bd2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e99ee776-dbe5-44e1-bdad-8c8b5f3133c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e39e3307-9356-4267-ac62-9df38b625882",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a60fc8e-a923-4eb7-96a8-d22bca12cea0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8828484-6c50-424f-9ce9-9309c4dd8cd8",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f62309e-445f-4e79-8a1b-60368a7592b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "854a95fb-8c0f-4809-9d77-53648e285538"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b49e52b3-676c-497d-9378-86f6a9a6e1cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a55e3f9-57d1-4e23-bb89-de861decbdbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "577568c4-caa5-4149-8c42-3dd65cd27b44",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7ac4ae9-3cf2-4037-9909-c95958cd79a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6a2e70a-2a83-424f-ab67-920704c83d4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d94ba27d-8d16-4931-9a99-ea86e36e8870",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87c1fdca-20a2-4cc4-911a-d0105f30ad5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5fda7ce-817d-4df9-857e-0f04fa302be3",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6c4a42a-5b13-47ab-9745-55cdcee10138",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "360f7a7e-e69e-4880-8e80-38547689d410"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6051a185-c74d-4e23-8175-84a19260bd70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91dda396-80f1-4937-a723-bd5cd76bd251"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e92c4812-3acd-411a-9f9a-f4684f49c4ee",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "705ddad4-a229-4b50-a94f-0d35493d1486",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2a45ea0-c110-471d-9126-967b3cccfc7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b55afb8-cd06-488f-8b16-fd34398c2130",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2000c65c-cdc1-4845-95a9-f9c8f6268f57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2207d634-a798-4ef6-b8a6-3dab2b9bc872",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8c9973d-1522-4579-8e55-42c67e1dd47c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ca7dea1-e7cc-4d78-b41c-00b34f378756"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9709a0c0-3fc3-4074-bd2a-0183223d7a7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99e87a97-96da-4182-9dd6-90bbf12a7d9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "093c823c-3a6e-4bea-bb09-71718686c39a",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b51483cb-1e24-4a3d-a9e8-ad1f6681892f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1454b367-a735-42ef-867d-9892549fad08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf8f280d-8238-4f26-9927-850f7aa5c1c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd8a9107-ea07-419e-8307-38a542d9bff1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19259ceb-3137-4bf3-ac18-0012e0cb8c13",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20b117a7-0872-4d40-a740-bbf64a4acffc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe12d180-7fa7-47da-b7ca-2f89a7007f11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d55315b4-f192-4baf-9ecc-20876568dfbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48c0c75f-ae19-49be-a4bd-a44a35bf2107"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8164a4ae-11b5-4b4f-868e-426c5db9670e",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7801fa94-fbb4-42ca-8260-bd93f96cb5ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2886d156-94dc-43d2-8ff7-b99ba3d38418"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99bbee63-7fbd-448d-81fa-438fa5052e77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73ed0cfd-34cb-4198-9e83-55a1a00be3e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eae65724-2354-4983-8df2-83316c3528fd",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e86240e-7296-4572-8876-f400d88addfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1961f48-e459-4e50-8958-1e2af29e20e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40b075d3-0aea-473f-b46c-09c8b5ed9c60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5563a4f-610b-45f7-890b-67c091211d85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bb978f9-c881-4b47-a901-b2c8e3f8585e",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab857135-dc57-4dd3-a2ec-c8dada00cc51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92b0b316-b8f9-4e4e-ba9f-9a741859a05a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7d5ec44-0a0c-4968-aa18-1d5532272227",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25e78dda-1518-4136-bd38-e63d56f53103"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38dc7efe-1638-4308-9504-bf0938e91426",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7db859ab-6c9e-4c5e-b01c-e075976cd3f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "798b8ebe-9e37-42d1-81d8-6d6befde5f34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9f0834e-7c39-470d-ad17-4ef88f820c53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bc016b3-da8b-432e-a53f-a4969ef68ecb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3110b59-7800-4665-8b65-46a1b9fe815e",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c01f5068-f8ee-4441-8ef4-48b33f2c1af6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaf3e42d-b24c-402f-93c0-3c86415173e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25b606ff-87f0-48a0-b1de-06a6718a06da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8aaed48-382b-42e3-9472-fa34cefb1767"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a3e0821-edd8-4a60-9a5b-d9f2a45b7045",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10caf832-193d-4e02-adf3-25b5603ed227",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9011d54-99e5-479f-b362-b6bc749a345e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aea4d68f-8da5-48ef-a1ea-6e215e5b550a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e97b67d-eba2-4681-8073-3e7216ad633e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ce8516f-90a1-447e-a99d-f705f7407432",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11e9af27-e793-4fad-b09b-b1197fc8995c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2245043a-1e1a-499b-b9f3-44d233b1a78a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7d13826-ddce-47f9-a754-5adce41707ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45d23fc7-ef0e-495a-a0d6-6e6465ee4930"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69edebe6-9319-4826-9278-16f44e648289",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49cb0851-c8a0-4a0d-a29d-89f0709f174a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fc7bb43-c99a-4a0c-b13a-06240c435a43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39b946dc-def5-473c-b743-2eabe9ec7201",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecbfefc0-c7f8-4906-a252-b113db69a89a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a217230e-a816-45d7-b6b6-fbdf59fd5117",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09415f0b-471e-4571-bf99-f82d35998476",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0995bd3-4532-4cad-9123-57cb5666604f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8265e25-3171-4c94-8711-6607c4df9af3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b1dd4eb-01e2-48d2-8689-1b12f25af0c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af90eeb3-8299-4f16-a4c5-80c304ff21c7",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75dfac79-b378-497f-b65d-ba2a7678b3ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aec7126c-9b48-47a1-9f3a-cc8be627e7ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "558456bb-85d4-4c60-aa20-33033abbe6ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdd2031a-8a59-4308-ae5b-c7455e9752c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5886ee92-5487-421c-b2e0-fd4861cfc09c",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fcf50c4-3301-4815-8f58-9a65893e4556",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f61ee59-ff73-4e62-8cf5-59f3039f34d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3b656c5-d95c-4190-bba8-5e35c6281d12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc694e1a-5261-4a27-bd85-a1be016fd0b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97295ad8-307f-4a4e-ab09-4f2046dea2f6",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2935030e-e273-4b63-90a0-b44d4476d610",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "541a7972-7b2e-4fec-9134-f1387f1202a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22d57150-5cb5-44ac-9af8-4033cd7a8b02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0734af7e-4c03-40fc-b594-182743308614"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b325f905-315a-4cd6-b436-ce7ad7529430",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3eaff17-e5e9-4e92-a1a5-154df9776b02",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85c3e9eb-d50f-43af-859f-d390ec06662e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15ad9b1f-d5ee-49d0-904d-a3ed6ea723ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03ebe54b-1496-4bd4-98b7-88bd9cca9574"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4e7fd0d-35ac-4955-9694-5463966b79fb",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7296b0c-3bf8-4ee4-b8ed-33d9f4324e8f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4cad71e-a0bc-426c-a185-c15d8b51442f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd44ce22-6403-41a5-8c49-bca707c1f976",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45a0c5cd-181d-4660-bad8-b402075b5f25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b96f74f5-4b49-498b-ae3f-5d6a52740df6",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf0ea516-ffce-4b04-8239-4e21ea97391f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6508e56d-6e46-4aac-ac2e-6642e047980b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86ac9078-23b1-4766-b2fa-4210f496e36b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9910ce84-63d4-4511-9983-65269838fa9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7a1eb04-c087-4809-8560-df1c7bdecdb0",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "534447b7-0cbb-4109-a815-cc9402dfb95f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b51bb22-2fd5-4b70-bf1c-0fc065c363fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7191b277-a9db-40bf-aa64-be52086104a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bdf35a8-1049-4541-874e-2f385f64d052"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dde28e6-4667-4a0b-9738-a3f22e6f80aa",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff1cb7ab-5a5f-4e20-8931-5028bbd5e1ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12c5392f-ea8b-46be-aa9c-6e4f24e34799"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02f6bce6-90ab-4c25-9116-b5134903ea5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f4dd33d-5848-4875-8849-8f16d76450ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3b542f1-d5bc-48ac-a545-c37795e50e18",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c9e4733-5415-49cf-9eb2-bfdd6fa02fb5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fbb839e6-8a25-4965-a31e-54896f70409a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c12bdb9c-15c4-4c3c-b49b-029cfe52e168",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b65a464-5d2c-4352-a52e-8f84482df49f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "850a4170-224d-422d-a2ff-20c412ea1eaa",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6e8ff50-dcf9-4c91-a3ef-6ef2b7b0caf3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8577ea2-f390-448a-aaf6-85235ceda356"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c88d420-9c21-4754-889e-449975eb7ec5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e657ca4-b66f-41ef-8214-eafccff58273"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4721cbf3-3878-4f5b-a67e-587f993ba3b4",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "219a6ad8-ebe4-4631-9a10-22a7b97cf462",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70276662-cd2e-4d13-b6fa-014c39971a49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "058bba9b-0a66-4403-a5ce-c517e9a4d8bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1de98afe-a96a-4ca3-a8f3-287575020dae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d34a9b4e-440a-49d5-b54e-f4b9a4fae902",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "168da4d6-7ba0-42fb-a660-6aec68dd5e01",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42e6dc16-b22b-488e-b2ea-f6725653da29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec67b1d1-baa8-4405-9d95-dda4d96fd8ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa0ae47c-7d17-4b85-b01d-07e87c4aafc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96531c8d-89ad-4d0c-a696-04d12075a2be",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b886552-5f26-4787-9db0-657f6510a1d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c6df818-481b-4d69-b92c-d013fa660e0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48bb4810-5eea-4089-b54a-0891ec92d6b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad9307c1-1fe1-4c74-94aa-e88ef630138a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5144b727-3bfa-4d17-b5a7-562f63add3b5",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "944d270b-fdc6-4588-978e-73cf51f6219a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b5c84c1-3120-40af-8fc1-bb8e9a581752"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee36bcc4-cd0d-4211-ac2e-422aa8e495fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3af9b5b9-47f3-43f7-816e-bd6f6cd265be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4614e748-246c-48bc-8bd6-7824525bb5c4",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8186c7cd-47a2-4c81-85b2-e26a4bb4075a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8f5d41c-9375-474e-bb80-ab0812d98cbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfb1a684-6c1d-4948-910b-76ec1378338c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "974c6fba-707c-4ae8-a0e7-1b0d663955ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14fb4497-3cee-4c15-a3a3-5a8c6dde3ab1",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0f2924c-dd53-43bc-8b45-e373ac039737",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce4a3aea-3b49-4b70-b4ae-198d522139cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a40dbe08-bba8-446d-afa0-993379b4f71d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e4722da-ef1a-4f66-920d-510f94e765d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8747e65-c3f7-4917-9e36-6bf37d039b1d",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f711e33-0dd3-4804-bff0-039e6c5799f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "777bf696-bc9d-4625-af51-ce1c4178622a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb13485f-49b1-40bb-a180-ac3734f24d90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f41e1a27-c232-40be-872c-fd0b0f8c1efc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02d772f9-8233-46dd-854e-9a6b6579d845",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1852e8fd-326e-4dfb-942b-0152f412dbb9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd2b26f3-5787-4da8-ad99-dbd308bb5b5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "577427c1-4aa8-4159-81fb-05595f3b0b95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd00b00f-ce35-48e3-8bd5-3c4f62f21393"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66bb134b-a9cb-4785-b253-5d38b7ab37ca",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52c95c76-21dd-4a06-a6f3-616441b53719",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c241e02-9dbf-4fe5-bf48-87125c68b9b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c5eb4e9-2ffe-41ea-853e-0204154a327e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd7a1c30-90fc-4b21-87eb-c61ddc51c1ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1645be1-2c4f-4d59-abab-bf2bc21fe567",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1afada4d-3887-44c4-8214-15ffdc7d3d56",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a30a7581-3e63-4898-8bbb-121dd48a1eca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ae31982-6a00-4e5e-b403-7fe641d689a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d5d79f9-7f07-43de-9167-e8991a6c83b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c9c4fee-c6ea-4b77-8af9-83c173b2f507",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "690dab96-9116-4d7c-a7db-2833767fdbc6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1676e8d-20e7-462b-8a5e-10a119b1ef9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4ca637f-d7ea-4b37-b2b4-d7d548e09370",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b9dc3c2-64fb-4c6c-86b5-c080e3810a86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d40eee1-0dbb-42ed-b65e-ccf241b42706",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4acdee01-db8d-4ce7-939a-5d2c6b4aea50",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef99d3ff-13cd-4302-85c2-e32f96e3ab40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56a70794-1517-405d-8fd8-886a8a2511e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "440400b4-04ec-47b5-b3cd-f106bfdcebd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "513f630c-91e7-412c-8986-69901d48b687",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57290e4c-106d-40d7-a9c4-0c7e978d062f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95a990d0-c1c6-4fbf-b190-ce9eb490c4c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05f90528-5465-44b9-89ea-af0d88967282",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0bccad0-d725-4e93-9abd-e0b932f5f539"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a690e44a-9521-4459-a3a0-39593a46321a",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b301418-09b2-4362-986c-ecc80bdde403",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed2fad9d-f9c1-46af-97c4-1b88b45aeb8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cfcf26d-5017-44ad-8dae-25b38b4785ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb9cd2ef-1232-4395-ab1d-7ff1198ba83d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de5342a6-4e59-449b-8283-4b47240a49f8",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ee50784-100d-4ece-8813-b0e7eaa4db79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb93a3a3-f9e8-4b23-a605-4c659485bb0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32144725-b67e-4a93-afd6-5552d361fe34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb298974-b777-4558-aa41-db5f735b1a14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82d34b5b-09bc-45bc-ba0d-571f74ee0e43",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c478f431-937f-4e19-aa12-66f731e4f961",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a060fc27-8bbf-4f8a-abbb-fc0c5b374976"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cbdb105-aea7-46b2-a2a9-2f03d650c0d5",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baaf263c-e647-4077-8084-cb879b15cdb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58fc0c69-5df9-4f85-b3c3-a1a0e7cfcf98",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f485bcd-5182-4f3b-802f-450f15cfc1b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3cd3671-7a47-4191-aa24-1545d14ea3b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bee9c99-bd1f-47f5-8ddd-d09f30239003",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f577822-c948-495b-8308-8a5d160b4361"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31e2c100-5de2-4203-8512-02f18b913084",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dfea687-c813-4d93-b5b1-5926b81b3e69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fffa3de6-cf75-4700-afc2-feef8bf8598d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd95f4ac-081c-49c7-9ecc-3e838ca19cdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "174747c7-04de-4919-912b-b67ebd903e40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcf7d33a-eda6-418c-aa52-b514677ee398",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bba1e74e-8c75-420e-a812-e5c4eea27257",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e51c1339-4046-459b-aeb9-e7a7b6ca5b30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fabdb8b-cd5a-48e6-92e3-c2471340747d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a2c9fef-1a79-4806-8cf9-abeb24d37abe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc060817-8740-4a19-b5ee-1776fbffa1be",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dea45eb2-7e1e-4ad2-bf49-aac252fbec29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c153b11-d1f7-4d61-8457-753e757c940b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec09760a-97a9-405d-84b1-42472384812c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1871e007-288b-4de1-a81c-c970a370e023"
                        }
                      }
                    ]
                  },
                  {
                    "id": "035e7bd6-bdca-4fbe-bbc6-1d7d6050de00",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81b9adad-63dc-40bd-9318-f76bb21ca3ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "937ba59c-4cb5-45b7-a30e-1da0de5c9cf0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5aaaa22-9e17-4e00-9bd1-460efa407daf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c4d1515-6d53-4616-bd65-b76f81ff2da4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f56ae5fa-52d2-4001-98fd-1e68a26bbcf5",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a426e3ef-3bec-4486-8c2a-2f0e803e5b5c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17c6a268-a27b-424b-8caf-3103a65b098d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36ab6c24-fee4-43db-9c4a-7f060c5c5963",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd347171-9e68-49f8-a29d-26c0979a58d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40dc82aa-96d3-4531-a4d2-823225e95ce5",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "745a4bac-f032-41a5-94af-c4e4553fe972",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf7afc35-f052-4063-8522-3e580fe474d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c337ba9-d480-453d-b485-897ad5951ac8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2a3b8ec-fdd1-4e2c-8569-fb55e89f5d4d"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e879f88d-1718-4698-bc63-80f1d9027ff9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e51a78d8-4827-477a-9fb8-141d069b6d96"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3b0783c6-0dd6-4999-b575-4447607fa75c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4847cda8-4976-432f-903a-73b86ebff7d5"
                    }
                  }
                ]
              },
              {
                "id": "a53fa6ca-d748-4aab-b5dd-750851eeb278",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "27f1ec3d-0db2-4a85-964f-411dbf1fb668",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dd82daa-b582-47fe-8527-82e172f18722",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "bbfc9860-d69d-4095-b36b-03432803f92c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e101337-686d-4efe-9834-09ac0a686ffa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a6475e4f-ee71-4210-8125-abc9c88b012b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e98361be-8d93-4086-9cc3-3922b9eb1c35",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1dd0c766-b61d-4565-bd53-2c19ba0169e3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b6e3eb83-e618-4c18-8625-8fa3b9e813bb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b6268039-b3ab-4854-85b4-58650a5dbefa"
                    }
                  }
                ]
              },
              {
                "id": "657f1d5b-5c83-431c-8015-931a238e6845",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "864840de-34b1-4125-bc4e-88a0cc83caca",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da756107-d98a-4dd6-8730-bd3ba19c773a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "49b4126e-9ac3-4c5f-a7aa-a4c82d3472e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f75cf4c3-004a-4244-a774-65736ea20c25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2382813-db0d-4597-a977-9e4591dad66a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "4b377b14-07eb-43cd-880d-f2b3055e4f2c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5ea7dd1a-0200-47ad-b8c7-f90e31ac19dd",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6fad0c5a-2307-4aeb-aea1-081c272ca0fe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "1bbee337-0b1d-46bf-b15c-2865d0ceb6d8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eed4f74c-212d-444f-b374-3ca9242d9ee7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0cf86fbb-0ae8-4b20-b1e5-890fe85bf3c4"
                    }
                  }
                ]
              },
              {
                "id": "6fd1c297-20a5-4bd5-811a-63ac35e33b96",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "73c9f65d-6f4c-4834-ae35-78f64d1d2677",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "6e9cca06-a638-4247-8d80-0a904f891809"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b3bc21fc-627f-431c-8bcd-e489b21bedfc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2f3890dc-7505-4b82-8955-d1620adbc554"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "97eaa545-e937-4916-9996-8301499a08dd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "24928a87-4978-4497-8a19-eac199b08edb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4e531e87-74d7-4ca2-802e-a4cc0a18d151",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2fd28998-1561-4729-bc8b-993ebb698ba4"
            }
          }
        ]
      },
      {
        "id": "82f840f5-bf33-4ace-b54e-f99ee1c0764f",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "77424d6d-2e53-4682-999a-571d2466b81d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6fa39a1d-8c05-436e-a4b0-0c0cc0d01d92",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "69ce6e2e-1dde-4358-9c60-fef1b6fd2a77",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34cfa92f-63c4-48b6-a29c-2b1a4702c9e0",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "3cca92d6-9f05-4e06-a3e7-b99edf729a24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4be5f436-c40f-41ea-99a3-0a4287218035",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fdfc5fb1-8a83-46e5-9a2e-cee4a97d5e6c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "45f9f29f-9329-4399-bcc2-c832aedf8b31",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "31061eb5-b4ce-43df-82fc-60cd63de904d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a2bf2bec-ff9c-46a8-879b-9dceeb668521",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2ee6be25-a0e1-467e-8556-2a489bac513f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f999a372-4a7a-4429-8019-21f130e6ebdb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "c4ba2704-c594-43b9-a976-3360dc1b519c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0826a36f-73d6-40cb-b7b4-2de0608cbfdb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c28fe89b-c04f-48a5-b714-4dd104ea6455"
            }
          }
        ]
      },
      {
        "id": "176eb66e-674d-4bc3-ba3e-6daef0de5783",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "0c50a84f-27b5-4512-bdc3-e4786d619e6a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "16ef7d05-5c38-47aa-a1d4-ca25cafd945e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "69850b50-909b-4246-88fb-eba952831b00",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a414d1d-13d9-454b-ae25-6dca8fa57c27",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ab4dbfc1-99d8-4f99-802f-2b7c1700995e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdb77783-cf65-41af-9664-80308e4dc67a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1d6c0c57-c8c7-47c0-96cd-48ee1e71eea4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "49478442-16e0-4d7b-93d0-313d0ce58579",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "899b78aa-b099-4297-8641-a236e6b65a90"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "def73138-92e8-4e35-aa87-6cf0a9c69ce5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3a7ed576-968f-42df-b8fe-25b1803e35ea"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "350f664b-1572-466e-a39c-af92477b058c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f51d7d8a-eaba-4851-a2ff-4ddeae701454"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e3e9048a-921c-4f96-b11d-9cbfe28b8a3b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "02612271-02e4-4c46-a7b9-fe7ba26de69b"
            }
          }
        ]
      },
      {
        "id": "992c5d3b-d648-4e59-a442-211faad65683",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "0ccd57c7-4eb2-4f0e-b7bd-55fd17e1e740",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3cad7c48-99b5-4d13-bb7d-6b58b38ae6c4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "536a03bb-91d7-4adc-a7ec-bcf5d7e46ebc",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40928b26-fda6-4959-ac89-8a46e5b2d382",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "08201429-bae0-4af7-895b-cc6b49394d3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "765d9b42-64bc-4811-a855-4c748a1fe3e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f34cbe89-19ef-4483-8223-e3877322782e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e323785b-281d-44c3-a356-8fa58e15fae1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c3557b23-274b-4f16-9413-2aa777d99999"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2e50f572-2cff-437d-9101-04c90d2903ad",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0d44d099-e821-4c5c-8b48-1a740a8d7f9f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "15242ac7-3ae8-4e63-af1f-1541605c18f9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "08f194b0-9334-4692-aa72-ffd861021d47"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5b1af0a3-b19c-4d27-9b52-82b393658663",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fc701fdb-75be-4d07-904f-d97f5cdd517e"
            }
          }
        ]
      },
      {
        "id": "6e2d6019-b2e6-4aba-8df9-c4f2ccefc322",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "40b73ffb-0c07-493d-867a-9ee0cb8880c5",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9ca35174-a166-4fe2-8551-40effa218cfe",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "872ba3c3-5f5c-48d2-8363-1b2c974255ee",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5af48d3d-092b-4c08-867e-9922f523d601",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0a07fb54-cc28-4924-ba08-a872356176dd",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 129.55158730158726,
      "responseMin": 7,
      "responseMax": 9000,
      "responseSd": 607.9608263583838,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1718757517801,
      "completed": 1718757558994
    },
    "executions": [
      {
        "id": "b8a6a39d-fa8c-4760-bee3-3aafef7a8f43",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "df4aacf7-b257-4b53-91bd-92d37decd196",
          "httpRequestId": "01014b0f-88c9-494a-b4cd-54aa50a4ae58"
        },
        "item": {
          "id": "b8a6a39d-fa8c-4760-bee3-3aafef7a8f43",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "7ae3a3e3-2983-415a-979e-93b38ef2cb1e",
          "status": "OK",
          "code": 200,
          "responseTime": 52,
          "responseSize": 0
        }
      },
      {
        "id": "11f32b98-3965-4f09-a481-6c5cd0fc3100",
        "cursor": {
          "ref": "54d77d1a-676b-4feb-8079-a4a74c33b990",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "bdc49efc-ce73-4a91-b33d-bfa5525e5ee1"
        },
        "item": {
          "id": "11f32b98-3965-4f09-a481-6c5cd0fc3100",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "f97a882e-d83d-4a23-aa23-17e00a896286",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "fea8b7f6-001e-48b2-901e-ac1750b6333d",
        "cursor": {
          "ref": "b202d75c-10bc-4fad-97a1-dfe340e76f2c",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "cbc0f2a2-f2d0-49f7-a297-c801e8cc7b23"
        },
        "item": {
          "id": "fea8b7f6-001e-48b2-901e-ac1750b6333d",
          "name": "did_json"
        },
        "response": {
          "id": "28cb3ea5-a1d0-45fc-85dc-9fb9b79371ed",
          "status": "OK",
          "code": 200,
          "responseTime": 379,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "560cc09e-c190-43e1-a67e-68f7fa5eb694",
        "cursor": {
          "ref": "9d0d6659-5dd6-498e-a55c-473773dfc22b",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "63d89fc4-f3d4-4faf-b593-953525548045"
        },
        "item": {
          "id": "560cc09e-c190-43e1-a67e-68f7fa5eb694",
          "name": "did:invalid"
        },
        "response": {
          "id": "b6088965-a681-46a5-a254-bfde51ce4f6d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 313,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "560cc09e-c190-43e1-a67e-68f7fa5eb694",
        "cursor": {
          "ref": "9d0d6659-5dd6-498e-a55c-473773dfc22b",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "63d89fc4-f3d4-4faf-b593-953525548045"
        },
        "item": {
          "id": "560cc09e-c190-43e1-a67e-68f7fa5eb694",
          "name": "did:invalid"
        },
        "response": {
          "id": "b6088965-a681-46a5-a254-bfde51ce4f6d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 313,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "008b563a-6f63-4678-bf8c-dbd67a46dc5f",
        "cursor": {
          "ref": "6743264e-c5f9-4468-ba54-5c6b272aac41",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "9b43c660-c1ec-4325-91b9-e3afb5480a40"
        },
        "item": {
          "id": "008b563a-6f63-4678-bf8c-dbd67a46dc5f",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "43dda610-70a3-460b-9254-87815b614474",
          "status": "Not Found",
          "code": 404,
          "responseTime": 97,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d092f48-7e6f-49cc-80c7-6e0ebdc903e4",
        "cursor": {
          "ref": "06467c4a-2178-42cd-bf44-ecc817410102",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "328fd6d3-3ca3-480c-b2ae-29bfc838a297"
        },
        "item": {
          "id": "3d092f48-7e6f-49cc-80c7-6e0ebdc903e4",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "4581c942-59a6-4fd3-8bd4-b484e15e7d28",
          "status": "Not Found",
          "code": 404,
          "responseTime": 62,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32ca25bf-edd4-41e5-ae79-b0c99532c133",
        "cursor": {
          "ref": "4d6a9c7e-abcb-4caf-9d01-c73b7d4d6382",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "f1713816-87cd-4fde-bed5-e7a2c9fd9ad3"
        },
        "item": {
          "id": "32ca25bf-edd4-41e5-ae79-b0c99532c133",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "788e41ea-2b7e-4780-8005-fa0ced1245ce",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ec622eb-4cc3-4970-ae66-34960e4527f2",
        "cursor": {
          "ref": "425169bc-e479-4f43-8819-702e12f32161",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "9e0c5191-8765-47eb-a464-54f01706a681"
        },
        "item": {
          "id": "7ec622eb-4cc3-4970-ae66-34960e4527f2",
          "name": "identifiers"
        },
        "response": {
          "id": "b7ff2abe-0730-4df7-8b8a-25df0a8b505f",
          "status": "OK",
          "code": 200,
          "responseTime": 68,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc7605cb-013a-4fb6-aa1a-d0c83efb9f8e",
        "cursor": {
          "ref": "a72382a2-4e5d-465c-8261-3d9847ea674d",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "5f781691-36f8-4c5f-b676-9ca993612917"
        },
        "item": {
          "id": "fc7605cb-013a-4fb6-aa1a-d0c83efb9f8e",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "556f8d82-c8ee-48af-a851-dd79068b7844",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fff313f-c8de-44b8-acf5-262d44b464c5",
        "cursor": {
          "ref": "b64a2b7b-59b9-491b-a0aa-4f5d1d0155ab",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "232b3b9b-ea7a-4f98-ab35-838334b00913"
        },
        "item": {
          "id": "7fff313f-c8de-44b8-acf5-262d44b464c5",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "70e2b512-9968-4125-9c8c-ae43b7ea34cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9f9fb66-0d49-481e-b47c-61eac2573836",
        "cursor": {
          "ref": "c5aed184-f7a0-49a6-9559-e54320f20a5f",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "2c42523f-4ae5-47d8-8714-214688624887"
        },
        "item": {
          "id": "d9f9fb66-0d49-481e-b47c-61eac2573836",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "cd724a71-6c1c-4365-9bc3-6069cc84c0d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0de4464e-90cd-4896-8bd2-feff5f8f0f7b",
        "cursor": {
          "ref": "2c57f2d5-f1a1-44e1-8f23-a2d5160deeb5",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "25ae1a26-4109-4ee5-ac86-91a7e1afa6a4"
        },
        "item": {
          "id": "0de4464e-90cd-4896-8bd2-feff5f8f0f7b",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "018a57c9-4266-4424-a38f-2b0de00b5626",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "077cb7a5-d93b-49cf-bfad-9aec2127ab0f",
        "cursor": {
          "ref": "fcebf78b-8b48-4932-a8ad-b78f2ee140eb",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "2658eb7f-25b5-4b48-9fae-362944683e5f"
        },
        "item": {
          "id": "077cb7a5-d93b-49cf-bfad-9aec2127ab0f",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "fcff3dae-82dc-43be-a305-8544ad153e6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9df5c0a4-c1bf-4f40-87e8-8a99fb1230cd",
        "cursor": {
          "ref": "7e0f316e-64a7-44ed-aaab-b336fa54f8d7",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "cec0b3dd-a90d-4efa-9494-38fbc4e08e33"
        },
        "item": {
          "id": "9df5c0a4-c1bf-4f40-87e8-8a99fb1230cd",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "f83121be-9ca2-47c6-bcff-fe1a4cfc126a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 113,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1b52073-57af-4f9c-9e0b-fa9528375449",
        "cursor": {
          "ref": "53d94649-45d4-42ab-b01e-fc17fd5ef261",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "72ccf69a-e5a6-45f5-88c3-b5e2b3bdbb4d"
        },
        "item": {
          "id": "d1b52073-57af-4f9c-9e0b-fa9528375449",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "297cf7f9-3682-4b6c-9acc-591723a3ef24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9f91dce-f4a9-41f9-abff-f520c8c8872f",
        "cursor": {
          "ref": "cbcd272c-90b3-4571-8578-a8d234e7370f",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "526c5235-bc53-46c3-b278-8ea7d3bb635e"
        },
        "item": {
          "id": "e9f91dce-f4a9-41f9-abff-f520c8c8872f",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "35a145b1-0192-4a22-b70d-82fc463be106",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f2e1875-05bb-421c-a5f1-dfcba7036bd3",
        "cursor": {
          "ref": "b229e7a9-07ce-4bf8-a6dd-c3760103a792",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "b906d45d-8ecd-4e42-9a8f-30d4e2a3ec97"
        },
        "item": {
          "id": "4f2e1875-05bb-421c-a5f1-dfcba7036bd3",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "c99165d2-a8a5-4f33-b3d5-08618e55a73a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2c22b6b-c62d-4bb0-b3fe-459c7884c180",
        "cursor": {
          "ref": "98067cee-8d02-40ec-ba64-fa852080a6df",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "e51fa2b6-ada6-42a0-a6f6-21bbfc1f8ed8"
        },
        "item": {
          "id": "d2c22b6b-c62d-4bb0-b3fe-459c7884c180",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "13c4e896-4b2b-4d01-8bd8-72a4c4c54c99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5adcae21-6d34-47e3-88ad-3893068f1469",
        "cursor": {
          "ref": "ac45da8d-355e-486b-9028-6cf3620a6dcb",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "357c959c-1a9b-41e1-84ba-3e6f61626627"
        },
        "item": {
          "id": "5adcae21-6d34-47e3-88ad-3893068f1469",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "91fb2bc6-446a-497e-8a55-81e19f485879",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c5c7277-11ba-4cd3-860d-6ebe362cb67f",
        "cursor": {
          "ref": "73397b8a-89a5-4aed-b0ec-95a8dedfd74a",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "168b1183-5b71-4b6d-a10e-7771df477fca"
        },
        "item": {
          "id": "9c5c7277-11ba-4cd3-860d-6ebe362cb67f",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "29d95661-a1b5-4825-b31e-5d67aacd0d26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d996b08a-b53f-4883-842a-ef734a370c98",
        "cursor": {
          "ref": "336260f6-932a-4c17-8373-7f23b1a4e375",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "4813810d-5dd5-4b8e-ab83-6ac0b880979a"
        },
        "item": {
          "id": "d996b08a-b53f-4883-842a-ef734a370c98",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "b9f571bb-4fa8-4afe-908b-fc606cfb0bf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e31a2190-0e52-476c-90fb-63b14346fff3",
        "cursor": {
          "ref": "967609f0-a599-4b8d-92b5-8992b47c58d2",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "ba6eafa2-b85a-448b-ba86-e2e1a5cf41f1"
        },
        "item": {
          "id": "e31a2190-0e52-476c-90fb-63b14346fff3",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "c4c4a1d5-3d2d-4efd-837c-aff3af546820",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b850620-ab96-4145-86fc-6c9d165e24f5",
        "cursor": {
          "ref": "4af2ec5c-07e9-4a56-846f-5c4d0147f80a",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "a108fd0e-2afc-447f-bb7e-183dca8b6982"
        },
        "item": {
          "id": "9b850620-ab96-4145-86fc-6c9d165e24f5",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "3a4f250c-1420-42c5-8081-25fedbaa47b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0d2d723-37c1-443b-abe1-13160afc9890",
        "cursor": {
          "ref": "6b63cb00-70ba-4674-94c7-4f5f055a0849",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "5796190e-c909-413f-bdb1-447d474cd034"
        },
        "item": {
          "id": "d0d2d723-37c1-443b-abe1-13160afc9890",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "3134a314-ed44-458c-8bf8-bea6d5c4d7c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "429c3b8f-53b6-40d1-9fd5-2ed472e633a7",
        "cursor": {
          "ref": "a872e8aa-f234-4a3c-936d-99236d2a68ef",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "f3d21c8d-a53d-4191-ad2a-7e9f4001c127"
        },
        "item": {
          "id": "429c3b8f-53b6-40d1-9fd5-2ed472e633a7",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "2ebf0133-5dd9-427d-a612-428426117c47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6352ec0-6c80-4d01-aa99-b2e5931eb853",
        "cursor": {
          "ref": "f047bb46-fb3d-42a9-8a4d-a40439283f90",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "4a56cf4d-23e1-4541-b647-5a4d801e5173"
        },
        "item": {
          "id": "d6352ec0-6c80-4d01-aa99-b2e5931eb853",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "af168766-1c16-4449-9cb5-8b6f45e1c8d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4840f14b-4604-4d94-a54d-e5266701cebf",
        "cursor": {
          "ref": "8e48a7c4-74a7-4c57-8679-8728045a243f",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "fbfd09a3-da53-4c13-b174-d17e502e47e0"
        },
        "item": {
          "id": "4840f14b-4604-4d94-a54d-e5266701cebf",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "9dad7f75-5bb8-417f-b2a8-660e45f273ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d52257a1-7bff-4ef2-80e5-991a38276dee",
        "cursor": {
          "ref": "a6b2a0e4-1009-4a98-8094-9a4dc14eeca3",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "c55434ec-e80c-4373-a193-b687d979eb57"
        },
        "item": {
          "id": "d52257a1-7bff-4ef2-80e5-991a38276dee",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "7d08f33f-f572-47c6-b88c-f367a5f7f1b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2dce9c1-6725-4839-a3f2-5295b7d41e94",
        "cursor": {
          "ref": "3b8121dc-b350-4a99-bea8-2610aba39213",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "4e04c942-1877-447b-9b06-3e972aba7009"
        },
        "item": {
          "id": "f2dce9c1-6725-4839-a3f2-5295b7d41e94",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "7e325ba4-7c92-48b6-8fef-f9c2c1f4af6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01e01db6-ccaf-4f5e-9935-cc3f9eca50a8",
        "cursor": {
          "ref": "78c6bd16-d6c2-47a0-ae5e-792fac9773c8",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "059642f2-cf96-4619-9894-d8ebaa7e33eb"
        },
        "item": {
          "id": "01e01db6-ccaf-4f5e-9935-cc3f9eca50a8",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "9ba37146-e2e9-4aa0-9f16-dc80afe8a985",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c0e6294-4c78-402c-a2e6-5aac9de26e89",
        "cursor": {
          "ref": "0b3620ad-fba2-4973-8afc-a077dbc73c2e",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "7648be3b-a569-4b61-b082-f19a04af311b"
        },
        "item": {
          "id": "9c0e6294-4c78-402c-a2e6-5aac9de26e89",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "4e2a2310-1c5f-4b9a-8351-6897ea8b8a1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7e443fd-0839-4ffd-bee0-dfdeb7545c56",
        "cursor": {
          "ref": "c71d99b0-1840-4bd4-85ad-c1cf16426d0b",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "e89ce7f0-557c-4ddf-bb04-3d60bdc6c829"
        },
        "item": {
          "id": "f7e443fd-0839-4ffd-bee0-dfdeb7545c56",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "0920d66e-e0b4-4621-8fb5-522954b21c9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfe5b6bf-7b7b-45e8-aff4-369c16f4a0f6",
        "cursor": {
          "ref": "5710daab-b3d2-4936-92f8-6e697018d0d5",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "080fe8f5-9767-4b4f-8c68-be53a807c9b5"
        },
        "item": {
          "id": "bfe5b6bf-7b7b-45e8-aff4-369c16f4a0f6",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "6762206e-d6b4-4099-8c41-fcd06e17fbd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9d91456-6642-4ce6-bbe4-adc2571e2cd5",
        "cursor": {
          "ref": "88e2f759-269a-42c2-bfad-18b2c1df004e",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "84744a68-d5ce-4122-aaae-5c639ff48bb0"
        },
        "item": {
          "id": "a9d91456-6642-4ce6-bbe4-adc2571e2cd5",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "bd732673-792e-40cd-97f8-a3a566cd9a7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "641e12d7-1f63-4f78-acdf-17276dfaaef7",
        "cursor": {
          "ref": "0ccb9843-9ce0-47ec-8ed1-1bfb901016f1",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "f84c8aa3-1aa5-4c86-b344-d6aad446bc85"
        },
        "item": {
          "id": "641e12d7-1f63-4f78-acdf-17276dfaaef7",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "b1b02c5d-81c8-4eb0-a6e6-101db2ddf5d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9bd8ab0-7e0b-4cca-b143-c3b06220bb09",
        "cursor": {
          "ref": "a21a9b9e-c59a-42de-9a76-527cdb988345",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "adc762a2-3e70-4fb8-a02c-9961b28831ea"
        },
        "item": {
          "id": "b9bd8ab0-7e0b-4cca-b143-c3b06220bb09",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "977497cb-23b8-40fd-90e5-f172bc02bed5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "453ff7a2-a03c-422c-995f-f368c36e2d87",
        "cursor": {
          "ref": "6e4af9bf-b5d9-417b-9ddd-dbd5632b537f",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "920b8f01-6a4e-4684-8627-5d1f7d2f3970"
        },
        "item": {
          "id": "453ff7a2-a03c-422c-995f-f368c36e2d87",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "637be1f6-0d64-4c35-b9d6-6e0513fae5ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51abdadc-4a15-4776-93f7-96c04bf37505",
        "cursor": {
          "ref": "9bd64553-9ae4-40d6-9b7a-92c0c6c117df",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "d7d2c81e-1da4-44fc-a7cd-08d0be02db31"
        },
        "item": {
          "id": "51abdadc-4a15-4776-93f7-96c04bf37505",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "5266899c-0d4e-45af-801e-6fdda687abab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "696f8fae-1a01-43df-9f08-cf74dce8d2f9",
        "cursor": {
          "ref": "4d06d57d-bdef-4a94-83df-7cd758a32cbf",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "ad00e4bc-59c4-479f-8be9-3e448f2d0287"
        },
        "item": {
          "id": "696f8fae-1a01-43df-9f08-cf74dce8d2f9",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "6c07b1c1-a672-4e04-9b07-5b88482db945",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14fff2c5-c856-4d4d-bdf3-6ee9acb50444",
        "cursor": {
          "ref": "8e1ab6e6-e27f-4834-bd96-7233e1c7b6a8",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "9ce16b15-de9c-4944-a866-56817c461413"
        },
        "item": {
          "id": "14fff2c5-c856-4d4d-bdf3-6ee9acb50444",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "4e3e90b8-ba5c-4150-9916-ccc224fcbdc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b6c2fcd-940e-41be-b188-40d2e28d441f",
        "cursor": {
          "ref": "f793e34c-a5bc-425b-b60c-1b9277fd8fb3",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "5fad1238-e08c-4e09-8611-ac703b6447a7"
        },
        "item": {
          "id": "5b6c2fcd-940e-41be-b188-40d2e28d441f",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "aaddd771-aafb-4341-a4ac-d6d348f22139",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31238e77-5c06-4a2e-813b-acc4b337d483",
        "cursor": {
          "ref": "d75a2650-0611-4887-b6ad-72cc0603f039",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "e02c9daf-b1f2-40d2-b3cf-e769b8c69887"
        },
        "item": {
          "id": "31238e77-5c06-4a2e-813b-acc4b337d483",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "93cf1eca-9270-4b2b-8d2b-e10387419d16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "212c55cd-7fa5-4c00-963b-c1775729242b",
        "cursor": {
          "ref": "1500e9fd-cf8a-4561-a185-1830aac8a236",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "6247a243-47ae-48b6-b557-442a2bc3583c"
        },
        "item": {
          "id": "212c55cd-7fa5-4c00-963b-c1775729242b",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "dd746246-4894-4dcf-8e98-b78ef83b033c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50aeb6e6-7b9e-4da9-9c83-5633028f5f2c",
        "cursor": {
          "ref": "02922bb2-5de0-4677-9806-624b18747710",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "94ee57b2-c91e-4865-8109-732ff002c4a1"
        },
        "item": {
          "id": "50aeb6e6-7b9e-4da9-9c83-5633028f5f2c",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "a2d58a18-db07-4101-bc0e-dfccc25242a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c66b0660-4f30-4c56-83fe-4ab93a38e54f",
        "cursor": {
          "ref": "acc90ca0-c74c-4f5b-bb75-216a59f0292b",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "ee7ffe4d-2228-42b3-94de-49892cbe7271"
        },
        "item": {
          "id": "c66b0660-4f30-4c56-83fe-4ab93a38e54f",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "41ed9067-79ab-4ad6-96c9-c6d6d7bc04fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84212ec9-ae6b-4899-94d7-0f47114ae018",
        "cursor": {
          "ref": "5b7baba6-d31a-4c7e-aa7b-04ea5dab5ccd",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "ab8a53b7-f5fb-4285-ad44-30498976ca46"
        },
        "item": {
          "id": "84212ec9-ae6b-4899-94d7-0f47114ae018",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "d56bb862-d3d6-4ece-9fb4-be3876866091",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b244df85-39aa-415f-b538-cbe94807375c",
        "cursor": {
          "ref": "80f983eb-3c8b-4fed-833e-1bb354777356",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "1d7e2f83-1542-4108-acd6-29b07c877216"
        },
        "item": {
          "id": "b244df85-39aa-415f-b538-cbe94807375c",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "273f94f1-53e4-4f90-a993-83cb757dca85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec001ac0-2c69-4457-9d71-503c5438492d",
        "cursor": {
          "ref": "31c1a6a9-1741-4a0c-aa2f-4e72d77cf3a9",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "4dee2c95-bc21-49fb-9a83-e0a4f207ef66"
        },
        "item": {
          "id": "ec001ac0-2c69-4457-9d71-503c5438492d",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "8f276510-8b60-4e3a-a0d8-c7c88b122130",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c18f4693-c5db-43ce-b059-50cf32e6fbe4",
        "cursor": {
          "ref": "4b92fda1-12a1-4364-bd4d-bab14192a54a",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "ba0b6ef4-42fb-4ef4-8392-eb6c9c114f74"
        },
        "item": {
          "id": "c18f4693-c5db-43ce-b059-50cf32e6fbe4",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "869e1725-9b95-477a-af3f-53af4c83bac0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71c7197b-2c07-453a-8d6e-c32846921e59",
        "cursor": {
          "ref": "b6422d79-8d37-4399-af4f-fc2bd441e0c9",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "445a6424-e090-405e-b11c-31ba9f331b91"
        },
        "item": {
          "id": "71c7197b-2c07-453a-8d6e-c32846921e59",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "791c51f0-0234-4b00-a219-97ba7538df59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4161bce-3a5a-46bb-a726-27bfdec49d66",
        "cursor": {
          "ref": "38307c76-1d0c-44de-93d6-00a6947e6629",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "33a09a63-9267-4078-be46-4ef6083af696"
        },
        "item": {
          "id": "a4161bce-3a5a-46bb-a726-27bfdec49d66",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "11900793-1483-40e7-9b35-28a2006c04ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97349cdd-fb76-40ce-b224-1e83c627f3d2",
        "cursor": {
          "ref": "e2a4a66a-35d7-477c-96d0-928a4a8f6ce7",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "d17a2a88-9887-461c-8a08-80014faf0c9e"
        },
        "item": {
          "id": "97349cdd-fb76-40ce-b224-1e83c627f3d2",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "1f35d77c-48c0-4dcc-aa05-6d414fb2d734",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b1c0f4d-a0e9-4685-945f-e4a80d9fc3df",
        "cursor": {
          "ref": "5939ab11-86a5-4f44-91b5-aafecbebfb9f",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "2fa9a61e-294d-434d-8b0a-1573c7023ee0"
        },
        "item": {
          "id": "7b1c0f4d-a0e9-4685-945f-e4a80d9fc3df",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "d3fdbf3b-472b-4fe8-bcb6-2a8816602e3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe01f8cd-619a-4466-b502-13502b6816a5",
        "cursor": {
          "ref": "67453677-19aa-4fb2-9e0b-1e3184c660b7",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "a93b2f01-cb50-4c0e-98d4-0874df240ba8"
        },
        "item": {
          "id": "fe01f8cd-619a-4466-b502-13502b6816a5",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "b2deb924-d6dd-4fed-be2e-cf35125a8f39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a94b32b-2b9a-46ad-a162-751ad5a0ec71",
        "cursor": {
          "ref": "e4bb4bc3-b93e-46fc-bde1-c7e64fee4fd0",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "6fb6dfa4-b271-4dda-a4f9-d44af73f136f"
        },
        "item": {
          "id": "8a94b32b-2b9a-46ad-a162-751ad5a0ec71",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "ef6605f2-4d51-46dd-a5ea-6893731c4646",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc571fe9-2e7a-4b7a-b790-3fd0e3668657",
        "cursor": {
          "ref": "e08cb129-c693-4b88-bd04-6afe741f3903",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "36fb6a70-3178-487f-aeb8-8ec4c04a59f1"
        },
        "item": {
          "id": "cc571fe9-2e7a-4b7a-b790-3fd0e3668657",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "35241a5c-5cbe-476f-b897-964c1c547200",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0a40c25-c4ac-4cff-92c2-80f7c60857a5",
        "cursor": {
          "ref": "802e69ef-f1e7-474a-82a2-bbf169d13505",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "747ba62b-faf0-463f-8eff-11e52c51422f"
        },
        "item": {
          "id": "c0a40c25-c4ac-4cff-92c2-80f7c60857a5",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "60aaa448-86b6-479d-9408-50330f5467a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b6b6e42-5f03-4216-a58b-4ce57e5d0e94",
        "cursor": {
          "ref": "6c45c1aa-2544-4e5e-b1aa-13a070a9b1bc",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "4e3980bf-5fe3-44ad-84cc-9d88cba9632c"
        },
        "item": {
          "id": "2b6b6e42-5f03-4216-a58b-4ce57e5d0e94",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "a0baf332-0b06-4f85-95fc-47f1e05da61d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf87446a-6fc6-44fa-89f1-744934224395",
        "cursor": {
          "ref": "a964071b-f2c4-4a6f-addd-c946d4f2d169",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "1b20c4f7-c319-4551-bee6-9ea9663d725d"
        },
        "item": {
          "id": "cf87446a-6fc6-44fa-89f1-744934224395",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "e47fed17-e3d2-4a3e-8baf-eed727fd851b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7364a7cc-bf99-4600-afc1-49e95d8b60a7",
        "cursor": {
          "ref": "77933df9-5dc3-466c-be7a-e980d8320f4f",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "5c0183f0-0f03-44d5-b2d8-1170dac7da14"
        },
        "item": {
          "id": "7364a7cc-bf99-4600-afc1-49e95d8b60a7",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "69b7f4bf-622b-4666-a27f-87c07fcf6b4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f347521-e813-4385-955c-cd28145d236a",
        "cursor": {
          "ref": "8a7be1db-070e-4cf8-b28f-ed320ff081c0",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "68e1f30b-dc2f-4c59-8353-194c53f87167"
        },
        "item": {
          "id": "6f347521-e813-4385-955c-cd28145d236a",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "8b2d0f04-480d-4d29-8b86-20a625339371",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "880e7f54-3a85-447a-bb4e-44743d5c2590",
        "cursor": {
          "ref": "0d24f145-b9b5-4563-a058-b933c9956a72",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "f3f4e157-fdde-4c2b-9170-ddce67d73d57"
        },
        "item": {
          "id": "880e7f54-3a85-447a-bb4e-44743d5c2590",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "f3ac7fdf-e608-4add-8396-e761abc5df18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2b9eafb-7dc2-4218-a0f4-321e2c48e498",
        "cursor": {
          "ref": "b45ae6e8-a9f6-48ab-a18a-118e3c3ecfb0",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "6af64320-175e-4792-a1e2-7ae99497ed95"
        },
        "item": {
          "id": "b2b9eafb-7dc2-4218-a0f4-321e2c48e498",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "028737ce-9691-4ed4-bf29-0abdbdbd8c97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f8b0522-4a87-4593-983b-61345548ebd2",
        "cursor": {
          "ref": "d284454d-3072-4a10-8894-164cf0b4e83c",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "665dc843-61de-4924-8baf-904be01d44c5"
        },
        "item": {
          "id": "9f8b0522-4a87-4593-983b-61345548ebd2",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "a2d5979f-1f3c-4882-9c59-75623fdc582c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5989d36f-4b02-48e4-92d5-53303b0a3d3b",
        "cursor": {
          "ref": "cc12ba08-4df1-4919-ac22-ef3b8cebafc1",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "e25a53d1-2b88-4328-bb21-60c59bcee3a1"
        },
        "item": {
          "id": "5989d36f-4b02-48e4-92d5-53303b0a3d3b",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "a752a4d1-a369-43ca-a6cf-d61f358f32de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c032f59-a6e9-480c-87e2-2ba0d1aee499",
        "cursor": {
          "ref": "a3f4f42d-a7ee-40a2-83a6-438fc3936785",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "6d18dd76-f3b3-4223-b4c9-cd3caa76dd7a"
        },
        "item": {
          "id": "5c032f59-a6e9-480c-87e2-2ba0d1aee499",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "83a81eaf-9b8e-4633-ba4b-783c8d91b20e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e28b8865-d985-42cd-b0cf-6bcfb12df806",
        "cursor": {
          "ref": "ac59fed0-183f-4864-a086-10908b4948df",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "6cffedf8-ffd8-44ed-a279-cc773a4b7458"
        },
        "item": {
          "id": "e28b8865-d985-42cd-b0cf-6bcfb12df806",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "cf403577-7935-436c-b365-5c2aba508408",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22c94eda-4ace-4657-9581-44da25488872",
        "cursor": {
          "ref": "4ffd6c09-e903-4863-9977-03194fe0869c",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "0a755206-8b03-441a-ac48-371bf72e016f"
        },
        "item": {
          "id": "22c94eda-4ace-4657-9581-44da25488872",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "3eac6582-ce0f-4cc6-b8f0-6f15f352b904",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8a98655-ea79-4edd-b49d-14eb0365b986",
        "cursor": {
          "ref": "e79e25f8-2233-4a11-b621-e300b594a913",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "45598765-8644-4e3f-92a4-8116fe77c28b"
        },
        "item": {
          "id": "b8a98655-ea79-4edd-b49d-14eb0365b986",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "26fdf62c-0c2f-4d22-b553-81a28b594ad8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 118,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8604ce28-93c3-4c16-955f-46937673f20e",
        "cursor": {
          "ref": "75904dea-3ac9-479e-85b8-ac4ff56de280",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "9c5a9c72-4c04-4946-b8e4-9d2eb7596b3a"
        },
        "item": {
          "id": "8604ce28-93c3-4c16-955f-46937673f20e",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "dfcd6585-796b-44a9-a007-e06728cc9c63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61a75dba-ab96-4f2c-8f66-b5294d4c204d",
        "cursor": {
          "ref": "4f26b349-fdd4-4f66-86fe-26b5e1ea825d",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "6d6b747f-5a9a-4777-afa3-2d5ad664e8b8"
        },
        "item": {
          "id": "61a75dba-ab96-4f2c-8f66-b5294d4c204d",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "972984f3-d705-4f5e-860a-5cae050e3c7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ba76163-9b65-4bda-9ae5-efe1841f0062",
        "cursor": {
          "ref": "9ed25d0f-4f40-4703-a2bd-73b9515ad41d",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "12ef8768-2048-4e47-8bac-930845fc9899"
        },
        "item": {
          "id": "8ba76163-9b65-4bda-9ae5-efe1841f0062",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "719144db-2ba2-4667-a75e-8c427effb2a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57c00af3-e770-4850-aadc-c88d133258b2",
        "cursor": {
          "ref": "d90d3507-6994-4385-9594-721bcf91b908",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "42e3a9cb-f085-4a7e-be32-b871092e998d"
        },
        "item": {
          "id": "57c00af3-e770-4850-aadc-c88d133258b2",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "e1e4608a-62c6-40dc-9017-15f1466a342e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03224784-e0cb-41b7-a045-a3aa103a4c84",
        "cursor": {
          "ref": "8a549735-ea04-42ac-a901-2c0f48c7418e",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "7b76c033-5697-4358-8b11-2fc277ac1035"
        },
        "item": {
          "id": "03224784-e0cb-41b7-a045-a3aa103a4c84",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "8a302d4f-1fce-4734-8bf5-417cd2cfb293",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d880b4b-bdaa-4a01-8e89-32afdb359c5f",
        "cursor": {
          "ref": "815378df-0a2d-46c3-a770-db297e52c59f",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "73b89ece-23ea-49d7-b967-8feda242ec41"
        },
        "item": {
          "id": "4d880b4b-bdaa-4a01-8e89-32afdb359c5f",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "3f3d6732-b5fa-4c2a-99b8-db605c60799b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aa9d09b-30f7-46e6-95c5-8dbc83d5152b",
        "cursor": {
          "ref": "2c4a849a-31eb-475b-80bb-1e0872304b4c",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "82cd11b5-b8b5-43c8-bced-bb49dca78bb7"
        },
        "item": {
          "id": "1aa9d09b-30f7-46e6-95c5-8dbc83d5152b",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "48d8a785-3693-4d6a-bded-da6a33304953",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d621643-d7a7-49a3-8610-9ddaef75cfe0",
        "cursor": {
          "ref": "40739a2a-c4d8-407b-8625-0ec7768ee5d4",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "56495ce5-68b2-4efc-b776-a8c0af04b56a"
        },
        "item": {
          "id": "7d621643-d7a7-49a3-8610-9ddaef75cfe0",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "dcba6877-1f0a-45e7-aea7-61f4e7af8674",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2308c8d6-d5ef-47aa-b92e-476e76c8a0fe",
        "cursor": {
          "ref": "e682cbf5-f4b1-4ee7-a448-255252921c28",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "e2ba6bfa-2ad9-4b11-9f86-b4f5a745de2a"
        },
        "item": {
          "id": "2308c8d6-d5ef-47aa-b92e-476e76c8a0fe",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "1656a558-74ba-44b2-9f25-24bada8504a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16560c59-dd6d-4503-a6a2-827f5512942f",
        "cursor": {
          "ref": "80fa079f-68ef-4d1b-a005-3977131eb577",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "152d0374-5586-4af8-9e2c-4914328b6370"
        },
        "item": {
          "id": "16560c59-dd6d-4503-a6a2-827f5512942f",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "89110f80-2def-40b9-bbd6-d5baa859bbae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15261fdf-061d-41fa-b652-cb0949f3dab2",
        "cursor": {
          "ref": "3ce677e1-1870-4d14-aa0e-a49ed1a06a3d",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "06adbde7-7b66-4cf7-bfbe-0eeade90ae37"
        },
        "item": {
          "id": "15261fdf-061d-41fa-b652-cb0949f3dab2",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "5780f500-e606-4bb3-9bc4-5fa2e5ee189c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "719c6bfb-c95d-4374-a1c8-8d32c4609e60",
        "cursor": {
          "ref": "5fa0f44b-0974-4f0d-8f20-7ee60c86a982",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "6391f121-3a0d-4e78-b5fb-d8ae735dfaf1"
        },
        "item": {
          "id": "719c6bfb-c95d-4374-a1c8-8d32c4609e60",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "6148266b-5106-4860-8dc1-c6ea0df5abe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77c23b55-3a3d-40c4-84b1-07afd62507e5",
        "cursor": {
          "ref": "7b131ea3-aa2b-43f4-8a61-8cf05568fe7d",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "49f62cac-ca5c-4327-9e57-d944c4105327"
        },
        "item": {
          "id": "77c23b55-3a3d-40c4-84b1-07afd62507e5",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "60980b5d-2aed-4fd7-9e81-11f9dad3b5b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c22b069-16fa-4f31-8a27-179bf4c111a1",
        "cursor": {
          "ref": "e360442f-ff49-4fc6-ab2b-f80eea7c2413",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "c6d1b810-89c7-405a-a140-54a50c58e386"
        },
        "item": {
          "id": "9c22b069-16fa-4f31-8a27-179bf4c111a1",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "ef482f46-16ea-4e72-a313-f49cc7d2baa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c00273b9-ad1b-456b-a8ea-51a0dce9b564",
        "cursor": {
          "ref": "fa828786-cae4-4223-a515-d183105a99bc",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "6f25edbb-5999-4fe2-aa1d-89bfc5bdea4d"
        },
        "item": {
          "id": "c00273b9-ad1b-456b-a8ea-51a0dce9b564",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "0494fe03-ae42-40d3-b325-6005a6b2f0c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a71cb9a3-94c3-4ab3-bfc3-67c52add6797",
        "cursor": {
          "ref": "cf9f316c-39dc-44d4-b7c2-a8f0b11edc65",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "551a2f3f-f69d-4b00-9ace-b7ab2b3bce0b"
        },
        "item": {
          "id": "a71cb9a3-94c3-4ab3-bfc3-67c52add6797",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "4542c2d7-36f2-4452-871c-030b1bb25ca1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef314db7-67bf-4b38-a5c7-f72acb22e3a0",
        "cursor": {
          "ref": "ecb0902c-52bd-459d-a649-82d756f2e346",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "bf06155e-89f6-4653-93ad-5f487702b84c"
        },
        "item": {
          "id": "ef314db7-67bf-4b38-a5c7-f72acb22e3a0",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "eda789fd-4fbe-4d37-be7f-d955bd16f111",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd51002f-214c-410b-96ed-85528becaefa",
        "cursor": {
          "ref": "327c2092-a1c7-430d-a703-2a732e313631",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "22c6ee43-aade-4ba1-94b7-b056873c787d"
        },
        "item": {
          "id": "bd51002f-214c-410b-96ed-85528becaefa",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "8d41c421-6b59-4b24-a795-298854ff0ec4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c752f11-bffd-4572-8888-abbc3b3d8844",
        "cursor": {
          "ref": "dd3dc26c-9670-4bc1-b88c-f6f69b573d13",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "811b7090-7447-450d-8ec3-1bbcd5a8b12d"
        },
        "item": {
          "id": "9c752f11-bffd-4572-8888-abbc3b3d8844",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "7e091eaf-4fc4-45fc-8c6a-9667e8bff515",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5913ab46-5849-4996-90a9-b7d59ceaf348",
        "cursor": {
          "ref": "d59333ec-b6a7-4849-9528-2601c7b5e476",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "4604b873-e073-4b63-8148-63280274126d"
        },
        "item": {
          "id": "5913ab46-5849-4996-90a9-b7d59ceaf348",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "47158887-ebe0-4b25-8dee-5539a7d69b8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef43367b-3d4c-4692-9b06-0cd8a202d871",
        "cursor": {
          "ref": "46ea9db7-4e7e-4851-86ad-ed4bd97833c5",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "c73ca41a-a941-41e1-9ffe-6e6bc8081f84"
        },
        "item": {
          "id": "ef43367b-3d4c-4692-9b06-0cd8a202d871",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "dd10ec17-7e46-433e-bc96-72202d0ff301",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "583bd5ef-c91a-41ff-a7cc-e785888e18b6",
        "cursor": {
          "ref": "d32e7d1a-aad6-40b0-bbb8-14e311c8eabf",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "39794370-9bfa-49d9-aaab-22fc29bfaf03"
        },
        "item": {
          "id": "583bd5ef-c91a-41ff-a7cc-e785888e18b6",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "8bf9dfb6-75c9-4cb3-b0b0-91cfceb457d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8328e02-6247-4d5d-807d-39295138d25b",
        "cursor": {
          "ref": "0e6b1909-e79f-440e-aa4f-96011580c37c",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "bfce2375-ba52-4791-a6c1-fb5622a124f0"
        },
        "item": {
          "id": "a8328e02-6247-4d5d-807d-39295138d25b",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "02a670c0-86fd-46ae-87ca-6f81717c52bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21c8d5a3-21d2-4f4f-a508-e99dabf1eb51",
        "cursor": {
          "ref": "1264a81a-41ee-47bd-b5ee-54eff9379eda",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "104f0251-6a7e-4744-ba00-59d642033770"
        },
        "item": {
          "id": "21c8d5a3-21d2-4f4f-a508-e99dabf1eb51",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "28127c0e-36c2-427e-8c9c-5e50867650eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3b8b640-0a8b-4028-b781-36931e0c0145",
        "cursor": {
          "ref": "61228dff-e3a4-41df-b029-46c850b8a78f",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "76421b36-6df6-4b89-9ddd-5d8483cda117"
        },
        "item": {
          "id": "d3b8b640-0a8b-4028-b781-36931e0c0145",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "459528ab-573b-46ba-9d2a-0a14377d15e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19eeb614-d096-40be-92ee-c2a7ada62a60",
        "cursor": {
          "ref": "855a72ba-5a38-4288-b7d7-9ede4c1f0403",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "0e15e76c-08d7-406d-ab16-739b12f20310"
        },
        "item": {
          "id": "19eeb614-d096-40be-92ee-c2a7ada62a60",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "4ddf905a-4cfc-4d89-a238-131317287fda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 139,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dea56c2f-eb4c-4f73-97d4-9c9aaf9b9c11",
        "cursor": {
          "ref": "e9d1d4a7-e423-4d0e-b47d-8906f65581bd",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "c82f6771-b973-4341-9da6-5c07ca6a57d3"
        },
        "item": {
          "id": "dea56c2f-eb4c-4f73-97d4-9c9aaf9b9c11",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "b8aa44ed-77de-456d-ac78-ca498517b156",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 156,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c78a5e5-b3e5-48ce-bd6e-814732922368",
        "cursor": {
          "ref": "5de2a4dc-9479-4b5f-a147-0fa2d903749b",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "9126c810-1ba5-4d98-a949-6dd200bf71a9"
        },
        "item": {
          "id": "4c78a5e5-b3e5-48ce-bd6e-814732922368",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "d9423bd0-a0a3-479d-a198-6261acf63f42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77fcad85-1abe-40eb-a9f4-3da85166bdc9",
        "cursor": {
          "ref": "91758656-6696-4408-a06c-ee105e3aadda",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "f3663769-0ed7-470f-80be-1c8863764707"
        },
        "item": {
          "id": "77fcad85-1abe-40eb-a9f4-3da85166bdc9",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "a2bf17ce-4bec-4d6c-a6fc-2d0e266522ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fee239f-1960-4f7c-86d3-da87238a8446",
        "cursor": {
          "ref": "8ad857cf-695d-46ff-9210-a05a544c9238",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "bf60f390-da01-416f-ba8b-dab8e2a3e24d"
        },
        "item": {
          "id": "7fee239f-1960-4f7c-86d3-da87238a8446",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "98e1d4fe-b25e-40b4-82cd-3af7f1ceeeb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d1c9a58-96bc-4973-8636-067d98353320",
        "cursor": {
          "ref": "ea31e321-aac7-49c5-8c36-685bd33fbfee",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "b75e77f3-a7bf-4690-a0ec-98a9d25308fe"
        },
        "item": {
          "id": "3d1c9a58-96bc-4973-8636-067d98353320",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "0915ed54-9f7b-45be-8a5c-fe64e113ad9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7acb7b1-c644-4e8c-9877-490b4eff9b5b",
        "cursor": {
          "ref": "0a5ffcc2-14de-4a84-b89a-216d02502069",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "95f7a782-8f87-4974-867c-166cf5c99a30"
        },
        "item": {
          "id": "f7acb7b1-c644-4e8c-9877-490b4eff9b5b",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "ace0908b-6eb2-4dff-910c-669ac2320671",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ccfb433-82bd-4d5e-9935-1c937fd682ba",
        "cursor": {
          "ref": "3f4e4234-e199-4cc9-9989-efdd91ccf487",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "e81f94bc-bd32-4ba3-8511-a20cf9c117cd"
        },
        "item": {
          "id": "3ccfb433-82bd-4d5e-9935-1c937fd682ba",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "291ad81c-5273-417a-a1da-246b8f598a5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "413f5732-98d4-434f-aea7-c820f3e4a9c0",
        "cursor": {
          "ref": "b8f75497-a904-4bd4-a04f-a3e32ebe2813",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "a09a0482-9955-4b7a-b6a9-b17324b16f84"
        },
        "item": {
          "id": "413f5732-98d4-434f-aea7-c820f3e4a9c0",
          "name": "credentials_issue"
        },
        "response": {
          "id": "c0a5557f-5b9b-4499-875d-456ff3fbc36e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "3c5ce84b-5e7b-4cc0-994e-31f7cbc91710",
        "cursor": {
          "ref": "55a2b5a0-11cb-4230-a096-75fa4e9c357d",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "01d01666-3323-44bc-8b33-40459284197d"
        },
        "item": {
          "id": "3c5ce84b-5e7b-4cc0-994e-31f7cbc91710",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "1d69fc21-5673-487a-8277-051b0de47e77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "9ac97da5-3916-46df-828c-a31e9332b4a1",
        "cursor": {
          "ref": "5065cefa-1c5e-4a10-b039-fff6be6c702e",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "67c7f45c-95c0-46cc-84f2-9bda8ba44db0"
        },
        "item": {
          "id": "9ac97da5-3916-46df-828c-a31e9332b4a1",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "2c33c2d3-35ed-42ed-8b08-873aee0f83b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "7acfa738-87ff-421a-b35e-90aecd082197",
        "cursor": {
          "ref": "86c96894-2f29-4a45-b3d9-b0fba680e31e",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "1baa7f9a-921e-4b33-807a-00a074a230c2"
        },
        "item": {
          "id": "7acfa738-87ff-421a-b35e-90aecd082197",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "1ab09000-ce7e-4808-83e7-8dd416ca8bc8",
          "status": "Created",
          "code": 201,
          "responseTime": 9000,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6fc9ad0-a9ed-4aa6-b5ff-6c42dff9c6d5",
        "cursor": {
          "ref": "e7bc7158-3416-4502-bd81-4d97705f97ae",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "9db02af5-d459-4564-aa44-b6c684237113"
        },
        "item": {
          "id": "c6fc9ad0-a9ed-4aa6-b5ff-6c42dff9c6d5",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "e96beab4-a025-4100-8f84-f55f88a192e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 119,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "cbd17bfe-3968-47a8-86f9-a44253b51aa2",
        "cursor": {
          "ref": "6ead0f73-d512-4357-a6ff-e3d5909789d0",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "1578afdd-3e81-4446-96cb-6da048573972"
        },
        "item": {
          "id": "cbd17bfe-3968-47a8-86f9-a44253b51aa2",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "e20ab1d2-ddf5-4fac-ae29-b0d50bd4c083",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 118,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "4ecb1ad9-c231-4ffa-99f3-3cb714e7594f",
        "cursor": {
          "ref": "46c19428-f788-453f-9704-b1e4e3effbb3",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "fc7c743a-2f3b-43fc-8455-fd716ac893f2"
        },
        "item": {
          "id": "4ecb1ad9-c231-4ffa-99f3-3cb714e7594f",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "6b8d0273-5bf4-4855-80be-b3f947874cda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 109,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6b27c1e-b1c5-4dad-95ac-1af17cdcc062",
        "cursor": {
          "ref": "0c221477-a81e-4195-b142-3ec48d5e858f",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "e1cc1a38-86e5-4e33-ab7c-8330f492101a"
        },
        "item": {
          "id": "a6b27c1e-b1c5-4dad-95ac-1af17cdcc062",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "44eb3eb8-9d03-4e8f-b28d-427aa6b2d672",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "400d4f45-066c-4521-bf4d-6a571b9b1680",
        "cursor": {
          "ref": "d7bcf742-f582-4722-8fa2-c52ec9ec83c7",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "14f437ff-221d-4939-b96c-e354b56c9b13"
        },
        "item": {
          "id": "400d4f45-066c-4521-bf4d-6a571b9b1680",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "753cf394-d092-4acf-b274-85fd19925da8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 112,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db331aef-f3f9-4bb6-81cf-1fb512d99c9f",
        "cursor": {
          "ref": "ff8100a1-2520-47e2-a3d7-946c7c19d94b",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "d65d4ef0-17db-4e4a-a7f4-887d8507b8a9"
        },
        "item": {
          "id": "db331aef-f3f9-4bb6-81cf-1fb512d99c9f",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "649f5a94-f2e7-4689-a1fc-92a802fbb9e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4da174f3-c8f3-43c4-9464-22d78eb2cf87",
        "cursor": {
          "ref": "acbd9ecd-d87b-4233-b920-503d21215538",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "537a73b0-aba3-403d-9017-9cf0f7b192ba"
        },
        "item": {
          "id": "4da174f3-c8f3-43c4-9464-22d78eb2cf87",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "e8b1c068-29bc-4b37-a399-008b33dbed49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb57c2b4-37ff-4a96-b46c-5e9613068a05",
        "cursor": {
          "ref": "56ad45ad-cf96-4c4c-ad96-32d47f45b1ba",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "44cd80b0-34f0-461f-a425-1af41e18d5c6"
        },
        "item": {
          "id": "eb57c2b4-37ff-4a96-b46c-5e9613068a05",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "c76565fe-164a-4e6c-b447-1b0d07d86b98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb030802-bf58-48c4-9909-8f412be70399",
        "cursor": {
          "ref": "d92846d0-9e55-45ef-aa61-ed99167fbe03",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "a42c20c0-7482-482c-91de-12dd69ea7278"
        },
        "item": {
          "id": "fb030802-bf58-48c4-9909-8f412be70399",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "e03a6f1d-e611-4dac-92de-252e18aafe4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5174e6e0-5d9f-4077-b9af-48f2e6b9c75a",
        "cursor": {
          "ref": "fc9bab5b-4cb7-4edb-b0a4-ff6a5561e6c8",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "255c5b40-6cb3-4d42-92f0-a933151d48a8"
        },
        "item": {
          "id": "5174e6e0-5d9f-4077-b9af-48f2e6b9c75a",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "843daa37-74ae-4ddc-9c17-1ec98ae086cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60c10c3d-8f41-4da5-8e54-e28e998eb7d5",
        "cursor": {
          "ref": "e4a6ad46-4fc3-45a9-b1be-a0a9dbe2e19c",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "b00ce5be-d27b-4bc2-bf5c-02b610dd2388"
        },
        "item": {
          "id": "60c10c3d-8f41-4da5-8e54-e28e998eb7d5",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "831ad078-ec18-4b4c-ba08-841e77a3ace2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68b95f2f-a0c3-40e3-a326-bcd7a28db71c",
        "cursor": {
          "ref": "e3632000-6bcf-4ab6-be7b-06249d1a740c",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "3e72b804-06d1-46da-81d9-d34b6791a669"
        },
        "item": {
          "id": "68b95f2f-a0c3-40e3-a326-bcd7a28db71c",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "9327bcf8-51f8-40e1-977c-9de03838a3ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86664e3d-67b2-4a5f-9483-b2b8291661ee",
        "cursor": {
          "ref": "6f34d19c-e1c3-48ac-8e88-7b63a1571cc0",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "f15276b2-b5c1-4a5a-a53c-0c52e89b90e5"
        },
        "item": {
          "id": "86664e3d-67b2-4a5f-9483-b2b8291661ee",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "0c3f4cd7-eaef-4bf5-bb5d-025cea9398c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af61e906-282b-4c90-9d08-9b9a20fd99e2",
        "cursor": {
          "ref": "2d7a3bf0-09d7-4274-95c3-285b787a1eb2",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "5b708d93-07f1-4b41-a2de-852c1f152fb0"
        },
        "item": {
          "id": "af61e906-282b-4c90-9d08-9b9a20fd99e2",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "2513c3cd-afc7-45b4-9c95-92aa20b45ce0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47a00744-3707-4f7b-9975-b3eb95cf7fcd",
        "cursor": {
          "ref": "a7185696-27a5-48c2-b34d-cf6c05bab247",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "7963ce16-92bc-4686-82a5-6682bfedb072"
        },
        "item": {
          "id": "47a00744-3707-4f7b-9975-b3eb95cf7fcd",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "37cbf763-d34b-4721-9647-be6a085d1a95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "929d088a-c264-48cf-aad8-a4e58ec3bff4",
        "cursor": {
          "ref": "c936ce68-f1f4-46e0-9cba-779a8437cb9f",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "6f0fb655-5829-4025-87e6-4e5083fe55d9"
        },
        "item": {
          "id": "929d088a-c264-48cf-aad8-a4e58ec3bff4",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "e82aea80-7ed4-41ee-9cc0-d74deb242637",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9efb90fa-4b84-4aa1-803c-baaeedbdc106",
        "cursor": {
          "ref": "bad55f67-0ebe-4bc3-a798-efe49f6301a5",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "4a55d29b-7afb-4f06-8c61-7b20da6dfcc7"
        },
        "item": {
          "id": "9efb90fa-4b84-4aa1-803c-baaeedbdc106",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "ad25d2c5-a247-45f2-88d3-3145dbfb06a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01d93e57-bdcb-4b5d-98b6-3faeaa78dc70",
        "cursor": {
          "ref": "fe0c8c47-74f4-4cf4-abd9-c890134fc2b8",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "1fb0eadb-c64e-43b8-beec-5f1aff92d699"
        },
        "item": {
          "id": "01d93e57-bdcb-4b5d-98b6-3faeaa78dc70",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "863b5439-680a-4562-a0ff-26ff12bd81aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6e9dba2-90e0-4a7e-97c0-432f77a49b4c",
        "cursor": {
          "ref": "1a0bad7e-e49f-4ba6-ae90-464f31a62c67",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "5782176c-665b-495b-bd7f-6a825637a125"
        },
        "item": {
          "id": "c6e9dba2-90e0-4a7e-97c0-432f77a49b4c",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "fc938ff3-0372-4c07-97c5-09e9858f2bf3",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 185,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "463a00e6-6b43-4091-8f8b-dda8da626f32",
        "cursor": {
          "ref": "5634b5da-66df-44a9-a83b-6bbbd5332b8c",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "9910f2d7-7e78-457d-bfce-f2cc92246737"
        },
        "item": {
          "id": "463a00e6-6b43-4091-8f8b-dda8da626f32",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "edf7ad1c-a080-43c1-b473-9bc77afaf7af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd7df423-a68d-4be6-b999-572b8e703eb9",
        "cursor": {
          "ref": "fa2a7ed2-1beb-4c15-a83c-be21b7ffe8f2",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "f79085ad-1ac2-40d3-9d60-11cd8d4e4065"
        },
        "item": {
          "id": "fd7df423-a68d-4be6-b999-572b8e703eb9",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "afa87ba2-4fe1-49be-986b-2fc2012d9b52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99b3486d-b637-42fe-bbda-3b15ec457185",
        "cursor": {
          "ref": "af4af584-c058-424b-b499-087eb19fd320",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "74aec85e-c7b2-4efb-a219-562fb67a2908"
        },
        "item": {
          "id": "99b3486d-b637-42fe-bbda-3b15ec457185",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "eef56196-7c2b-4689-b077-5677ff9452a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd0a46ca-edd1-49bf-b4f5-315e516af895",
        "cursor": {
          "ref": "e85fe876-c97b-4a84-87c0-f496800a9de7",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "fbcadfc9-c0d4-43da-acfb-daf321816298"
        },
        "item": {
          "id": "fd0a46ca-edd1-49bf-b4f5-315e516af895",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "c8f21f5d-5270-45c1-8c0a-12efcdafa3b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "015bd10c-df8e-4873-9afb-099e6ad3da95",
        "cursor": {
          "ref": "eb180598-b969-4e7f-b549-a356df5f9a91",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "6e94c4ed-9919-4b21-84a8-62c51bb424ea"
        },
        "item": {
          "id": "015bd10c-df8e-4873-9afb-099e6ad3da95",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "9a1810f9-1908-4f42-aa41-2f0d24c0b051",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e73193a2-e0a5-4d7c-a7eb-86ae7cce68fc",
        "cursor": {
          "ref": "dc3da9b3-cc7e-4b02-a71a-967b26bad029",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "248953d3-d61d-4e90-b25c-302fba15fa07"
        },
        "item": {
          "id": "e73193a2-e0a5-4d7c-a7eb-86ae7cce68fc",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "e0b389e8-d787-4b64-937b-0755c30d9caa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f813aae-420b-4506-8dba-87fe16063711",
        "cursor": {
          "ref": "90632a5b-e249-40ea-a98f-ba01f6fb5f28",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "8f4d85ca-e482-4166-9be2-7623df197fca"
        },
        "item": {
          "id": "7f813aae-420b-4506-8dba-87fe16063711",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "e4933f76-bdb2-4130-b78e-4752868e2404",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4a35a29-3314-45db-a8d9-f97427024444",
        "cursor": {
          "ref": "eae0c1ff-966e-4906-ac7f-28635a32d899",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "67b6ccb0-9a7d-4633-aed8-a2ae6b7c0a6b"
        },
        "item": {
          "id": "b4a35a29-3314-45db-a8d9-f97427024444",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "e3e94a80-1940-4878-b685-c761190c6442",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 64,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "2382772e-6abd-4ef7-9284-de8c417096c1",
        "cursor": {
          "ref": "c66bd25b-7167-4b36-a9c5-45dfdf53694e",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "db0364c9-f845-4c9c-8068-8f87eddbb2ba"
        },
        "item": {
          "id": "2382772e-6abd-4ef7-9284-de8c417096c1",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "1899dccf-0e35-4a86-bb9c-9af2d71475c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fd88fc5-ed65-4eb3-b83d-80c70a36e5c0",
        "cursor": {
          "ref": "efbbffd5-518e-4c7d-99ef-a675259f4858",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "5a983cd9-6606-4fa2-8269-258f0b3860d4"
        },
        "item": {
          "id": "3fd88fc5-ed65-4eb3-b83d-80c70a36e5c0",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "f80db542-9fe6-42f9-8a78-24e27b59d03b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05e54c2e-fb9e-4e27-81ec-c71c67666fd0",
        "cursor": {
          "ref": "50c153a5-2103-4516-8dd8-7c9903d56d43",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "93790295-f71f-45e6-bb54-1fb3d3e93ba0"
        },
        "item": {
          "id": "05e54c2e-fb9e-4e27-81ec-c71c67666fd0",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "a52a8218-3220-4d32-8765-3ddf7a9380bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5ac79a4-e9ed-473a-b276-26f8a34fa75a",
        "cursor": {
          "ref": "40b0a5e1-d5cc-4b40-9458-21ee1e8bfe83",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "bee4310f-6dfd-4843-b71a-89e4e65d1f61"
        },
        "item": {
          "id": "f5ac79a4-e9ed-473a-b276-26f8a34fa75a",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "da14b735-c7dd-407f-a0ba-8493702cab23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "468f329a-a48e-4722-a8e1-93190d4bacb3",
        "cursor": {
          "ref": "4264b837-32d7-490d-bace-7ecffc97f3ec",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "6c7286cf-66df-46f7-bcb1-e2b6f68db100"
        },
        "item": {
          "id": "468f329a-a48e-4722-a8e1-93190d4bacb3",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "9589bed2-6118-4ab8-95d6-e33317371386",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2638ef32-0508-404d-a192-9db803045a6f",
        "cursor": {
          "ref": "dd5662bc-92b2-4573-96b8-8d049c8dfa9c",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "990522cf-9dbd-458a-8452-c258520875ca"
        },
        "item": {
          "id": "2638ef32-0508-404d-a192-9db803045a6f",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "b8062c18-3573-4ec5-bd72-cb151dfb657d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09715d50-b773-43b9-8dbb-43a087650796",
        "cursor": {
          "ref": "ad2929d3-641c-4fd7-a7fd-eaf58152af9e",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "91141af4-1a50-404c-8a3a-cab92aa6676b"
        },
        "item": {
          "id": "09715d50-b773-43b9-8dbb-43a087650796",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "6266dedf-c4bb-49d1-b27a-0b2d699c0b56",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 62,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "8391f5d4-374b-486f-8647-b81df5c795cb",
        "cursor": {
          "ref": "4ec1f830-16a3-4294-996b-65bac5ed5c78",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "1a43a043-151d-4eed-8e2b-eac9390aab13"
        },
        "item": {
          "id": "8391f5d4-374b-486f-8647-b81df5c795cb",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "1b33529a-8dd8-4277-8501-5e697105b99b",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 61,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "1d832f25-1860-4636-9b8c-5060c70af78d",
        "cursor": {
          "ref": "5f6f60cd-28a0-4048-b8ab-cf2dfcb52a92",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "ce7e59a1-77e0-45e2-89f0-92ae7caa6d15"
        },
        "item": {
          "id": "1d832f25-1860-4636-9b8c-5060c70af78d",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "2028565c-dd1b-4c13-97d3-a04e338363aa",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 66,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "e6778bac-1715-46c2-b161-e2e9801c7022",
        "cursor": {
          "ref": "d85f50c1-6a53-4924-b1da-d6d37a1145b4",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "143887b8-1853-44a1-bbfa-8c6d288d5312"
        },
        "item": {
          "id": "e6778bac-1715-46c2-b161-e2e9801c7022",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "1ae9467e-7be0-4f27-8499-74c0306049ab",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 80,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "9ac193f7-ee30-4f20-9c58-d3f5db840ffa",
        "cursor": {
          "ref": "a5c8edf4-643e-4a53-9a44-e461337514ce",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "8686e531-a70a-4ee6-b4b2-437af8cf12a1"
        },
        "item": {
          "id": "9ac193f7-ee30-4f20-9c58-d3f5db840ffa",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "45d8c490-69ab-4a66-b1e1-b81362141187",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 78,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "bcb45e43-e6c8-4c76-9c79-287e3e4c4456",
        "cursor": {
          "ref": "ac230a22-53c4-469a-aed4-754ce11c2a4e",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "a402b3e6-5137-46bb-80ec-c7953c2ac53b"
        },
        "item": {
          "id": "bcb45e43-e6c8-4c76-9c79-287e3e4c4456",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "e133f758-55cd-4a6c-a5be-c429bf5461c8",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 61,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "1a9dc533-e5f0-41ae-9197-52fed4a3afff",
        "cursor": {
          "ref": "cb51f0ed-0fc0-481e-8f13-3276b359e6d4",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "61169cc9-d8fc-49c7-bec2-9f5c05e8a122"
        },
        "item": {
          "id": "1a9dc533-e5f0-41ae-9197-52fed4a3afff",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "4298b316-1c10-4174-9f75-d82165c18206",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37ab1f7c-28a2-4728-a2a1-d08b2787626a",
        "cursor": {
          "ref": "7a423f36-f7bf-4889-8ac9-68760058cdfe",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "17b5a484-fa5b-4ca1-9056-f2823c7c2156"
        },
        "item": {
          "id": "37ab1f7c-28a2-4728-a2a1-d08b2787626a",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "c14ed09b-5178-4f49-808d-8163fafaa5fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5132c6fb-eeea-4bb0-ac8f-bd1bffa49411",
        "cursor": {
          "ref": "b753482a-1576-475c-8be7-6ee7bd4c31b9",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "c91fd101-5d30-4bf8-9a62-74d766fd49ab"
        },
        "item": {
          "id": "5132c6fb-eeea-4bb0-ac8f-bd1bffa49411",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "232880a7-d6c8-4b77-bcad-5ec7c7292a71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "983e2cd4-0277-4a19-8202-082a64dc8ca8",
        "cursor": {
          "ref": "621844ee-30a9-4285-b904-116014a772b8",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "a26f6dbf-176a-4592-9568-cdad25a81541"
        },
        "item": {
          "id": "983e2cd4-0277-4a19-8202-082a64dc8ca8",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "7332b8ca-029b-48ec-b684-a7167357ee03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8d025fe-6333-4c1c-b542-039cc7afd5f8",
        "cursor": {
          "ref": "532f4634-8366-436b-9303-baa270d279a5",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "57c0de60-19cd-4de4-b790-d0c69e1a7555"
        },
        "item": {
          "id": "b8d025fe-6333-4c1c-b542-039cc7afd5f8",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "18ca5c41-5323-4ebb-a16b-39c33ab98c8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4cc71e7-0d21-40ca-85c4-0e9f90ae266c",
        "cursor": {
          "ref": "b704eb8c-6bbc-4c50-957f-b1ce22e8588a",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "e58737bc-94fd-4a8c-92e2-68c0d9709fa6"
        },
        "item": {
          "id": "c4cc71e7-0d21-40ca-85c4-0e9f90ae266c",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "fe8309cd-5a9e-4031-8482-1b3d657234ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c75e502-07b6-461c-9cf0-d39481a7dc94",
        "cursor": {
          "ref": "b7e3d161-261c-4e42-8ae0-bc1404a4e000",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "60852322-3c36-4a93-8bbc-922ac0bd768b"
        },
        "item": {
          "id": "6c75e502-07b6-461c-9cf0-d39481a7dc94",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "0dd6580d-53d1-4402-afa0-404012a911a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d54d7a9f-e4ba-4292-a875-f55661e8e9c1",
        "cursor": {
          "ref": "8e194bae-b6cd-4657-986d-ccaaa12a7285",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "2c6f7a25-e168-4ee3-9a39-651587374fcd"
        },
        "item": {
          "id": "d54d7a9f-e4ba-4292-a875-f55661e8e9c1",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "0d5fde5b-f916-4cf0-9958-e2f9cd64ecef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "667e0487-657f-48c8-8b57-e4514a63f6de",
        "cursor": {
          "ref": "3f2029fe-2270-46e5-b262-85c0c62ef0de",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "238a6379-78ee-4273-8f62-8357cb3cd61a"
        },
        "item": {
          "id": "667e0487-657f-48c8-8b57-e4514a63f6de",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "3be8374c-b282-4428-b0f9-243c148f9f0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f3fd8ec-2770-460a-81f9-da06b493647d",
        "cursor": {
          "ref": "3ddfba76-1163-475d-bee6-0c29288452af",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "3f7a4ec0-18af-4a35-a2e5-0cce58b96667"
        },
        "item": {
          "id": "9f3fd8ec-2770-460a-81f9-da06b493647d",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "bcc4f10d-7719-4d8e-b513-489d3d3a02a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f10fd903-0ff3-468e-8aba-113de1c8277e",
        "cursor": {
          "ref": "44c7c0b6-c6ce-42d1-a440-04ff35590d75",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "b179995b-5681-434d-9d40-f63d3dbb084a"
        },
        "item": {
          "id": "f10fd903-0ff3-468e-8aba-113de1c8277e",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "d8ec725b-ecc4-4796-b845-f0d79c00237a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2435a3f-05d3-46c5-9891-faefbf328f51",
        "cursor": {
          "ref": "406c72ff-15b4-4377-93ad-e256eae7f466",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "f26c4664-7a31-459b-9836-565c41ca33ff"
        },
        "item": {
          "id": "a2435a3f-05d3-46c5-9891-faefbf328f51",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "87feaa59-30b6-4581-a1b8-94cd64a558b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3606fdc1-7128-4751-bbdd-1a6f3e402565",
        "cursor": {
          "ref": "1179f724-d1d4-4647-95f2-8ef9e220f771",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "561dec9b-7629-4fc2-8c11-ab72d208e24f"
        },
        "item": {
          "id": "3606fdc1-7128-4751-bbdd-1a6f3e402565",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "20bdfb20-563d-47e5-8dcf-50bc24891d8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03a92e74-ca2a-44c9-a0b0-e7aac6d8890a",
        "cursor": {
          "ref": "e27a6c7d-3c0a-4ea8-b310-e334446dbed8",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "c7e1c23c-2b9e-47e2-b834-128ea85889c3"
        },
        "item": {
          "id": "03a92e74-ca2a-44c9-a0b0-e7aac6d8890a",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "a45016a2-00c7-48ac-a261-daf2abd3c1ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db115bad-2c02-4479-95d4-28134e729884",
        "cursor": {
          "ref": "d6ea3397-5957-4941-8a82-d968ac35da07",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "010cf515-b2f6-4451-b8d1-784bc7c1e0d0"
        },
        "item": {
          "id": "db115bad-2c02-4479-95d4-28134e729884",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "cb3a710d-784e-4921-9ebf-788730447245",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50ff0e20-83f0-4ca3-8aed-5c7235b483bd",
        "cursor": {
          "ref": "e1774e65-99af-42fe-b2d0-95453bad8915",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "9c7077f8-5bbb-4d40-a75f-4708e3e51ac1"
        },
        "item": {
          "id": "50ff0e20-83f0-4ca3-8aed-5c7235b483bd",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "96bed06d-0c14-45b3-9f15-4be92ea93ec5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4731a827-ad54-49d1-8d5f-e412ad0d6ec9",
        "cursor": {
          "ref": "1f633e24-5799-412b-880d-690aeb1850d4",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "8412afde-e605-4540-a3b0-6b346ba5b4a6"
        },
        "item": {
          "id": "4731a827-ad54-49d1-8d5f-e412ad0d6ec9",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "88c12aa7-98b1-4dd8-8bb3-9cbd2fedc81b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34634c37-04d1-490a-8b9f-0d9f680062d7",
        "cursor": {
          "ref": "a2325b6a-a14c-4db5-b666-3f72bb8033bc",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "38a9f68f-bc2f-45dc-9a5f-df8c5e7d5746"
        },
        "item": {
          "id": "34634c37-04d1-490a-8b9f-0d9f680062d7",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "051750db-9740-4086-ad30-b2ff7e2947a8",
          "status": "OK",
          "code": 200,
          "responseTime": 95,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "06adf260-82c4-41ee-b858-a57d8802a3e6",
        "cursor": {
          "ref": "5b967443-956e-4fb7-a071-077c66e494fd",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "8ca72706-859c-4829-b081-8e42e1d6bc0a"
        },
        "item": {
          "id": "06adf260-82c4-41ee-b858-a57d8802a3e6",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "0bcbea27-839f-4d74-bb7b-746d8875b52f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc3237f3-3adb-4a1c-a955-5ea6334e9803",
        "cursor": {
          "ref": "b645017a-9f14-4f17-b233-7fa4d2c4ff4f",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "a16d010b-ff1c-4aad-b366-81ae13903544"
        },
        "item": {
          "id": "bc3237f3-3adb-4a1c-a955-5ea6334e9803",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "43a88dfb-1660-47a6-9b6a-49bd66d9f121",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42ba9004-5ed7-4223-aae2-8c4f7ac58e2a",
        "cursor": {
          "ref": "77544d05-1900-4ac4-97df-6161e437a5a1",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "e858c273-29d6-45f1-87c1-c2a878904141"
        },
        "item": {
          "id": "42ba9004-5ed7-4223-aae2-8c4f7ac58e2a",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "9172fc3d-b205-4d70-9ea2-6a84674493c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d8665ae-f269-42e0-928e-fe47baf44372",
        "cursor": {
          "ref": "3d1d8c7b-2e52-4f45-b107-9451c1afb796",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "ab2eb63e-bcb5-48b6-8bd3-29a74aa39d51"
        },
        "item": {
          "id": "9d8665ae-f269-42e0-928e-fe47baf44372",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "e8af8301-d8e0-4a6d-af86-c39fc3df7c03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c79617f-bdb6-4396-b1db-b513f0a9c22c",
        "cursor": {
          "ref": "3486b460-541a-4c3b-b6c4-5418eadc8947",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "8ed79885-cf0a-476b-90fd-e7f12e1e3be7"
        },
        "item": {
          "id": "9c79617f-bdb6-4396-b1db-b513f0a9c22c",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "ea7c1258-a167-46c1-a478-f235fc6ba2bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2ed730a-10f8-413d-9eab-d291cbaf4f24",
        "cursor": {
          "ref": "e18e23dc-b9fb-4ed7-a612-6dfa393c4dac",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "daab7cf1-3482-48af-a62d-b156cb622ea4"
        },
        "item": {
          "id": "b2ed730a-10f8-413d-9eab-d291cbaf4f24",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "22c586e9-ee60-483d-8f09-128e8e03354c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb324115-893b-4d4d-a050-8716da19e07e",
        "cursor": {
          "ref": "2715771f-9875-4f4b-8b3e-ae71e9350d6d",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "9d9008ea-3d66-4cc9-a31f-3e50ad15bcf6"
        },
        "item": {
          "id": "eb324115-893b-4d4d-a050-8716da19e07e",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "8d96c19c-2005-4089-aa4f-2433f30ed506",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77fd86ae-d1b6-4340-b1ac-7605b34ba7c5",
        "cursor": {
          "ref": "c64cb95c-0a31-485a-b085-d38ebb5f71d3",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "69a379e0-8372-4d68-a68e-886e6cc6a508"
        },
        "item": {
          "id": "77fd86ae-d1b6-4340-b1ac-7605b34ba7c5",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "14c66276-1a44-441a-9101-bbe24e071d8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6cffe9c-c1cc-4dfc-875a-149458819507",
        "cursor": {
          "ref": "3e1776c5-326d-4a9e-b3ca-c0614395d4d2",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "85ce666c-5741-48f6-967c-c0a2aaae3746"
        },
        "item": {
          "id": "f6cffe9c-c1cc-4dfc-875a-149458819507",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "23c03ee5-ef81-4228-8215-60fa3f1d20ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cf58465-58c3-47b5-bcaa-4e6e9731ba86",
        "cursor": {
          "ref": "d07fb12e-cb7f-493b-bb99-260823747949",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "f3967576-85f5-466f-a4bc-73b89c41f186"
        },
        "item": {
          "id": "6cf58465-58c3-47b5-bcaa-4e6e9731ba86",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "c63fbaa6-8843-4f6f-994f-9e7647e9995b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78e5ca35-39c9-4e8d-8900-c2601cc83c3d",
        "cursor": {
          "ref": "498f304f-f851-44f4-8b30-687ca885701b",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "ddbd1313-b27a-4fd8-8beb-8008a23761b3"
        },
        "item": {
          "id": "78e5ca35-39c9-4e8d-8900-c2601cc83c3d",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "e400e457-a0da-4be6-a8fb-ffb1bf9706a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec7bd1ad-7578-40f1-8f8c-629b823d9490",
        "cursor": {
          "ref": "3270cab4-fb95-47d3-8677-3a1b3d40395f",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "68c99fb6-5075-4abe-a78d-5f1d6daa6425"
        },
        "item": {
          "id": "ec7bd1ad-7578-40f1-8f8c-629b823d9490",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "49a743bd-0698-49f7-944e-a35c490f6c14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbabbbc0-1e3c-4e7b-9254-6be4751bbc0a",
        "cursor": {
          "ref": "52d1989a-051e-4395-a0c1-cd4e3e5ae451",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "0d71ac73-3bee-468c-bd8c-98f5895fd44a"
        },
        "item": {
          "id": "cbabbbc0-1e3c-4e7b-9254-6be4751bbc0a",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "d5d4c52e-8ba3-4df2-a2d3-32bcc1d8f4dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "551feb9b-3b16-47cd-8351-52206121bc89",
        "cursor": {
          "ref": "af5ccd27-ee32-43bb-a103-5bb5ac94b533",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "f14bc9e3-99ef-462a-a44b-4be7420195e4"
        },
        "item": {
          "id": "551feb9b-3b16-47cd-8351-52206121bc89",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "ad57cda9-c32a-43dc-b171-5f2aba484a0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "366aa443-8fba-4eff-8909-ee92226ef001",
        "cursor": {
          "ref": "f79d3ca8-201d-4d59-9384-25d78d3fa2e9",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "133d0a07-b94f-424a-8f1d-6988e0e65c91"
        },
        "item": {
          "id": "366aa443-8fba-4eff-8909-ee92226ef001",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "f5d91ec4-ed42-44e4-b294-3b3d2ee61aa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bd3fd0b-95a9-472e-bae7-005c3129d01f",
        "cursor": {
          "ref": "dcf83cbe-9370-414d-802d-567c556ae756",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "c8613295-4ecd-4062-921f-0f348b0abf94"
        },
        "item": {
          "id": "8bd3fd0b-95a9-472e-bae7-005c3129d01f",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "f3546b9f-7c93-473d-b491-c8c4374d3c30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ed25e8a-68ba-4abb-bdad-d47854d2e017",
        "cursor": {
          "ref": "c624dc90-ece1-44e4-acc7-3b04e18e099c",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "1abd3cb0-f1d9-4e63-bff7-f385d1a2091a"
        },
        "item": {
          "id": "0ed25e8a-68ba-4abb-bdad-d47854d2e017",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "b747d2c7-2692-4ab4-9fa6-9c72bc17acf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b6584f4-cc8b-4cb2-a91d-8af6b42e0464",
        "cursor": {
          "ref": "5b013146-5c10-40e6-abcc-85f58c915b33",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "eb05b9ed-64d9-48a6-8c27-04ef70f23df8"
        },
        "item": {
          "id": "5b6584f4-cc8b-4cb2-a91d-8af6b42e0464",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "71df7d26-7f07-40a3-90b3-7570d98e3b6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc2a965a-0f18-4ae1-856b-cbd40cf3fe63",
        "cursor": {
          "ref": "54ba7b3c-5c65-4015-8686-3759db1ee1aa",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "62babe1a-1767-4f2b-a2b9-861444b74943"
        },
        "item": {
          "id": "bc2a965a-0f18-4ae1-856b-cbd40cf3fe63",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "cb193747-fbdc-4121-a4be-e8420e9be8c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84ab4523-6319-4414-852e-5bfbc12388cf",
        "cursor": {
          "ref": "63c4ce68-e091-4dc2-b90e-c777ae7f0c4b",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "a2afe2fb-96a9-4157-9705-19fc0a12dc50"
        },
        "item": {
          "id": "84ab4523-6319-4414-852e-5bfbc12388cf",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "26c23f1c-1ae6-459e-a21a-26684784a4d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d088eb08-b018-476a-b284-9dfb157473e5",
        "cursor": {
          "ref": "fe1fea77-68bd-43f9-aed9-8fab66f37474",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "f4b42ace-2a4f-4e7d-8b4a-05d41af7a37c"
        },
        "item": {
          "id": "d088eb08-b018-476a-b284-9dfb157473e5",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "5cf4b152-e95a-4a25-8e62-252ca5a336a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "743bc2a2-f404-4b87-bb14-63395f30611a",
        "cursor": {
          "ref": "a8ff8fdd-0b00-4d5f-b0d5-ad6123ed5183",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "97b9c4b3-b5ac-4a89-9b88-1f19c51d1a5f"
        },
        "item": {
          "id": "743bc2a2-f404-4b87-bb14-63395f30611a",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "6b10e650-5a25-4229-a8e7-a70997b00678",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88bad31e-d70a-45a1-a5b0-735b17e54c9b",
        "cursor": {
          "ref": "298e52bc-1810-4b72-a7ee-544b248aaa50",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "7693b723-4960-4721-9d89-e0b0f9a2baa5"
        },
        "item": {
          "id": "88bad31e-d70a-45a1-a5b0-735b17e54c9b",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "60b4354a-fef0-4043-8c7d-ebc70e92706d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d34bf11-8331-4f52-9601-057c1cbdf24f",
        "cursor": {
          "ref": "0f392655-d963-41ad-9986-e91fdbb34a99",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "4d4c60c1-7759-4b6c-96a0-fd790f83f9c2"
        },
        "item": {
          "id": "9d34bf11-8331-4f52-9601-057c1cbdf24f",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "feb15114-4eed-4584-96c1-8aa3716ea5e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f127270-08e5-444c-b5f9-4302125bbd14",
        "cursor": {
          "ref": "ea776739-1377-4e15-8504-27f0748e4daa",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "6df0b71c-6fa1-4d39-a747-887d7147b943"
        },
        "item": {
          "id": "4f127270-08e5-444c-b5f9-4302125bbd14",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "3f719549-3a66-4635-b620-a3cf17193ea8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ebe1a77-dca1-4c8d-a826-a2b248aa52e5",
        "cursor": {
          "ref": "9c7aae34-4772-4673-9af6-422e070b785f",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "e15a4d11-62ea-4a6c-a8e1-cd0dc9ad6fb0"
        },
        "item": {
          "id": "4ebe1a77-dca1-4c8d-a826-a2b248aa52e5",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "7117f0de-cbc1-47c0-a8af-d0619fbaa2f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f7e146c-65db-40a8-b3d2-bcb48936cd0b",
        "cursor": {
          "ref": "3484fae4-f4b0-41b7-bed7-aa24daab2541",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "587cabc2-9d92-41bf-922e-1aba0c78253f"
        },
        "item": {
          "id": "1f7e146c-65db-40a8-b3d2-bcb48936cd0b",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "bb66ecaa-5926-494f-924f-341d9c9cb5de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0ad6056-a93b-468c-99ae-dda967817e57",
        "cursor": {
          "ref": "69e31fa3-4842-4f8c-947a-cb8a2bc33d2d",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "d0f0349e-c7a3-4cd3-829f-9b20425430c0"
        },
        "item": {
          "id": "e0ad6056-a93b-468c-99ae-dda967817e57",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "83421ba2-c84d-4f30-b00f-7b4d51d55dc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e208f29-223e-4ef5-ae27-3c7a8764ff1b",
        "cursor": {
          "ref": "b7bb485d-54b6-4745-ab64-8093348624f2",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "70234d4a-56ef-4f7a-b2f2-804b20bed008"
        },
        "item": {
          "id": "5e208f29-223e-4ef5-ae27-3c7a8764ff1b",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "a3e2fdd5-bf7d-4d43-8211-cfd059230a32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d963f91-c34f-4631-bf4b-733aa57cdd18",
        "cursor": {
          "ref": "e821d633-3655-4fdc-b03e-7406049d3f6e",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "c0152a13-9e56-4a95-87fb-6081162a67a2"
        },
        "item": {
          "id": "1d963f91-c34f-4631-bf4b-733aa57cdd18",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "4b46cdc5-cd0c-491c-b3a8-f6a3f70e332e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5da2064f-14dd-4cef-abfc-9b343503408e",
        "cursor": {
          "ref": "ef13c4b2-8718-4ce4-a074-117a8a3462f6",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "53d46f2b-9b18-46bc-b80a-50a80e5686ec"
        },
        "item": {
          "id": "5da2064f-14dd-4cef-abfc-9b343503408e",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "2642a79b-8828-476f-956d-e7a678987187",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8828484-6c50-424f-9ce9-9309c4dd8cd8",
        "cursor": {
          "ref": "502f4d96-103b-49a1-a7fc-9153e81e3f90",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "69541097-fb9a-4f8c-a960-0baaae5d457d"
        },
        "item": {
          "id": "d8828484-6c50-424f-9ce9-9309c4dd8cd8",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "a946b222-1f3e-41b8-99a7-f1b249962fb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "577568c4-caa5-4149-8c42-3dd65cd27b44",
        "cursor": {
          "ref": "f9efdab5-76d5-4b92-90f8-96525a1a128e",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "4862f483-560c-42df-91ef-d1d6395b7a05"
        },
        "item": {
          "id": "577568c4-caa5-4149-8c42-3dd65cd27b44",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "25405fee-0f28-434c-9f2c-fda0d3bf3cec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5fda7ce-817d-4df9-857e-0f04fa302be3",
        "cursor": {
          "ref": "4c134ea9-4df6-41c3-89a2-21aacda7f079",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "9ae10e5c-ee8b-4009-bb3e-ce0592070185"
        },
        "item": {
          "id": "c5fda7ce-817d-4df9-857e-0f04fa302be3",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "d902776d-77ef-4843-a7e1-1d7d4f1988e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e92c4812-3acd-411a-9f9a-f4684f49c4ee",
        "cursor": {
          "ref": "b3c22ac7-58e2-4402-b644-5ede2d513002",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "736d95ae-e534-4631-96a0-3e72f34573b6"
        },
        "item": {
          "id": "e92c4812-3acd-411a-9f9a-f4684f49c4ee",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "d3bd9cb3-5b37-4267-8db1-ccb6d54d24a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2207d634-a798-4ef6-b8a6-3dab2b9bc872",
        "cursor": {
          "ref": "225f7f32-5601-4571-9451-e0023700ea73",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "3f1f322a-cc84-4c5b-a5ce-d13dc3513c5e"
        },
        "item": {
          "id": "2207d634-a798-4ef6-b8a6-3dab2b9bc872",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "50e79873-a56f-4b08-8a15-513a92b61d45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "093c823c-3a6e-4bea-bb09-71718686c39a",
        "cursor": {
          "ref": "3d27dfea-9e86-4628-9687-b3694fd5e8f5",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "767477b5-0545-41a9-8fd4-f6bf6033ce6b"
        },
        "item": {
          "id": "093c823c-3a6e-4bea-bb09-71718686c39a",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "4f0e2541-fa3a-4cad-895e-22fa691a0bd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19259ceb-3137-4bf3-ac18-0012e0cb8c13",
        "cursor": {
          "ref": "8027bf53-594b-4260-9300-d2e622eec21d",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "e0f1c061-cfd7-4a34-a8ff-0bfa853b111d"
        },
        "item": {
          "id": "19259ceb-3137-4bf3-ac18-0012e0cb8c13",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "d6bf2f92-6fb5-4b0b-81bd-1f5d4eb1acc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8164a4ae-11b5-4b4f-868e-426c5db9670e",
        "cursor": {
          "ref": "9b7455d9-ad76-48f5-bcf2-4c8893954d97",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "582ab17d-b265-4b8c-94b3-dfd8022e10e0"
        },
        "item": {
          "id": "8164a4ae-11b5-4b4f-868e-426c5db9670e",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "567eab52-4f0d-4ec1-9f5c-b21cced8ea0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eae65724-2354-4983-8df2-83316c3528fd",
        "cursor": {
          "ref": "9f022b0f-8170-4cf3-9513-d4a92ab16a61",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "1b2c6b39-0bba-4f62-bff7-ce4bf982dc76"
        },
        "item": {
          "id": "eae65724-2354-4983-8df2-83316c3528fd",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "e6d94b59-55cd-420f-a91a-659d822c26b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bb978f9-c881-4b47-a901-b2c8e3f8585e",
        "cursor": {
          "ref": "8a6b4996-c7c1-4fd6-acb3-67c41114f661",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "7176bc9e-9166-4478-99f3-111589869174"
        },
        "item": {
          "id": "3bb978f9-c881-4b47-a901-b2c8e3f8585e",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "9b321418-e5c2-4ee2-804a-f32f933ce734",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38dc7efe-1638-4308-9504-bf0938e91426",
        "cursor": {
          "ref": "14d0a2a7-4101-42e6-93b4-95f6868108e4",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "7036bdc3-5d43-49ca-9066-94af848555e9"
        },
        "item": {
          "id": "38dc7efe-1638-4308-9504-bf0938e91426",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "e6a8c62a-84df-4043-adc7-5f823d35061a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3110b59-7800-4665-8b65-46a1b9fe815e",
        "cursor": {
          "ref": "1a68ac47-367b-4db5-84b1-42f81b1eb0a1",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "6a887457-a063-4c59-8f6c-ec2cad9bb73a"
        },
        "item": {
          "id": "a3110b59-7800-4665-8b65-46a1b9fe815e",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "fffe24e7-0a88-44a2-b9e3-f4b202dca23d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a3e0821-edd8-4a60-9a5b-d9f2a45b7045",
        "cursor": {
          "ref": "984fdb13-983a-4455-8395-616d7a8f7c0a",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "be5eaff8-fd15-4277-abdf-1f1e50f4801d"
        },
        "item": {
          "id": "6a3e0821-edd8-4a60-9a5b-d9f2a45b7045",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "ade8a5dc-8bfa-4d02-9cb9-95b889cbce39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ce8516f-90a1-447e-a99d-f705f7407432",
        "cursor": {
          "ref": "4c40416d-6dff-4757-aa3c-8cd8cebf427a",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "bdcc498e-7ce4-4de5-9516-78d3200eaea0"
        },
        "item": {
          "id": "0ce8516f-90a1-447e-a99d-f705f7407432",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "94fb912a-2a7a-48d2-aa58-99a913e35a47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69edebe6-9319-4826-9278-16f44e648289",
        "cursor": {
          "ref": "bf21b6d0-accf-43ab-a796-7e8f19f714a0",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "de21b11d-a7b0-46b7-a15d-95c985bd8148"
        },
        "item": {
          "id": "69edebe6-9319-4826-9278-16f44e648289",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "6913b5bb-2b42-482b-bb56-29e8a5aec10a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a217230e-a816-45d7-b6b6-fbdf59fd5117",
        "cursor": {
          "ref": "7bffaa34-4ae1-45f8-b80c-efe00993fae4",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "ac5833e1-7ac4-4447-b695-b8ecc5992ef3"
        },
        "item": {
          "id": "a217230e-a816-45d7-b6b6-fbdf59fd5117",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "5a68abf3-1c08-4688-85df-27c82dbd258e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 155,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af90eeb3-8299-4f16-a4c5-80c304ff21c7",
        "cursor": {
          "ref": "9a6a205a-da1f-4096-8ec8-051460d753ea",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "674fb10d-ec49-4f55-bb99-52ceebf245d3"
        },
        "item": {
          "id": "af90eeb3-8299-4f16-a4c5-80c304ff21c7",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "26213558-f4a1-48ba-a40b-494a7fb5ecc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5886ee92-5487-421c-b2e0-fd4861cfc09c",
        "cursor": {
          "ref": "107685e6-bb0a-43f0-baeb-21b9cc8bee44",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "d191f3b7-d098-4306-82d2-3dafb5696edb"
        },
        "item": {
          "id": "5886ee92-5487-421c-b2e0-fd4861cfc09c",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "358fdff5-bb1c-4447-b185-3062d7bbc488",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97295ad8-307f-4a4e-ab09-4f2046dea2f6",
        "cursor": {
          "ref": "5425f4af-0d75-40a5-85e2-03e500ca5e22",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "d4ccf4e5-5b2c-43f6-b7f5-439a2f25a1b6"
        },
        "item": {
          "id": "97295ad8-307f-4a4e-ab09-4f2046dea2f6",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "1ad23f4a-7539-42cf-935e-26afa51217ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b325f905-315a-4cd6-b436-ce7ad7529430",
        "cursor": {
          "ref": "9fc19cde-f1a7-4b5e-9868-78856020f753",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "9cfa6b10-05c7-4109-a885-69670daa2550"
        },
        "item": {
          "id": "b325f905-315a-4cd6-b436-ce7ad7529430",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "d2108b6e-7e8b-4400-aeb4-362f2c4a37f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4e7fd0d-35ac-4955-9694-5463966b79fb",
        "cursor": {
          "ref": "c4c4159a-4582-48c8-89f2-2506d4d93e07",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "d6b8fd7c-20b4-41c0-b1b9-8e511e3a6755"
        },
        "item": {
          "id": "b4e7fd0d-35ac-4955-9694-5463966b79fb",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "0dce281b-97d2-4472-a82d-35e290001c0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b96f74f5-4b49-498b-ae3f-5d6a52740df6",
        "cursor": {
          "ref": "10cc8cb7-7e25-4cba-8de4-57d7b6eae188",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "fecd6059-24e4-4943-978a-5c903351273d"
        },
        "item": {
          "id": "b96f74f5-4b49-498b-ae3f-5d6a52740df6",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "b6f675f4-fbd6-4606-9d42-aef2192074e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7a1eb04-c087-4809-8560-df1c7bdecdb0",
        "cursor": {
          "ref": "b3615d04-f237-4c4a-ab6e-4b3bb8525b45",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "4799f77f-99c5-45cc-8574-9bb0645e94e7"
        },
        "item": {
          "id": "d7a1eb04-c087-4809-8560-df1c7bdecdb0",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "042a60cb-cc51-4e22-af30-46075afc0c3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dde28e6-4667-4a0b-9738-a3f22e6f80aa",
        "cursor": {
          "ref": "9d954f13-d137-422b-83a5-f0a93f75565e",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "6a61a19b-e9e1-4e7d-8c02-281527aaa791"
        },
        "item": {
          "id": "2dde28e6-4667-4a0b-9738-a3f22e6f80aa",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "7ae1c44b-a006-402d-ba39-e498af5e6088",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3b542f1-d5bc-48ac-a545-c37795e50e18",
        "cursor": {
          "ref": "2c3b912d-a028-4b4b-abe1-76078fb2024c",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "de8097bc-b708-4dbc-8ddc-e40834782c83"
        },
        "item": {
          "id": "a3b542f1-d5bc-48ac-a545-c37795e50e18",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "dbb3bf97-9d22-4d4e-888b-edbe675cd460",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "850a4170-224d-422d-a2ff-20c412ea1eaa",
        "cursor": {
          "ref": "86726a31-e344-4679-816e-5c426761b9b7",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "fa40ee9e-7921-47d5-8bf8-5dca76fba7e0"
        },
        "item": {
          "id": "850a4170-224d-422d-a2ff-20c412ea1eaa",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "9400a3b2-a423-45e9-9c34-bb5c9f7d10ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 163,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4721cbf3-3878-4f5b-a67e-587f993ba3b4",
        "cursor": {
          "ref": "60c15ad9-f571-4099-93db-6d047c214113",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "a10a3777-ff7b-4f43-a99a-7e6b8bd3f398"
        },
        "item": {
          "id": "4721cbf3-3878-4f5b-a67e-587f993ba3b4",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "8e787ff8-0b77-40d1-9b6a-176a7679b915",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d34a9b4e-440a-49d5-b54e-f4b9a4fae902",
        "cursor": {
          "ref": "cbc663e6-8926-460e-bc03-07404a72888e",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "b0340b71-48ac-4073-ba71-d9485d71dd85"
        },
        "item": {
          "id": "d34a9b4e-440a-49d5-b54e-f4b9a4fae902",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "073f756e-970b-4d93-8612-acc72ffb4a7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96531c8d-89ad-4d0c-a696-04d12075a2be",
        "cursor": {
          "ref": "2427dd66-826b-4770-bd7b-8bce91af2e80",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "a1e7bc07-5b67-4309-a8fe-f2e3d061c763"
        },
        "item": {
          "id": "96531c8d-89ad-4d0c-a696-04d12075a2be",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "c8894913-5d3b-4dea-988b-9770e623ce58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5144b727-3bfa-4d17-b5a7-562f63add3b5",
        "cursor": {
          "ref": "711f1b93-596b-4747-a713-fe4caac4bde3",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "762c6569-a123-4ec0-b95b-654a9689393b"
        },
        "item": {
          "id": "5144b727-3bfa-4d17-b5a7-562f63add3b5",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "284c439a-35f1-4f51-b69e-bd0c0e9485a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4614e748-246c-48bc-8bd6-7824525bb5c4",
        "cursor": {
          "ref": "6148893b-690a-4ae0-91ea-737bda7ccf29",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "37ea9318-ee5c-46d9-a0b2-a3a21fc96068"
        },
        "item": {
          "id": "4614e748-246c-48bc-8bd6-7824525bb5c4",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "deb23995-f197-426c-b3a9-e9362a3ad387",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14fb4497-3cee-4c15-a3a3-5a8c6dde3ab1",
        "cursor": {
          "ref": "e3c5b815-90be-4cb0-8323-ccecba98c7e7",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "9610e0e3-d546-4924-85f1-1786fa909ec2"
        },
        "item": {
          "id": "14fb4497-3cee-4c15-a3a3-5a8c6dde3ab1",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "3521bc4a-7a62-4967-baac-0141bbf09be1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8747e65-c3f7-4917-9e36-6bf37d039b1d",
        "cursor": {
          "ref": "50922cd2-216b-407c-9c81-c90183651f50",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "8527e0e0-d64c-41bb-bcf3-51afa02d885e"
        },
        "item": {
          "id": "f8747e65-c3f7-4917-9e36-6bf37d039b1d",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "1db0b9a0-26a8-486a-9c63-7b30fb6b1453",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02d772f9-8233-46dd-854e-9a6b6579d845",
        "cursor": {
          "ref": "a25b5625-a67b-4619-8904-a95c7ef91df1",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "5e1c06e0-ae0e-4734-b1f9-e3eab69f671a"
        },
        "item": {
          "id": "02d772f9-8233-46dd-854e-9a6b6579d845",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "f6bec62e-0e01-4370-9cf7-03fb52ba2c1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66bb134b-a9cb-4785-b253-5d38b7ab37ca",
        "cursor": {
          "ref": "6e0c92d4-9442-41f9-9cb8-aa42db86cbe9",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "25ccfda0-c9af-4445-9026-eaf87d573f72"
        },
        "item": {
          "id": "66bb134b-a9cb-4785-b253-5d38b7ab37ca",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "dc7de750-9877-43e3-9179-5970f2ec4427",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1645be1-2c4f-4d59-abab-bf2bc21fe567",
        "cursor": {
          "ref": "f5308c7b-593f-43ff-94ff-03a54fbcec9e",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "235d2580-46d5-43e7-853b-f1cf2a8d92e8"
        },
        "item": {
          "id": "e1645be1-2c4f-4d59-abab-bf2bc21fe567",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "5024de79-b22f-4e32-b681-03daf5c5598f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c9c4fee-c6ea-4b77-8af9-83c173b2f507",
        "cursor": {
          "ref": "cd098d32-a2cd-468c-b8b6-4a4670de4e89",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "9f101f41-50ac-4fc6-8f7f-ae2634edf9fd"
        },
        "item": {
          "id": "5c9c4fee-c6ea-4b77-8af9-83c173b2f507",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "913239df-0e06-44df-b948-807d7f6b1f48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d40eee1-0dbb-42ed-b65e-ccf241b42706",
        "cursor": {
          "ref": "d5551286-501b-4cf4-9012-44e76366183e",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "f2c7c89e-ca2f-413e-be55-9d64165a4901"
        },
        "item": {
          "id": "0d40eee1-0dbb-42ed-b65e-ccf241b42706",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "b8d45f58-993c-4554-800c-6f2a4ca04d5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "513f630c-91e7-412c-8986-69901d48b687",
        "cursor": {
          "ref": "8846ccae-c774-41c5-bf13-a011205449db",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "eb761070-3ed5-4baf-b2c8-34bbf4d51624"
        },
        "item": {
          "id": "513f630c-91e7-412c-8986-69901d48b687",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "586dbe61-2de3-4af6-842d-e42abfb68b47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a690e44a-9521-4459-a3a0-39593a46321a",
        "cursor": {
          "ref": "7c670f50-7d3e-4b07-9bdc-f56cb81c2bd7",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "00e548b5-eba6-4d3e-a57c-4a8258794b81"
        },
        "item": {
          "id": "a690e44a-9521-4459-a3a0-39593a46321a",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "82640e39-c893-4fd5-9fe9-12ce59c3d72e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de5342a6-4e59-449b-8283-4b47240a49f8",
        "cursor": {
          "ref": "10ca4f86-7f43-44ec-8d30-0e990a5cfe94",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "cc5ceef1-2161-45aa-858b-d5178ec78ed7"
        },
        "item": {
          "id": "de5342a6-4e59-449b-8283-4b47240a49f8",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "36715eda-4caa-4e73-a33c-433e2c99055e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82d34b5b-09bc-45bc-ba0d-571f74ee0e43",
        "cursor": {
          "ref": "1b07349a-3307-45a3-8f90-b790d5814d5e",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "96660135-09d7-4a50-82ac-7d7e75323197"
        },
        "item": {
          "id": "82d34b5b-09bc-45bc-ba0d-571f74ee0e43",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "f821fa91-86c7-4f21-b7cc-3c87c948b1d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58fc0c69-5df9-4f85-b3c3-a1a0e7cfcf98",
        "cursor": {
          "ref": "90280ce2-96bb-4a56-a1e7-3ad9913f5bd1",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "9be42739-a812-40f2-806c-c887a4354a0e"
        },
        "item": {
          "id": "58fc0c69-5df9-4f85-b3c3-a1a0e7cfcf98",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "91ba9871-c400-4c32-bea2-9e11428fa544",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31e2c100-5de2-4203-8512-02f18b913084",
        "cursor": {
          "ref": "aefbc641-4fa5-4142-a8c1-b8fc8b2e55f4",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "b9332c89-494e-48d7-92b1-470c3e3f9c17"
        },
        "item": {
          "id": "31e2c100-5de2-4203-8512-02f18b913084",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "39cacd43-7450-404d-9c29-979a0c3cbd39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcf7d33a-eda6-418c-aa52-b514677ee398",
        "cursor": {
          "ref": "59d73219-fbdb-4b63-9169-a3f852e91a4b",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "3e673e1d-1726-42df-92b6-e284e6da4eb8"
        },
        "item": {
          "id": "dcf7d33a-eda6-418c-aa52-b514677ee398",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "e85801ac-e826-4c4a-a1ee-df8313fa3187",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc060817-8740-4a19-b5ee-1776fbffa1be",
        "cursor": {
          "ref": "038f4207-0289-4714-9cc0-7203670a2300",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "e4d5ad6b-604a-4113-b7f5-0e8e6d425e28"
        },
        "item": {
          "id": "fc060817-8740-4a19-b5ee-1776fbffa1be",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "7a86dcbb-a2b6-4d29-b5ba-ddf9323c2f6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "035e7bd6-bdca-4fbe-bbc6-1d7d6050de00",
        "cursor": {
          "ref": "6dad2ae9-02c9-47eb-b250-455e1dd5e552",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "026f3ffe-464f-4bce-8474-a5bc9d1e5518"
        },
        "item": {
          "id": "035e7bd6-bdca-4fbe-bbc6-1d7d6050de00",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "466cf853-9fbe-4578-a26a-1315004f4b12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f56ae5fa-52d2-4001-98fd-1e68a26bbcf5",
        "cursor": {
          "ref": "b46c149b-a08f-4167-9639-ba5fff0a137a",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "b011df49-4e6b-4208-b841-b8a1cb6d1f8f"
        },
        "item": {
          "id": "f56ae5fa-52d2-4001-98fd-1e68a26bbcf5",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "508354bb-5dda-46ae-afce-9700da19c940",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40dc82aa-96d3-4531-a4d2-823225e95ce5",
        "cursor": {
          "ref": "3d858a09-fae4-4ee1-82ab-2bbc60c71ef0",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "9853bd0c-fa5f-4a96-ace9-6183cf39b9fc"
        },
        "item": {
          "id": "40dc82aa-96d3-4531-a4d2-823225e95ce5",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "b63245bd-4efa-4865-9f6b-81bbabe4645b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27f1ec3d-0db2-4a85-964f-411dbf1fb668",
        "cursor": {
          "ref": "d3bb36fb-d76f-41da-8fde-94e0dbf5e93e",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "e2d64b62-4dfb-4f9b-870f-99308b63c575"
        },
        "item": {
          "id": "27f1ec3d-0db2-4a85-964f-411dbf1fb668",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "a4677392-2379-4b1d-83a1-fec69776e711",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "864840de-34b1-4125-bc4e-88a0cc83caca",
        "cursor": {
          "ref": "a89922fa-3586-44ca-b987-d1a78176def9",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "9239ab5a-c795-4128-ac27-58e9928cddf7"
        },
        "item": {
          "id": "864840de-34b1-4125-bc4e-88a0cc83caca",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "230ac102-8531-4092-9e51-42faa7bb0e27",
          "status": "OK",
          "code": 200,
          "responseTime": 116,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ea7dd1a-0200-47ad-b8c7-f90e31ac19dd",
        "cursor": {
          "ref": "38b3d919-a1d8-4bb8-a932-3420d897c0b3",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "02267ce0-db01-4d6a-9bec-3742661332ac"
        },
        "item": {
          "id": "5ea7dd1a-0200-47ad-b8c7-f90e31ac19dd",
          "name": "credentials_verify"
        },
        "response": {
          "id": "8e2afd94-8f2b-43e4-8267-58fd068cd381",
          "status": "OK",
          "code": 200,
          "responseTime": 2434,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fd1c297-20a5-4bd5-811a-63ac35e33b96",
        "cursor": {
          "ref": "dff8a7d8-248e-401f-8361-c3b98a029e68",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "e2bea7e4-a611-4c17-93be-33c53d1f33bf"
        },
        "item": {
          "id": "6fd1c297-20a5-4bd5-811a-63ac35e33b96",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "3a7123db-8372-4522-91ca-b64e3a4e1295",
          "status": "OK",
          "code": 200,
          "responseTime": 2835,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "69ce6e2e-1dde-4358-9c60-fef1b6fd2a77",
        "cursor": {
          "ref": "99f562ba-56b8-411e-9519-72601dd6e80a",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "32bf2df5-8635-4d0f-a730-4ec88c3fc7b4"
        },
        "item": {
          "id": "69ce6e2e-1dde-4358-9c60-fef1b6fd2a77",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "951fc263-cccc-402b-b9b2-d293805ccb39",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69ce6e2e-1dde-4358-9c60-fef1b6fd2a77",
        "cursor": {
          "ref": "99f562ba-56b8-411e-9519-72601dd6e80a",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "32bf2df5-8635-4d0f-a730-4ec88c3fc7b4"
        },
        "item": {
          "id": "69ce6e2e-1dde-4358-9c60-fef1b6fd2a77",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "951fc263-cccc-402b-b9b2-d293805ccb39",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69850b50-909b-4246-88fb-eba952831b00",
        "cursor": {
          "ref": "c199ffe2-1889-45d6-a70f-23e4a4ca77f7",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "a4fb8491-8335-486d-ab16-3af662a549c9"
        },
        "item": {
          "id": "69850b50-909b-4246-88fb-eba952831b00",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "2ea851d4-a0bf-4bee-80e7-977eac8dcbf2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "536a03bb-91d7-4adc-a7ec-bcf5d7e46ebc",
        "cursor": {
          "ref": "a538baa9-0e7a-4e46-a4c9-aaad47b32b46",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "83dc2b34-9fd2-4841-af20-cef04bea57c6"
        },
        "item": {
          "id": "536a03bb-91d7-4adc-a7ec-bcf5d7e46ebc",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "a9a5393b-10ba-476f-b893-185af1d03372",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}