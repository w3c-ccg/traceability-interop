{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "b450a7bb-704d-45b5-995e-e85b89eabc0b",
        "name": "Clear Cache",
        "item": [
          {
            "id": "794613b3-87a3-4831-b5b2-60296cf8c575",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ded5bbe9-76de-434b-bcaf-251df01055f7",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "fe633b82-d083-4441-b82e-c6a596266964"
                }
              }
            ]
          },
          {
            "id": "5a60f52a-2768-4b87-aa79-c38228f56063",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4d86dc08-078a-4af6-84a1-54837ea37a91",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "e3d544d1-f0a4-4157-b069-9d0367016826"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "86236161-4a7a-4e8c-8d51-062cf42cdd64",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "efbcea40-3298-4fc2-b587-934535fe4914",
            "name": "Positive Testing",
            "item": [
              {
                "id": "756e0187-102a-417e-9a8b-74ab8d1953e0",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7a51ba86-9af9-4a04-bddc-789fa0798302",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c48c2d38-356d-4b41-b96c-8a9ee7a8577f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4d611346-fa07-4369-9219-28e13596ce68",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "dde94f17-447c-4051-a181-0c714010b825"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1d0389e5-a31b-45dd-8c78-a311295f6f0c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b5856e7b-a84f-4345-a03d-471c474c9a18"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fb7d35dc-fb24-4228-bc00-a2bf0aad9103",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "27126de6-2780-4d59-b5a7-14a28b0fc7bc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2e47cd5a-1710-429e-ba84-b5aa32e781d5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "00f8fcb5-955c-46cd-97de-1bcefe86d4e4"
            }
          }
        ]
      },
      {
        "id": "8537b85a-8161-496a-99d1-a09154bda196",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "c7f42611-1b87-4c6e-a094-dd959f3cdbbe",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c1b1d496-6f41-4f24-99d3-70782514db38",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "dae4b0bd-e11e-48e0-b56e-22867ba4e9c6",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a86563c-932a-4501-97f2-1e7cfa48881e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7bd28c3f-39db-4a18-99b5-1658ba755b1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a7d8df4-1226-448f-8081-e442c9ab9961",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59029591-b4df-45d4-9aaf-ecaa4ffcc595",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3b8cd217-698d-45e3-a8ea-556126559999"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2cf5bea-96be-43c1-af6f-97022ca3d86e",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3f7d6b3-ebe1-4cc3-a98a-9e023f0b8828",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "04079bd2-a15e-4f3c-a902-06d1a3a4fb9f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4e5508cd-23d0-447f-b857-9922346e5ad8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b4bfa932-f1c4-4f06-8d18-7bc9f26a87ae",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f591dd12-b0df-4a01-8c79-1a4024c9b22f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cedb3807-d6d4-47a1-b07b-00b93bbdf0d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03d72113-7605-4371-84e4-379cabe1aafd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75a40c8b-7f40-4996-afcb-b011cebfd2eb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "52b58844-4f45-4e30-a746-d9754fa980fd",
            "name": "Positive Testing",
            "item": [
              {
                "id": "433fdb71-18e5-4b13-be78-ee0b6a56e0c1",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0edc5507-b343-4707-80fe-fbb9107124ab",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "46b6e7bd-d91c-4fba-a1f2-47cfcad34eae"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d43943c3-abd0-49b2-98eb-d8e084cdf72d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "25f84645-129a-4784-b177-582a4eca1d2a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "16894336-470c-475c-bc29-511059fe00e9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "19b81f8e-7adb-4bb4-b161-5ec1e35c7f76"
            }
          }
        ]
      },
      {
        "id": "10ae4f53-77de-42bf-8137-317d5b31b61b",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "716ad2ad-5d13-4d75-a2b4-74b3b0f658d2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ff244f9d-a6f7-4752-a6a3-12c55936cecd",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "2b9a69bb-a8d1-4f98-9432-ea2c0afa80cb",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2026646d-1e49-491b-a3c9-36f57245d78b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcc7c60c-7fa3-4130-b037-f61d05654b32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ce8fbc3-91c3-4736-b373-52a9a22dde92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8efda4b5-7e46-457b-85fd-a080232e648c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f45b6ff-ab14-4738-b335-292c92622fc1",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d4597bb-1788-4e84-ba5c-5e40696ef657",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c751b57-f935-4023-aaf6-230753773ca3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44f991d3-525e-4976-b1af-27e9659cd756",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "76e26f33-5825-40e0-a948-d3cb2f815977"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dd0d001-6aec-484b-a74d-fc6e9c530b92",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0957ed6-2da4-451a-abbc-6084e8067192",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3531079-8e97-4333-ba7e-7f935b3617e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37c64c91-6913-4568-bd39-366003702aeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "90762d59-c94d-45ea-82d8-6f5adef8d3b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20d40a73-b10f-4a51-8e38-1715984e788f",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "198ef7ba-a15e-43b2-b958-9e8abf7d3a7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d2de309-40bd-410b-9eba-add30dfca402"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e3ba8ef-aa8b-40e3-bead-8827a0989bf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a94fe693-4503-43f9-964c-05e67be4a326"
                        }
                      }
                    ]
                  },
                  {
                    "id": "483b7f90-4b92-4e20-a091-1d73ca5c7720",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0347f239-e654-442a-8c44-3be542ab1061",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82e32452-9833-4f46-b752-e1cd78e287e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "281cb71f-7ba3-4d3a-9315-1b781e92f672",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e467ae44-ba6c-4025-a709-38610effd722"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89e0da4c-32d8-41ea-af7e-519df2349ee8",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b0fc964-2810-462c-a561-70258b6ac22a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2847922-8b1f-4269-8462-1ab3d9028778"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0685f935-64c4-45d3-87f9-2399b69a4ba7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6497bea5-0f58-4e58-ae49-4f6f270febd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21ec9d71-b0ee-4a4b-bde2-1e99b42a6f54",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5e49c95-655b-4041-b192-03552875c3d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ee96f1c-5d21-4d38-9344-20091529436e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55890007-b774-4021-aeba-4804d368b103",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1febd116-721e-4ae3-9105-26241b595a0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17c9ee5d-43a0-4668-a2e2-009c1d8bfadf",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ddbc86f-5866-49ee-944a-64ca29a06f63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a25ab308-9a70-4de4-835e-fe65c371aba4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcb60ec9-3d02-44d6-aa5c-948d8eb2c628",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "288e3dc0-81bc-40c7-a936-69c75cb5df4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c71ca70-3783-46c5-b9b5-2c50ca6bef70",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eef179a4-24e0-42d1-86f8-9614f9ab7674",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fe94f8a-91e7-457d-84ef-e6cccf1ee6a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "673523b1-a1fd-47a5-a346-699d208e821a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "821101c7-729e-4c17-b703-6e620715de46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb9ab6b3-7b86-446b-bf52-dfda9eb35b1d",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee05f462-f05e-4df3-a7af-a473442081ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7828917-04b2-4f78-b907-32710282bd55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "223f9c48-c486-41fb-9e10-79e25bc81912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "879ace8f-f4a9-4d17-bf10-5908ad42ff0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51012dd5-d887-4daa-8863-ac10e80a254e",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f824d1b9-9d38-4381-b2b4-6ac35c5c192a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62f5b791-e034-4f07-97ae-3e67183f02e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "914798af-dc45-4908-a840-27b0ef94be56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "efa12eb4-469e-4ffd-95bf-e185d05fe2d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c5ee67d-331e-4c05-a6e2-8a92c12167c1",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "825e68bf-ede9-4efd-8bf0-b681dfca5e75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f74af804-7da9-4cdf-9e7d-429f818a6ece"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88c47c8d-bea0-495c-bca8-51d98d59c25f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7dbe6d94-05f2-4268-bed7-cddb4a636cc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97a2532f-eb8b-424f-9f46-16df2e8b4497",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efc075d7-9ca0-4f86-ac1e-a37d6e3a8ea6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "642d2d14-34ed-4983-919a-8d7cbeabdbdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f1bf692-85df-4684-a2cb-992739653045",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4512a02c-86bb-4f23-a29e-3fb8ae2f86c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c4db63f-a05f-49cb-aa0d-831167a179a7",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67d3c7de-efdb-43d1-b213-ab813205e7e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e24477f-2d4a-4b2f-883e-511a09042ec7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a92bd8e-888e-4166-be81-34c066e799b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "09a869c7-8721-477e-8197-ab011f0c33f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd1278a1-d33a-461e-be40-d88cbb43ff0a",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caacd9ce-5350-4aa2-9d5a-3be00d86535a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d37622e8-cc90-45ae-8363-b452e6671a4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "668bed63-93ab-4c52-9eca-1db89a416362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "de4c0508-52f4-44d6-abb6-b04d20f36e74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15c26a7c-6e9e-4909-ae34-56d2c409ec90",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3e5ffeb-9cc5-4adf-8e11-6b8c1c7dd4f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bf9b32e-a79e-4131-a14d-815b29ab3e23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e468324-b452-4cc1-8993-982b97c5cc8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0d9c7649-902a-4e5e-bc66-f0b0d081b20b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a9eddd3-58d9-4973-9571-d56cb5aa8ae9",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4166ba6-31ac-46eb-a41a-52d03e5b3263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e745c36c-8ef0-49dc-b053-217055207620"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a6cfa8a-579c-403e-87d9-835d05ac87d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "818bd46b-79fb-4e47-84e1-43487968ebf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "469be6ce-628c-4f52-81e5-1df401215cc9",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c841b208-74a4-4ab0-9d36-4df7c66b6835",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d8227ff-bed9-45eb-96d1-29662040ff61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "814a5099-eff2-49c8-ada0-b802e42fdd4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d1038be-6280-4fd0-b00e-7c157779b764"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d409440d-92fc-4b16-867d-d7ae0d1d3ec5",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b376ff4c-a4f2-4731-a51d-5759b840b26e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99563f70-04a4-4941-a1e0-0a5ac444f674"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b581c1be-724c-4e8c-895d-1e885b583c23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "989ff8dc-644d-48a3-bc46-24dc0a557ff3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d95ec89f-e3c6-4d77-9c32-9624bc7b01b3",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5031abb-fc60-4604-9e3f-de420c881a5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "584a06e9-3646-4e6b-a191-d1e7ecb064df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b946e1af-26a5-48b6-b983-fb574f21acd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f294f0e-2371-4d78-b0ca-07266eae6d4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "994a9ab1-770e-4ed4-8447-ba4c2ded4ea7",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38d917ab-7090-4a2c-8b91-e08903e413bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31efb014-582a-47be-b7d6-0ced7176183e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f1fb9ef-7709-4a1b-9e95-118a5468445c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0291b716-9898-45b3-8d69-6c93044a5601"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bba4dcb-902d-475a-a326-0568ef5c73b8",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0b1cbe3-848a-4574-ac89-41392760f0ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "285784ca-be7d-4b67-8383-5fa9e94a42ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a166e0a-046e-47f5-84da-eb8fdb81a985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ff63c9f0-61b6-4105-af25-f8fe57031d5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afdc9973-3840-47ea-aad8-2575668bb8c5",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1efe2c35-a7bd-48ac-b58d-c3a9dda2f438",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "310467d0-6636-405f-aea2-e36314a28bfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30c8bc3f-94d3-454f-a029-7c45c0dd27fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "381270c8-557a-4e0f-b33b-24dabdfdf476"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abf1ea77-f010-41c3-b897-a44fe59c1d70",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6d6ab9f-5042-48c8-a9b3-f1fc2da801ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86324986-801e-4c93-bb35-10063275fd71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "891c58b2-bdb9-4daa-a4ea-5b12271adabb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "67fe2913-e869-4f24-8f36-4b725bbf2f92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cebe601d-f8b6-45ff-aca8-5205aff1952a",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8b61b40-f108-4811-8c4f-e5ea4ff3f961",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a96b5b6a-749f-4ef5-8bbb-fdcd0530adef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61e2676c-1222-4454-a2ff-a01409246fc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "092367fb-2a9c-4a83-bbca-1433d622c7d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53339971-e190-417a-8fab-e05169bcff24",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00591659-7812-4d31-b509-f99b28339f35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cced72f3-1d4b-45c6-a836-6dc907ccaa77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c581fece-0932-4355-920f-b9c36353cc44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "df1d60a0-1061-49eb-87b0-aba21dea88c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72f29353-87f9-4549-b2bb-5990c219ebbd",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "665431c8-a13a-45b2-8835-0ca471c31e3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25f596e8-5831-4cbb-893a-6f27b40ff2f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeaad22f-5df3-42c0-a13c-56b893b0ea83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "026d21be-5e9f-43bb-99ac-1374e4eee331"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75947088-3b8e-4380-9541-88ee911d67fa",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e457b217-c2d9-4db5-b9f9-b769f172eb23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e39dc8b5-a50b-48c7-b113-4d6f1a225e29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c170f06-3684-4a67-b10b-4970999f03c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8efdf9e4-f9c4-4115-a65e-94af02e65b2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e16ace92-e49e-47ed-8629-c8b264944412",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "658f912d-cad8-4a1a-a798-346afda81672",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cc0b590-5622-4329-b5a3-b6dc5102c1ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f0816cc-2a5b-4f55-a195-bfd3c289a0e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "47e69c3f-9284-4078-ab11-9e79f1d72c18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6e59b8c-a352-48e9-917a-a2077c26b763",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86f17a59-ae45-49b0-9611-058a24afb527",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9077ab1-9156-4946-a6cb-2f533a1e5d09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa7af384-5192-4b40-88e1-e97418dd13a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2e08136-7983-4354-a9fd-37bed5097aea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d801ebc1-11cc-4380-9f9e-14ca17e81120",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3104f94-4b14-48c5-b9b3-bb5d856d3ce7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d270f58d-0f23-4fc1-9d9a-d67542dd53de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35b43cad-833e-499d-a351-6c71456abb6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "aae86504-07c0-40da-b53e-939ca3ebf3df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66f7db4b-1887-4c8d-803e-c09452a87717",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9885d2b-c6f6-4734-a3f6-2e34f53971a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6ec5bd0-75a9-4f95-945c-6ce086492c54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c54f1bed-6bdb-4e8a-8880-5c6a19135e02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9aeddea9-2e0c-437a-9315-7952bad0ae63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62ffa5b5-40e4-4ff4-8aaf-56052f17fa8d",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08ee58b6-7b2b-4e80-83bc-851685bdcd68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfbac98a-3ea8-489f-8aa1-774f813ac32f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "716f38ae-2ed2-40f2-a9b5-420f684604d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "10ece49f-7413-435c-94cf-57cb2afd257c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8618b7b2-963e-45b3-b3e8-42cb5f7b6706",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fb26fef-1b7c-47bf-8aad-8c6f599a4cf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "098be655-7804-49d7-bed1-073b9b647ec4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6a10c53-429d-4cab-8d07-42cd0af101d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2489a4e-b301-4f48-84c2-8a5f14b579ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03e03fbe-aba2-4835-87bd-4512e7394982",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea8de138-5be7-4eb4-84ce-05d18b276798",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92dc51c2-9896-4f6f-b84e-fccc5a83351f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a7a5d6b-f163-4314-9858-a4c0882476ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "16ec799e-8ffb-47fa-b7e8-1b6ecd2b28a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d65ca13-ef81-4071-8456-2bfe9e97df1f",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cad2b93-c9b4-4958-a8b2-641e15b72e6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "024ef5f9-a5ac-4d62-819d-52acae4f6aef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "550d974e-0946-4e5b-abf8-815dc19c0c26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "83f71e0f-8ceb-432d-8f94-548cce21dc5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ce39faf-d1dd-44cd-a586-e9545b9015d7",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4f5a2a2-fe0f-4feb-a6b9-e991335a9d8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0a77486-b200-4ddf-b6b3-dd537fe49abe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87067e26-b9d6-45e0-abc9-b8b9add735a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d11cb3f0-6ed3-4fc5-b1d8-c25c5e0c3750"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8ad06e9-2193-4176-96e3-98c758901c39",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae478b92-5a2f-4a48-a21d-932c0d14b161",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee57ca70-e113-4538-bf44-689a8c138a36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d58b3b60-129e-49cb-8e2d-557187e49980",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "200dc269-62e1-4ac6-81d5-8fcefc42be96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78d88cf9-a3d8-4913-a33a-9cac5165f554",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4367ef9d-d07e-4fd4-8a32-fc8e0ac3383b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23b8e5f6-90d2-4fe3-bff0-3b162ffda942"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d236d507-e415-498a-9fb7-5bfbcf94b351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3f9a1f11-8f5f-48e5-b30b-c9b440055be6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75b8a5ec-588e-4c44-b6c7-594f6fa99d4c",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cd82961-cfac-4a86-951e-1a6299186104",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7744951-378b-4f93-8608-4cc1c489fda4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a937c3c-ad45-4897-85c1-ac258f87d021",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4370ba04-b009-489a-857d-a69eb2554162"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f08eb8f8-51dc-4e43-a0b9-3f90f7eedce7",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1091a2f1-8098-4143-b7ce-57ccea34bf95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b6fdc32-02a4-4704-8cda-56acdfd79ca2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1140548e-0d0f-4648-badc-2807d2c711dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "84bd8bbf-8e73-4981-8582-67ee47153934"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3232915-8c0f-4a63-b746-95aef20a63e5",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "268de629-985f-4c24-8127-8f1c07d3db1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91329c37-4996-4246-9a05-0a18a499f5de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16933eae-15cd-4492-ac65-412f7f11928b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "a8b44746-0e38-4071-b7d4-65348e66c7d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f2feeb6-09c1-45e7-9a09-d81c5fe954cc",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3721be4-3ab9-4c98-9b1f-d9e66cc20524",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c48906db-ec94-4b98-a90c-cf94e9c2cc94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b226aa14-f3cf-4ab6-b4e6-df3823644a12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a484092f-2024-41d6-81b7-f68588fea3b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e108e5ed-a6cf-4ae6-9946-f9c32587d86f",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a052f200-1d9f-46fa-b994-582b53f82bc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4111ccc-c320-4706-8e9a-8b1bf3782824"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94fbc935-828c-482a-a1a0-d8a33bc5e734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "fdc1894a-8407-45ce-98cb-b9840f9c480b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dba33576-951e-4839-bf61-6b3d81389434",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75787767-395e-4564-99b8-d2c12d47f5a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ee70828-ecab-40b5-9a98-6f02b8674078"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2907f8a-a588-47ed-81c4-6b1085b97532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e996fbc3-e6d6-4f6d-9d57-b53eab10ba84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a210e5e3-d37e-449d-9337-b1ed7e00af3c",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78380cf0-7a48-4482-85a1-db16bacf7e01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "732a0575-2d4e-4699-b040-d4ac51d60586"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "192f5ccc-f32a-4498-8f2c-cbe1d179ab58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8aaa932b-d311-4773-be3a-d1a184f47c92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b91a4834-1fd9-4aa1-bdce-a12bc2068647",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fa302da-999b-4125-b90f-8114a3df799c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22b231cd-97af-4ed1-8832-8a2050201a6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4acaea33-2854-4fa3-8fb5-b5b54b2ea748",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "57d42548-573f-44cf-b1ab-0e9bc4688fde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3946eb63-82a8-4c73-b936-28d95f948a7e",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf353ba3-1831-4980-81a9-54247fe5ca91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5065e875-9a0a-4481-94ed-7704466b45bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "595ea87d-5fa9-4c18-bc42-81771ae92d88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a234bc21-48bc-4f68-91ea-ebe95269f94f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95473b71-12f1-4a6e-9a33-5b25ae8b4494",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "974daa3e-e03c-457d-a479-e3e944961e5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f282f00a-e5a1-4a33-84fd-6142c9cff9f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50331ec8-2418-448a-a590-ba54b16d213c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c0b7f64d-84fb-4d4d-ab43-384587408172"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f914c78c-b686-4f82-a504-34cbac219f83",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d0d6035-d83b-49ce-b20d-2a69b418e0f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37a83e40-1101-4d47-8372-dedaca8737d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e917e8bd-dd0b-4c29-96e2-08dd2fd105f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c5202cfc-d99b-403a-8609-41f7de210bd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c36a5c63-c5e0-4293-9427-4816c8b50c10",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec9e6784-5af7-4c6f-8be7-457993396fd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "172dc334-c2bc-47d1-a281-3d3b59d27405"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9856ff60-67b0-4bce-9357-efc2a5d9cc96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "190506de-f54b-4991-b5e7-7c001547d928"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5202118-0a33-4e05-ae8b-6ab566dd052a",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38e70d5e-7623-47f5-88a9-789d125c94fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97e33fd0-394c-4c6b-96ab-d2c4c8116974"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e6751c9-9435-4b4d-a188-b1bda79d6e56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f82fe950-a2a9-4045-8d5d-5f094a56f54c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3910f1b-1f63-462c-ac76-cdb3a0f82165",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99ce3a5e-9156-491e-bf11-cc704c1e0e2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bceaecc-d657-4f85-b516-69f45de72e3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1182fbd4-55e8-43cd-9706-e408e1321ab5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "44f90416-a6aa-43ec-849d-b89a7349e4db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc94a0ec-ba46-40f0-bebe-4aed8a36ae6c",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff28c625-ccb5-4974-9c01-63ae7b4625b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d331a58f-fb22-4ca5-bbf7-3c1e833a16aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eae095d-289c-4640-9eba-cc98096f3802",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b943c5e0-41af-4730-bee3-5c9308cf0ce1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2906642d-00d3-4701-9341-72c408c2f6db",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9cc221d-e910-4ddb-b260-114b12243ea4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b931d444-d893-4db1-9a47-cfcb0f370cb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b867ee5-fe21-40e6-a1ff-fe9afe9f6521",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9eb7bdf-9288-4f07-a95b-b629a50ed82d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36818633-3631-43da-94da-0e5b14252a90",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "312e01be-2604-4116-b345-16620e2ad0eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e1ee997-da7b-40e3-a566-df6062d75d54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab72d011-b933-4106-b6e2-5927b7b6e130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "a1cfacb3-6e2c-48e3-8bf6-59f559eeba4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a80c5e7a-17bc-4c85-9653-9d050607726c",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "102baa04-5f42-4eed-81ff-18abd5ffcf78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a803815-6e0c-4106-812a-07a16370f6ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "664fff20-5818-4d63-b505-95681b298b73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d68e6558-e33b-4fc7-9eb9-3e7a308e59d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3101eba5-29dd-43bd-b082-8378a95573a3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14be2ca4-beac-4d48-aaab-a92b4650d8b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "860df58b-8634-4bcb-887f-580c884d1e1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "945540d3-f2aa-4a73-95ad-7f18f58ab339",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3b83bdb6-c7de-4a78-a59d-5e4c319fea84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1ff8904-fb2e-45c7-b8b5-97bbd62a41ec",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9936e9c-35a5-4885-a87b-2e3e7257ddaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4004e4f9-5073-428c-a357-fb13db52f3a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e8a15d0-a80b-47b7-aab2-4f15e2645443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c08cb962-f3a0-4dfb-8fef-bc715d20fc2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97a87d14-2dbb-442a-b4a2-20a0fef90bbe",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5ccaa53-731a-4e90-90ac-d5f53d879a0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a42fbfc9-e55b-4f7e-97ca-d6afeac3dbeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e7d2270-bf4d-4b38-af0b-6c8467ca8643",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f7581e2f-b442-4db9-97a7-dfb9a43f5a5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e5413cb-dc0f-44e4-8072-01c3157f1501",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7de75a2a-a288-47b6-a6bf-e499558b7e15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e9f8996-9aa2-40fc-8f1a-1a4cf505863f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26727d58-1500-4021-9f9a-ef1c08c0867c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "45b9f021-1d68-4b20-9d56-500d64bdef4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fee3f854-04d3-48d2-a80d-004533f15977",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09e8b16a-becd-4078-a613-db823e8dab2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de8895b3-6ad4-4694-b79e-b4934605abf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ef98e47-933c-479f-ae20-f7fd976ab396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a85a61f-8acf-4c30-8bd9-c1c70bc8b0c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e43911c-40ad-4e44-922f-547fb54d1938",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e73088a0-a98d-480e-b296-ceb639830b57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5804293b-fc5d-46ec-b8ce-cf7be07b0fd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "077bc1b8-08ec-4a38-af7f-1bb3214bca41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7d78253-5aa0-440d-a68a-c912c6e497d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14947014-24b0-48a0-8dbb-530b811553ee",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "322ff72d-e95b-406e-ac00-35301eeb90b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20b07d95-a186-437a-b46e-732466668816"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc450a7d-1393-4095-9179-2887180cdbce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4cdfdb13-f446-4988-96fa-f80b718b6241"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e849141d-837b-415c-a8ca-066582aab7f9",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec5c7adc-fbf8-476a-9e45-2738760d5e0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5852d344-d061-46c2-b7bd-6edca5c3eab8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e62eabe-9813-4770-bee4-3aeef99abf0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f3add04-9199-4094-aeb9-b0c9ce71ca22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32495a14-e48d-4051-849b-b5f7837f0b25",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89a4750a-20dc-4bd9-b16a-998d3a4d0e61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4b9fe35-ca25-47c1-9fb2-21256bf1ac6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22120a69-39e7-46c8-88d5-36b644a82697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0993cf4f-1f1c-43f3-b007-76eb56c2be23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf61ef3b-cc08-4c28-82d5-0c22aa934e11",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86b94466-d1b5-4f38-b6af-47c22b1be290",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76c54a46-2d17-412b-8bb1-050b652ccdc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99bde479-f6aa-4c21-a75a-90431d0183bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c4eb7fd7-52b3-46b5-a94f-c8b5a31b3139"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa057245-eb2b-43eb-b8ad-49de9dbfb5ac",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bbb0a9c-38f2-4fd7-91b9-f5b1fee5c418",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4466310-2d54-4090-9c75-255b36a3f3a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "086185ab-74f0-4471-bba7-de2778376512",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "f984cfee-6812-4ee9-a592-d34510c4bc05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef49f8b4-6352-4bf6-9459-ce556dc64141",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a3bb8e8-79a3-4a79-9e90-5488a2fed912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6fd0374-5b5f-455d-a27f-9d6f85586d36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65537e69-19f3-4c49-9da5-a85d9b313ac8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "afa59c35-489e-4b05-b5a0-702fcd1521f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e46ea3b-b09d-4c5e-8248-6ed0ffb34cd1",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2832668e-9bae-4853-8e62-54e9cb0c7c49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bfb2b92-5d0b-459e-9f99-cdf84a77e4f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "092feb4b-6676-40dd-84ef-7f9f09030671",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4c36658-6540-46a7-9cd0-f405a44e1aa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d6cd17f-dca8-4ece-8f39-3a0c35fd1473",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5a9eb79-afdb-49cf-aafa-ae8cf58b919b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65962c59-e7ef-4293-be53-4e980895cf99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f643651a-a710-49c7-92ec-d92151dcff8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b0ab4f8-7a2d-42a5-8f8b-2ad1b87c3dfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b09412b-23ae-4718-887b-e06a82940643",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcffbf20-e39a-480b-abcc-33ef9cc5c093",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8cd6a0f-f047-4287-9a72-43888c20d85b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e22e3c2-622d-4ebd-a052-028267efea97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ceaf8a2c-425f-433d-a5b8-c3dee4ed3435"
                        }
                      }
                    ]
                  },
                  {
                    "id": "849ec932-e750-4aab-afc6-f2e9960a29cb",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2234e63b-c9e4-4aa3-8808-29776d333b03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d5e884a-ab50-4953-843d-a34a25217060"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45b4a6c0-3a36-40e2-afcd-1ff0f11ccd7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "762679d2-b05b-480d-a909-efc147b9fcc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a24959ec-bf26-4a78-b3b4-5668004f8478",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b612d0e4-9df3-4de0-badb-ab5b5daf4973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b7d09df-14b2-4d9f-8ce9-35b37de4f499"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86ce6999-7ab2-4df1-8c0a-604b4b1b8e30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6f95fbc6-67dd-4098-9ae8-47abb17ae468"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bb5ba8c-13f0-4742-bf98-41ff7f2f07d6",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa1447ee-dc5e-48c0-9af4-6005524f9cd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f5a3b4a-cec4-4d94-a2b9-1bbaf18e7773"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c4afd4a-d397-4136-9f69-978e32705f1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5a5ee2a-1c4f-46a6-bcf7-593ee31e3559"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab48ec07-d2d2-426a-8a96-97cc33e57da5",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64278d72-e1b8-4957-aa5d-0d30f9627e67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71826ae9-30bc-4655-b3f0-12d72a27563b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53b6788f-1705-41fd-b41e-14ed64d36705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "be66622d-a0f6-43c9-9e0c-9e9be971820b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf0d2ec4-ae04-4c16-8dae-5b3ca28cc65f",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac9d6e67-9103-407f-bc66-a5e40aa5fcd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a079ee1-bcba-49ab-8ad1-b47e635ab200"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b3d0a22-aa66-46ca-bead-be0769f209c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "573675ab-f133-4540-b916-5793fc10b676"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c41c8d11-e3a9-4d14-b99a-2c2e36faddd9",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf4ca0b3-f7d8-4dec-8238-2f14bdf8fd25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a66e31e0-a7c5-4d3d-9eec-437fb0b85c4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b80c504-1f0c-4e42-8052-d593b526af55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba7af264-2f58-4a9f-96b4-a348111dc09b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76e50770-d5a8-4ed6-b8b5-70f9fba4052a",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c89c25ef-c320-4bbc-b8ae-5b9b5869b54f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03bdfa80-d361-49a5-972f-aee1e17665cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e97f9d07-b6d8-4f8f-91e2-e77b43ad1156",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6f4d158b-7dc3-4770-8183-08696cfcc0c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f89a354a-17c5-41ac-8175-e4801dbc8bb5",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cee1e53-c1aa-47ea-802c-8b54d3a2dad9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4a249b7-e4a3-4ccb-b5ab-7617db9538a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc70c03e-1319-4b47-a2cc-a7e90c395797",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "598bfde5-4759-4504-aca7-c91d702a1422"
                        }
                      }
                    ]
                  },
                  {
                    "id": "817e6038-cb65-4ae7-bca1-e1c82d44ac80",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "936b22a5-23b5-4230-88aa-4f84d2be0851",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ea53f5c-da70-448e-9103-b4b36f40ac39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05c92a25-9c70-4334-aabf-4306d9c0ca16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "316f3989-c801-4b46-ac9a-24445752f469"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50f0f2bb-da0f-44f4-8b4a-9d658a493a4b",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c286fd8d-52de-4feb-ad3c-37a28cf07b7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59aa2803-cbe0-4236-9694-9bb2a542df64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44af5383-a211-4473-a5f8-c84b1bcee2dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c60461e-5b8d-467c-94fd-ad25984f0f0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0088ee02-be93-4d47-901a-77f3c3c1e1f9",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dea9d13-a453-49aa-973f-c206ebbde945",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b68fcc3-79c0-40b6-b4e1-a01d0cd3ee4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a9efdfc-cb5f-4d78-ab4b-073bbb1ae933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "abe8e4a0-3f49-4ed2-adef-e676e7c726cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07fef590-a92d-4927-ad28-56d7fd4adce7",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c54690c6-7341-4e59-918d-fac15919d3f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df614e71-ec7c-4dd5-9c3b-c7ff7caa0221"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8de4f62-4389-4366-9f03-65409542ad6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1ef3fc9-fbd2-46d7-824a-887778e5643f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b4c405e-23fc-4196-8c11-854f51d3c7fb",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7f8697e-f547-4f83-85e6-d2fce332ab09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59fb3239-1ef8-40cd-a881-5fbc40523e47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf6c648c-d551-468b-85ec-9d7a4b1bd5cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c53aad5e-c1cb-410f-b621-7c21a7a67db2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f5a0841-8b8a-4be7-96e3-5d7d5b35ff40",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c315c3f-58aa-46d9-9dd6-c907fe9877ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "831971d2-5713-4d5d-9c7d-90f06fc65c90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27386271-27fa-42f0-b6f2-b8c61c95ce81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f309b9ac-69d1-419f-91d4-1c7b12cf35aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7c14f31-2f8b-4e97-a42d-f783fe203d89",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f945de8f-3ef9-457c-bbd9-62eb4ed94c1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a4c0a9c-5665-48f2-817d-e50e6d9c0b04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ff9c36b-e76f-438b-a812-5258a9a23151",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c7bc32e9-5ae7-409b-b691-0e1dea15d44f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4b02e2c-638c-4ace-acef-af037674d6e2",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a41440bb-ec05-426e-a70d-fb16fe4dd29a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "104eae9f-ce79-4239-b218-638624f3a02d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d37c0114-398b-4ba5-b978-6207e39d5893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "fde86615-1d8a-40a7-a648-b5eed168014c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66305e6a-175e-4457-87f6-bc5075f8a925",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe1d1c8a-daf8-42cb-b12f-3ed4051ae206",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fe7ece4-9400-4445-aa88-4627a16384df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0489ce31-dfec-4458-9099-c24a53db2f52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d603588a-e0f8-40de-9c22-0d2d0809eea5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1313dd4-bd2b-4eb6-aba4-54e67710a744",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38b020af-7cf3-4da1-a98f-b6201d88f771",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f738b2f-a0ca-470b-b1f4-fadc36083ce6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfda836a-27cb-4d12-8489-c598d066877e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4ebed051-3302-48c5-94ce-95ef86c96d56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55c85b87-cb2d-4e1f-b1ca-d003cf2c3950",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df974b83-0cf5-4531-ba11-82c9e6417d68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c3d5645-9a26-4929-8e41-7b2830522b9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8875825-2d82-49d5-a287-6250ea720e71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "4d99d7de-75a5-45e8-a44b-f2998877dd30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fe3be09-6040-4501-ba25-764e11098fd6",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89228b9e-68cf-471a-bfed-b09c5141c5fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "a3d71785-4078-4211-a665-83d57e84df1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b607a81a-68e5-4ce9-8f94-2f98244a46c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "1d95a07f-0c7a-4b51-b814-c4bf1e9d7f8f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "defeeaa6-dafd-4ee1-a5a5-c5e26a92187d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b3ae7ee3-6fa2-442b-b4ef-a0fdb8ee2033",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c7f2eed-00e9-4613-8cd5-c149f65c8d0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f4652d46-9c5b-4af5-bc9b-62608f8e0914"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "346d4cde-00c2-4242-a220-03c8227e9f04",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5db91531-052d-4311-838e-bd59adf381b7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "840dd019-9542-416d-8a9d-735ffadb91f7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b22953c2-fdba-480d-a284-b13ef43c4fa6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "614ff51e-e348-49af-8fdd-c09ea2e3f990",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0469f48f-f61e-4d76-a355-176882ffdb65"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "314ceff5-de6d-4f6b-9686-2b4c83bec8ed",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bf6f91e5-cf32-486b-a0d5-751dba1d1bdf"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9780d73d-96d3-4fe6-a2f9-0eaa7875d822",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "dac00cb7-6fcd-44c6-b849-23140c9ce43e"
                }
              }
            ]
          },
          {
            "id": "72fe050e-5866-4bd6-9ca9-5776dd133825",
            "name": "Positive Testing",
            "item": [
              {
                "id": "13facab1-3e07-422a-9ec5-745979cefa36",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "b27f59b4-a168-4082-8f69-8adda1497529",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8091af72-d711-47d5-b921-2230fb52a599",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "9b635776-cfe7-4aea-8e6b-55331e2ba123"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96ffcb45-b722-4193-9377-89c5ee4d7428",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5df91958-c9b2-4449-a63d-8ec9ac71c042"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b4ba37dd-4c47-4afe-9a91-996a0f04d252",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "19b60a4b-8b7c-4fd4-96d2-6d6d85f433a5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6cf0a429-b52d-4095-aade-ffbc8325b5bc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "80727c42-352f-4eb1-9d75-366069f85d47",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a8e40c4e-d9f4-4f5e-b657-b01d7b6c7177"
                    }
                  }
                ]
              },
              {
                "id": "f3c3e7da-1316-48f9-9562-6768eeadb9e2",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f2a78977-57d4-4193-bf74-c1bb6b9eb122",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "64f12013-5d39-4fe2-8b59-fd2a88805a40"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7ee9ad36-9206-44b4-bb9a-d13ccee589b8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0f7cf378-3174-47dd-9b1a-4dd090f1aafa"
                    }
                  }
                ]
              },
              {
                "id": "41f40464-d43f-4ae8-9cd5-3076f8de0bcd",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "84a039ea-a452-4746-94c6-2530b7aa6440",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fc21d0d4-b1ee-4635-b3de-45a468084c8b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3caf8100-74c6-42d3-a62e-af9753ce500b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "46a7e3b7-fa22-4d22-b453-c0748d776268"
                    }
                  }
                ]
              },
              {
                "id": "ae35141d-8b23-4e42-9023-a526ba0bf3cb",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cf528d8a-38a5-442d-a649-84282f2bb7db",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1da927e3-fa02-4809-9467-714c4dfd5acc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "552572c6-dcaf-4e8b-b2a5-eea9930f0022",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "b7bb25e1-eefd-4d51-aeb6-c0204cfe7744"
                    }
                  }
                ]
              },
              {
                "id": "521c5975-00e8-4908-b043-50a10dc7055e",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "50e9c127-257e-48c1-8f58-6bbd270e3148",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "48d9207f-1168-43d1-acd3-b17de69e2c10"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ec5304d2-9bf2-4a70-ae40-9f929ce04201",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "ce68cf5c-63bd-48f0-ace9-4c7f0510bd8f"
                    }
                  }
                ]
              },
              {
                "id": "dfe499c2-0680-4e83-b88e-042eda19de83",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "39c5e8d7-87b1-45f9-9e12-619128987a54",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6cfd767f-b8fd-465d-b8a1-5cc58c4c474d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fb02d20b-5e9c-4462-a03f-2b3b8a9ed89c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1247a7e3-34ab-4e83-809d-4181a3787b81"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "53147c12-987e-4e36-a286-b6c981c39104",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b5fd5431-5933-4567-a6a9-2b6598944d18"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "221adc73-0cdf-4d4a-befd-7f4a4e09e91e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e0bea068-2a35-4bea-8c8f-728d141fb262"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "458e6486-faee-4dea-b50d-1bf0af30231a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "44f02d67-639f-4b31-8bee-45a2d29bdc0c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "71b8bcb4-37de-46ec-a839-98db629babc1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "03989dd3-a040-49fd-8810-d33579b89117"
            }
          }
        ]
      },
      {
        "id": "35485965-f414-402d-ab9b-d01475c5bd81",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "871caed1-3e61-4d40-a284-791565c538d8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a17dd915-81cb-43d9-901a-9a4132ab656d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d566aac6-c836-41de-b99a-895fffc104d4",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31cbc20d-3417-47af-ada4-dff4835375b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e94a101b-78dc-4568-945c-3d61a55ce5b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ba374f1-1599-486b-8cb5-dba8499e5774",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed12823a-557f-4f44-aa27-4b16ac2a9f8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a50e0976-b18f-4db7-9a7c-e300410da91d",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa97249c-f926-4aef-a1fd-bafb8eddd9ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9b151fb-b813-4b10-8a36-c210585c5269"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e69b325-6356-474f-afae-e59bbd47b546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "23af9c6a-6e2d-4742-b65b-7d47432f716e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ce2f976-b5cb-4385-b85b-624b7c50cd60",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21623516-7da6-440d-a527-14bba636338d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9a9ba76-fae8-435c-aa94-15199da40169"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b220cba0-89c6-4123-831b-6332b8440c6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8de2ebf0-6da2-4a46-9515-de736360b1b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "389c7474-96bd-425a-ae89-a87543a7ba66",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dca534aa-183f-40fc-bfc3-f7184423bce0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24900e34-8b99-416b-ac8d-10f00fb40dfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c10c113-4a7c-4710-baa3-df911101c0d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1bd7c54e-fe49-4ada-9c65-4092d151e911"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51e1bcf2-6e3d-435e-97b7-28ba3d3ad915",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f90cd0d-5559-41c7-9706-0922ebeecc53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a11d472-15eb-4955-8e78-b5dbb2bbc0f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "701d8f5a-d641-41de-a4f8-6b6ef129437f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dbccd1c1-fa35-446b-8966-051208062ae9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1671752-b23f-44f5-839b-5cce192277f9",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c829a1d-b0fa-45d1-ac87-1070db1a32a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "815089ac-104d-4e19-b958-eab887a58529"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b12f71cb-3d1e-4da0-8365-68e88ff5803a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "adb61a88-e347-4c4e-9977-d34fe79d5873"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86faddc6-3561-4379-b2b9-da2b5c458fb8",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2b845c8-d165-45f7-9857-9dafebc173d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71e521f9-e623-4bbc-ba80-d82f2bd25b37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d876e0e-a2b7-4ffb-8e9f-6cad1d925cc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "baf5489f-638e-494c-978b-2b62a10661d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6830dd1-c325-483a-b44b-d9ea5509b9fc",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5b6b711-3707-4678-8a81-55c264c98b7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9db8c141-c3ad-443a-a361-9a99e809e5b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3509d01f-23d8-4167-ad06-517d45f7fed0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "13e92aa0-02d7-4628-affe-8d5a36f3da7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a1da936-229c-4f9f-b99e-2f9b4a8e745c",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fa2b3d1-aafe-4ca5-9cc0-5b16f2877913",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1799bcc4-57b1-4731-96fc-d65fd4abcf37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba2cc867-eadd-40db-bbc0-0a385437e213",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a5a014f-fa97-4550-ae07-943841ca232f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b95fff4b-507b-47e0-913f-8867a066490f",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3c4232a-ff58-43b9-95d8-5cc0061df57b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5fe3d79-70bc-4c91-865a-a8bc040a11e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03dd0a26-3be8-47d7-8014-dccce44c2aa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a01ff2a0-e3c8-4275-9ec9-f05876c0c505"
                        }
                      }
                    ]
                  },
                  {
                    "id": "669368bc-4e53-4f88-aa83-1625d8a198d8",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff05220d-bd39-4298-aa2d-446d62f4e414",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "004548df-74c7-41b9-955e-13dcd260b381"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f63c9cdf-f10c-469e-ad8a-38dc4aba1d96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "a4e01f94-bd5b-4d9a-baed-cf7217f3e319"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c32de20-21d6-40d9-928e-5fe85fa654cc",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59401630-a86b-4b4a-95f6-61b917c1bff7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5f0b1d7-64c2-41af-8a33-e5b0b8a2f1ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d51b547-2598-4b6f-8ec2-bc8af5fce929",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0a589198-2908-4fae-9850-26876d321eaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5f4f151-428a-4cf2-808f-ee89e8fa9234",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "828b3b91-fc2a-4144-9bbf-12a272f036de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d496231-5a0a-4f90-a1c5-c5a684690388"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ade6a4dc-b239-4c40-8c32-137d9b704191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "69db5474-597f-4dd0-b4fc-f1bab91c0558"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4dc0f4d-6ee6-4970-9416-c9d8402e7d4b",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8433e7cf-d5e3-4eed-af1a-2128c45ef3ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b0ed007-03e3-454b-82e0-d2c7e76f339c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1909f970-448c-4e10-a2a7-5db12b801f5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "d033d920-6dd2-403e-9589-545b5c91fdbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac112aa7-964d-400c-8c0e-0d7b33507804",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "346b8ec0-e98a-4594-9a1a-830e6eed14fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cfc8e4b-ee65-4404-9fc3-d787675ac4c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4621f6d2-e36f-4b41-b015-03a110ba1da3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "52077876-dd2a-4461-97d7-077964922356"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c1f9357-0f85-4d28-952b-cdde5f17cfe2",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60485286-46c0-4d09-9ac0-61ddbf99d79f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d9b6501-581b-46d1-aa2f-bf4607f2f3f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "866a1529-8af4-4811-bd28-74156916eb1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1514348-e4b3-4ef4-a479-c850b77c2938"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3650649-e3ca-4194-8446-b4d55ec29e94",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "738165c5-24cd-4e18-9a07-4009890c2d59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ac8bde6-fa5f-4aaf-af5b-5d20a74fd60b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "610b1a3e-9484-49d8-8970-e3d389a77f3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "546aaa4a-8084-4444-a3c0-379d0a5aa3d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "267f2508-248e-4d76-8553-e98ce7dc0061",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "847d969a-5b65-46c8-9e6c-77c9842d797d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e60307e0-8761-498e-98df-df63a8fd4c2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6565346-5d89-4e3f-8e2b-6e54e9228add",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f18dd97-8cbe-4492-90d5-afe2ac36ebaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eff6175c-aa30-4933-ad23-78bbc4ad3707",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb6dc6fe-1ee9-4ddc-a72b-b626864f0f73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6f2f012-4d00-45ee-b824-b390e1f765cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "927b580e-00e4-40f3-b73e-1f9e10e26658",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bdd7c94f-f748-4cff-a2ef-fafd585ef300"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbcac65d-d536-46cc-96a1-fbaef7123ecd",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46ea6afc-8947-4434-a6b9-a646ff1a5d8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d4e240a-fadf-4700-ac2f-4c0468383461"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af417757-82c2-4188-8bdc-d1d2be0c5f30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4c86a15-0065-472e-9994-4a6d7db98c61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a099777-f942-4e27-9c5d-a4a8a0e23e9d",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5a72ed7-2cae-472b-bba6-76b51326c333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e3e51e2-c3d4-48f6-96f1-e304d0533f5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c41700ef-d2c9-48dd-8f48-cbe18ec51d08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "35e976b3-2cdf-4cb2-b7a2-4916bd324899"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5dc4569-6850-4ddf-b9c2-4ab6a10addac",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a8b7c21-8453-4f8b-b80e-2d522bb1b9ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a133706d-a5bd-4142-a420-dfa59fc06e85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9a73c0d-3025-4a4d-92a2-10875a597e2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "437dec0d-59e2-459c-8e1c-cb6beedf58e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9098646c-36f4-4f95-96d9-3955e8d18758",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "842cc554-cf68-4341-bfbf-f6223d79dbcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2683a5d6-724e-4844-a375-4a2ce1c3097f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "960393f8-e67d-43c3-a2c3-2667ac25e8e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a8749e3-8842-4fb5-9bf6-1bb15b5fe2b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64017573-dd51-48f6-88a9-d5727b1bc17d",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f185e6f-e00d-4961-815e-b6ff9ec39589",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56431d49-6eb4-4143-8895-8ab4db4b395a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b9c1a7a-315f-4059-be78-8288216dbee8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "643976bc-f0d2-4ef1-a1fd-732356290acb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf456213-adf3-45ea-be15-e6338fa0a685",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06c0e0e7-72d8-4399-a565-f4cc5c6810d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb2b2b12-cbb0-494c-a61f-a7fccc76822e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cb627dc-0461-4dc4-88bf-d01e8295a01e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6cab66c7-4035-4444-8c7e-299da983b566"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45596256-db99-4bb9-98e6-34cf2a910a5a",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bd21c01-084d-4d5c-a477-eee9d98c6237",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7ff4380-8cd7-4462-a3f2-6c91bd42ab00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66883fbb-2d8e-407a-bbc9-614a82d60ac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2a608d8-c9fc-4a0b-ad60-1e23b704fe21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "745c99f0-81fd-40d5-8e8e-72b05751ebee",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "775be330-12b3-464d-8df8-6e6d9ead7a6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccdd67e3-9e88-4dba-8f4a-256c82b03c4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08160df8-1215-4a9d-8cef-77e0eecc109e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "baecf912-01cb-4ea4-95db-ae5874d6e818"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67ce2ea8-588c-4a00-9813-d723e35c0d6d",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca7016d0-6d8f-4d20-b416-68227d9c5281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e74fd27f-561c-4fc8-94ba-a702249e6062"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7455126-dc4d-474c-9cfd-264a89b1b4d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "82c52cfb-b178-4d16-af16-7efd4b3ac0fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89b56c24-9278-4997-af58-7a59b2d3a5a1",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69c7cf4d-ece6-4580-b25c-f18cc85ae76f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b288bdeb-4ed9-4bb5-8a30-dbc4ba9f1006"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b035cee-398d-4719-a885-b8ccb2206e9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "54a225db-a0c7-442f-be3d-4bdd0bc1dd1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71e5b6f2-64ca-402a-b962-294cfd2a41af",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de2e5e06-d375-4253-909d-8261b9db4f93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb9abd7d-187c-4de1-80d0-e55dc7436fd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f72758e-75a1-4c87-b794-caa9e002609c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e2695c3-d4e9-40b9-89e1-aa7744724fe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8353c715-3766-40d3-a689-996ce735ad11",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c0738e5-69f6-4546-b5dd-5d1de7a9422f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67b1346f-4dab-4c62-84ae-664d7f3443b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dda7275-f689-4a9d-9835-f5fbe7da192e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d19be838-9ae3-4ccd-ba1d-d3d237680a8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c98a161b-71c5-4f4b-b8f2-79ab64e49092",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1663690-7156-4be2-b5a4-53ef9d84f060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bca1885-1553-4341-83fb-15125192f94a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6da3464-ba49-4f8e-b6d2-27e5768c5ea4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d989bf65-1507-4304-ab7b-9522c583c41f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac5a7464-91b6-4025-b3fb-aa53fc36b0c7",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32d9cdab-0114-4c2f-91d1-0cfbd861a2d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27312d73-d449-47c0-b67e-84a2581a3126"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "712a9790-5fb4-4c7d-b6d5-87a57a0e8a3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7fda629-c7b8-4990-b8ce-3810ef73f2a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7b58988-45ff-4ec2-96e2-03316b357393",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab570763-ab25-4d69-86aa-03d47ca485ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56dbb415-ac3a-4c59-b00b-566673563f36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "864233d9-37bd-4eb5-aeb1-06637fdf8de9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc546104-75bf-4208-be35-5e271177ce40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92dfc8f5-8aab-4af0-a1d9-03452ccc109e",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33145394-5265-4b7a-9263-f71354eace8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e893857-036b-4583-883d-0897cbb35b8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f41c64bd-fd58-47ac-85d2-3e53ae27691c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c8f680f-6470-4fe4-b208-e2439f0475f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c726b11-44ff-460f-b5c7-c9e321ba24ce",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "246d9c23-3540-4186-8a67-736442aa26d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f2da91f-23af-40d8-bee6-022c7d658511"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "676ddfc5-2b88-4778-b037-00219b185ddb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca627d1b-3b0c-4144-9101-bad9a05507c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a8ccace-470b-4fcd-bc67-5760564c05c7",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e21d6055-9b3a-4969-99bc-6865026c9965",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cef09f16-8071-4a34-b2b9-5c1634776871"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f354c045-ff77-4c11-9127-01d29edf6122",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "78912554-8b01-4187-b26e-d462267b17a1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9508063d-85ab-411f-927c-02fbe324d18c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f99633e9-d8d1-4c06-b932-eb30003fd4b4",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea61e069-efb1-418f-959c-32468e4da6ae",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "ae48e3b9-b85d-4142-a520-e3d926ee8a42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4022b66e-afd6-49b0-87b3-1a418221430b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d881fd36-f9df-4d56-b672-da0127e04f18"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2c3c7953-4474-49f1-aebb-926386ea7562",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7afe3006-b703-4c63-83c5-3396fd9fe350"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9f13c7dc-2bd0-475c-a6c6-6d377d13bdc4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ec6fe856-09c8-4d90-bd51-d6fc89dc14ac"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "118b2281-86f5-4b2a-bce7-c6e69844bb65",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8281dde9-37b0-493b-8a3f-0344f405a5dc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "556f9329-2999-4740-80c5-45ca9d7b8429",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "833f3e68-be18-4f22-afd3-8497695a6e1c"
            }
          }
        ]
      },
      {
        "id": "462de28e-0fa5-42fd-88ea-8dd51d065fb7",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "15306e78-b533-4df6-87ae-f6db6cf0d84f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b0e037b7-85d8-4976-a1b9-3ee3314f6774",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7186d6b5-eb3c-478a-a961-33080e852cce",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9826072a-9029-4cab-9ab0-78ee16d8e73d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3544a228-04ba-4464-b0e0-f352f97f4d64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2ada7f8-43e0-4d62-9c59-1283158c842b",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a13b2b1-a22c-4185-bcae-d0a79064e7ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4da65b83-85ca-4841-b373-fd1eef939664"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2795794d-3e2b-4949-838e-56f3462447db",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f17f08c7-3f77-452b-83dd-1d5be9ab69f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94d088fb-40d5-4f53-a7e9-9ded2ff23bf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93e73c5a-40ac-4651-9f18-852c70413ded",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5af5ecf-2d56-45e7-8855-111c894d9a3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e40b113-763a-4d4c-befb-8b0f75c4cdf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e0f453f-e564-4bad-8935-fdc9c400da11",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d012b0ea-0f34-49f6-bc05-04b84db87b25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "163c32d2-e821-4c6c-981a-8fe65e512332"
                        }
                      }
                    ]
                  },
                  {
                    "id": "977a398f-306d-4b36-bcca-747f50090247",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d4cb850-15ce-48c7-bff4-86a9e6c11fc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc54f706-5290-416b-8c95-8ade0383e235"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eab9f5fa-c3f2-44d5-8871-06a2f33ee733",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7afca8a9-0e71-46e6-b95c-d21bfe1f0181",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4180bf1-94c6-443a-9714-4e9f6323edff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db14f8d7-0904-459b-b16d-e6368645d5bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b499c0b5-9792-4f1d-a064-d603ff550433"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b83eef4-7501-4f82-bd52-a7c65c2e3940",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43a41a77-08d9-4fb1-be02-0996d62e6ee3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "467d77f2-92f1-4fd9-83f5-f941853081d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f882eff-e1a2-4926-a3f4-ee987c633edf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faeb26c1-6efb-473f-84c3-b9ae479838f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27967c65-2d67-4f21-a7aa-f60466b15b0b",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "356444e3-7f99-48e4-ab0d-38e49631a427",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f15784d-b87a-4bc9-8827-e577e96fa1e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a67c4a82-9dad-449d-8b77-69b35eb0dc38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08cad31a-0375-48af-90c6-648850247963"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a6d5920-27a7-42bd-ba00-ca89166e1ac9",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f21ebeaf-3405-4411-b919-6be8059016bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8b17449-88ff-48a7-b9e8-cf76cce6bc3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adc88d75-9237-4229-a7b8-56551da9e0b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02ee9ee7-4afd-44e6-8712-d9ce0daee91d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c51bf2cb-a3dd-4c06-ae62-99d1d740f079",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6a1f7c6-299d-4255-aade-9714f98166bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3fa2e9c-be27-4ae3-bdd3-46e5f0e51531"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "596ed00b-1640-4e1f-8fbe-f524eb1c9593",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20b47272-1098-4abb-b613-249a2ce930b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c704a74-ee62-485d-8d50-91144efd53a9",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94eee582-5a61-4046-844b-36ce9b81d7b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1830b5ae-0101-4684-8210-8b867994cec6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "effe7b9f-1c7a-40cd-bab3-8078b0b71d04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e054c122-0a61-4b2c-8662-e50df175ea37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b15f49ab-81ee-4013-a443-931bf0e2bd9a",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cde68d1d-1df4-4737-ab47-3dba67f842f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cad904b9-9dfe-4f56-8340-532226189baf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abfde2b2-2e1d-406c-b7b4-e5735f6b71f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17c06b2b-8c2a-4089-88e8-a58b4d437af4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4087079-8cfd-4255-a0e8-db75945a3bf4",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d583947-b64b-48e5-a5f4-8f18de24f640",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34771cfa-948e-43b8-be68-9e71da17cae3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5cf5349-4e5d-4262-a174-32599bbce469",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33637569-7a11-48b1-9e1a-d3708100defe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "819c80f6-78e9-4d9d-8e3e-e4a1e1e9b6ee",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ad4a17e-a44b-4bde-9ac4-e47b60c499a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d08556c7-2066-41d1-a4e8-de4c1f2e0276"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcd59f4b-b36e-41a8-a8e9-b499b166731f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d37e1c7b-566e-4ff7-9df5-15bbdb0cdc53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f67271f-726a-4fef-a439-b0e5c04f845a",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42a190d6-7250-4328-a9a1-c273fb3994b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c1740e2-7bb2-4f83-a656-03dba8ea2972"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7327a3f7-05d1-4948-98c3-54dbed58827f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4c219d1-8cb7-44b8-8068-e7e5a484171f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbe4299d-16bb-479c-abd5-d9476d4d7740",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48fc0a14-2698-47a5-b348-614ee3d02ca2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c82be1be-502a-404c-a890-1666ca558ef7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d82a9f54-83fc-4d1d-9f23-82426ada3784",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "220fbe0d-170b-4eb1-b150-e746fb8cb7dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae166d6b-6cc0-44fb-9a20-f91e75032a37",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd55f8d8-d653-463f-9905-709a111695ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55c747d3-cb88-4d7a-bd4d-9cf52c514784"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56c32c85-460a-43fc-a05f-5e9a7cae85c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a196e046-a209-45d4-afbd-0122e12d651a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d193c6bb-56be-4174-8635-00899a903770",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4921f014-e06d-40a7-b56f-b12d182e1f26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bea6458a-c84c-47c3-bd0d-eaa0cd1af5de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0ffedf0-2b70-4bdc-8407-412d7d234e6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63908081-d0ab-4816-ad8f-3f436b1ae804"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cf8d752-a495-412e-887f-f6b3f2ab0409",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9445ff3c-6b05-4755-a6e4-5e1a0ec9e2b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1e39568-8df1-4a9f-a370-10e3f0ea10d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75e61c34-1d82-43b8-b736-87f0631335f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "746e9261-9ea2-482d-a185-ed801a715341"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d2251fe-37d6-4fe3-9096-dabcf78e52a9",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5b8edc2-11dd-4113-a954-84604691afbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6091537f-1408-4219-ad81-5deb3e3c0005"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33047a6c-1a58-4e8d-b725-d09e2c2c0361",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "372e48c0-5350-4504-a5db-a3af156b4e3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "555156f9-ad34-4bd9-8255-46ffa53b57b7",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4b5e115-0e33-4651-bc00-57afb862e5a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d78cea0-3d79-4fae-a44d-231f1d7ea2db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42210342-745e-4150-8caf-5819790b62bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32b74232-7c7f-4d4f-a551-8cdc1aada4b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3428aaa3-fde7-4ee3-ae20-bd8add20726f",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ed6ee4c-b5c7-40f4-9f5e-b150a9c459b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b688987a-eae9-41a7-be6d-ee8fe8457d1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "922b3922-8ffe-45a4-a836-674af06b005a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3c9cc42-739e-4b30-b732-ff0e743b19fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d192aef9-f1e0-462e-a8b8-fdee8af25f47",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "015b3b94-9d76-4a27-8589-2c10df0b4477",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fec9cd2f-79fc-4003-ba46-7ff55b6143c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f8b043b-9976-40f9-9e64-94c2db5a62f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "314d3bcb-dbbc-4c37-96fe-ace92baefa48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a941903f-1882-40fc-878f-6f34796ae52e",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00be5da1-9f35-4e1f-8ca8-70dc15ffb711",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ac27a56-49a6-4e52-8569-55c9253178a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3249530-753f-4c39-8183-cfa19fb28ae9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "984f495e-4eb8-4b31-a177-5d2e8c911f0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf85e3d6-26c5-4110-8a98-a42950136823",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0aa6844-8ebc-4a24-bc74-5526749d32c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "373cc1ad-feb7-46f9-b8a0-6fdbd29b08d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2d53af4-3080-4f80-b04d-5553a7136a41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b65ee099-2caa-4bf7-be03-92cecba4389b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a404861-6348-4984-b490-4e42c6411e18",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f07b16a-b49d-49a6-bd37-37b8b87e27f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef8283ad-3d4c-4f6d-81ca-b1f9fe297e8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69a37d26-5f72-4f82-90c0-bed3747a00ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e99b2d9d-799b-4438-b10d-e094684c83c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45b245d6-3522-4013-8f0f-2c7d880547fb",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34ab0e53-3c51-4c1f-ab67-fdf80ebfb647",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7944d734-ef60-47e3-b993-4e4edb4fa035"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "173365e9-7bde-44d8-ac5b-7e7b5c57f936",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "031636da-7fd5-4c2b-8ce2-d2ca3cf010e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3fcf8cc-138a-426d-926c-58c0a44a6618",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad606f02-8aff-4438-bc80-729db82f4e75",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4df127a2-2651-4bd9-aa94-2a1c22eedc30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57e4bd3f-3ec1-4b2d-89fc-3ecffa1ca452",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b730201-8bf0-4731-9905-778df0a21e56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24344583-01d8-42d4-b113-2ed6e05cdd83",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9ad6723-f795-4914-b8ad-e5fb5313ea0b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36f85ef6-0da8-49b6-840f-d043d2341d79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c8e48b4-126d-43a0-8cdb-6e2e40726923",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9f18e57-69d5-4366-9d4c-d046dde0e933"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5a81676-24b9-416b-badc-f7a46d146311",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b28903d-3184-46bc-8ed0-6c85550c535e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1729494-89c6-4e03-bc9d-f910b3c45e0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d96e414d-bade-470f-9aa4-2fa8250dcc04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59d9228a-5f2d-4d3c-90df-19c4add05fda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12e32466-7397-4b42-bfd7-adcc14f25e80",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5296395b-44e0-4b52-99f3-59725d24c3d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ae409f8-ca75-4e29-8385-43121b0e6a45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b04e6f94-0b7d-4d72-9320-14dc4b727e6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91794ffd-c202-4a81-86e1-a98f327aa352"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80e1303d-c722-4ece-9aeb-6013338bb0d0",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aad7406-532b-4f88-b9b3-c595f49876c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "652d7d99-1c24-45ab-b46e-cebd31739d5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eac7d7a2-8b0e-47a2-b22a-bc423747a363",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f13ea24-4c95-46ad-909d-78dbd8ce026f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7913d459-cad5-441c-8f97-7eec2f78984f",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f89da7a-9176-4f2b-8da5-0d2bf6b55d9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b16aef86-a380-423a-99b2-24f0eebaf750"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "beeb185c-6fa3-4900-9d58-e31e8575aeb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de66162b-3d63-4670-b461-92614010b84e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bb05273-1e5c-465e-9e0c-c28d6ba72270",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "331ac8af-eb38-4399-9de0-d874d3da318a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b952001f-39f2-4ca6-9cd6-398158a3f036"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0d8eb64-bd90-4cfd-b898-b763f2aae3c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37ff47b6-1f78-4cf6-a391-4ef6bb5989a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c65d29f-c6ab-4099-8608-2a3b962daf4d",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc7c4614-6eeb-45bb-b3fe-d3a7240e5cb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c5545b1-60e8-46f5-9bd6-729b34e8fb16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cee0399-cbfa-45a3-81fd-8f8725c83180",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5ea1dd8-fea8-48e5-bfe3-9648b682edc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b301fcff-ca14-4ea1-860e-bc1107ff1a1d",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ee4f8c2-7046-4c8d-9e6a-ca67f9f8b365",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9a74751-c2e7-4f7a-9097-0ff959d13b98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "794a35b8-0c8f-4cc0-82c8-a29e4a5d526a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20602d32-bda8-4e03-b5bf-9129d2f17fce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39428784-aafc-4a83-8457-e25cc40a49d5",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e6eace4-2c50-48a0-8568-d3c329a623c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0edd5dab-9970-442d-a711-fb06779f67b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fca584db-ab67-4d4f-bebe-673aa78134fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "913a8491-ebdc-42d8-ad14-7f3e01a62f64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "692875f0-1e97-4f64-83a6-ab430ad27cda",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bee1b0fc-67c6-4ce1-85bf-199d7d97faa0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61708816-f34d-40b3-af66-81c2f6051b2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d08e6640-ed4c-40fd-84e2-f1d70868c354",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49406b8c-10de-408e-bbf9-e506ddfbe90b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "164f868a-afaf-4e15-81ab-b72de231467d",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39abe567-f14a-4567-bc50-14811ca6ba8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfd3ec1c-49d6-4763-9df2-d861f455cb7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7061eea1-711b-4052-a31e-4487757ef867",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ff5f21f-9c92-495d-9ea9-11ea19a10367"
                        }
                      }
                    ]
                  },
                  {
                    "id": "120467cd-0622-4a34-afca-1f5b8df7302a",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "564ed8f5-7250-4c58-98ea-a7ac7d62c302",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ce709bc-aca2-4ef2-bcd5-f6f573c44d62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b913d2e-e0cb-4107-96ed-9313c4248adb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc21aeb1-8371-47c8-8e48-13e418e376d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9bee1fe-a7af-4d2f-a6b0-a89912ef63e5",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eac3775b-2ad5-441a-bdab-9fc5e8a4891f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84ebf1ee-8013-46e1-8b8e-1033a8c979db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c74b661b-2c5c-425e-93ac-b6289d1d6757",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ac38daa-d641-4c93-8e42-b745fa9242b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0184fce7-dfcc-43e9-8c34-432c3767aeec",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05558624-e436-44a8-899a-052a22cb268d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e7a7a53-858e-4bd2-b173-f9b8b844a15a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b84d89a9-3769-4040-9d5c-c88d5b625b14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec327d01-90a7-48e8-a673-ec7cff5aac5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3391f79-e37b-4165-8d0b-a1b9782752cd",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cda934f-4f2d-45cc-9958-04158b410946",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbb550ae-baa1-4cdc-9c86-d7b9ab2724ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5b95e71-86f7-485a-b67f-5c770fe2020f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31e0bfd8-2378-4d6d-bbe4-c366cb3190f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d290a041-64cc-4e62-90b5-368157b327b9",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e79af4d2-e3d2-40bf-b867-184ef252bfd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c207cb51-d46d-4211-9aeb-5988b19705ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df52fcc4-c3df-4b89-a62d-be91451f3246",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ceb82902-c224-4719-975d-a0171c072967"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b6d0d0c-a6ab-40b2-9d2d-c2f9ae62a87b",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66242f4c-77a5-40cb-8de5-b12192e77a2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de19a8f2-fe04-4d17-948d-bf16e42ff463"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6661b894-9f9a-42df-a827-7f31fcbf3e9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8d173a0-984b-459c-b735-1294bcfc5f95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a722edd2-c592-42e1-bd87-37cd772d07fb",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f394feb3-7d90-4f1b-8c45-dd98ec11bac4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91b2aea7-96c7-441d-8fb4-6bc074529644"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86208daa-0c9f-46e8-8324-970e9be6dab4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1935d63e-0aa1-4a3e-8b7e-cd34f166c107"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30de1b03-2b3e-4867-b880-8a90da18708f",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3be00371-4609-48e3-b777-37557b7f88db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "938c9ca2-a7d1-482b-97ce-1db953b748eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d651935d-b1cf-4b9a-93d6-77fcb35b1e95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29d8cf2d-dadb-4869-b5ef-27caf713ffe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab4b2c2c-e6da-4c0b-8b4a-a7a584b70764",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "124758b1-524c-4676-aff6-9640ac36a48a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76de3e6b-67b8-44e0-b59f-bba0da285bd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69871ee5-63c9-4741-a705-631d0b5be03b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b978f525-bbc5-45e7-9721-44d0748eb95d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5066768e-d563-470c-9961-beccb161809a",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1522b3ec-b1df-4f48-a369-d60b9dad6d4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd567dab-f929-401f-89b2-c9703b0bc795"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "385b7723-796c-4bfb-8a73-9970b28b384a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6258425c-cbc8-4d2a-bae7-62717c56e867"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38a634c1-0802-40d0-9da7-ce9a50ad9aa8",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e75f6681-edcc-4a4e-b781-df066adbb1ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbd97c10-1b4c-400c-8232-3100f356b1bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6f3e8a3-aac7-490d-a120-f7b2fe114b63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2caadd9-a0a1-4d8c-bef4-4d587f7cdc2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba7ba092-de37-44ee-b882-70fba0e6d318",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcc74cbf-c98a-404f-9516-60aedb7f7c94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ad3b7c8-8615-4787-bfd1-a0fb72a29e5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05654ce9-5bc3-4b75-adfe-1d3dd23db8ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f6ef449-92f4-4687-af17-04838cf19ab2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8936570a-db49-47f4-80d3-095baf720513",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e621480e-3351-410d-80f7-646650bd8ff9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d83f053-c66d-4c8f-85bb-12723122f685"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ea0206d-de4c-4962-8e0a-76cd711a90a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e0c80e8-f90e-4068-b820-ec670899e9be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a868e0c-b499-494f-83fc-191e03c6f7b0",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4a2dd53-6e25-4359-a55e-5bd0eafa4ab0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75f47c11-9bc2-48a1-86c7-4f6c4b183d5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "076d13d1-f048-4cf3-adb9-cbad38599e43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52161857-b509-4bde-8757-99d8b80a8da8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0022804a-1fe7-4c46-840c-caa18ed2437f",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6adfd7cf-c782-4deb-9903-27a5c17b23ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00986782-0ad7-4396-a37a-557d24adce98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a471e4a3-33e9-489b-9575-24383a7d9e56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9967241-31f1-4330-87aa-c935d2db7ce5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2e5bbee-1283-4fdc-b31d-c740005a654a",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc7b379a-6bf7-4e29-903a-82a9245ab728",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0fb75fd-7cd8-476a-9ba1-7abaf97c67a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2c9831c-7fcb-47a9-9004-5d7bec6d86ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d0c975d-bcd7-4d06-912a-e45f256e1b8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2041862-5f2e-41e4-b12f-d65005dcbfa8",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b395b3a-86aa-45c9-879c-01718123abd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91af4690-755e-481f-8484-964a3fc4aaea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d969837c-08d4-4abf-af69-23e394e14479",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d049878-3c60-419b-8a7b-718ab9bbcb9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "793540e0-58f7-4dbf-b9a0-6f22d5933419",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f36a8a1a-760c-4db8-a23d-b7ce70edb1ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b288bf0f-2d00-4297-a387-0a39a2fd954a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d48f834-8f9f-4bd9-b9c5-a33c500e8ec5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6843263a-0221-44a5-843d-3f2487a36c6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f99235eb-0697-41cd-bcca-41d5ba52b4a5",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b0f45b2-7d29-4023-9849-d3ca1e38e86e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6049e64-9472-480a-a63e-1c18dbc888c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b001164c-8c30-456b-929e-33599ad98471",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2cff51f-d07d-403d-bd0d-ae0c5e3974a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc754547-754f-4a22-ab81-db987a299bb8",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51a45abf-301e-4c48-8fc7-b7fa72993e12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "453f625d-bcd6-46a7-81f9-0f999222d8db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4304bc86-36ae-4e97-8db3-636d85034821",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5752d44c-fc6b-4fa4-8dc7-c40c98fc6e6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bf76cc9-37db-436f-b963-4b56b8c3d601",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8fbe656-46a4-46ee-b517-b188893dbe80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c34b19b-4f17-42c9-9896-2ae90c8bb59d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70042196-a816-4a03-bb57-3f0a9a54f0a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eaf083a2-c438-4a55-af57-144bcd561a1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a30c43d6-8cfe-4b7b-b140-020b836f602f",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f416bad4-b4c5-476f-b96f-6fada0f1c572",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c50a2aa-1dc9-42c4-89cf-78272d9185ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fa9aa64-46dd-4ff9-a7c2-df78a549ab2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b5c55ef-a725-4dc5-91a4-a0335caeca60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8064242e-6c0c-4b7c-91bf-7283fe2c8363",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "455012c9-dd4b-424c-8a26-7e414e967c77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33596db3-1f86-499c-8a2b-28a393ca5a28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4724f188-aa51-406d-98a5-85dc8944fdb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9c2998f-82ec-493d-be5d-94a255b01e45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6322d190-3ec0-49ed-afa1-6f5a347c1fad",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f489d1d2-54cb-4092-9a79-a764c16c8c71",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "347c27c6-da47-4b61-a8f0-ee8ee9c97161"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a697a3f1-ecf6-4bfd-be18-7a7bd5da9de2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9751adca-6c50-403f-9f0f-686ea0e0c9ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "020191de-fa2f-4b5f-ad3f-658ff25d021c",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e44f1f7a-e0b9-4a1b-98ab-80580cea2add",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0256bfef-50a4-4054-84b1-4637b16023bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfe2b4e5-db97-46f1-beaf-4c05a9197226",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8adfec8-6a8f-4b20-bdbe-531fcaa7ab86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7430e0b8-22a1-47b3-8e99-eddac8853b4b",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bca7979d-aba9-4021-b399-60e54a2c30dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9fe20462-7a1f-41aa-893f-3920dd197f2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e3097b8-2592-4e1e-b53d-a7aedd04378b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b51257a-c7b4-4203-bf47-3051538a84e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcdf518b-558a-4ef0-bac4-bffcd939cb7a",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae09c2ab-bfe2-46aa-9d55-43c10b3bba7f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c99b5e4-8ccf-4968-980f-a2bae582b319"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d772716c-648f-4acf-a5f9-f3d371a43b14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8b76d03-5a76-41f1-b886-956d96d23abd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "383464b2-94ec-4eb1-a25c-2c92b8c536a5",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca2f96d5-9b8a-44ba-ac85-67b940f535ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3677faf0-ffe1-4ec0-a12a-9035ce9e5c2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e842dd7-37b5-45c4-a2b4-ddf104dbc94a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b76d798c-b91d-4658-a941-99f62f77f033"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbc7e959-7d0e-4fe7-bbbd-d562d41c18cb",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39d25a01-3303-4f0a-86cc-716fcdb3d384",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05ee67f9-4a1d-4373-a7f6-d638b31156a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "036ffee4-efe7-4147-ab41-f2944a39fdd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8ce27ee-f47b-4bc9-a120-50952f0fae91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39e608b9-baf0-4a5f-bac2-737ad2ae93cc",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cb68afd-5d59-46f0-b86e-648f79dc3086",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e678d7bb-7b2d-4e87-a607-109de3e8b472"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6366eba0-edef-418b-b351-806a72828f03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05f1e0a4-514b-4af6-bbec-2e598ddff167"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2b769f6-c98c-4b36-ba04-57489ea0572c",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fcbd110-0c6e-45f4-b52e-48b05dbc8f39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2186cde2-6aa0-4c3d-8f3b-c672a6f56f09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10b49a2b-fdd9-4686-b5aa-716a38e4f1f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ccef029-98b7-4ffe-a62c-61c98f4f5ed1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "122408ba-7c6d-4448-8804-f29ce33fdceb",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da2f2fb8-201d-4894-a20a-f0c6f3b4b4ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f58cba58-0c5d-4b38-a26d-c9cd5f76ffc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f2f3f32-e1fb-4fba-947e-848b0972d6dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e8f7582-198e-4bf5-a891-ec07cd8f9a48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be0b3a57-8336-4cc6-922a-a04ebfa36428",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75b8149c-b101-4681-8e9a-b07b81c5c0d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "144bd8c5-a13e-43f3-88af-c66335f8dfd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8864f86-8df6-4f5f-8593-a300113b3393",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f8e29d6-9384-4f7c-ac1f-fe80dd42ef7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3743ff1-a1c4-41c2-b2cf-6caae22b7689",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5309a2c0-add1-41f0-bd22-8c302c9f9019",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc0cdaeb-3389-4d3f-8ad0-998229f6c9b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0593440b-a7c3-4988-aea5-c8a073f488ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56e955ee-eaf1-4c9f-a114-e4d19fb5207f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72f794ef-114d-4c79-8696-db4a0fefa5e6",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f2f5ad3-5107-47c9-85b5-b330bc138233",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26f22f68-0036-489b-8b97-e9d5cc17c38e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16d32b64-e417-43b0-b6ec-b0fb6eb48da5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15d55778-76d7-45e8-9ae6-04742f500304"
                        }
                      }
                    ]
                  },
                  {
                    "id": "342b605a-77f1-406c-bf9e-34bf53309fd2",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "967eca45-13c3-4268-abf3-55b904725cab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d6a53aa-ead3-4835-8f37-1fdaffc5fce8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d926e52-2d63-449a-86a3-cd988528a380",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac0b25f1-eae2-4e48-8de2-d64c7a24a56f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf6e3f98-92ef-4e40-8080-eb28f63cb002",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cc7fc55-a5c8-4d98-8156-561363e953f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a7760a7-2959-4237-a5e1-9d1e820bd2e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bca8d85e-5c90-499a-a3a2-395d45c4a454",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce45fef2-dd1a-4cb8-a843-e475be1673b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0782510-be9b-43d9-bd2a-dcd1849b3a3b",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cbf3a76-0934-45b6-a73d-057e5b40732f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2e481d4-04dd-459a-820b-25e2ad6786b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7deacd9f-e80b-40a9-90c4-a219fd50a764",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0818b33-e683-44ae-b027-6140c5a13544"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84f59f32-5bcd-43c2-8eed-9387b619e1ce",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5ee1073-4535-4ced-b1e6-f25193a663d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d4c5979-c801-4d17-9955-91b0b775bcbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eff3b803-0aee-41bd-a35e-cc5641a3d5d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acbe466f-9048-4fd1-9d51-89c44435dbc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22763c77-986d-4482-bb7a-fc1f153b3527",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97880f4c-0c00-4ffc-bd5b-1f33e8e11c15",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb5689d3-adbc-4494-af97-451850028e1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d8999cf-98ea-47dd-aed8-645a87cc48ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e506da4f-2ae5-44af-b4d0-9ff3599f2e7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1fd2703-db12-4f4f-ab15-264ed8310c18",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65fad80f-5dd6-46f4-b12a-804004c9a317",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cabe7512-4575-42d2-b7a9-a6947e4401df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2e83ed1-e960-4541-ad82-1ff3bee6c1e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ac9a96b-e1d0-46ad-aed2-668144a55bb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6a5148d-41f7-424e-8a51-fe808109a1d1",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "470ad340-32a2-4b60-ba55-9ea1a7c9d853",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47e60c9b-bbd5-4918-95d1-f61640981915"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2904abf7-620b-43e5-9f71-410351e0f4d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5849994-faf1-4a91-81b1-c2204260f7e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "412e7c8d-a0d5-4c6b-9255-f0c68b236830",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "951ae6f3-9625-476a-8abf-76e426de3b5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33dcbb56-9713-44b4-be9d-e317d3e3ec88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "725fa494-60c1-4bd3-bd8c-c56ccd8f7818",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e244bef9-be87-4aef-996f-a946f96965ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3244d03b-46b3-4fd3-bf56-715bcbce8c48",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76a2aa8c-f825-4229-9c66-19f360b2cf60",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8e8af81-4b55-476b-b878-ccf92ce91e24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3addc50-606f-485c-9b6a-e295a8d1eaa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eaca05a4-d769-4beb-a3fc-15126a90301d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c06fb10-35ec-4dea-911c-ca11fd2096c1",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "132b28c9-3f7f-4026-9570-34e916e5517c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b300aa0-09f3-4093-ae98-134be553bd82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4dbff08-2e73-411f-b066-cb107cbef7e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "847d282e-6781-4ad2-84fa-7652aa769880"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bda0d7e3-38d7-4c6f-8258-9877fb9e886f",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ac91a8e-46af-4be2-b1b1-f71155b32583",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "485d2284-1613-4ae5-9a83-e1015663f685"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85cbd141-2641-49d7-b5ff-3ab9adecefd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74361369-f65a-45e6-a701-c981ce17e70b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d007a4f-d12a-4a4f-b308-9e7b09e672ec",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5930bd3f-5657-4c40-9457-e94e4c0f5b27",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9beba93-28cc-4796-b78e-da379f1f96fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "292e1768-e697-4855-806d-644c3797f334",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d86d316d-5033-4842-aec5-00b00195460a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9ef2d93-d26b-47fd-9851-bd8cf0d5a2f2",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f08c221c-3fb8-4ec2-95fe-ee60f6e7f0b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63aad30e-d0bb-4ee7-8ff0-ab26833a139b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28ab29c0-83a8-4d48-86a6-d978a1513a52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43aeac9f-6ec9-4602-a004-904c7f41a70b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06f01d38-b538-4ff4-a90b-2f8a275664b1",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfe4f0c7-b6ec-4d79-a3d5-0c0e3aabbd8b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "278a68c6-57e4-4782-a211-4550534d7f46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb0083fc-ac5d-48ba-b2c9-3b673055bc5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a00d31b0-0f68-4e10-9e7b-0a17d186171f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b99e3a9a-083f-4b8a-b736-7faecada2a55",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17a07d28-540b-42e6-aa9f-1bd701dd8331",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82e302fb-7bbc-45bd-ad38-3ca5cdf0171b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "295c7fa0-b34d-49a9-911c-2190cbc2a593",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8a38066-493c-4755-83b4-31e3a8976c61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3b6f896-6c3b-4668-b952-aa8f82bb92fd",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d16c2853-efbd-4544-8ffa-d3b752775361",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f68e0730-1bb8-4d65-af7f-281e9a5cedd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a849359e-7f18-48e6-aecc-6ba0f31d3c4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0d39b90-2fb6-405d-9667-ff78ea204044"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab658f68-65fd-4dfe-90f5-cb9cecd6fa92",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c68f2630-057f-45cd-b856-b597b9668fb9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2703b2b5-4f18-495f-8e5a-16ffc4b4d1e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9fca75b-eefe-431f-8c80-4dee6af9ad2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8435198-3ebc-44a5-aab5-92ff111fc19e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2802bd9c-0da7-40a4-9e12-da337ed1e9ed",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d6eadc5-e726-455c-9999-164fa26c4a1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99ec73d7-4bce-4063-b05a-54a3bd5a6714"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "530d6ffb-75ae-4528-bc93-3775f7f0ea68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30f506ea-34ce-421a-8090-db53639af2d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af6209a9-a0d6-4565-9a6e-3cd38826da42",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48b4b0cf-a872-4a08-af77-df7ef75b57c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5432ccb0-36b0-4917-be5d-790362531615"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a16e36cb-c35d-4d63-9758-d5948b1b8a83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e9cfc2d-f36e-4e65-ac83-584b0cf5004e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8438d0d1-3365-4ae0-9421-d41c5668422a",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ed1650a-c746-4091-abb5-8cb13a94b76b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2e3d1e4-b427-4dd1-ae8e-15255ac7a185"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9ce4c00-57f2-48c9-8d02-8aec290ab38a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd53be81-683b-4321-81d3-e9e993c5115d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3ddc276-1cd2-4a88-be25-68d189f218af",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1d86441-ff1c-4533-bcec-c336f529178b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03431743-17ba-47d9-9ff1-f68c58f37165"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1d37270-e2e1-47ad-bd29-53f06c9987aa",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f60a0676-02dc-497e-8b3b-c2f9b195a6b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21de7553-2c28-42e1-a316-9384924d910a",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bb24735-599e-43d3-a4a0-548ee6fc8483",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "944a12a3-f0ee-4339-903b-7fc73034dcf8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4ed4cea-fd9b-4baa-9d56-369e6357bbc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a06930f0-830b-4a83-a86c-e5f151baf81b"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7534848e-ce44-4d34-97a4-fc095ac9e27d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f545733d-2d7d-492c-83c5-32f73a48ffaf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d86b00ac-8f96-440d-8b60-282097ad503a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1e6d734c-9b51-4616-a361-e7c9170ef1f7"
                    }
                  }
                ]
              },
              {
                "id": "6512f919-1233-4879-a221-3409346bb8f6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5368ed79-a789-4d32-8b3e-edc66e19f6f1",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "497d4232-aaf6-40bd-ae00-8540682a4433",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "51b6c5ac-a087-4738-bd7a-ea92b28e8684"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f165509-b706-45b5-bf59-02df5a470c32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "702dd04b-e8da-4405-b5fb-c0f4f6480e24"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c42278b9-c6f2-4d73-bc82-a1e902247f10",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d07da93c-28ca-45e6-8306-4aa6bd8e7968"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "981e9bf2-bde1-4f75-9395-751cf2514f8e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "75acee40-2d59-4ada-8064-e13a51fdcc22"
                    }
                  }
                ]
              },
              {
                "id": "354fcddf-255d-4c6a-a246-4e10f7bd4f92",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "ec78a392-c034-42c1-bb39-9ae16b5d12ae",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aba2b17a-8c41-4b3f-b37b-18db9eb9a35d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "7e51603e-a16c-4a33-9f7a-6f5276fa30ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0a3483d-7370-43e2-a25e-07b13e3556f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "763872bb-129a-479e-8e7d-536f91ca82eb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "83f7b0dc-e87e-4110-bed6-8b2a2418da0c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "baddf311-361d-4a92-842f-a228a1685cf2",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a9c5073a-3dd9-45a7-a6ca-144dbad89596",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "c4962ca6-a438-418f-ae14-b5293e4af964"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3f04946a-4087-4ce8-a633-a4d52ac97a3f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "67b487fb-c2bb-4ea6-aad4-3cd3682fb0d9"
                    }
                  }
                ]
              },
              {
                "id": "7e8b0e43-1aec-490d-9a35-a47b6b3e01c7",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "71f22e1e-3a9e-4092-a2cb-80d52b45de39",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "78d6b21c-df71-40c2-91ff-7bcbb020bad9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "abd639ee-d73a-4cf8-b053-3d469fa1fc3e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b008d3f4-d2bd-4fe9-a832-8c00791fafc9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "20b1d557-ccba-416e-9f5f-5045bf2b5ed2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "77676988-469d-4046-bba1-1627a7581d9c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e262711f-4abf-4e62-a8e7-baa7b2784e43",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5ba7ad37-312f-4e77-b6f4-c2aba31fe30b"
            }
          }
        ]
      },
      {
        "id": "2d2899e2-7677-4671-8368-21f82318e1cf",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "baf31096-1c12-49bd-8bb9-4282bee3dd9f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3ac89c19-ac71-42d0-9d38-9271f28bd2db",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ca8cb424-96b6-4752-9186-26b7a765d233",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfb3ebd4-1a3f-430b-b975-a18984bc9392",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "98db7c7c-0873-4646-9b0d-ea2d8ab2cf2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0677629-01ae-4005-b56a-d0da292f9e78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4ce72809-90d3-4c7c-95a7-33e0ec7a0b3b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7dc1da5b-9652-45f1-828e-b4be4df852bd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f1046616-71f9-4d0d-8527-a9db9877798b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4a6e8152-3629-41d3-a45a-2639890079ba",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "44f3d1b2-66a7-4ac6-9881-1585785458a2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "885fd1ec-f8e7-4df6-8638-0fe9663dde47",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "df074f46-a619-4a93-964b-5649ada966d0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3692d522-af3c-4011-ae5b-5acb39d0c21a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4c876452-32bf-4843-8844-788846476afc"
            }
          }
        ]
      },
      {
        "id": "d1bd25d0-46ca-45f2-b87a-147c37147ec0",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "683aeba6-9654-4726-af12-f83b5d31f39c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "aea8ba7f-1622-410f-b622-9d0f09014696",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c1935946-bcd1-40be-ab6c-8805f987cbc3",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ead661f-f2f0-4189-a0c0-a6f82e15a38c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fa8d7ab8-0e04-4262-88ba-451a24605daf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41ba3186-bee2-49b3-8562-91f5db798f3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "07be7bcb-32e5-40e4-8f15-f4ad62682a03"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8e7413a4-9e05-4e3c-ae9b-42ffc00db332",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "621faf02-786b-481e-85cd-c702cd3f89bd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5fcb7f17-bfce-48dd-bc12-1ecb4ec63e9d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "643919b9-cb32-4933-aaca-c2aced91a6bc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2212e263-1adc-4625-b762-3d56ab92d50f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8b13865d-4143-4a16-a567-6029cb4e1361"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fc93caf4-48e9-47d3-a1e7-1afd01aa30a7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dd4a34aa-1e77-4167-9b9b-089dcdf0e85c"
            }
          }
        ]
      },
      {
        "id": "1351a1c4-b451-4afe-9ab5-331d09264277",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "5dfecd55-129e-4ca4-826e-66f057a8dc0d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "609b6fd6-ea1b-46b8-8679-17aba8fe4438",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4f457b2b-29b3-4d90-87fa-00f88d2005a3",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eb4c3c7-f0b0-4fd4-8676-d5f2468e1455",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a50503e1-8478-4903-8ed6-93d104ee0d0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e28c4377-2ea0-465e-8566-2b80eb8026f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5a0a6641-cda0-4354-b0e6-78ae37eb4ae5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "14ca2a30-fc49-4420-b66a-d8ade4a8aba1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ddc470ee-8a7b-4da1-a29e-ac6781b65029"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "57e66a84-42f5-43b6-ad12-820b025a34e6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9cd39b79-3d82-47e9-81d7-d0f3aa96f535"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "181c14a6-f933-49f7-b7b4-35e9c957fb51",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "08bfe5ad-0a1e-432a-9a3b-6980adfbed26"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8cfd6152-4cfa-48ae-8003-176391e06d05",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ae8c7a98-b487-442c-854a-ef860f919eac"
            }
          }
        ]
      },
      {
        "id": "76f2acf9-660e-4409-9fdf-d0c7f98c0761",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1e697f11-1cf5-4a4a-ba46-ba04c6d13cf1",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ce55fa15-0389-457f-befa-1670f798273d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "00e91ec5-7990-45c9-8158-ad0fa1a885e7",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a399ab37-47a2-4aa6-b618-a3a13fe7fabd",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fb147f41-7d1c-4784-9a39-4b5434280c03",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 139.42063492063497,
      "responseMin": 26,
      "responseMax": 9575,
      "responseSd": 702.4500417549282,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1720053532283,
      "completed": 1720053575794
    },
    "executions": [
      {
        "id": "794613b3-87a3-4831-b5b2-60296cf8c575",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "d576064d-bb10-4688-9bd9-ccd64b5ff011",
          "httpRequestId": "784f64e3-f00e-44de-8181-7d131b83d78e"
        },
        "item": {
          "id": "794613b3-87a3-4831-b5b2-60296cf8c575",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "5e8b695c-5154-4cd6-860c-8f9cadbcb068",
          "status": "OK",
          "code": 200,
          "responseTime": 117,
          "responseSize": 0
        }
      },
      {
        "id": "5a60f52a-2768-4b87-aa79-c38228f56063",
        "cursor": {
          "ref": "adf4b54e-8182-45db-b18b-1afdb2e5c1e6",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "1fb98c1a-3670-4a44-add7-3aff0a97cec7"
        },
        "item": {
          "id": "5a60f52a-2768-4b87-aa79-c38228f56063",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "b9dd1fdd-6015-421b-b215-33d6f5573562",
          "status": "OK",
          "code": 200,
          "responseTime": 40,
          "responseSize": 0
        }
      },
      {
        "id": "756e0187-102a-417e-9a8b-74ab8d1953e0",
        "cursor": {
          "ref": "8a79d070-c0de-4f38-a250-2e8746cae273",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "0fbb8dda-451e-4d8a-97ce-c05cf65ae6f0"
        },
        "item": {
          "id": "756e0187-102a-417e-9a8b-74ab8d1953e0",
          "name": "did_json"
        },
        "response": {
          "id": "a9bda117-d479-4b29-8e08-9e239b8a263e",
          "status": "OK",
          "code": 200,
          "responseTime": 227,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dae4b0bd-e11e-48e0-b56e-22867ba4e9c6",
        "cursor": {
          "ref": "24608adf-ed74-4c92-ad54-59ed7fc67c00",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "be1247fb-b0c0-474f-9c94-db28a149026d"
        },
        "item": {
          "id": "dae4b0bd-e11e-48e0-b56e-22867ba4e9c6",
          "name": "did:invalid"
        },
        "response": {
          "id": "d2cec7e0-75e2-455e-8235-a99b3284c249",
          "status": "Not Found",
          "code": 404,
          "responseTime": 411,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dae4b0bd-e11e-48e0-b56e-22867ba4e9c6",
        "cursor": {
          "ref": "24608adf-ed74-4c92-ad54-59ed7fc67c00",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "be1247fb-b0c0-474f-9c94-db28a149026d"
        },
        "item": {
          "id": "dae4b0bd-e11e-48e0-b56e-22867ba4e9c6",
          "name": "did:invalid"
        },
        "response": {
          "id": "d2cec7e0-75e2-455e-8235-a99b3284c249",
          "status": "Not Found",
          "code": 404,
          "responseTime": 411,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a7d8df4-1226-448f-8081-e442c9ab9961",
        "cursor": {
          "ref": "ee344099-7e9f-4293-a680-e120723436ef",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "3fc6d2ae-d89b-4b30-af0e-14e4deb4ba36"
        },
        "item": {
          "id": "9a7d8df4-1226-448f-8081-e442c9ab9961",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "df05338b-45bc-49c7-8c71-25ab7aac452e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 81,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2cf5bea-96be-43c1-af6f-97022ca3d86e",
        "cursor": {
          "ref": "e42e3214-b0ea-44ef-9ae8-13b865da9f03",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "d81cc878-6f51-4078-a352-b6f2bd0f1e51"
        },
        "item": {
          "id": "e2cf5bea-96be-43c1-af6f-97022ca3d86e",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "39a7ffd7-394b-4420-8c09-5920a968e8c6",
          "status": "Not Found",
          "code": 404,
          "responseTime": 83,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4bfa932-f1c4-4f06-8d18-7bc9f26a87ae",
        "cursor": {
          "ref": "1eef0435-a1d1-479a-91ee-d4771dd1856a",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "01cc9b0d-6d5b-4186-b756-3278c3c02bc9"
        },
        "item": {
          "id": "b4bfa932-f1c4-4f06-8d18-7bc9f26a87ae",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "7e2deee8-1def-4ccd-a094-643694c32e7b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "433fdb71-18e5-4b13-be78-ee0b6a56e0c1",
        "cursor": {
          "ref": "a5b3299f-0748-4db5-b532-350f6d0d39e7",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "76dfa6a1-bee0-4e96-aa4a-0ee13086b5b8"
        },
        "item": {
          "id": "433fdb71-18e5-4b13-be78-ee0b6a56e0c1",
          "name": "identifiers"
        },
        "response": {
          "id": "433ffd2b-2480-4580-b255-a73c2be790ee",
          "status": "OK",
          "code": 200,
          "responseTime": 107,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b9a69bb-a8d1-4f98-9432-ea2c0afa80cb",
        "cursor": {
          "ref": "feafd197-bdb6-465d-b25e-f7248048525a",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "457eab0a-e136-45c8-9fcb-8d2b27ffff21"
        },
        "item": {
          "id": "2b9a69bb-a8d1-4f98-9432-ea2c0afa80cb",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "45fae303-fe1c-42f2-be16-c6364a876e82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f45b6ff-ab14-4738-b335-292c92622fc1",
        "cursor": {
          "ref": "2eb44cdc-d46d-47c6-bc17-2d9bfdb61b96",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "df0fae57-fb5c-472c-a1c7-1f248825c49f"
        },
        "item": {
          "id": "7f45b6ff-ab14-4738-b335-292c92622fc1",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "04c716e1-d290-4fb7-9705-0c1eb0e0f68f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dd0d001-6aec-484b-a74d-fc6e9c530b92",
        "cursor": {
          "ref": "903d722e-7b73-4859-88bc-906f3718d7f0",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "3bd5cdd3-60b6-4a5e-ba84-c014662f1eff"
        },
        "item": {
          "id": "5dd0d001-6aec-484b-a74d-fc6e9c530b92",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "1922d558-9884-4d47-ab24-b55765743d31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20d40a73-b10f-4a51-8e38-1715984e788f",
        "cursor": {
          "ref": "8387e058-07f9-4be3-a17a-3b57cd3c90a6",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "1a807dad-9054-4507-99bc-59fd700f70d8"
        },
        "item": {
          "id": "20d40a73-b10f-4a51-8e38-1715984e788f",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "9268441b-877b-4560-aa25-435f252ecf76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 110,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "483b7f90-4b92-4e20-a091-1d73ca5c7720",
        "cursor": {
          "ref": "57719312-8c3c-43f5-8f0d-e20ee8e89526",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "7ca3c8a0-b405-48df-affd-d49a0fccb291"
        },
        "item": {
          "id": "483b7f90-4b92-4e20-a091-1d73ca5c7720",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "30d6d3b4-9187-49b2-96a6-580eba7246d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 394,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89e0da4c-32d8-41ea-af7e-519df2349ee8",
        "cursor": {
          "ref": "2bebc6f0-3793-46d1-a898-bb3edeb83874",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "900a27e4-9cf4-4478-8818-6821d66966cf"
        },
        "item": {
          "id": "89e0da4c-32d8-41ea-af7e-519df2349ee8",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "673863d3-2e58-4a26-9ca1-20634b919b1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21ec9d71-b0ee-4a4b-bde2-1e99b42a6f54",
        "cursor": {
          "ref": "5bc132ae-f350-46fc-beb6-9152d25ea856",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "16531b9e-327b-4123-8b18-2e878e70ec1c"
        },
        "item": {
          "id": "21ec9d71-b0ee-4a4b-bde2-1e99b42a6f54",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "c63e78af-2a1d-4dcf-9fbc-c24a03fa3618",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17c9ee5d-43a0-4668-a2e2-009c1d8bfadf",
        "cursor": {
          "ref": "f979ab58-9be0-481a-ac63-09858f8f956b",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "79ca41fd-ad70-4387-acd3-1e40e0188534"
        },
        "item": {
          "id": "17c9ee5d-43a0-4668-a2e2-009c1d8bfadf",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "99225084-0047-4b4e-be77-b57f5f7896db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c71ca70-3783-46c5-b9b5-2c50ca6bef70",
        "cursor": {
          "ref": "ed64d968-29a8-4b78-9a9b-c8fe440c7c13",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "dabd7898-c126-48f6-b2e5-9e29bffcf78a"
        },
        "item": {
          "id": "5c71ca70-3783-46c5-b9b5-2c50ca6bef70",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "29467d87-3106-4703-b46d-e45721f5b632",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb9ab6b3-7b86-446b-bf52-dfda9eb35b1d",
        "cursor": {
          "ref": "4cd7063c-b9a9-4daf-874b-e7631b2b3a44",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "8b99cdfc-cad5-41d4-b544-a9dbf51ac94f"
        },
        "item": {
          "id": "fb9ab6b3-7b86-446b-bf52-dfda9eb35b1d",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "b97d87da-5ae4-4767-8d78-b5db16336f20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 107,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51012dd5-d887-4daa-8863-ac10e80a254e",
        "cursor": {
          "ref": "e67e4f91-f4a7-4a87-968a-8063ffb4951f",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "580f31c9-a9ab-4cde-aad1-68dbdf7ace15"
        },
        "item": {
          "id": "51012dd5-d887-4daa-8863-ac10e80a254e",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "45b852f4-7a15-48c3-b2a3-204e000d0881",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c5ee67d-331e-4c05-a6e2-8a92c12167c1",
        "cursor": {
          "ref": "286819d1-9f31-4acd-b5df-cc258601d096",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "da99a5eb-235e-4bb4-aee8-53372e1cdf67"
        },
        "item": {
          "id": "8c5ee67d-331e-4c05-a6e2-8a92c12167c1",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "3aeb59fd-7a94-4752-ba2d-ad393acc6abc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97a2532f-eb8b-424f-9f46-16df2e8b4497",
        "cursor": {
          "ref": "d60fa795-b01d-4a62-bed0-ed34e99d3cde",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "f8403685-5575-48a1-ba09-5ac4f790d43c"
        },
        "item": {
          "id": "97a2532f-eb8b-424f-9f46-16df2e8b4497",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "b460dc54-8713-4565-b9e1-fd176a819c72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c4db63f-a05f-49cb-aa0d-831167a179a7",
        "cursor": {
          "ref": "6f230c70-c17b-4a7a-8b7c-0dbf067fe68c",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "d87c5949-4db5-456b-b159-edae2c1d25b6"
        },
        "item": {
          "id": "5c4db63f-a05f-49cb-aa0d-831167a179a7",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "c46daef3-068e-4c01-9c2c-0c84a9563f0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd1278a1-d33a-461e-be40-d88cbb43ff0a",
        "cursor": {
          "ref": "c3f66e6c-b986-4f63-b8d2-22cc721ba56b",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "8fc802f3-5403-416a-a0d6-75c79c3b6f21"
        },
        "item": {
          "id": "fd1278a1-d33a-461e-be40-d88cbb43ff0a",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "e6df1a67-6530-4b64-a4b9-771911b89d7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15c26a7c-6e9e-4909-ae34-56d2c409ec90",
        "cursor": {
          "ref": "086668cb-6aef-4cec-9b90-4e2a8f70d64f",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "643fd1bb-0f36-4815-a4ac-4984fd2e18eb"
        },
        "item": {
          "id": "15c26a7c-6e9e-4909-ae34-56d2c409ec90",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "477fdd50-8ceb-493d-ab96-579a62199782",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a9eddd3-58d9-4973-9571-d56cb5aa8ae9",
        "cursor": {
          "ref": "9c046b11-24d6-4277-ad96-99e229b72353",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "4324b6bb-d227-44e3-8744-ac998e15525f"
        },
        "item": {
          "id": "8a9eddd3-58d9-4973-9571-d56cb5aa8ae9",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "c8411438-3074-4825-bc79-4a65e1f34657",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "469be6ce-628c-4f52-81e5-1df401215cc9",
        "cursor": {
          "ref": "15a162dd-d0b6-4c2a-a305-da9eb5623625",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "3570b4b1-7f7d-432c-aebc-baae6fea41a1"
        },
        "item": {
          "id": "469be6ce-628c-4f52-81e5-1df401215cc9",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "68cb765d-37df-4d66-af92-c661c22ebbd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d409440d-92fc-4b16-867d-d7ae0d1d3ec5",
        "cursor": {
          "ref": "034f11bf-b29b-4e3b-ac16-9a8dfb0b4ee3",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "632b0041-48be-4410-a55a-8316eea6a778"
        },
        "item": {
          "id": "d409440d-92fc-4b16-867d-d7ae0d1d3ec5",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "1827a2c8-1719-4d8f-b9c5-f79f0747ddd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d95ec89f-e3c6-4d77-9c32-9624bc7b01b3",
        "cursor": {
          "ref": "c8b514ac-8cf9-4471-9dc6-070218665b1a",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "543c52cb-eae7-4c79-bac5-f2f9bdf1cf75"
        },
        "item": {
          "id": "d95ec89f-e3c6-4d77-9c32-9624bc7b01b3",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "7bcfcb25-89a5-4e8f-96d0-b4b9427c4354",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "994a9ab1-770e-4ed4-8447-ba4c2ded4ea7",
        "cursor": {
          "ref": "2565654a-d2be-4e12-a416-3ef9ab9a24ce",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "e4c683f5-2790-4ca0-96fe-44cb17435b42"
        },
        "item": {
          "id": "994a9ab1-770e-4ed4-8447-ba4c2ded4ea7",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "425a6ccd-bdb7-47dd-ba84-d385cdca238b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bba4dcb-902d-475a-a326-0568ef5c73b8",
        "cursor": {
          "ref": "94dad967-9d2d-4000-8394-8b246fbc9aa1",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "bbace05c-5a8e-4562-b699-4fb8cd84d1c5"
        },
        "item": {
          "id": "7bba4dcb-902d-475a-a326-0568ef5c73b8",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "db1542ed-42b0-48e2-89ec-da566b8e1dc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afdc9973-3840-47ea-aad8-2575668bb8c5",
        "cursor": {
          "ref": "ad23fbf3-6f64-4206-ae66-e56fb6b8d3aa",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "eaa9b2d3-243e-43fb-a516-fc143b9beaa3"
        },
        "item": {
          "id": "afdc9973-3840-47ea-aad8-2575668bb8c5",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "d0e29c4a-bc61-4c9c-9b9a-695c4412e99e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abf1ea77-f010-41c3-b897-a44fe59c1d70",
        "cursor": {
          "ref": "0e0a9612-ad27-47bc-afff-301af7325ae2",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "a80365ff-1148-4da7-8c37-6de50008ea70"
        },
        "item": {
          "id": "abf1ea77-f010-41c3-b897-a44fe59c1d70",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "55c3f47d-ab20-4901-9f3a-30ddbc50d46b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cebe601d-f8b6-45ff-aca8-5205aff1952a",
        "cursor": {
          "ref": "ff566e19-3988-484d-a39e-9245318de134",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "a888a3e7-3226-4b43-9722-333c3339d055"
        },
        "item": {
          "id": "cebe601d-f8b6-45ff-aca8-5205aff1952a",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "9bc0344b-b424-4f48-9047-2a199c3ee737",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53339971-e190-417a-8fab-e05169bcff24",
        "cursor": {
          "ref": "52b9c87d-afa0-4976-bcf4-3b13185fb69e",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "80abbbc5-9358-4a25-90f2-b4ac1f309a95"
        },
        "item": {
          "id": "53339971-e190-417a-8fab-e05169bcff24",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "83e31d45-af6e-4ace-875e-656dcb177667",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72f29353-87f9-4549-b2bb-5990c219ebbd",
        "cursor": {
          "ref": "42d2bd21-9640-4bed-a11b-401260751098",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "1b324f43-c11b-4e69-87c3-53f295c4874a"
        },
        "item": {
          "id": "72f29353-87f9-4549-b2bb-5990c219ebbd",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "956fa1c8-f133-4398-b513-6d52f2c73cb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75947088-3b8e-4380-9541-88ee911d67fa",
        "cursor": {
          "ref": "eb5f30c4-b5c8-44c2-b95d-316ed53ece60",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "49c7cd00-16a9-4fe2-889b-7bffa52c9c1b"
        },
        "item": {
          "id": "75947088-3b8e-4380-9541-88ee911d67fa",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "a44175ad-d829-4663-b377-b954fa97fd85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e16ace92-e49e-47ed-8629-c8b264944412",
        "cursor": {
          "ref": "64aed002-3d6f-4b50-9df0-207365f38e52",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "e21dc811-5d8d-4b83-8f31-8b2220175c12"
        },
        "item": {
          "id": "e16ace92-e49e-47ed-8629-c8b264944412",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "5423e4a7-445c-43df-be8f-12eaf7dcf0ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6e59b8c-a352-48e9-917a-a2077c26b763",
        "cursor": {
          "ref": "edd4b86f-d72c-4f60-acd1-175c366fca74",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "bacdb729-d149-4cef-9ab9-0a673cd6088a"
        },
        "item": {
          "id": "b6e59b8c-a352-48e9-917a-a2077c26b763",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "da52073f-a760-47d8-9750-ecd9c34b90db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d801ebc1-11cc-4380-9f9e-14ca17e81120",
        "cursor": {
          "ref": "47e13023-8a55-4372-846b-0ba5f238aa46",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "634090b5-42d5-4760-b136-ceb22554e40d"
        },
        "item": {
          "id": "d801ebc1-11cc-4380-9f9e-14ca17e81120",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "bc255ae9-410e-4718-becc-a32dc159e844",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66f7db4b-1887-4c8d-803e-c09452a87717",
        "cursor": {
          "ref": "dda5dedf-eee4-4edb-b1ef-95eed44b7122",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "7389e8f5-223d-4543-b25d-a64c39d6c960"
        },
        "item": {
          "id": "66f7db4b-1887-4c8d-803e-c09452a87717",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "d6416f87-5f85-42df-acee-89dfd9eb7814",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62ffa5b5-40e4-4ff4-8aaf-56052f17fa8d",
        "cursor": {
          "ref": "e7ec8369-b715-47d4-9b48-a4b4f213c4c3",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "a6bfe300-4c46-43c7-80f3-e6222eadd8ae"
        },
        "item": {
          "id": "62ffa5b5-40e4-4ff4-8aaf-56052f17fa8d",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "1295303b-043e-4e27-bece-16a4185a72b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8618b7b2-963e-45b3-b3e8-42cb5f7b6706",
        "cursor": {
          "ref": "eeea2186-ab5b-4f39-8a03-06fc496f1c66",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "f86ba8cf-7143-45d0-ac86-2ec3c16434e8"
        },
        "item": {
          "id": "8618b7b2-963e-45b3-b3e8-42cb5f7b6706",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "b185a5da-3e67-4ff2-9604-f15b5cf3db53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03e03fbe-aba2-4835-87bd-4512e7394982",
        "cursor": {
          "ref": "58cd545d-26ab-4b52-bd71-e1751d60013e",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "dc84f8a5-d9ce-4fc8-81bd-38e7a72467e3"
        },
        "item": {
          "id": "03e03fbe-aba2-4835-87bd-4512e7394982",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "5aaf5391-15b8-4694-94ad-76b93e9d0b82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d65ca13-ef81-4071-8456-2bfe9e97df1f",
        "cursor": {
          "ref": "74bf5b90-3a5f-4d7d-957f-ab9227922f82",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "6be77fd0-c140-411d-a8ae-f62ff0e04ed5"
        },
        "item": {
          "id": "5d65ca13-ef81-4071-8456-2bfe9e97df1f",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "07b2be0a-bfdf-4912-98b2-28808a82a193",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ce39faf-d1dd-44cd-a586-e9545b9015d7",
        "cursor": {
          "ref": "4daf20c5-cd95-4c23-aa46-43e3418354c6",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "3f4f2cf8-be2a-4c88-813c-02df045052bc"
        },
        "item": {
          "id": "9ce39faf-d1dd-44cd-a586-e9545b9015d7",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "6c572eb5-ca3b-42c4-9d48-7a75ab9cb882",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 150,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8ad06e9-2193-4176-96e3-98c758901c39",
        "cursor": {
          "ref": "ae1c52fb-c70b-485f-9f88-21c81eab550a",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "ce83a6f6-688a-4229-b600-29bd38c5c44b"
        },
        "item": {
          "id": "c8ad06e9-2193-4176-96e3-98c758901c39",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "1f638c9e-4b56-4f1d-a520-9310203baa67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78d88cf9-a3d8-4913-a33a-9cac5165f554",
        "cursor": {
          "ref": "805aa433-d930-48d1-8eef-839e0c436e4a",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "b7b6913a-43c9-4dcf-be3b-17ec3411dd4e"
        },
        "item": {
          "id": "78d88cf9-a3d8-4913-a33a-9cac5165f554",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "6e83c6fe-3053-427b-8e20-cb20135e3bad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75b8a5ec-588e-4c44-b6c7-594f6fa99d4c",
        "cursor": {
          "ref": "7fbeb7a5-aac1-4ece-89ad-3dc861a5b2fe",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "b9d5a38b-e407-4e3e-9467-cc7b4866270d"
        },
        "item": {
          "id": "75b8a5ec-588e-4c44-b6c7-594f6fa99d4c",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "cdfb2045-00e9-4ca2-9b22-1e65719f5dd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f08eb8f8-51dc-4e43-a0b9-3f90f7eedce7",
        "cursor": {
          "ref": "4ff4e6d2-84ff-46fc-867a-951c5e7cfaf6",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "3ff68516-e949-44a7-8bbc-464fd150e7bd"
        },
        "item": {
          "id": "f08eb8f8-51dc-4e43-a0b9-3f90f7eedce7",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "a7f5f83a-7555-4b05-84fc-3c20c7de9590",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3232915-8c0f-4a63-b746-95aef20a63e5",
        "cursor": {
          "ref": "418c0c57-8728-410a-8154-c1868804319d",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "b579908b-087d-414d-92ca-f483dff49fc9"
        },
        "item": {
          "id": "f3232915-8c0f-4a63-b746-95aef20a63e5",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "6f94905d-e4f1-47de-822c-2f6a54363fbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f2feeb6-09c1-45e7-9a09-d81c5fe954cc",
        "cursor": {
          "ref": "7b722e74-5fb2-4f9e-8f7d-8c015ce56feb",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "56b594f8-c13a-4c0f-9964-102cd2da2b25"
        },
        "item": {
          "id": "1f2feeb6-09c1-45e7-9a09-d81c5fe954cc",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "40807c72-1e3a-466f-b314-7d4fa26c7374",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e108e5ed-a6cf-4ae6-9946-f9c32587d86f",
        "cursor": {
          "ref": "f6f517c1-cd04-44cd-933b-d764bf89c4b7",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "7adf89bc-74f4-481c-b0b4-f7dc12504396"
        },
        "item": {
          "id": "e108e5ed-a6cf-4ae6-9946-f9c32587d86f",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "ab0ed8f6-6e89-4802-80d5-ca079e9d8a98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dba33576-951e-4839-bf61-6b3d81389434",
        "cursor": {
          "ref": "906eb3ce-5cb7-4fac-8d4d-a09c9ff0208d",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "9314a8b0-6e25-4ded-afe4-33114d5bb036"
        },
        "item": {
          "id": "dba33576-951e-4839-bf61-6b3d81389434",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "97c1de5d-ee5c-402a-981f-a701c1ecac31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a210e5e3-d37e-449d-9337-b1ed7e00af3c",
        "cursor": {
          "ref": "763dac39-3e61-4864-8e2a-ee22d5fc4e7a",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "1bd2ed04-5d65-487b-a5e8-9fb253d5de98"
        },
        "item": {
          "id": "a210e5e3-d37e-449d-9337-b1ed7e00af3c",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "4aba17c5-0e65-4cb7-89a6-e6a6cd6518de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b91a4834-1fd9-4aa1-bdce-a12bc2068647",
        "cursor": {
          "ref": "7e5bcc6d-8c80-4860-88ce-12b565718aeb",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "8f242ea9-d10b-4c52-8ca5-7d37cbcacf90"
        },
        "item": {
          "id": "b91a4834-1fd9-4aa1-bdce-a12bc2068647",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "8c8030f8-c172-431d-a0f4-b685f08335cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3946eb63-82a8-4c73-b936-28d95f948a7e",
        "cursor": {
          "ref": "1b01e1ca-cd4a-4973-b0c4-ccd489b8ae0b",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "94f7662c-3199-4478-b943-81eb6b0ddb15"
        },
        "item": {
          "id": "3946eb63-82a8-4c73-b936-28d95f948a7e",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "a10201bb-afa0-4288-94c0-0e480e14986d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95473b71-12f1-4a6e-9a33-5b25ae8b4494",
        "cursor": {
          "ref": "47882117-6405-4551-a45e-bbdfc0414e0c",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "da445a5f-cb2f-4582-a209-b4d5ab063364"
        },
        "item": {
          "id": "95473b71-12f1-4a6e-9a33-5b25ae8b4494",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "477176fc-1e04-4922-b78b-9c5e1a19a435",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f914c78c-b686-4f82-a504-34cbac219f83",
        "cursor": {
          "ref": "e19bfe6f-3738-4c75-ad3d-88766fe93aa8",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "a5ee9348-c3ab-48ac-b845-946db740eb26"
        },
        "item": {
          "id": "f914c78c-b686-4f82-a504-34cbac219f83",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "5e109108-d767-449a-b88b-efbc582bbc3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c36a5c63-c5e0-4293-9427-4816c8b50c10",
        "cursor": {
          "ref": "073e8e00-4625-47cb-8e39-06eea718b387",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "2c9df432-35e3-4d19-a4b3-48712a73b7b6"
        },
        "item": {
          "id": "c36a5c63-c5e0-4293-9427-4816c8b50c10",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "53712abe-8f30-49ac-abf4-139143185972",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5202118-0a33-4e05-ae8b-6ab566dd052a",
        "cursor": {
          "ref": "63becccf-7ac0-4af4-99a5-cfc15c0336e2",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "a8a7eb7c-dd81-48b5-8d32-9ce380458408"
        },
        "item": {
          "id": "a5202118-0a33-4e05-ae8b-6ab566dd052a",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "7e25369b-d694-46ed-8ddb-4620ef2fc96d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3910f1b-1f63-462c-ac76-cdb3a0f82165",
        "cursor": {
          "ref": "2aca1306-2c94-4624-ad7f-97dc73afa91a",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "671443ba-cc16-4d7b-b4c6-12f722c775b4"
        },
        "item": {
          "id": "c3910f1b-1f63-462c-ac76-cdb3a0f82165",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "d7f491c8-4e99-4be6-b6e3-df79802026f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc94a0ec-ba46-40f0-bebe-4aed8a36ae6c",
        "cursor": {
          "ref": "b12c5a43-1f8e-4bfd-84cf-ad66ff4e5f26",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "ced17a6f-c194-433d-b785-5b34e147447c"
        },
        "item": {
          "id": "cc94a0ec-ba46-40f0-bebe-4aed8a36ae6c",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "f7822fea-4952-48a8-bc37-3e24fd8e820b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2906642d-00d3-4701-9341-72c408c2f6db",
        "cursor": {
          "ref": "51ab9365-8412-41cb-b566-64e89ecf4e1b",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "00bd6fc9-c2ed-4aa3-a771-583a4feaddd8"
        },
        "item": {
          "id": "2906642d-00d3-4701-9341-72c408c2f6db",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "cac23a2a-13be-433a-a8fb-c5d31c5f3157",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36818633-3631-43da-94da-0e5b14252a90",
        "cursor": {
          "ref": "3ccb137e-18a1-487b-806c-61142fb7ce10",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "f3e70ebd-2bf2-41f5-8823-4809e5bbb858"
        },
        "item": {
          "id": "36818633-3631-43da-94da-0e5b14252a90",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "22a053b7-8ae8-448c-bb13-f2ba47f454a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a80c5e7a-17bc-4c85-9653-9d050607726c",
        "cursor": {
          "ref": "e0e1ee35-e2c8-456d-8200-75e44db9fbb2",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "89bdb63e-4009-4e5f-8c5e-959fc74d2822"
        },
        "item": {
          "id": "a80c5e7a-17bc-4c85-9653-9d050607726c",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "997357c5-a6c9-40b7-a4b2-c1361cb2d6a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3101eba5-29dd-43bd-b082-8378a95573a3",
        "cursor": {
          "ref": "bbf301d7-dd54-4c85-bf7d-6b233d91910f",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "81aeab86-8f5a-4c3c-bbe4-9767f1cd3502"
        },
        "item": {
          "id": "3101eba5-29dd-43bd-b082-8378a95573a3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "aff384d3-180e-448d-a3ed-3fb04fef7484",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1ff8904-fb2e-45c7-b8b5-97bbd62a41ec",
        "cursor": {
          "ref": "38803885-23b2-47b6-a782-2d085778e3ca",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "7a85cec7-00fa-4721-bf0d-e2c470a13c9f"
        },
        "item": {
          "id": "d1ff8904-fb2e-45c7-b8b5-97bbd62a41ec",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "42a8d720-1bbe-41e8-9309-081985a6e92d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97a87d14-2dbb-442a-b4a2-20a0fef90bbe",
        "cursor": {
          "ref": "083c168b-d5fe-45db-b5aa-16c3b15fcd64",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "41f2eba3-2356-46a9-8fa1-258fd71d31b1"
        },
        "item": {
          "id": "97a87d14-2dbb-442a-b4a2-20a0fef90bbe",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "82a50756-b4b9-48c8-94e2-5decbe7bbaf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e5413cb-dc0f-44e4-8072-01c3157f1501",
        "cursor": {
          "ref": "0dc39334-ebe9-4edd-b127-06aa8cf95f9f",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "59fc9157-34d5-466a-b398-b449e642c4ef"
        },
        "item": {
          "id": "9e5413cb-dc0f-44e4-8072-01c3157f1501",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "31512e5a-9024-4270-9675-eb1f6bac7c5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fee3f854-04d3-48d2-a80d-004533f15977",
        "cursor": {
          "ref": "32dc3990-e2f7-48a7-8e0b-ec4c67b9ea0b",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "e705ab4a-b8af-4b06-84e1-e94fa41062a9"
        },
        "item": {
          "id": "fee3f854-04d3-48d2-a80d-004533f15977",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "79c48b00-8bd7-4a02-a096-ceed1d1b34fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e43911c-40ad-4e44-922f-547fb54d1938",
        "cursor": {
          "ref": "21d5e392-6db2-4dd1-9f29-534b43f24fb1",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "bc7e0098-9fbc-409b-9da7-0342884c7dbc"
        },
        "item": {
          "id": "7e43911c-40ad-4e44-922f-547fb54d1938",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "3a9078f6-878a-4769-a913-4aa809cc7775",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14947014-24b0-48a0-8dbb-530b811553ee",
        "cursor": {
          "ref": "fcfd8690-9327-4427-a6a7-f791a6673cbf",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "a5b146f7-0ce5-4a1c-8dd9-ed580d0fdaa8"
        },
        "item": {
          "id": "14947014-24b0-48a0-8dbb-530b811553ee",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "f696ca33-2655-4baf-b387-91fd8021a3c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e849141d-837b-415c-a8ca-066582aab7f9",
        "cursor": {
          "ref": "823e3147-c7e3-42b4-abf2-7f927273d049",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "e45431d9-a5de-4ca6-9a95-6ce65cb1ac4d"
        },
        "item": {
          "id": "e849141d-837b-415c-a8ca-066582aab7f9",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "ed484aa9-382b-4639-8ed2-0e425c51165a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32495a14-e48d-4051-849b-b5f7837f0b25",
        "cursor": {
          "ref": "001662b3-f109-4e65-b7ce-e3d6e82bdb17",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "0c570ef2-1c4a-4e43-b4a5-78334a25ce38"
        },
        "item": {
          "id": "32495a14-e48d-4051-849b-b5f7837f0b25",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "55aa9e02-95f2-442e-8f38-8fa8dcca8d0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf61ef3b-cc08-4c28-82d5-0c22aa934e11",
        "cursor": {
          "ref": "0ee3928f-0021-4fa9-8390-5cf4f79460d7",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "f7fd4664-85a4-4925-a02c-e2579ac7bb76"
        },
        "item": {
          "id": "cf61ef3b-cc08-4c28-82d5-0c22aa934e11",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "353c82ef-764b-4969-af2b-8ab6b1afda95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa057245-eb2b-43eb-b8ad-49de9dbfb5ac",
        "cursor": {
          "ref": "8e4789af-c8f3-42dc-a4d6-59d32728378e",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "76351b3e-a099-4a7d-9fdf-4eba28fe2555"
        },
        "item": {
          "id": "aa057245-eb2b-43eb-b8ad-49de9dbfb5ac",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "a64429f3-e5e6-49eb-ad81-c64f83eb7bd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef49f8b4-6352-4bf6-9459-ce556dc64141",
        "cursor": {
          "ref": "47abf718-6c9b-4c13-9581-45ac19ceed9d",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "50900a29-9fa7-4e7f-96ab-d370dda87bd0"
        },
        "item": {
          "id": "ef49f8b4-6352-4bf6-9459-ce556dc64141",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "4f9ecd1a-07a6-4904-a6b3-04518298a920",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e46ea3b-b09d-4c5e-8248-6ed0ffb34cd1",
        "cursor": {
          "ref": "d4660708-0611-4764-9d17-28237df2d13f",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "b676a3b3-3eba-4ff2-adf8-1506074b8280"
        },
        "item": {
          "id": "4e46ea3b-b09d-4c5e-8248-6ed0ffb34cd1",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "4e3fffb1-e3bd-41fe-8e38-f6bfa9e92937",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d6cd17f-dca8-4ece-8f39-3a0c35fd1473",
        "cursor": {
          "ref": "2e72b318-eaae-4867-bfa9-c3310a2ca0a6",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "76b19d09-486f-4a41-9b39-8be6bb963c82"
        },
        "item": {
          "id": "1d6cd17f-dca8-4ece-8f39-3a0c35fd1473",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "f0fb8339-4bcc-41a2-806f-d7b282d4c341",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b09412b-23ae-4718-887b-e06a82940643",
        "cursor": {
          "ref": "7c3fb736-1c9e-478f-9e41-cd3dcce5c5b5",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "5a05654e-3e8c-42b3-b177-04ce618cea44"
        },
        "item": {
          "id": "6b09412b-23ae-4718-887b-e06a82940643",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "1b9908a2-fcdc-4086-8732-e9bf7e50bfa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "849ec932-e750-4aab-afc6-f2e9960a29cb",
        "cursor": {
          "ref": "29bc737a-993d-462e-9d3a-894136d96a0c",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "e25fa716-dffe-4798-9337-c5f4b2c25df5"
        },
        "item": {
          "id": "849ec932-e750-4aab-afc6-f2e9960a29cb",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "3479b05d-7223-4cb0-aeb6-2815e0179f4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a24959ec-bf26-4a78-b3b4-5668004f8478",
        "cursor": {
          "ref": "9da5f5d0-c871-4b54-a342-2c4c41082ce0",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "eb891f8b-70ba-4d49-ae82-8b1a55dcfe50"
        },
        "item": {
          "id": "a24959ec-bf26-4a78-b3b4-5668004f8478",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "b5d236f7-5aec-427b-8236-6daf92f8e5ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bb5ba8c-13f0-4742-bf98-41ff7f2f07d6",
        "cursor": {
          "ref": "07c67cfe-2f34-4eee-b59e-bfdb5732e6cb",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "9e9329a3-a748-4965-b1bb-e339999320e9"
        },
        "item": {
          "id": "2bb5ba8c-13f0-4742-bf98-41ff7f2f07d6",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "dc4a46be-12c6-4140-8df8-d2d47650c424",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab48ec07-d2d2-426a-8a96-97cc33e57da5",
        "cursor": {
          "ref": "1d3224ad-f46a-485e-947e-edfe7decb3cd",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "97ad15dd-aa40-426d-b32a-1463cf465c56"
        },
        "item": {
          "id": "ab48ec07-d2d2-426a-8a96-97cc33e57da5",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "e2edd43a-5260-47e7-91bc-e0b9de40b9bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf0d2ec4-ae04-4c16-8dae-5b3ca28cc65f",
        "cursor": {
          "ref": "124a3e8d-e84f-452a-a70c-9050c26d8adf",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "129b6717-0c8a-4a14-9f58-26c2ac6c4f6e"
        },
        "item": {
          "id": "bf0d2ec4-ae04-4c16-8dae-5b3ca28cc65f",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "61754c40-a363-4c9b-9c84-d2f410f087b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c41c8d11-e3a9-4d14-b99a-2c2e36faddd9",
        "cursor": {
          "ref": "92aab2ad-48a0-4fa5-b1d7-adac68fc2d91",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "49891ee3-5a24-4036-a8ce-75ce5ab9dd0c"
        },
        "item": {
          "id": "c41c8d11-e3a9-4d14-b99a-2c2e36faddd9",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "c7e08ec1-a243-42ca-8a5e-2718a18aa68e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76e50770-d5a8-4ed6-b8b5-70f9fba4052a",
        "cursor": {
          "ref": "652fa5d3-8088-4593-b791-060099c292fd",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "9a1b7402-2f56-4f53-9a76-1ba49a7c8661"
        },
        "item": {
          "id": "76e50770-d5a8-4ed6-b8b5-70f9fba4052a",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "a7321aad-0478-424f-abc6-f760085028c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f89a354a-17c5-41ac-8175-e4801dbc8bb5",
        "cursor": {
          "ref": "bc12e0c2-08f2-4ae8-9c06-138ba40c891b",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "d9424d0d-ea02-4c99-a606-215f2f405f8d"
        },
        "item": {
          "id": "f89a354a-17c5-41ac-8175-e4801dbc8bb5",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "0f52c4fe-0449-498f-a07f-71ffbc27b5cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "817e6038-cb65-4ae7-bca1-e1c82d44ac80",
        "cursor": {
          "ref": "b5570984-be0e-49f0-a406-2ec94380ef08",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "587c680d-58ac-4396-aa5e-43bb8858b323"
        },
        "item": {
          "id": "817e6038-cb65-4ae7-bca1-e1c82d44ac80",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "501cdea3-69b3-44b2-aae8-cd45cf2c90ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50f0f2bb-da0f-44f4-8b4a-9d658a493a4b",
        "cursor": {
          "ref": "bc4bc612-3fc8-4f3e-82bb-6eae6251e37f",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "dbb4e0b5-47ea-44f1-98bf-263147df316f"
        },
        "item": {
          "id": "50f0f2bb-da0f-44f4-8b4a-9d658a493a4b",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "e1cab519-bda7-4a83-a188-f85e0f92adc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0088ee02-be93-4d47-901a-77f3c3c1e1f9",
        "cursor": {
          "ref": "52454932-c4cb-44ae-a1be-d236c55363a8",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "4daa314d-d170-40e1-821b-e3a7ba3756ed"
        },
        "item": {
          "id": "0088ee02-be93-4d47-901a-77f3c3c1e1f9",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "e6f7aaba-c8f7-4f21-891c-f98dc7fe0278",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07fef590-a92d-4927-ad28-56d7fd4adce7",
        "cursor": {
          "ref": "4b3048b8-0b54-487b-8f8f-6501220bc429",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "b60aa312-40bc-4823-904d-01ba690fe7f0"
        },
        "item": {
          "id": "07fef590-a92d-4927-ad28-56d7fd4adce7",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "15827e32-5287-4c69-b4e6-8b24c1bcf1da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b4c405e-23fc-4196-8c11-854f51d3c7fb",
        "cursor": {
          "ref": "6f1e55c5-e7b9-4756-8df4-7c27d539b4c6",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "a73fc520-007d-4f3c-a051-d96791bfb0db"
        },
        "item": {
          "id": "1b4c405e-23fc-4196-8c11-854f51d3c7fb",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "8a33f526-ae43-4db0-adb7-bb4765243bf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f5a0841-8b8a-4be7-96e3-5d7d5b35ff40",
        "cursor": {
          "ref": "af1c28a1-045d-4479-882e-c777aee6910f",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "7949bfd1-1c76-48fb-a9bf-774e095d4fd4"
        },
        "item": {
          "id": "3f5a0841-8b8a-4be7-96e3-5d7d5b35ff40",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "90499dc7-018a-4d7b-abac-26b99cb1f6f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7c14f31-2f8b-4e97-a42d-f783fe203d89",
        "cursor": {
          "ref": "fa83248b-7b1f-4cb5-99bb-aa2b12d12664",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "ed19c471-05cc-4f36-a7e5-0df561f0ec18"
        },
        "item": {
          "id": "c7c14f31-2f8b-4e97-a42d-f783fe203d89",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "e7fe4cec-d0cb-4859-828e-c5fbf4a2a691",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4b02e2c-638c-4ace-acef-af037674d6e2",
        "cursor": {
          "ref": "fcc5f0bc-f408-4760-a7e2-b47a54470a30",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "56862dc3-c9cf-45bf-b6c2-d62290cf611b"
        },
        "item": {
          "id": "f4b02e2c-638c-4ace-acef-af037674d6e2",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "dea22384-7462-490f-aa05-eeb216fbc3ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66305e6a-175e-4457-87f6-bc5075f8a925",
        "cursor": {
          "ref": "0ff0b17c-7bc9-40af-9641-3ab82afd1249",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "7cf353a7-842a-42d5-a47d-bf62d9c42016"
        },
        "item": {
          "id": "66305e6a-175e-4457-87f6-bc5075f8a925",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "c8d92d15-6b2d-4066-be36-89fac5836213",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 842,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1313dd4-bd2b-4eb6-aba4-54e67710a744",
        "cursor": {
          "ref": "56b80db5-567c-4a69-832c-13a34b8563b4",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "43a1082d-b2ac-4096-a35f-f63e37dc78c6"
        },
        "item": {
          "id": "a1313dd4-bd2b-4eb6-aba4-54e67710a744",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "8555e828-372a-481d-a4f0-bfa1fbb49a43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55c85b87-cb2d-4e1f-b1ca-d003cf2c3950",
        "cursor": {
          "ref": "f6ec0261-afff-4a20-80fa-b5903e9a3e21",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "d18e10a4-382e-4078-b84a-348cf7a35e7e"
        },
        "item": {
          "id": "55c85b87-cb2d-4e1f-b1ca-d003cf2c3950",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "66802abe-4db5-4112-ab4a-8fab9d61d338",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fe3be09-6040-4501-ba25-764e11098fd6",
        "cursor": {
          "ref": "97b38714-a0d3-4ba4-b379-7bc3bcd6f8f7",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "7b614c54-b1bb-44aa-abfe-8b2425be9b9d"
        },
        "item": {
          "id": "2fe3be09-6040-4501-ba25-764e11098fd6",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "078cca10-f0e8-4af5-b1dc-3abea79c232c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3ae7ee3-6fa2-442b-b4ef-a0fdb8ee2033",
        "cursor": {
          "ref": "f3b00f9f-9583-4538-9619-5ce217b070b4",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "e2ee1369-c513-4c5d-9e71-e2959f32f778"
        },
        "item": {
          "id": "b3ae7ee3-6fa2-442b-b4ef-a0fdb8ee2033",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "35c65ef2-4df4-469f-8359-36537e12eec1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b27f59b4-a168-4082-8f69-8adda1497529",
        "cursor": {
          "ref": "c387c3c8-b1c8-4240-90b6-de87640b016f",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "9bbdb317-30e9-4917-b692-015a97457ed2"
        },
        "item": {
          "id": "b27f59b4-a168-4082-8f69-8adda1497529",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "5e99788e-9bb0-4655-a988-323c22885c18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "b4ba37dd-4c47-4afe-9a91-996a0f04d252",
        "cursor": {
          "ref": "fda89860-8bde-40a4-93c7-f2728ed68c20",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "132c35ec-6dc4-4505-b058-c03b5534e06d"
        },
        "item": {
          "id": "b4ba37dd-4c47-4afe-9a91-996a0f04d252",
          "name": "credentials_issue"
        },
        "response": {
          "id": "74957f0a-2c19-47b9-a875-2c1b382d5370",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "f3c3e7da-1316-48f9-9562-6768eeadb9e2",
        "cursor": {
          "ref": "3b7aaefc-3cca-44b5-863a-82ecfef768d7",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "c73b3552-72c5-4f13-aee9-8d0ad4d82669"
        },
        "item": {
          "id": "f3c3e7da-1316-48f9-9562-6768eeadb9e2",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "9418f634-3939-4bf9-9eb9-39eb9012d514",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "41f40464-d43f-4ae8-9cd5-3076f8de0bcd",
        "cursor": {
          "ref": "051e79ba-0f43-472e-b4df-d67b99117bf4",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "1f39dc59-f776-447d-b785-87a2ee388969"
        },
        "item": {
          "id": "41f40464-d43f-4ae8-9cd5-3076f8de0bcd",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "0564e4c7-3aa8-433c-b8a8-4c02872a4f33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "ae35141d-8b23-4e42-9023-a526ba0bf3cb",
        "cursor": {
          "ref": "ea15eaf5-58cb-44b5-a7a0-1b2d281aea03",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "86f466a4-15f7-4985-a26b-3db444ace1e7"
        },
        "item": {
          "id": "ae35141d-8b23-4e42-9023-a526ba0bf3cb",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "daa95d54-d1bc-4700-9318-2023c0d8cbf6",
          "status": "Created",
          "code": 201,
          "responseTime": 9575,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "521c5975-00e8-4908-b043-50a10dc7055e",
        "cursor": {
          "ref": "c8ac4cbf-9111-41da-ac0d-a8cb2a9373c0",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "b2c9022b-1320-473c-b67e-215b66f7414d"
        },
        "item": {
          "id": "521c5975-00e8-4908-b043-50a10dc7055e",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "f30b13fd-8e69-4caf-a928-41c88e900444",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "dfe499c2-0680-4e83-b88e-042eda19de83",
        "cursor": {
          "ref": "26aff442-e28a-4c86-b839-4fe188ca00c5",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "e59dcc8f-3b5f-4083-b353-b3b3ac9bdc01"
        },
        "item": {
          "id": "dfe499c2-0680-4e83-b88e-042eda19de83",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "83a3833f-a43f-4dee-b0a1-9e4d99174496",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "d566aac6-c836-41de-b99a-895fffc104d4",
        "cursor": {
          "ref": "7edf98e2-e4ef-40ef-8aa5-314067942021",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "96602cd4-fc7b-426b-b6dc-4ab1cd89612a"
        },
        "item": {
          "id": "d566aac6-c836-41de-b99a-895fffc104d4",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "7fde2f1d-ed49-4765-bc1f-b2b2933dfa2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 206,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a50e0976-b18f-4db7-9a7c-e300410da91d",
        "cursor": {
          "ref": "94c0a8fd-b894-47fa-9091-6ce28063314a",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "a7347665-83e8-4a01-bd9e-e99db0116a94"
        },
        "item": {
          "id": "a50e0976-b18f-4db7-9a7c-e300410da91d",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "1e1ba604-b307-430f-98ba-f0fd181df110",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ce2f976-b5cb-4385-b85b-624b7c50cd60",
        "cursor": {
          "ref": "2474e32a-60ed-4582-9da8-29a2ad01c476",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "f02c4b4d-e111-48aa-af36-71a8e3d95163"
        },
        "item": {
          "id": "1ce2f976-b5cb-4385-b85b-624b7c50cd60",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "0c659d93-d528-4fcd-833d-6ebf245bd718",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "389c7474-96bd-425a-ae89-a87543a7ba66",
        "cursor": {
          "ref": "3c25b15e-0e1d-4caf-a773-c6336449e3fd",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "da30727f-275b-4ffc-a1bb-d65be436bdde"
        },
        "item": {
          "id": "389c7474-96bd-425a-ae89-a87543a7ba66",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "791bcfa2-cd48-4526-b339-a22785a91f76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51e1bcf2-6e3d-435e-97b7-28ba3d3ad915",
        "cursor": {
          "ref": "6d87f6e4-6282-4877-8ca0-8f66237a770d",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "9cef8d09-63fc-4051-adea-04391defbb8b"
        },
        "item": {
          "id": "51e1bcf2-6e3d-435e-97b7-28ba3d3ad915",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "6adccd07-a9dc-4ea3-98aa-b4f74eac60c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1671752-b23f-44f5-839b-5cce192277f9",
        "cursor": {
          "ref": "c71449c1-9a7e-4b73-9f9c-4d762f602740",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "91527d0d-0ad1-4ad9-a1fa-7eea2bd83401"
        },
        "item": {
          "id": "b1671752-b23f-44f5-839b-5cce192277f9",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "87b36381-b3e8-4863-9c4a-ae1b00da4aeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86faddc6-3561-4379-b2b9-da2b5c458fb8",
        "cursor": {
          "ref": "02645c14-f5b0-49d9-a883-bb7959db9368",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "8aad2919-e05f-46ac-ba79-e535b0203a79"
        },
        "item": {
          "id": "86faddc6-3561-4379-b2b9-da2b5c458fb8",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "7f6b566d-3921-409d-a4ca-ed93c05b75ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6830dd1-c325-483a-b44b-d9ea5509b9fc",
        "cursor": {
          "ref": "ea8a7032-da70-4229-87d2-f3f3a9a9ec42",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "d53ab0bb-0c8b-423c-8e21-7100f2f052ec"
        },
        "item": {
          "id": "a6830dd1-c325-483a-b44b-d9ea5509b9fc",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "a4510d13-801a-47ef-bc3b-e71f8f757c4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a1da936-229c-4f9f-b99e-2f9b4a8e745c",
        "cursor": {
          "ref": "08da7a9b-ef79-4fb2-a12a-9ec3527f57f8",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "5c88909d-ea54-4d08-b1c5-800834be30ce"
        },
        "item": {
          "id": "6a1da936-229c-4f9f-b99e-2f9b4a8e745c",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "410a73e6-8904-4b2d-ad2b-7ee41f69c671",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b95fff4b-507b-47e0-913f-8867a066490f",
        "cursor": {
          "ref": "d987a2c6-1110-42cc-b139-2e24b2a87c88",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "7b7cdffa-65b3-4f65-8e1e-b90b448e4671"
        },
        "item": {
          "id": "b95fff4b-507b-47e0-913f-8867a066490f",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "e829bfe7-4945-40f5-a705-bfd21811f805",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "669368bc-4e53-4f88-aa83-1625d8a198d8",
        "cursor": {
          "ref": "b7336c59-8741-4977-85ad-d1b7b49feafc",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "3b95984e-45ef-446e-8866-ded1edad2c1d"
        },
        "item": {
          "id": "669368bc-4e53-4f88-aa83-1625d8a198d8",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "b0dbe278-e44b-46b8-968a-65fb1ac0d1fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c32de20-21d6-40d9-928e-5fe85fa654cc",
        "cursor": {
          "ref": "77e86b6b-2f0a-4668-8f6d-7f16843b7138",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "d6ee1ce6-efb2-48ed-abd7-6edeba1f429c"
        },
        "item": {
          "id": "6c32de20-21d6-40d9-928e-5fe85fa654cc",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "d7004ff2-6458-4dc7-ad4c-8f4a1bd98b5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5f4f151-428a-4cf2-808f-ee89e8fa9234",
        "cursor": {
          "ref": "0623162c-ec20-4635-b9f8-f5d83b8b9d06",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "064ac989-f02b-489d-8747-b0edb320de82"
        },
        "item": {
          "id": "a5f4f151-428a-4cf2-808f-ee89e8fa9234",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "fe77c7c9-b03f-4570-88d1-1cf5cae824c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4dc0f4d-6ee6-4970-9416-c9d8402e7d4b",
        "cursor": {
          "ref": "3e08818a-5020-4d05-889b-4585ae1b3ff9",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "35e6121e-9a31-4e34-8636-2c6fc404148c"
        },
        "item": {
          "id": "e4dc0f4d-6ee6-4970-9416-c9d8402e7d4b",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "e7580295-bc6c-445c-8d51-dff9e633cd25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac112aa7-964d-400c-8c0e-0d7b33507804",
        "cursor": {
          "ref": "f02f2b38-4e9d-4762-b1fd-1025eb016bb3",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "46302c0f-ee9a-45d4-befa-54f7a775c6ad"
        },
        "item": {
          "id": "ac112aa7-964d-400c-8c0e-0d7b33507804",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "04c07928-1934-4787-a55a-d9c9b5b74210",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 407,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c1f9357-0f85-4d28-952b-cdde5f17cfe2",
        "cursor": {
          "ref": "29efb395-a5b6-481f-a1ae-bef8721e832d",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "7e9e4869-124e-494d-b281-7fdb988276ad"
        },
        "item": {
          "id": "8c1f9357-0f85-4d28-952b-cdde5f17cfe2",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "b8afb0ef-ebac-42e6-bf67-ea6b90f3c1c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3650649-e3ca-4194-8446-b4d55ec29e94",
        "cursor": {
          "ref": "8f61f6d5-4119-4196-8275-356d90e15561",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "79c4a4ff-91c5-4175-9683-75fc1bfd52a2"
        },
        "item": {
          "id": "a3650649-e3ca-4194-8446-b4d55ec29e94",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "42c2b118-434b-4a2d-87f5-85bec53bf815",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 231,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "267f2508-248e-4d76-8553-e98ce7dc0061",
        "cursor": {
          "ref": "db3d70fe-8fb9-47c5-b0cd-6712f4021512",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "b4bc3cd8-2cdd-4063-bc76-8ec6b8b523b2"
        },
        "item": {
          "id": "267f2508-248e-4d76-8553-e98ce7dc0061",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "51856c23-4b1a-4446-9217-33675e607663",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 220,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eff6175c-aa30-4933-ad23-78bbc4ad3707",
        "cursor": {
          "ref": "2f8be453-3b77-489c-bc8b-ee6d13943272",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "eb0c0527-52fb-4b82-97c7-6c062e47c3f2"
        },
        "item": {
          "id": "eff6175c-aa30-4933-ad23-78bbc4ad3707",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "8632480f-2e4b-4397-998d-ec87fccfdbe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 160,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbcac65d-d536-46cc-96a1-fbaef7123ecd",
        "cursor": {
          "ref": "f6c24fcc-77f2-4b2a-8fa7-44bc1f58da1d",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "5d876cd1-113e-4e9c-a592-ad0f6b2bfdc6"
        },
        "item": {
          "id": "cbcac65d-d536-46cc-96a1-fbaef7123ecd",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "d3f04d8d-1083-4631-a0b3-fa8dfe19f73d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 119,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a099777-f942-4e27-9c5d-a4a8a0e23e9d",
        "cursor": {
          "ref": "62c92e45-cf2d-42fb-aaa0-38f6eb7e829c",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "b54d2f7b-125b-48ef-99a0-1167726ba41c"
        },
        "item": {
          "id": "8a099777-f942-4e27-9c5d-a4a8a0e23e9d",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "b1d81b5b-88a2-4429-b1f0-ab50dd3cad71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5dc4569-6850-4ddf-b9c2-4ab6a10addac",
        "cursor": {
          "ref": "8c0f9b5b-cd8c-49c6-a728-160da55d4af9",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "0f63e1b7-5222-4281-927b-6be9881bf746"
        },
        "item": {
          "id": "c5dc4569-6850-4ddf-b9c2-4ab6a10addac",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "0b3bfd5f-c0c8-42c7-9751-c0ba2cff3e24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9098646c-36f4-4f95-96d9-3955e8d18758",
        "cursor": {
          "ref": "d0439bb5-7966-4db0-b343-03c7fc87d954",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "1ead95d3-b1cc-4127-b651-8080d2dea443"
        },
        "item": {
          "id": "9098646c-36f4-4f95-96d9-3955e8d18758",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "df741d9a-2a5d-4137-9bf6-951a6002e9bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 225,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64017573-dd51-48f6-88a9-d5727b1bc17d",
        "cursor": {
          "ref": "58b0d03b-887c-4335-bd61-a2a36495836c",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "da5477ff-4c4f-47a3-ba2c-090c8adde9d6"
        },
        "item": {
          "id": "64017573-dd51-48f6-88a9-d5727b1bc17d",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "fdeaf35c-5073-421d-88ab-bc2f19ce3273",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf456213-adf3-45ea-be15-e6338fa0a685",
        "cursor": {
          "ref": "acee3311-2dc5-4803-8f17-9ace9bde8f5f",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "2db9b034-510e-4ce1-88d0-a5fd4397bf09"
        },
        "item": {
          "id": "bf456213-adf3-45ea-be15-e6338fa0a685",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "c577b8cd-cb93-47d2-995b-56072f0ab4f3",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 90,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "45596256-db99-4bb9-98e6-34cf2a910a5a",
        "cursor": {
          "ref": "65a65717-8691-4a15-96b2-2c3888dc55c1",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "c4291a4f-d749-4b3d-91e6-369dff1539a2"
        },
        "item": {
          "id": "45596256-db99-4bb9-98e6-34cf2a910a5a",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "f8ac24bb-abc9-44eb-89ce-a6b146f13c30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "745c99f0-81fd-40d5-8e8e-72b05751ebee",
        "cursor": {
          "ref": "76d4257d-d598-4d9a-8dfb-3f303dfa6bdd",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "5e631862-fc74-44b6-9ede-bb02f731c9fc"
        },
        "item": {
          "id": "745c99f0-81fd-40d5-8e8e-72b05751ebee",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "da426c47-dbc5-4f51-a535-ec31cd6b3ff2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 197,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67ce2ea8-588c-4a00-9813-d723e35c0d6d",
        "cursor": {
          "ref": "0473b21e-9156-452c-be70-36858a2483e3",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "302ca76a-e781-42f2-96fa-2e8e7ea2d311"
        },
        "item": {
          "id": "67ce2ea8-588c-4a00-9813-d723e35c0d6d",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "8193fbf8-06c5-4fe6-85ab-a1ce32be79b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89b56c24-9278-4997-af58-7a59b2d3a5a1",
        "cursor": {
          "ref": "2045c20a-6ded-4a90-ae88-e16561d71b48",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "0e2eb148-ec6c-4626-a70d-05636fbe611f"
        },
        "item": {
          "id": "89b56c24-9278-4997-af58-7a59b2d3a5a1",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "2e8d1aba-c787-4b03-89cb-569e8d847609",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71e5b6f2-64ca-402a-b962-294cfd2a41af",
        "cursor": {
          "ref": "b6e06d3f-d7e6-4970-8745-e7d72f1ea521",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "26f1617b-d277-480b-8b1e-3f6c40d35886"
        },
        "item": {
          "id": "71e5b6f2-64ca-402a-b962-294cfd2a41af",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "ad53ca61-0cbe-410c-9702-77a699450095",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8353c715-3766-40d3-a689-996ce735ad11",
        "cursor": {
          "ref": "16e124f3-fc56-4213-a7c0-5bb92bae84ed",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "5463622a-ecea-4321-8d0f-8fa879ca890d"
        },
        "item": {
          "id": "8353c715-3766-40d3-a689-996ce735ad11",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "fe62b836-8d9c-4ac7-a018-2e32347e1909",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c98a161b-71c5-4f4b-b8f2-79ab64e49092",
        "cursor": {
          "ref": "b38e0c9b-c762-49b7-b531-653206825996",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "5b652422-db59-40a2-88de-2e5c590fd65c"
        },
        "item": {
          "id": "c98a161b-71c5-4f4b-b8f2-79ab64e49092",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "c1ff15c5-4241-4884-854e-602aec55b291",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 45,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "ac5a7464-91b6-4025-b3fb-aa53fc36b0c7",
        "cursor": {
          "ref": "8e21e6da-a5ab-43f2-b889-52dcf15a38a6",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "8a39c436-7e3f-41e0-a7de-1a0886265929"
        },
        "item": {
          "id": "ac5a7464-91b6-4025-b3fb-aa53fc36b0c7",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "7f2a1585-4d16-4c1d-9f93-a1a4a9051584",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 40,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "b7b58988-45ff-4ec2-96e2-03316b357393",
        "cursor": {
          "ref": "0aacba68-6179-4061-83c8-12bda443c63d",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "ba0b7e89-35ec-4a17-b2da-075632c83678"
        },
        "item": {
          "id": "b7b58988-45ff-4ec2-96e2-03316b357393",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "23f7a5fd-fe33-4586-8112-65dcc4f2184f",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 56,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "92dfc8f5-8aab-4af0-a1d9-03452ccc109e",
        "cursor": {
          "ref": "a6a7fc88-4048-4d79-9050-7f1b7a5d873a",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "a9ed6f93-a0b9-4ce7-81a6-bd6156d9c1c6"
        },
        "item": {
          "id": "92dfc8f5-8aab-4af0-a1d9-03452ccc109e",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "687b275a-87ce-4831-9f4c-61a655d9e380",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 43,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "0c726b11-44ff-460f-b5c7-c9e321ba24ce",
        "cursor": {
          "ref": "4b6216eb-7c71-4ee5-bca2-a01382225c61",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "6ae11429-51ea-49b5-b17d-cfcda210721c"
        },
        "item": {
          "id": "0c726b11-44ff-460f-b5c7-c9e321ba24ce",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "ed89a2c6-0dfc-48d8-b6ba-c1505a599d8d",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 37,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "9a8ccace-470b-4fcd-bc67-5760564c05c7",
        "cursor": {
          "ref": "3983fe58-f35d-4d15-9b61-0754c86da6aa",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "d422108f-68ab-41e3-b009-dd0615932389"
        },
        "item": {
          "id": "9a8ccace-470b-4fcd-bc67-5760564c05c7",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "abf91dbd-f8b2-442f-a3dc-e50fe30649c3",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 36,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "f99633e9-d8d1-4c06-b932-eb30003fd4b4",
        "cursor": {
          "ref": "b7deee64-18ce-4239-ac3d-dff964cfd1de",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "94f1e554-8578-4188-8eb1-18d4f9be5d3e"
        },
        "item": {
          "id": "f99633e9-d8d1-4c06-b932-eb30003fd4b4",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "ac4f7c30-fbbb-4cbc-a764-69de1c50c375",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7186d6b5-eb3c-478a-a961-33080e852cce",
        "cursor": {
          "ref": "023f017b-e03e-479c-97c2-689ca9abb3da",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "f56751c7-9030-41c0-9c00-803b7b715493"
        },
        "item": {
          "id": "7186d6b5-eb3c-478a-a961-33080e852cce",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "946a02de-25b1-4387-a2fc-4f6d2e02a399",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2ada7f8-43e0-4d62-9c59-1283158c842b",
        "cursor": {
          "ref": "02f81a97-e179-4c1d-bf0a-777d8481eaaa",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "b277c4a1-da6e-422e-9bcc-3d461bb6b700"
        },
        "item": {
          "id": "e2ada7f8-43e0-4d62-9c59-1283158c842b",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "df6dfefe-a696-44d0-8fc9-d1dc79235976",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2795794d-3e2b-4949-838e-56f3462447db",
        "cursor": {
          "ref": "fb307aef-3493-486a-bc65-e01c013bf70a",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "74ea04e4-c556-4543-b536-f1f22cd8e44d"
        },
        "item": {
          "id": "2795794d-3e2b-4949-838e-56f3462447db",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "22b005f1-f96a-4c6f-b1df-d9ddba6ea880",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93e73c5a-40ac-4651-9f18-852c70413ded",
        "cursor": {
          "ref": "8a71db70-74ab-42e2-a671-e1496fd53eb9",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "f8c06cc4-dfcb-4afa-a73e-f9822c3b954e"
        },
        "item": {
          "id": "93e73c5a-40ac-4651-9f18-852c70413ded",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "616e4f2d-d3a6-48f0-af2b-e7a7ef005a12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e0f453f-e564-4bad-8935-fdc9c400da11",
        "cursor": {
          "ref": "12b70123-3777-4484-b5e7-e708eba64469",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "48f20c13-a627-4fdd-b4a7-d45648380ecc"
        },
        "item": {
          "id": "3e0f453f-e564-4bad-8935-fdc9c400da11",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "f615d33a-608d-44f8-a1ea-7fb27a3c972f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "977a398f-306d-4b36-bcca-747f50090247",
        "cursor": {
          "ref": "db4b147c-0c7a-4af1-93ea-6bae477581d6",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "6613e790-7cf3-4bac-829e-40fe8a81c626"
        },
        "item": {
          "id": "977a398f-306d-4b36-bcca-747f50090247",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "ffef6518-e79e-4765-b7c3-5247b11c0a80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eab9f5fa-c3f2-44d5-8871-06a2f33ee733",
        "cursor": {
          "ref": "8ba19ff7-0f2d-45d3-9c4b-33ab6c819c25",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "615dd5f0-3870-4230-9d76-e8a035bd6d62"
        },
        "item": {
          "id": "eab9f5fa-c3f2-44d5-8871-06a2f33ee733",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "f2b0285c-ef06-4e8a-8b06-ccd2f20528d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b83eef4-7501-4f82-bd52-a7c65c2e3940",
        "cursor": {
          "ref": "c7ffdf37-6f0c-4b29-87c3-8c6651b86b9e",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "4277bbfd-e523-445f-a238-ed8ce6aa1f1a"
        },
        "item": {
          "id": "9b83eef4-7501-4f82-bd52-a7c65c2e3940",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "f8b40083-c33b-4ff6-bf59-7ff0cd655200",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27967c65-2d67-4f21-a7aa-f60466b15b0b",
        "cursor": {
          "ref": "354289d7-5f0b-4f5c-8dfc-15446d6d173d",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "bcce6c2b-cb6b-48b4-b376-b05d307b115f"
        },
        "item": {
          "id": "27967c65-2d67-4f21-a7aa-f60466b15b0b",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "2be988fb-f537-4b0b-8bc0-27e506e1d878",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a6d5920-27a7-42bd-ba00-ca89166e1ac9",
        "cursor": {
          "ref": "7a842600-9f36-4ab5-9bfa-21446103658a",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "8b5f4cc2-17d9-41eb-8cd5-b3e58a05334b"
        },
        "item": {
          "id": "5a6d5920-27a7-42bd-ba00-ca89166e1ac9",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "edc35cd7-1839-458e-9b5e-b3660077d04d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c51bf2cb-a3dd-4c06-ae62-99d1d740f079",
        "cursor": {
          "ref": "3d0845a9-c589-4bc1-9f1a-2ab6e9d65507",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "0f70f080-26f6-48b5-894d-63e81c46a59e"
        },
        "item": {
          "id": "c51bf2cb-a3dd-4c06-ae62-99d1d740f079",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "eee57e44-61eb-4210-99df-826dac96f8a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c704a74-ee62-485d-8d50-91144efd53a9",
        "cursor": {
          "ref": "89ba9e4c-df16-418f-988e-d03fd830c0b1",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "39268b16-4686-4064-9190-15602dd05946"
        },
        "item": {
          "id": "9c704a74-ee62-485d-8d50-91144efd53a9",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "80da9a69-5568-4a3d-8485-1f2c96425634",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b15f49ab-81ee-4013-a443-931bf0e2bd9a",
        "cursor": {
          "ref": "a0c5d388-7600-46bf-9754-dd7f21296c6b",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "54fe47ac-f9b7-4bc7-9408-5a322644799e"
        },
        "item": {
          "id": "b15f49ab-81ee-4013-a443-931bf0e2bd9a",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "0986b527-b6d7-489c-a675-9d5c8a16a115",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4087079-8cfd-4255-a0e8-db75945a3bf4",
        "cursor": {
          "ref": "753e323c-a386-4fed-a0b1-c1ed6914d290",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "92998286-c2df-42a7-a3b8-36989d16193d"
        },
        "item": {
          "id": "a4087079-8cfd-4255-a0e8-db75945a3bf4",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "78dbe5e7-12f7-423e-8709-b7c6f984d8dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "819c80f6-78e9-4d9d-8e3e-e4a1e1e9b6ee",
        "cursor": {
          "ref": "ee1b92ff-9e39-402d-80e4-77f81b23d1ad",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "73ed9266-adee-4d57-940a-9cea2d081e06"
        },
        "item": {
          "id": "819c80f6-78e9-4d9d-8e3e-e4a1e1e9b6ee",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "bbf4e080-28c9-4bdb-adc5-3dc767b31a39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f67271f-726a-4fef-a439-b0e5c04f845a",
        "cursor": {
          "ref": "e6b7f4b1-df43-4e65-b4e4-3fb2ded5f42a",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "7f3c054b-ec91-4e82-abf3-c70da21eaad4"
        },
        "item": {
          "id": "0f67271f-726a-4fef-a439-b0e5c04f845a",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "90e98807-cb73-47c6-a4ac-3afe6148c9ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbe4299d-16bb-479c-abd5-d9476d4d7740",
        "cursor": {
          "ref": "38b67f23-8364-48bd-8a69-346f0fe357d0",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "ee33f9ad-c8dc-4813-be68-1cfa23160701"
        },
        "item": {
          "id": "fbe4299d-16bb-479c-abd5-d9476d4d7740",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "9d0998ce-04b4-44fe-a98a-d266870743c0",
          "status": "OK",
          "code": 200,
          "responseTime": 94,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "ae166d6b-6cc0-44fb-9a20-f91e75032a37",
        "cursor": {
          "ref": "5f32cc23-94f5-4971-8f43-bab01b3a26c0",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "5d600bfe-9e79-4096-a1b7-78656b98a69f"
        },
        "item": {
          "id": "ae166d6b-6cc0-44fb-9a20-f91e75032a37",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "d0785a98-b79e-4288-878c-a6de1d9dc163",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d193c6bb-56be-4174-8635-00899a903770",
        "cursor": {
          "ref": "9a28c961-facb-4a4e-8fa7-f681fb03a322",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "17a59a3a-9824-499b-8c5e-e9d49fae15f0"
        },
        "item": {
          "id": "d193c6bb-56be-4174-8635-00899a903770",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "bd6d06ba-8b36-43c0-8209-bb08a84a92d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cf8d752-a495-412e-887f-f6b3f2ab0409",
        "cursor": {
          "ref": "99501a57-8ed6-401d-97cc-065bf5e26f4d",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "6f1738f9-d499-4656-9e8d-4bd434fffeb8"
        },
        "item": {
          "id": "6cf8d752-a495-412e-887f-f6b3f2ab0409",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "c0c9ac8d-1bcc-4db8-8574-1baa91a8c28e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d2251fe-37d6-4fe3-9096-dabcf78e52a9",
        "cursor": {
          "ref": "5e7ede2e-06f8-4db7-9912-098e1d085c4f",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "67665cab-9477-45b2-a1dc-3e5a219db7ba"
        },
        "item": {
          "id": "3d2251fe-37d6-4fe3-9096-dabcf78e52a9",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "ee71b618-53a9-42ec-8b8f-a4758c69deeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "555156f9-ad34-4bd9-8255-46ffa53b57b7",
        "cursor": {
          "ref": "043e9737-6ecf-4ddf-b910-c4e41eae0ad2",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "e3ca6007-35f1-4f57-bfc9-2ba2aae533c0"
        },
        "item": {
          "id": "555156f9-ad34-4bd9-8255-46ffa53b57b7",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "a96c7378-97a9-41e0-ab01-65d51e6c1a28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3428aaa3-fde7-4ee3-ae20-bd8add20726f",
        "cursor": {
          "ref": "2406e239-554e-4d7a-9f66-8970bea5bf5a",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "daa7eb1d-4614-4e4c-a63e-004c4a2a5bc0"
        },
        "item": {
          "id": "3428aaa3-fde7-4ee3-ae20-bd8add20726f",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "f3ff573a-584b-4f6c-be68-d3cb48429642",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d192aef9-f1e0-462e-a8b8-fdee8af25f47",
        "cursor": {
          "ref": "fb5b0e25-779f-455f-8f8c-7aff241055c1",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "65c3b9a0-16ba-46ba-91d8-b4e2c913c5ba"
        },
        "item": {
          "id": "d192aef9-f1e0-462e-a8b8-fdee8af25f47",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "a00e2022-12a1-44ab-965e-fda069122b02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a941903f-1882-40fc-878f-6f34796ae52e",
        "cursor": {
          "ref": "24cf87f8-9b09-4f6e-b95d-2cc4a76b1826",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "299e729c-5120-4258-b6d0-4d9a0897985c"
        },
        "item": {
          "id": "a941903f-1882-40fc-878f-6f34796ae52e",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "56f60ab2-a7bf-4f0b-b100-4da285ec285e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf85e3d6-26c5-4110-8a98-a42950136823",
        "cursor": {
          "ref": "fa92b059-e9c0-4da9-9d3f-68330e9fb3cb",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "e33a2248-4bb4-4f52-9976-673e600e3575"
        },
        "item": {
          "id": "cf85e3d6-26c5-4110-8a98-a42950136823",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "81c99e01-9eb5-4cfe-88d7-a8cdad297e5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a404861-6348-4984-b490-4e42c6411e18",
        "cursor": {
          "ref": "2ebb2ac2-a0cb-4e40-9916-ed7e136884c3",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "cf33f735-ef59-4154-a57c-2e110d4477f9"
        },
        "item": {
          "id": "1a404861-6348-4984-b490-4e42c6411e18",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "a5317cc5-b694-4ef1-9066-428a1662a33b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45b245d6-3522-4013-8f0f-2c7d880547fb",
        "cursor": {
          "ref": "1d5ab5cc-933d-4d63-8fc2-0b96c156601f",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "ab0beea5-cd74-4937-9d38-1235463a5d25"
        },
        "item": {
          "id": "45b245d6-3522-4013-8f0f-2c7d880547fb",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "d2107049-c594-4f61-aa36-ce2b84fe169f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3fcf8cc-138a-426d-926c-58c0a44a6618",
        "cursor": {
          "ref": "2b6c9cea-3446-482c-9a27-b01da4dc44b0",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "801b4593-9d82-4eb0-9964-14b1edf51efa"
        },
        "item": {
          "id": "f3fcf8cc-138a-426d-926c-58c0a44a6618",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "cc6d7314-6dc4-45bd-9482-85b8cdadc657",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24344583-01d8-42d4-b113-2ed6e05cdd83",
        "cursor": {
          "ref": "908d57a9-5393-430e-b5dd-fda953fb1984",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "685bdf7d-9d37-4650-b4f4-d91facccce04"
        },
        "item": {
          "id": "24344583-01d8-42d4-b113-2ed6e05cdd83",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "da08ced5-b622-42b0-bfe3-8b74bd43f0f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5a81676-24b9-416b-badc-f7a46d146311",
        "cursor": {
          "ref": "28985d61-4717-4791-acdd-20f090f870a5",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "339af732-4205-40aa-b05b-e2b9bb30cdc5"
        },
        "item": {
          "id": "c5a81676-24b9-416b-badc-f7a46d146311",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "5d4a814d-3658-49f8-a324-5116fa5a3dff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12e32466-7397-4b42-bfd7-adcc14f25e80",
        "cursor": {
          "ref": "bfdab5e8-8a8f-4a81-9de5-1d050d8c975d",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "f6ad6949-3557-44d0-a476-1f0e1fb0839a"
        },
        "item": {
          "id": "12e32466-7397-4b42-bfd7-adcc14f25e80",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "e488fc37-386e-4e2e-b34e-04058f7c1c00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80e1303d-c722-4ece-9aeb-6013338bb0d0",
        "cursor": {
          "ref": "89785250-83f7-45cd-bbe6-52891d7148fb",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "0dc14db7-e4ba-4338-bdf4-111dae515724"
        },
        "item": {
          "id": "80e1303d-c722-4ece-9aeb-6013338bb0d0",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "ff52dd69-6af2-43b9-8f96-e01fb9974260",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7913d459-cad5-441c-8f97-7eec2f78984f",
        "cursor": {
          "ref": "3a369ae0-15ef-4ccf-a3ee-65d571f719cc",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "2a1be552-778b-46c8-a8a7-da0dd5cdf6e1"
        },
        "item": {
          "id": "7913d459-cad5-441c-8f97-7eec2f78984f",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "f1f9a714-a755-4ae3-bf04-b5ec0d203f2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bb05273-1e5c-465e-9e0c-c28d6ba72270",
        "cursor": {
          "ref": "cf04eb63-2f91-4374-a7f4-4e346fbc43bb",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "2848b3c0-be6c-494d-beb8-958ebe4d0d7e"
        },
        "item": {
          "id": "2bb05273-1e5c-465e-9e0c-c28d6ba72270",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "13d3001f-256a-44c8-88e8-623e730fd0d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c65d29f-c6ab-4099-8608-2a3b962daf4d",
        "cursor": {
          "ref": "10682f55-7d70-401a-bae6-44d6258e2be4",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "dc5a64be-8528-43d0-aad2-679bcb37da23"
        },
        "item": {
          "id": "7c65d29f-c6ab-4099-8608-2a3b962daf4d",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "09054f4c-90e2-446e-bbe1-f1bc9757728c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b301fcff-ca14-4ea1-860e-bc1107ff1a1d",
        "cursor": {
          "ref": "533a4d28-963f-406c-bacf-1d9acb5d9a8b",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "b50b7e3d-ea17-4dbc-b953-0a5f11aa136e"
        },
        "item": {
          "id": "b301fcff-ca14-4ea1-860e-bc1107ff1a1d",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "9b2a7425-633a-4e42-8beb-ea35a9f7c453",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39428784-aafc-4a83-8457-e25cc40a49d5",
        "cursor": {
          "ref": "ecb1481f-0737-4e79-a039-b1bec10e22b8",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "3b1156fd-1e8d-4495-9e73-f5b90b9bde63"
        },
        "item": {
          "id": "39428784-aafc-4a83-8457-e25cc40a49d5",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "310b89da-1b47-4740-8a19-95398cc93411",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "692875f0-1e97-4f64-83a6-ab430ad27cda",
        "cursor": {
          "ref": "0f1cfda2-b398-470d-a739-ddc20b00fff7",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "10d84dc1-091d-4afc-baac-be616c4c29bc"
        },
        "item": {
          "id": "692875f0-1e97-4f64-83a6-ab430ad27cda",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "fec08956-5c56-43a5-a597-6acd8530a5ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "164f868a-afaf-4e15-81ab-b72de231467d",
        "cursor": {
          "ref": "39e5d5bf-f9f1-4cfa-8fb6-747d56814c98",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "b6abf736-768e-4b80-92fb-aed9e27d42fa"
        },
        "item": {
          "id": "164f868a-afaf-4e15-81ab-b72de231467d",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "23843b2c-8290-4d8d-a1f2-ed732c43a569",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "120467cd-0622-4a34-afca-1f5b8df7302a",
        "cursor": {
          "ref": "57285b19-7da3-4444-896b-ecc5bfec2114",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "44dcbf8d-df43-4dbb-be16-0f49877a3b7a"
        },
        "item": {
          "id": "120467cd-0622-4a34-afca-1f5b8df7302a",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "08373ea8-ac7e-41f3-8d8c-675433248f94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9bee1fe-a7af-4d2f-a6b0-a89912ef63e5",
        "cursor": {
          "ref": "30cbace9-8e5b-4ede-951c-763f00ce85b4",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "7f430a47-07d0-485b-81ff-12e4d3fc11b1"
        },
        "item": {
          "id": "f9bee1fe-a7af-4d2f-a6b0-a89912ef63e5",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "76b45a5b-5b11-4876-975b-84d2787f8b6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0184fce7-dfcc-43e9-8c34-432c3767aeec",
        "cursor": {
          "ref": "d28bdefb-b7d9-4248-8f40-f8856c493b87",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "10b8a6b0-926c-4673-9b39-fcd46309280b"
        },
        "item": {
          "id": "0184fce7-dfcc-43e9-8c34-432c3767aeec",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "17e0b027-6a9b-478f-a8ab-d9dddcb86bce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3391f79-e37b-4165-8d0b-a1b9782752cd",
        "cursor": {
          "ref": "f7aa286c-985e-4210-98f8-e863cc7fe445",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "bf58f7d3-ee59-4979-aa16-f1f5438dd85d"
        },
        "item": {
          "id": "e3391f79-e37b-4165-8d0b-a1b9782752cd",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "758b02fe-5f53-4679-bcc0-04ac93ad1c94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d290a041-64cc-4e62-90b5-368157b327b9",
        "cursor": {
          "ref": "e764d410-89ee-4b23-98c6-9148f1127441",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "42c049c8-fd10-49d3-984c-6e1f9c8b42d3"
        },
        "item": {
          "id": "d290a041-64cc-4e62-90b5-368157b327b9",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "281eac99-44d1-49cc-a537-a96959d0cec7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b6d0d0c-a6ab-40b2-9d2d-c2f9ae62a87b",
        "cursor": {
          "ref": "7e728e3a-18cd-4d62-8622-67350fcf45ad",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "b73f8422-7743-4c92-8355-10b631189620"
        },
        "item": {
          "id": "4b6d0d0c-a6ab-40b2-9d2d-c2f9ae62a87b",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "91c51688-0043-4bdd-bef9-b8818b64121f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a722edd2-c592-42e1-bd87-37cd772d07fb",
        "cursor": {
          "ref": "10590825-b693-48bc-abd7-7e66f0634e4e",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "310d47f8-1879-48a6-a54e-47363b4f3b84"
        },
        "item": {
          "id": "a722edd2-c592-42e1-bd87-37cd772d07fb",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "45c5638a-1aa6-4095-8d02-74dc8d55977e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30de1b03-2b3e-4867-b880-8a90da18708f",
        "cursor": {
          "ref": "a1e5008e-615a-44ef-ac69-dbad0d212768",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "1ee776de-de0e-4422-99d8-7d64806bf30d"
        },
        "item": {
          "id": "30de1b03-2b3e-4867-b880-8a90da18708f",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "de1ef487-a39a-441f-878d-a0af81970351",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab4b2c2c-e6da-4c0b-8b4a-a7a584b70764",
        "cursor": {
          "ref": "d0baf163-3d50-4eb5-9b5a-fb57f21e5399",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "8bb4ea95-ad54-4982-9a19-321a1a6af721"
        },
        "item": {
          "id": "ab4b2c2c-e6da-4c0b-8b4a-a7a584b70764",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "801a4512-fe77-4fa8-8204-8d764d9ff1e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5066768e-d563-470c-9961-beccb161809a",
        "cursor": {
          "ref": "019a40cb-a2b9-44e9-adb8-83c3859d406f",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "65ce44af-0520-4e5b-9bb3-1986821342b4"
        },
        "item": {
          "id": "5066768e-d563-470c-9961-beccb161809a",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "3ed19d70-e1b9-4e92-aec8-c82fb358bd46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38a634c1-0802-40d0-9da7-ce9a50ad9aa8",
        "cursor": {
          "ref": "ae6520bd-132c-46e3-b257-d99651705a7e",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "59af4c9e-437d-4342-942d-4684fe196c79"
        },
        "item": {
          "id": "38a634c1-0802-40d0-9da7-ce9a50ad9aa8",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "6ece6354-ba6c-403c-9b2e-891fdc5674b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba7ba092-de37-44ee-b882-70fba0e6d318",
        "cursor": {
          "ref": "9a952d71-b476-4811-ae91-4cd789ab119f",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "a5008aeb-f20e-4fed-aa34-2e43baa217b2"
        },
        "item": {
          "id": "ba7ba092-de37-44ee-b882-70fba0e6d318",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "81c64ae8-e1fb-4157-9189-282b03f7d141",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8936570a-db49-47f4-80d3-095baf720513",
        "cursor": {
          "ref": "8c123aeb-bf9c-4da0-b532-b16c3aa8806e",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "666ff68e-2b34-4f9f-adbe-0f8dc13f55d6"
        },
        "item": {
          "id": "8936570a-db49-47f4-80d3-095baf720513",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "a7dd1483-2e21-4bae-9fe4-9f47429892d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a868e0c-b499-494f-83fc-191e03c6f7b0",
        "cursor": {
          "ref": "737de78d-0f21-4fa3-9845-47015306b9a9",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "430f231d-c9bf-445b-adb2-fcc1b9dc785e"
        },
        "item": {
          "id": "3a868e0c-b499-494f-83fc-191e03c6f7b0",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "93c26a17-864b-40f6-8d1f-6462f40bc481",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0022804a-1fe7-4c46-840c-caa18ed2437f",
        "cursor": {
          "ref": "b7bfe476-61a2-4f58-8480-e51cd9e4c19b",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "577049e5-890f-4f57-a9e0-92fc1998f192"
        },
        "item": {
          "id": "0022804a-1fe7-4c46-840c-caa18ed2437f",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "f6e71400-d5d0-4354-becf-8e0097e87960",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2e5bbee-1283-4fdc-b31d-c740005a654a",
        "cursor": {
          "ref": "3a95bc77-fab2-4c87-8f0d-b6012ac9760a",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "30ff2c9b-a21e-4ce3-8e6a-bb2540126020"
        },
        "item": {
          "id": "a2e5bbee-1283-4fdc-b31d-c740005a654a",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "d854969a-eb64-4a49-88b4-b94a20de9a88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2041862-5f2e-41e4-b12f-d65005dcbfa8",
        "cursor": {
          "ref": "586f5907-b6a4-4478-a483-5977968dc1e1",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "129ce8cb-3917-4e8f-9eda-17865f81deed"
        },
        "item": {
          "id": "d2041862-5f2e-41e4-b12f-d65005dcbfa8",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "df4ba91a-e6c6-48f1-8dc4-27b67876d20e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "793540e0-58f7-4dbf-b9a0-6f22d5933419",
        "cursor": {
          "ref": "2b5d36e0-3f53-4ea7-8733-5d4e8267c610",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "7756c21e-fbe9-4a06-9db0-a3b31760948d"
        },
        "item": {
          "id": "793540e0-58f7-4dbf-b9a0-6f22d5933419",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "9b511bd5-a2ac-4650-a0cb-e7e935989843",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f99235eb-0697-41cd-bcca-41d5ba52b4a5",
        "cursor": {
          "ref": "dffec750-ecf5-4df9-a529-c2f65c101648",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "84520442-9a3d-47eb-b3f0-cb8cb80fd451"
        },
        "item": {
          "id": "f99235eb-0697-41cd-bcca-41d5ba52b4a5",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "4d1c6b7a-347f-45a7-b3c1-dc80cf016bca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc754547-754f-4a22-ab81-db987a299bb8",
        "cursor": {
          "ref": "7d0f22c5-e3f4-4ce1-8b45-70810a7b826d",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "eba5b59b-3e89-46ef-928e-6358c7d966a0"
        },
        "item": {
          "id": "dc754547-754f-4a22-ab81-db987a299bb8",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "5bf26acd-b9f2-4e89-8883-92e6292637f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bf76cc9-37db-436f-b963-4b56b8c3d601",
        "cursor": {
          "ref": "94489acb-b203-4d81-9f78-87afeecd2dae",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "721e59d4-3cec-4eaa-9841-8321f705164c"
        },
        "item": {
          "id": "0bf76cc9-37db-436f-b963-4b56b8c3d601",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "85e23bb6-aa6b-48cc-8f20-9e3031270751",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a30c43d6-8cfe-4b7b-b140-020b836f602f",
        "cursor": {
          "ref": "0042254a-b92a-4b76-8cbc-e3919f9aff3b",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "4b96980e-3881-477a-a8ed-b0f29f78b0a1"
        },
        "item": {
          "id": "a30c43d6-8cfe-4b7b-b140-020b836f602f",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "064f3ce7-713e-436b-9ccb-a9125f4e0cbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8064242e-6c0c-4b7c-91bf-7283fe2c8363",
        "cursor": {
          "ref": "1c5e22de-6f89-443a-bae0-69c9c14b313a",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "d6ced28b-aed3-49ef-8f77-d9022ce516c4"
        },
        "item": {
          "id": "8064242e-6c0c-4b7c-91bf-7283fe2c8363",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "3fa4ed43-2833-4f8f-8b37-802b235696a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6322d190-3ec0-49ed-afa1-6f5a347c1fad",
        "cursor": {
          "ref": "9b81cdfd-341b-4a39-8c90-a7484f47d9ff",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "8be2ec4d-058e-4e57-9b9a-f32db81316cb"
        },
        "item": {
          "id": "6322d190-3ec0-49ed-afa1-6f5a347c1fad",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "3eb9da36-e193-4f39-9a06-8a9a5c0dfd60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "020191de-fa2f-4b5f-ad3f-658ff25d021c",
        "cursor": {
          "ref": "99e28329-0ecb-4d0d-a585-f37263625517",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "35ec39f8-1a25-41de-bae7-680a313baa41"
        },
        "item": {
          "id": "020191de-fa2f-4b5f-ad3f-658ff25d021c",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "ffc57318-8968-4099-b9fa-c10a6ce2d24c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7430e0b8-22a1-47b3-8e99-eddac8853b4b",
        "cursor": {
          "ref": "47024e43-e54a-462f-aa0d-9ed8c20ced44",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "ac44869a-a4a9-4b1d-837b-90998ee8894e"
        },
        "item": {
          "id": "7430e0b8-22a1-47b3-8e99-eddac8853b4b",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "d31c3d0f-a49a-4c83-aa89-fadcefa4d143",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcdf518b-558a-4ef0-bac4-bffcd939cb7a",
        "cursor": {
          "ref": "945bb959-b62c-4a47-95c2-d97b71069702",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "31da1486-8a1d-4d64-8b05-085539343944"
        },
        "item": {
          "id": "fcdf518b-558a-4ef0-bac4-bffcd939cb7a",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "cdafae56-a9f8-4f94-aad8-fd96c45217ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "383464b2-94ec-4eb1-a25c-2c92b8c536a5",
        "cursor": {
          "ref": "e6066796-5ef8-4c14-b8ef-9528caec2643",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "bebfe74f-0675-4293-b96b-17737f531fad"
        },
        "item": {
          "id": "383464b2-94ec-4eb1-a25c-2c92b8c536a5",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "80444ca1-4294-4acd-a064-23e61341a5b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbc7e959-7d0e-4fe7-bbbd-d562d41c18cb",
        "cursor": {
          "ref": "a0a1178d-40d8-4ccd-b2d6-212d230491ad",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "611d32b2-ff08-4e9e-bfa2-4b9ac47172b6"
        },
        "item": {
          "id": "cbc7e959-7d0e-4fe7-bbbd-d562d41c18cb",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "34dcecda-d2ab-42da-8001-e9d8f881484e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39e608b9-baf0-4a5f-bac2-737ad2ae93cc",
        "cursor": {
          "ref": "e685e1a5-bcb2-4337-a33c-5c60ffbee285",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "620460c0-79d3-46f3-963e-8210a266e639"
        },
        "item": {
          "id": "39e608b9-baf0-4a5f-bac2-737ad2ae93cc",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "94caa769-a429-4080-ac41-a6132a05ecb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2b769f6-c98c-4b36-ba04-57489ea0572c",
        "cursor": {
          "ref": "ea110912-87a5-45db-9760-519268ae3a0a",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "f9eb9f14-cf01-4ea5-bda4-7780e2cd6359"
        },
        "item": {
          "id": "b2b769f6-c98c-4b36-ba04-57489ea0572c",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "6d318ad1-c1f9-4465-ae80-4815e0c1aaff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "122408ba-7c6d-4448-8804-f29ce33fdceb",
        "cursor": {
          "ref": "cf206e7b-ac68-4442-b7a4-87e7073eb675",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "899c3f64-390e-4443-a924-8196f16912da"
        },
        "item": {
          "id": "122408ba-7c6d-4448-8804-f29ce33fdceb",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "b004bd73-d352-4190-8307-1bfc52d498be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be0b3a57-8336-4cc6-922a-a04ebfa36428",
        "cursor": {
          "ref": "8f7adefe-4a42-4298-8fa9-a675af73cde2",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "b4eb3648-c3d6-4084-9d55-d0cc08ca7aa7"
        },
        "item": {
          "id": "be0b3a57-8336-4cc6-922a-a04ebfa36428",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "5e4459fb-e8d1-40fc-b849-1484c9fc2d6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3743ff1-a1c4-41c2-b2cf-6caae22b7689",
        "cursor": {
          "ref": "b104511c-5d08-4464-82d8-c81f365a5344",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "28b33ae8-d1ca-4d28-b0de-637d0dfeae78"
        },
        "item": {
          "id": "e3743ff1-a1c4-41c2-b2cf-6caae22b7689",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "3d81aa84-56b9-4ad8-a92f-92d9827bd935",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72f794ef-114d-4c79-8696-db4a0fefa5e6",
        "cursor": {
          "ref": "579422d3-9f38-420a-be22-93cc9a041d89",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "601928c5-2ca7-46ca-b15b-cd7508a309b8"
        },
        "item": {
          "id": "72f794ef-114d-4c79-8696-db4a0fefa5e6",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "20df6e03-026a-4973-8cfc-93fd372d8b3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "342b605a-77f1-406c-bf9e-34bf53309fd2",
        "cursor": {
          "ref": "e49b7587-0d95-4508-94c9-fa52a9b5ea64",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "3bce2899-9eb5-4ad0-a418-88830fb88dc7"
        },
        "item": {
          "id": "342b605a-77f1-406c-bf9e-34bf53309fd2",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "07bb8f0f-52c9-42e1-b705-ccb38a6ed928",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf6e3f98-92ef-4e40-8080-eb28f63cb002",
        "cursor": {
          "ref": "29e0d87d-ff1d-4191-8723-e6bfc9de1b4b",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "8c86dd9d-7dc8-49b0-b156-f46c96747e23"
        },
        "item": {
          "id": "bf6e3f98-92ef-4e40-8080-eb28f63cb002",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "d5852049-94b3-4c04-971d-476d55991096",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0782510-be9b-43d9-bd2a-dcd1849b3a3b",
        "cursor": {
          "ref": "8057cab8-da16-46bc-a503-1735f94fb2d2",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "d7decfeb-7bf9-4e04-a3ff-ce5aa9a8722f"
        },
        "item": {
          "id": "b0782510-be9b-43d9-bd2a-dcd1849b3a3b",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "6e0cb4c8-e6c9-487a-a5f2-027a731915b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84f59f32-5bcd-43c2-8eed-9387b619e1ce",
        "cursor": {
          "ref": "367162fb-211d-4381-b973-860006271569",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "eb547503-2352-47ad-923e-f6baf71394d1"
        },
        "item": {
          "id": "84f59f32-5bcd-43c2-8eed-9387b619e1ce",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "aedec710-4996-4d3a-869e-3c6a98260472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22763c77-986d-4482-bb7a-fc1f153b3527",
        "cursor": {
          "ref": "552fc311-c893-4d28-b37d-7b6b761f7154",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "4ba7433f-5163-4931-ad06-56857e4277f0"
        },
        "item": {
          "id": "22763c77-986d-4482-bb7a-fc1f153b3527",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "816002e5-e3ba-4bd7-935f-e7e79eedfb18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1fd2703-db12-4f4f-ab15-264ed8310c18",
        "cursor": {
          "ref": "4037c23a-49cb-47bb-bc27-cd9916996df9",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "7186cc2c-f9d6-4c1a-b494-39d2d3cd9fd7"
        },
        "item": {
          "id": "b1fd2703-db12-4f4f-ab15-264ed8310c18",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "c02fc6dd-1c0a-41a1-af8c-1966b691abca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6a5148d-41f7-424e-8a51-fe808109a1d1",
        "cursor": {
          "ref": "39c10865-32d6-441c-bcc2-7f552eeb1ad2",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "cdec3110-3ffc-43f9-8ce6-cdd0044ac073"
        },
        "item": {
          "id": "e6a5148d-41f7-424e-8a51-fe808109a1d1",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "93bced7b-1b2c-45ee-b501-0e1a3a988774",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "412e7c8d-a0d5-4c6b-9255-f0c68b236830",
        "cursor": {
          "ref": "a8cac449-0f42-4822-8951-8e3c78ee57d5",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "08fb283f-378b-491d-b49b-15ee9614bf65"
        },
        "item": {
          "id": "412e7c8d-a0d5-4c6b-9255-f0c68b236830",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "783c38f3-9ad7-4103-a562-c04371831694",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3244d03b-46b3-4fd3-bf56-715bcbce8c48",
        "cursor": {
          "ref": "18b5be2f-9e1d-4513-ae41-c935657c9078",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "46fd0160-3887-4ed9-a9d6-f3076efb350e"
        },
        "item": {
          "id": "3244d03b-46b3-4fd3-bf56-715bcbce8c48",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "057e1dd9-ef9d-4a5a-bd2a-491049825cf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c06fb10-35ec-4dea-911c-ca11fd2096c1",
        "cursor": {
          "ref": "4dd9ff58-bfe5-42b6-8478-bc1c2da98b89",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "69a8afda-05c3-49fc-a893-d20f47fed8d0"
        },
        "item": {
          "id": "9c06fb10-35ec-4dea-911c-ca11fd2096c1",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "cc571cd8-13e8-49bf-a2f5-9f794d22d8dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bda0d7e3-38d7-4c6f-8258-9877fb9e886f",
        "cursor": {
          "ref": "a0303253-122a-4d39-ac73-451629b2df22",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "3af71ee7-dc15-4ce1-856d-51226e285044"
        },
        "item": {
          "id": "bda0d7e3-38d7-4c6f-8258-9877fb9e886f",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "66021e19-f4d7-4757-bce3-ce96d6aa1737",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d007a4f-d12a-4a4f-b308-9e7b09e672ec",
        "cursor": {
          "ref": "30f5cb72-c4c3-46b7-a449-f8a070852285",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "0f0d1254-bde6-420b-a3c3-4c34a694ce92"
        },
        "item": {
          "id": "1d007a4f-d12a-4a4f-b308-9e7b09e672ec",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "9151b993-a9db-4af5-b852-4242535787d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9ef2d93-d26b-47fd-9851-bd8cf0d5a2f2",
        "cursor": {
          "ref": "bbac2c61-dc93-4d89-a401-0f313923d120",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "f54d635b-f9ae-432b-808f-4fcd35c61abc"
        },
        "item": {
          "id": "d9ef2d93-d26b-47fd-9851-bd8cf0d5a2f2",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "ee7029ac-fc13-4e14-8e61-facaa372210d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06f01d38-b538-4ff4-a90b-2f8a275664b1",
        "cursor": {
          "ref": "649a9889-ea92-405e-b24a-506f8239615f",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "091f91c5-8b93-4c78-906b-86d8a6bb441c"
        },
        "item": {
          "id": "06f01d38-b538-4ff4-a90b-2f8a275664b1",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "b39c3482-4170-4a47-82d3-7a951109f2d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b99e3a9a-083f-4b8a-b736-7faecada2a55",
        "cursor": {
          "ref": "0d4b04f1-1139-4eda-8555-584e050ffd2f",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "d6e2982d-b2c7-492a-a6af-ae202a8f51ad"
        },
        "item": {
          "id": "b99e3a9a-083f-4b8a-b736-7faecada2a55",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "f288d3c6-a96a-4383-a1a9-1812db0db7f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3b6f896-6c3b-4668-b952-aa8f82bb92fd",
        "cursor": {
          "ref": "184a423b-46b9-4e08-ad2f-66024154375d",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "99eb8e98-20f9-4778-989f-bb7f44a3eb99"
        },
        "item": {
          "id": "f3b6f896-6c3b-4668-b952-aa8f82bb92fd",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "a6e58d17-24aa-474c-a3cd-714668b1d9e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab658f68-65fd-4dfe-90f5-cb9cecd6fa92",
        "cursor": {
          "ref": "a7963297-324d-4ec4-934e-30e4edbeab58",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "6acbd66a-0213-4798-9152-7b2713e71bbf"
        },
        "item": {
          "id": "ab658f68-65fd-4dfe-90f5-cb9cecd6fa92",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "77aae4ca-28d5-4812-a38f-0dfc8925b6da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2802bd9c-0da7-40a4-9e12-da337ed1e9ed",
        "cursor": {
          "ref": "00e76f0f-d37f-4b27-a687-6dab08cd42c1",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "b14992b7-2be9-49e5-b494-a88979283f68"
        },
        "item": {
          "id": "2802bd9c-0da7-40a4-9e12-da337ed1e9ed",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "e07dc11e-08f0-4b87-a25d-0d915ce200ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af6209a9-a0d6-4565-9a6e-3cd38826da42",
        "cursor": {
          "ref": "eac6d94a-7064-4e87-98f4-39c4317261e2",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "d22ab19a-dbf2-4430-98a2-1ff02e742948"
        },
        "item": {
          "id": "af6209a9-a0d6-4565-9a6e-3cd38826da42",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "a74a47ca-8a6b-4c91-9518-58d7ff32f1c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8438d0d1-3365-4ae0-9421-d41c5668422a",
        "cursor": {
          "ref": "efeb8cc4-9a32-4df7-8a29-07bf8a132f5d",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "977f13cd-1bd0-460b-b103-6ff0eb97d4ee"
        },
        "item": {
          "id": "8438d0d1-3365-4ae0-9421-d41c5668422a",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "315db1bd-a07f-4d16-a5d3-e01eb2aa625a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3ddc276-1cd2-4a88-be25-68d189f218af",
        "cursor": {
          "ref": "11c7b386-d329-416b-8f20-873fa9f748d7",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "c724ea2b-08ab-42fe-90e6-5c093f812890"
        },
        "item": {
          "id": "d3ddc276-1cd2-4a88-be25-68d189f218af",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "02dbd698-56b5-44b0-a055-c623392a8a2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21de7553-2c28-42e1-a316-9384924d910a",
        "cursor": {
          "ref": "731e90b6-9246-4f86-9117-93c15891913f",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "860b8d5d-aeb4-454c-9ee2-c1418d6d5fa8"
        },
        "item": {
          "id": "21de7553-2c28-42e1-a316-9384924d910a",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "3da183c5-312c-41cd-bf19-4a6b56b3729e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5368ed79-a789-4d32-8b3e-edc66e19f6f1",
        "cursor": {
          "ref": "fd037416-e36a-4087-8b06-ed1c73907188",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "39b0e3cd-5814-4809-bcc2-8af703e3be24"
        },
        "item": {
          "id": "5368ed79-a789-4d32-8b3e-edc66e19f6f1",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "871a5bbb-100a-47d3-a6a8-b07e6ae49934",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec78a392-c034-42c1-bb39-9ae16b5d12ae",
        "cursor": {
          "ref": "9b5fb80f-9da4-4b7e-9ae4-4fa4f3b99c79",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "e9c7ded6-c3fc-4f13-a8d4-9cbf1bb1f1fb"
        },
        "item": {
          "id": "ec78a392-c034-42c1-bb39-9ae16b5d12ae",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "80904d27-ba07-403e-839a-236c97d79531",
          "status": "OK",
          "code": 200,
          "responseTime": 88,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "baddf311-361d-4a92-842f-a228a1685cf2",
        "cursor": {
          "ref": "557b495a-e433-44d8-9d23-4964ad1aa395",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "d1fb31de-4c74-439a-8815-2f026b89df3a"
        },
        "item": {
          "id": "baddf311-361d-4a92-842f-a228a1685cf2",
          "name": "credentials_verify"
        },
        "response": {
          "id": "848892c2-f42e-4172-b9fc-09c7c9185309",
          "status": "OK",
          "code": 200,
          "responseTime": 4236,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e8b0e43-1aec-490d-9a35-a47b6b3e01c7",
        "cursor": {
          "ref": "734e5c7c-8073-45a8-9525-6c0c950395da",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "f559588e-51aa-43fd-817e-0800a52b834e"
        },
        "item": {
          "id": "7e8b0e43-1aec-490d-9a35-a47b6b3e01c7",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "164e103f-4173-43a7-bfab-cc8dcfe95d09",
          "status": "OK",
          "code": 200,
          "responseTime": 3626,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca8cb424-96b6-4752-9186-26b7a765d233",
        "cursor": {
          "ref": "d8798ee6-b43c-4995-a86e-4b5624514497",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "220066e6-305f-4515-bf27-8b5ff8d0cedc"
        },
        "item": {
          "id": "ca8cb424-96b6-4752-9186-26b7a765d233",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d897783b-1bcd-4be5-a0f4-18817bccb339",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca8cb424-96b6-4752-9186-26b7a765d233",
        "cursor": {
          "ref": "d8798ee6-b43c-4995-a86e-4b5624514497",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "220066e6-305f-4515-bf27-8b5ff8d0cedc"
        },
        "item": {
          "id": "ca8cb424-96b6-4752-9186-26b7a765d233",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d897783b-1bcd-4be5-a0f4-18817bccb339",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1935946-bcd1-40be-ab6c-8805f987cbc3",
        "cursor": {
          "ref": "0183ae3c-88aa-452c-83f7-c90994b0991c",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "4c9aa039-9ab8-4e9b-9818-dedb53603b42"
        },
        "item": {
          "id": "c1935946-bcd1-40be-ab6c-8805f987cbc3",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "6c2c9fd0-a593-40a7-9ebf-b2261fd647ac",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f457b2b-29b3-4d90-87fa-00f88d2005a3",
        "cursor": {
          "ref": "bda82fcb-2b7a-4d66-a225-eff318e21b43",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "d6c4229c-9a28-4128-88f3-c56190387070"
        },
        "item": {
          "id": "4f457b2b-29b3-4d90-87fa-00f88d2005a3",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "49bcfc1e-7e3c-4357-b8c2-5da65a21ce4d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}