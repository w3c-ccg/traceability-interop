{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "3b5b092f-f036-4b84-90a1-872ad778f577",
        "name": "Clear Cache",
        "item": [
          {
            "id": "15853be4-5774-427b-8e5e-44fb9d2d5c72",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "00d7e9f7-b9c8-468c-a50b-f6a215c8e875",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "df3ed678-8c11-4c0c-8116-41954e7d839e"
                }
              }
            ]
          },
          {
            "id": "c777c04b-f7bc-40f0-ad24-acef2db30eba",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "321e8edb-8b48-41db-9b1b-d34ebf8929a7",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f09551e1-876a-47eb-ad5e-1b895f5b9132"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "63809f86-bced-4bec-af44-7f0d213cb05e",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "182703fd-d73b-4d5a-9c50-efff7cf3c9e6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e7df0a06-182a-4dd1-8224-7fffaa948947",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a94f9e70-a257-42ce-96f6-2241d2638689",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "df4ad7fa-802d-462e-a8d4-7fc96f5fc78b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a7288683-4331-4b69-a646-7b1948e9ab13",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f73877d3-0ed8-459d-a322-a48ef2f944e5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6a01464d-a2e0-4f95-a30e-219f5786c21f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a0cff87b-a2fb-4cdd-aac7-37c8b0525c4f"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8da60adf-746a-416b-ac34-3095dcc7bafc",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "f1769c0d-996b-48b2-884b-f43733689622"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9d5df2f8-9a48-405c-a57b-fbfbb3b2ee3c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5d6f8b2d-37bb-4800-a8f3-fd17b2b9b021"
            }
          }
        ]
      },
      {
        "id": "63fc1c00-e50f-48a0-a30a-7dfc97eb8b54",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "7b17832e-688f-4a4d-a9b0-6acbdea68f44",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ee0562ed-a944-48a4-8349-fafe1b6bb878",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "04c4a21d-3c6d-4bd5-ba2c-78055e8168e6",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ccefe00-ebc3-42ea-941e-33f1449e40e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "51f13c3c-acd1-4ea1-944e-b7c4eb867c2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "788bdded-aedd-4396-9f75-99738b605689",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f3969d4-2eae-4906-b885-2d893f369728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9967deee-21c7-4e8f-aba0-cb536fd6df3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7962457-f606-4e70-9f80-f02dd077fea7",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10c11373-0987-4e82-88c8-676912beeca1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e2e4d4ee-e383-446b-9e06-66e07a8da3ba"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5d78bf90-c7dd-49cd-b277-c04d98513024",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e9f55523-b1a1-4081-85d9-fce02b583086",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd6dfbe2-057a-4214-80c0-65215a116d27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3f991811-2240-44b8-90e6-e4efabdf1e15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb8afb4e-dfe4-4162-8fdb-b68558a5303d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6331ba33-d0de-420d-b87d-aea51516d31f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "cec55df7-b85d-45a9-adda-7c7b7d017dba",
            "name": "Positive Testing",
            "item": [
              {
                "id": "16e2036c-a1d4-4a22-b775-0adcb1f083ce",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "be097648-11ca-40ee-994c-690b1e897b91",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "fd87e59f-9358-43f7-a045-1b1fad005131"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "15a22b60-af9c-4bad-87eb-019d9589a830",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "576cf1ed-1397-4b70-b903-b1c356416e87"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3fd31959-e74a-49f8-aaa1-6874f3e0a41a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "056d0d9f-b984-4fb2-bc1b-958ad4d10796"
            }
          }
        ]
      },
      {
        "id": "58adda16-e4cd-489f-8a08-887e006b60bb",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "9089fc61-edbd-4706-a306-cf1708b160e2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fcd44560-796c-4a22-903d-b5ae3d60726a",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "51d58008-86e4-404e-a3eb-a0d748416a5a",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71a97b45-a137-4263-af29-aa16646741a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f2f9bfb-5656-4eda-820e-83ee117c937d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9de4898-ff0b-404e-8258-1f5321f3b1db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b803f710-5570-4a09-90eb-1d28a994d46d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecf2992d-ac00-44b0-84bb-56f3d17e06b6",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4844b4e9-ad57-4c05-9d5a-e3054dbfc01e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "666ffb98-efbf-46b0-90f8-be4090f3431e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d74142dc-a544-4e52-949a-0f90f851e7ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5fedf59e-3bed-487b-ae2b-99aa85e733a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6110ad69-6fb2-45e5-a14d-cd202ff5a13c",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f65698e-283a-436d-9de0-758272f40445",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99dfa620-bbfb-4e57-af26-4856cc53c448"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7480eacc-83ff-4c27-ae5d-5411657b2e36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "acada239-dc7c-4c47-9936-34252e98bede"
                        }
                      }
                    ]
                  },
                  {
                    "id": "576dc539-02db-437b-ada4-3c825bd290c8",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b6632a7-8220-4cf0-b918-0a89fbda10bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65d41a72-0996-4a4b-b495-01c67688cdf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0deb563c-0724-48d1-b312-f707cd4d2ecf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a520c7e3-9d69-4407-916a-963a74245596"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f1c1241-282f-4502-8384-5e16913d7dd3",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5bc6449-d94c-4cec-84dc-9e2d70b100be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f26b7af3-f1e0-4f43-8e1b-449dd8124ea4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecfeca66-3952-4a9b-9d44-0436afae4eef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5691b3e8-86a1-4ff4-942f-b68a27634f97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "085fc3c5-e69e-4240-a9bb-ab828cf0e04b",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21a58e4b-0134-4fbc-b043-70ef116c9013",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "070e7abd-3b58-4bfe-9f95-8dee48f698cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c625bd16-96e4-4c90-840e-260ce7cc4604",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "66d79e63-0f51-42f4-9f00-ad5fb5a59ae6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e554bb8-80a4-466c-8310-dadd42935ab2",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "089b2a32-f6a1-4149-b347-88166aa8bba3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50103f77-0d1f-4464-a80a-3274370d9d05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "663b6bda-68da-4a73-82fa-7e0abce92501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9a36a2c2-53f6-489f-b26a-e4c83ce82d25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fde923bc-3685-4781-ba00-c5d9b0c85653",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad41b369-95fb-4529-ae7a-a7fd3ea907bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d89204c7-78ee-44af-9c00-826492ef8857"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e2c70b9-5fac-40e3-b76e-e7049c975d1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0b18257d-8b51-487b-ad31-4d57ce5bee14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3e5b5b0-dec0-4c37-92f9-a513926b82e7",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1fdeb1d-58ec-458e-9446-916e965d4fd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c28e2b6e-6f8d-48bd-bfb5-0745d1d9f26c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d710e017-7292-4c2b-a184-17c0a2f6e4dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b314bb3d-eccc-4c62-b2dc-cef222afd8e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60d37456-2217-48ad-b80f-91494e542aff",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "743ca9ab-b118-4a8e-9e7a-90ad34ed3b39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "901f7097-633a-4eb4-8fe7-a729f2b689bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cb7c85d-6136-4cb6-95fd-30638ea09b4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "464ac812-4dd8-40ae-8199-ba5c6b8f50f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbeb90c7-65fa-4802-aa16-7860372f9c5a",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd87f051-a909-47bb-8b27-abf93402a2c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5d35826-b4ca-4e14-b776-1baaf52c6765"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3489908-fdc1-4439-8f44-1cd05b3bb3e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "21783940-e03c-41bc-abf7-593a8f6a4b9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3165e1c2-955e-4827-a8ae-15fb05290864",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c480e9c-5ec8-424d-8e5f-12d7339b8a57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91344415-cc2c-4b43-873a-175135b247dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a07634fd-df0f-49c7-91be-c8cfe1cb75c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "845da6fb-e982-45e2-a49e-7efb4d21e090"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e698ea3a-c1ba-481b-a01c-9ed4ccfbc835",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3751d34c-6048-4be6-999f-4a5c5ccd92a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76522700-71f9-453a-b416-ab98cddb64e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92c3dc0a-d256-4b81-9ff7-715512ed5e17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e43d12af-f0fb-46b9-b829-87975b1d6f8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81ffe771-a994-4baf-a71b-205853f55030",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2da7b9b5-3c8f-4bf0-a643-776b7f142a5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28511632-69a9-4cee-9141-5a5b16ad42eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "358c09c1-acc5-4964-9f30-3bafb15c7dd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b432bbcb-e5df-4b5d-8c63-34f336f976fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0177959e-765e-49f0-bc9f-54a89eb7cc97",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33733a70-2e73-408d-a7dd-d736abb858f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b73e76d4-babe-40a1-863f-02a547ccfa83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a7660bf-b4b6-4c22-bae3-fe50679f7a21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "633a3aa5-c410-4311-b779-1082f3edbdde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48579f11-7339-4be4-87b0-5397bc6bbf4f",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bb5aef3-c988-4672-8b73-28a8a9629423",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2307b29-e137-477d-a2a5-2c1a66acf8c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcf20d51-f4b1-4a32-81d8-5a0f2287e0f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d6427a35-0411-43fe-97a0-bab853236c1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6b84ae6-9c3d-4c66-b801-ca6c0d6164b1",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4454426-146b-4b3c-82b1-db81b2b6cfe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bc05ea6-3681-4cb1-b983-0fc154fe3630"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b09009a-b574-4646-9d32-fb2a6baa36a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8a76c249-c605-49e7-8da1-b6105dae3fd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bd4d663-5a0f-4505-b504-cf79075b356e",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38aedb00-1a0b-442a-8011-3783dc467e73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ff022e8-b7d0-4318-aa91-be47120f5dd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1959c418-55a7-44fd-8891-4cfc941bc0d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2d658e7-59c5-4bf3-b324-8c0057a9a4e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79f70168-a467-490c-b17e-da496b4e7dfa",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63ff6680-a293-4767-a314-b2d0a74455e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cec1d53b-611a-4572-9278-dc4444e37093"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0a5ea3a-e436-45b9-90cc-13885fcd5c84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "83660181-a491-414f-9c08-8eef19c8baf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a06cdcb-ac98-488d-acac-f4e42701c476",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c21bf7a-c44d-4a05-abc3-5de15ed1dc06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe411a09-5efe-4b3d-b7a8-28edef30c6de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2631a457-93dc-455e-a85f-3f075c2eda94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff9ccb7f-03d7-4d5a-b8ba-d21d62b026dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2792ca9e-7521-404a-8c90-bb02e214a953",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79262be8-092c-4689-88f9-a693b2216c37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95d9aa45-6e97-4ff4-b9a7-68c6dc3e15ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4b25812-3f81-465d-807f-1842088566fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "29e93dd7-12f7-4967-a255-a20c2f7a38b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "633b9201-56c7-4114-b572-e2f5a8f7e1a6",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4acde80e-76ca-40af-97e7-8efa7ec67c69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92b742e3-9c2a-4475-b0bc-3f0ba88506d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab6a4c58-1b59-44e2-874f-95d00aa1845c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a6032998-047c-45a3-bb9d-d45f916d16e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07caec2f-dd40-4fdd-8dff-47b8f50bf031",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "661a5b43-0485-4c9b-a03d-a46aadc67caf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b735a6b5-406b-44c0-91d6-3b4d991d8e6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "351a0419-b65c-436d-aca2-a5b04d680a3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1cb671f6-4548-459c-ba75-79a6ba78fb18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eab20eb3-4e24-427a-aad6-cf4adbeb5642",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "182caba0-eb32-403f-aab5-3c32662f0829",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c4adf82-58c4-411f-9831-d64368b7ec5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77eecbb1-0579-4be4-a211-bffadc218b48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "dce8f99a-a6b9-4ada-806c-945b8e34a29b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad59e33e-f3c6-48bc-a791-4ed2ba6a4f65",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ed84ef1-c7fc-40e0-97ac-6116920a27bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "167a3ee8-ca38-4af7-ab71-8875e2de855f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba5ac8f1-50b9-4982-ae85-81311ca8f9f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e523aa8f-0b53-40b5-885f-6076eb0f8c24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbdb7829-3ac4-4bfd-8155-95d19d56e072",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3150f41e-1eb9-42dc-a106-d86b3c1732ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7eb129eb-e9dd-47bf-b297-cf7ba8109025"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ede7062-b3d0-4c33-a1fc-3a6a1a29dbe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5a66d73-cc36-4d08-b5f5-892f785934a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60057737-78f8-4ba6-bb14-7aff59bb7d91",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c20d2010-0a13-40e6-9b81-986ad720abfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa926aa1-90ac-4a8e-9981-6fd808937146"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a70eaf5f-149b-48f2-908c-207ee8468d3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "89133960-f383-42b2-93fd-f4afb7961276"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9149a94a-1b22-4754-bd26-648890f91b87",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d6026c0-84e2-4d17-bf92-352f3b184284",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a07f4fe6-e11d-4aee-b126-6000b3bbb210"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6074fb2a-45c3-40af-8af6-790d97c82ac5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8cbb6216-5e0e-4122-a8e4-7be9acbecf85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7585fc92-4b97-4e43-a6a1-733347c8a00d",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ede21746-a803-482d-a632-6ade118deded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c14d451e-a507-42b3-a947-59b3a2c8ff77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfb6e136-f2bf-4e9a-bac5-6bbb3386dbe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "77569bcb-eee4-4a00-a1f7-cde88a6cf3b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b3538b7-33a9-49ec-bfa0-1fb7ba08b43f",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95ed3e09-7da0-4fb2-94e5-ed312f6b03fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb33cbaa-8f85-4388-85e6-4d70b60636c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4078427-7dd3-4ce5-9a1f-d9524e64cdec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb4da4aa-67a4-4c3c-ab6d-5f5c1bca0b19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10d06b94-155c-49dd-8d0b-d7a4647e4851",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3f48400-f4fe-453c-8926-30230b41b038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40a25b1e-7021-4b99-a1b2-28b38fdadb70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88ac8260-734b-409e-8629-20f50c1aca44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6cee45d9-397a-4337-adbb-8c4c275a6909"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1faa1ec-3930-40b2-ac3f-b0648a8de650",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f54d36f-bc2c-44e0-88a6-36f473ec4c61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac4473d7-e1c3-4dfb-9410-c4dffe598897"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4c32679-2196-4fef-98d0-dc2137c67ce2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8342a00-ff46-4cc4-b56a-de26569ddc61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7479828c-0117-444c-b1f9-2433a7f897ae",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18a000d2-7d97-4700-af31-51ef3ae2c73e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2dc43ed-58fe-46cf-b4b4-81fb9dfa690f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37d33560-8eeb-4eb1-b00a-0ee86f4524c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "27346784-bd92-4df6-be2d-64af9e6a3c95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80dd098f-a61f-407e-aae2-34f000f12f74",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52b8f40b-cdfd-4746-92e5-766f996fa959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "284ff8c3-c6c0-4bd9-ba63-d936da37502f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "765b87cc-d778-4d78-9db3-177047078982",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "39b98b68-39f6-42a2-b4d6-26b43f34ffbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a88daa5e-5127-4499-a320-7c95471040b7",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5f0c08e-bc4a-458e-8da8-624efbc14310",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c9475b8-f49b-45ce-9fd2-2a392086bb72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d80ab2f5-1afe-4a19-923f-2ee44641c64a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "08232432-58df-4715-8cc6-7591ff04bbb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d344e1b-e8b6-4ad1-8e0a-f1ae0e74fb4c",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b39322c2-7d9b-4f04-9805-88eedc9df6ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0f2f9739-f371-45f6-a41b-195fe43a2c67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a6a31a2-07a3-474d-b74f-b791b574dfe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9d87c45f-2d5c-4ae3-bee4-e3d6d9cdfcfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb171e9d-f0b9-4f0c-8cf7-ad2f14238798",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1059422-ab06-4d31-9463-7657cb6b455d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eccb2d7e-1189-4714-8a08-2da621c8bfe5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53ba39d7-1910-4015-a203-32297d2f9771",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "566b38b2-9397-4567-a73d-21a47a497abe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e49d2d47-c8e9-47b0-aa97-e42bf36b2f7c",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47b4db76-367e-48de-9c9a-9df2ebef6ef3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abf28fe5-67e0-4ed5-b27a-c5581b7cafaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "519d2022-4cee-458b-8cee-83296e750e7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a4568d76-5f37-4b53-bb2d-0f217c78626d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f7cebaf-1c14-4dd9-af74-3740f03939fe",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d953f29-0306-492d-b0c9-c0062bc32daa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "516c7baf-c014-4004-afa9-aad43fa02aa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "968626dc-d0ea-48f7-8314-6dd202576adc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f03feb68-b301-4eeb-872c-abb6a6b04c46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a293c4d5-6688-4bf7-b311-5ed10bc37bf9",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbf55a79-728f-491b-ab74-9238356cfe17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2eac8b5d-5552-48ee-b191-1d92d03fd205"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4edbe66b-f66e-4879-9b0e-2d8a313a6a4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "05cc0861-65cc-498b-b8a7-9a2184a4ede0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4be83f07-e8f5-4d7e-89d6-2d2edea0f668",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a95467a5-381c-4625-830e-7559ba788e90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea863858-590d-4a0f-87a9-4fc4c5a162eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7104e764-2f5d-4b17-adad-e69fbee3cd51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "539cd378-fd09-4aec-9fec-686f90513bd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89161f0a-b941-45ed-925b-15bc881f46a3",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47da3eb3-40a1-48a1-893f-5a8a51bfaa1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c08cf7c-2a70-4cf4-95a9-8966ab7d5c4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddd9ba21-89d4-45c3-b240-a0d78d87cd8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "39e67ebd-aa77-429f-8530-a8a9b7c8596a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3f57aa0-9715-4a1d-b9ea-bda44306d6c6",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0782d78e-fd67-45fe-926c-18a52c36ae9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "433674a6-7043-4870-bef0-8770aca0317d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7a30c2e-d760-4795-b8f0-b26ce7b0fbd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "f0dde69f-a79f-4bff-832a-ad7038497983"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e308a6f2-7bfe-4f62-813a-45df3864d947",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8274f7f1-ade4-4620-87ae-42820d3dc82e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5070511-88bf-4713-b0e5-8bbd0bfab422"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1324df90-2cba-42a8-89e3-01fefefd2a14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "d18a98b3-a518-4c73-836c-c5b5c0efeb46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf3bafce-9a3e-4f12-9050-76eb3f6be3ea",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a471e42d-3f4a-465f-9e54-be7a3c4858f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c567bd1d-21e5-4ce0-a485-25e4b33d042c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70b1e91e-4903-4047-88c1-69a59a884b19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "dfb50167-4c1e-4697-9b5c-5d222cde2c96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0d4f9fe-c841-4edc-b32d-2e9fa4585d2f",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb9e7f00-2391-4079-9870-1b6dd849322c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42091e25-246c-40db-a29c-6ebe11f7aaab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce1d1a38-4a63-4a23-b6e2-926dffbe9fb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1ffe6a0-5f2d-432f-a264-e9c29b891b71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f0f35e5-9cd4-420f-9c99-aa86ff3c4819",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaf0c2e0-97b7-47c4-88b8-a30ca408e3d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5d35bdd-dde2-4573-8bb4-92de9c4bbb91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f11fc800-9370-4ffb-a7ad-708caf2199ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f924080b-8904-439e-a0b4-a79a804c2717"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bd55d13-0424-45e3-98ff-82d9dbde6d84",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c859308-3298-4f84-b923-ac977c8659cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e88e032-f078-435e-a91a-33a47be4ba4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "929b769d-132f-43c1-a02b-151dde5b11d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e392f0c-20ff-42f8-b9ae-7ed2b88f0238"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62257496-014e-4597-9f30-c9ab723c145e",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef587d14-a13f-44bf-afc6-9fb0f2496d87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45fa5fce-3e0c-45f4-9b35-0d43816227b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2876ecf-e74f-48a0-955c-074dc47eec78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "910ba3a7-5b36-4eee-aecb-d73521de8aa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d4601cf-ab82-45e3-83e5-031c447df4b0",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "315b9dec-7d05-41fe-a610-319d88d40d79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c1a14d9-2764-44f4-855b-3c71b1d59115"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c431be6-a719-4b31-be4e-588df09c983b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6aa8d2db-bb66-412d-bdc9-dd0565889e84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9940ec8-774f-4f92-8e15-fecb34187613",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1329c1fc-1c88-48f9-8fb8-27304fbd8178",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "576b0c57-97b7-44dc-a635-3db16433c369"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b677b75c-0164-4a18-b487-c12e090facec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ba851d2-39aa-43e3-b914-cec5145b1618"
                        }
                      }
                    ]
                  },
                  {
                    "id": "925a61ae-3ec3-4dc7-b666-0bb4dc7fd184",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "288f2b0d-00d0-4033-9cb6-660839b630be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9becbcd7-3b75-418b-9b2b-2f8b380f921d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "368663c6-0f7d-4f91-9f1e-a6df7f260fb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b46dbf3-8f75-48cd-a29d-3c0340f9d77d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6036a03a-065f-4997-a4cb-8d4043e67d89",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c6dc372-44e3-40f2-b682-fa2a8eb5f631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e79a0f6-9297-465b-ae3a-48e3a92dcbc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04281218-24f8-4671-ba40-f687a4a25a55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b8842de-5e24-4ec7-87da-bbd06bcf1259"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20df57ab-89bd-4f46-9d9d-b3c4488f91f0",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1449a6f7-32a2-4d2e-bcfe-eb15181e8a1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9983f85-2a0b-4676-808e-585b9d4ad0d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbed4a06-e694-4841-8ead-d8df8e01e5fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d19799a-ee1a-4004-abc4-591ef80b71c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6c00ee3-75fe-4a53-900a-79317a824e12",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac3cdd05-d946-430a-b515-8839679420bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8008a61-b3d1-4338-91c3-573b4bea117e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bdef566-9771-47a1-a830-c255a7567d65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b41b0b9-0b24-4dac-aed4-7fbc8dcb64b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "953e81fa-e3b8-4a31-8890-e5a016e53511",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "781a6606-9cc0-468f-a38c-7e6b61a643d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb5b591c-5680-41f8-91a4-d374295dfd95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bac29234-b4ea-4e05-ad20-ec280d669d91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "d6e8c93b-4e7f-4138-9c95-319997185777"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a53b8640-dd83-416b-8545-11cd73b3d63e",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fa76e0a-fba1-4e48-8891-ae1a40e70463",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52514a1e-6a0c-4b0e-a3b2-935cfcd8791a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50e6775f-ea35-4714-8d5b-25a37ba9fdc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "82200434-0774-4a83-b6af-1d562361f31b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33d64736-61b2-4ec4-a21f-058268399c82",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afb77b83-15ee-4fe7-8a4f-84fd033e9786",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "140f15ef-65a5-48fe-8497-f8d1005366f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28b8b300-1dd8-4b05-84ab-0e7a38d00f5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "083ee2ac-acf4-4672-8d9c-540b4a4283f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d532cea-8336-4832-9b1f-c67e8dc9d7c9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7a4debd-c206-4a92-acd6-d98cebe48b3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be48f03b-8004-458a-a391-8bfd979fac98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dea26cb-0898-4813-9c90-ec9976f461af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "cafefcc0-527f-4634-83d2-78885869c594"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d23842e8-c88a-43f7-a434-b86b2b103548",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd062692-83f7-484b-83fd-2157694a306d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9457470-88dc-4376-be0c-7699817981bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb6296f2-7274-4f23-a0b8-acf477dacd01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "00d37fc0-fef5-48c2-964a-102ea7b38074"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3863359-feb2-48fc-979b-5883f541b02e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b453f604-5ea8-4ff1-bfcf-b2c89293c0d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9eae1653-ee36-459f-bf9e-0ed6cb45b609"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2074568c-0ddd-44ee-ac39-9f9f2f1812bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "eb14e4ba-aed7-4613-b91c-cc492168fe20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3387fbe0-897a-4670-b127-ed6a1f64e5d1",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf40f325-80aa-4d5b-b4d7-da67cea891d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77a89e27-f5b0-47d2-8870-cca86dbd60e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e4c45ab-d9a0-4647-a39a-71fed739f335",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "08eebe3b-61c6-4ec8-aafc-9980cac0c034"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4034a9e6-85e5-48be-903e-c57701a26f9e",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "269b4ef3-fe1a-454e-9377-5f27081031d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "639a5826-a235-44a0-8ba5-0e95a0718418"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf2677be-543d-4df1-b786-e0b9ae4b3077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ecab0d2-d15f-4d86-a79f-7dffcbf304f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f65f135a-805e-4ec6-91e7-1fb612d73fad",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a8be795-8189-40b5-8284-9c34947eb23f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b131c27-28b7-4f1d-9c0f-07edbd2cfb46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f46dae6-8358-42f2-a0a4-43db3659594c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1c2e3c2-803c-4b63-a630-370de1a58527"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6f21afb-ed9b-4c3f-a2e8-5d535ee049a2",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "895ef6a0-782b-4cd4-983e-e6cefc3bb5d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52962ddf-b927-464f-bc3f-bcdae43854bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99586f70-90b4-461e-94d7-39dda9b29d98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7536277-7c37-4e47-9195-b226e7cb8883"
                        }
                      }
                    ]
                  },
                  {
                    "id": "430dd7ca-dc71-4843-894d-a4d34206815c",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "315f2a68-d7ac-46bf-b977-0390d2a045a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7adf19b1-73c8-4a7c-9c2e-842443958034"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "999ff027-f31d-412d-86b7-8a1334cde6e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ecdb74b-34f8-4abd-a6f5-7bc87b6ac840"
                        }
                      }
                    ]
                  },
                  {
                    "id": "093cc1a1-09bf-443e-bfc4-a73b0409fa72",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21df2af0-7f10-404b-b1ce-2f8e583af476",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "feda240a-75d7-41b9-9e7e-bc8e10c7e674"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2da37151-a02c-4f14-bf2d-497b13fe7be2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2a7f9efd-87d2-42bc-8957-de9f88aabbd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfdf9e30-638c-4ec2-a01e-36da1879570f",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "980e5870-0d49-47ec-89ac-bf2bdc1cfffe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61486b40-7c3a-4c9d-95d8-1775c887d0a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "378c219f-5f79-4a2c-9918-674619f33250",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "569cfead-2b68-48d1-b87c-0dad5a38d45d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b26205fe-8c13-453b-a04b-b6c1e00fa59b",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbe63fae-d62f-47eb-a3b4-35155cfa1790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "783fe7b0-3caa-40dd-829c-02200720bf26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d400a836-23a4-4045-ac74-13576d2716a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "86c85dda-2d03-4179-a6b1-13f59d600273"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abccafd6-2c2a-4193-90f6-f6cea35ee9de",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "109ee60b-e8ec-4370-afc2-7b8df79a4f76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc1d5601-6813-42e9-8569-3d6335d95bef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68d2e36e-27ad-4095-8f52-9ee4a477880b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ff6aea5-8eb1-4e98-b201-3d3cbc8e7804"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cda9f3b-e1cb-41c2-b3e7-0c1061c455b7",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "266c81f5-78f3-4527-a873-c0f337061f89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a51a200-1ba0-4be5-afe3-329fb25905c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cce38ea2-8537-4424-9705-325b0f1c81db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "46214db6-629c-4252-8a57-8164732bc44a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fce5f64-7e8a-4204-91e9-4c78f78c88a2",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c0c8f2a-2b11-44af-8f54-eb2eea7c6d64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3380f99a-aa9d-41bc-9596-a43d024e215d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e32741f0-ca08-4f93-9dca-2f72ebbe8280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d703c94-9817-4472-bb4f-03bbf9c06a3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b193ed1d-e94a-40f5-8548-5d10a108db84",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2fba6c9-400b-4a39-a2af-f314e51db3b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c3ff4b1-0d96-43db-932e-c372fe1c90f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "760020fe-22f2-41b5-aa5c-1395f40c35fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6bf0d6a2-c420-4263-a08a-1b815ef9645a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df340357-4750-4e81-8637-497d14245c8b",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "061b525d-790d-49a4-a5b8-f7e160c5c8a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d717acce-9b5c-4daf-9942-7340bc27003b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92231135-2bcd-49a7-a53c-1d47d1892727",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "badf330a-5bf6-4298-818e-ae6ffca566cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d549b80a-0b8c-4b89-8c9f-34e42c39aa28",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26920c77-8628-484a-8992-fbd3eef127d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa35a26e-6840-4d5e-84d0-c9fdbe9a5de2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "225fb109-3dac-4260-a368-357cc53ce1f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "99b21881-60ff-466f-a221-e309a0b0cc2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b56737c7-259d-4fa4-a4fb-323251319e7a",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "439e5a1b-fc06-431d-9ebc-a94c2c8d5a67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1e36ce7-f2dc-4e05-be55-b3e2d980ada9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d962b97f-88d2-4ce6-b789-708cfdef186b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "433b9d50-ab28-427a-a9c9-315c264cc97e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1add5905-5eff-42c1-b52d-a26e9e2329ba",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02d9122c-ed95-41fc-9e62-20d7504ca052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75a26b96-4826-47c4-82fc-c20c0378536f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe3cc0e2-27c8-4eb7-8250-a6729346c6a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "02c46f4f-60dd-4ca9-b4f2-53e3b198afa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d80f9e3b-5423-4b5e-8a7f-9cf9d818a04d",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdef8ef9-8c91-4aab-8445-6f77c4e82e11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73b0233d-9602-41a8-9dea-063752dc1b34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee23778e-08a5-4951-b7e3-16a9711c6492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "17b9f7b9-6743-4090-b925-104c319de896"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82b170a3-a6c0-412e-b698-33be25791962",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d994988-bf3d-4217-8fbb-869c0e4b7df7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c8871f8-c074-4bc9-8c2a-3befab04bf68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89a4a737-c4fc-4af0-b6a2-9890431bef66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3f4ea9c0-8deb-449b-8b5f-2d5b5160a3be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "341f0011-b4df-4883-be50-b32522460160",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bbf6bde-a398-4077-b816-3b57bcd16c9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a889e94f-55ca-48fb-84a3-9a5041c62fc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4a9237c-ba99-4e23-8bec-7c37c909aa08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c1ceab85-2ce0-423f-b3ba-2c9997417ade"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3726390a-080d-4f19-8ad0-51db7c102e03",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b90d078-a8b8-441e-b2b4-d045782afb91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e97a3d8f-e290-40ab-beed-328e6c2d002d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbf5e239-c952-4319-a8f5-207bf9b8f500",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f50bdd13-70d9-4d65-8b8e-018e94de9ecc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12ee7120-47cd-4872-b381-c1adbc38e58c",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed2cd27a-19b7-4c52-8c8d-4fef5836b832",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a54f90b3-b1b7-4ade-8efa-8ad3876d1252"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5457111-ada7-4dfc-931e-913af6278201",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7da8a053-f870-402e-a5b6-ef6f49896144"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62ec2f02-fdc5-42e9-9de7-78b9d913897c",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98e94ea0-a5bf-4cd0-acfd-7c6c3db03fd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19e050d5-9a2d-4c48-b185-524a8eab00bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed5a5eb5-e4d0-43c3-a81d-0e8cd2cebe8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed0f421c-5d0a-45de-9d59-f8afdd7675a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c209548-9df3-4270-b07a-0ca72bf12018",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00b365c2-4e5c-4f4b-9228-35f003bfe32a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6a4f81d-dc16-45b6-a861-b911af398b0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aaa85df-f20b-4b0e-8172-4351741ecf6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cba028d7-0964-4b82-b571-0b2372852c25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ec406d0-dbd4-408d-a4d3-3e55eac2c849",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b5fbb65-f5d7-431a-adcd-aef6a465505b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08f710ae-be07-405d-bef1-1cab54f2c781"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64e22f3a-b260-4cc9-af23-102fbce4c6aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b495ecd1-6a3a-4bf9-a7d8-9fbd1d96eedc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "275f3e3a-e990-438b-ba70-05b20f530c5e",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b22ffb8-e384-441c-8cdf-4d68f052b246",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09e1b4f7-449c-45e8-be10-04fae6b1b237"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "337348a5-8e6e-41ca-9459-8433d43a630f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "89030166-3253-4453-8c2f-73a807ca10a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01d08b91-902a-43c2-b9d2-e3f049dc04e7",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6999211-0d2f-4664-8bd9-b89fa53e2e79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da34cd4d-6836-4a1c-a202-72ec89b1f343"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a00f783e-b947-4629-bc59-acf520601025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0a0b1f62-f6de-4fed-a009-b2f7e9f19602"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1a4a8c4-81e0-47d2-87e3-5bbea710e33c",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02d501ac-03da-467d-b6f6-8b5b2740f841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b22cecb-964f-4dc2-8e06-74d8888b5ca7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb991cd7-54a3-486a-a86a-6d5980017175",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "bf6e5d95-d4cd-4d60-becd-a05fb10652ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79f14a78-d3de-47d4-a3c5-b343304723b3",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "608900f0-bec1-4e98-9324-e36a81bf7955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f236d5f7-d589-4c2c-bdda-98002393d6ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b7e48e8-3958-4380-b44c-7c83d8e51de4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "56c96bc4-6b00-43d1-b135-801358857de8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bed086ea-e67f-4236-97a9-ec18bfe14bf7",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66618f54-c59c-4d1d-93ee-1ed9724b45c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "200190c8-a974-42bb-b2c9-f2875e0dd4c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e668241-62de-4b65-b933-3cfb152541c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0b47e03f-5202-4f54-9025-1d4bcf306854"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abb04352-7e27-448b-80bd-e8f021f293cf",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ab324a3-75a3-4ed7-ab3f-c61f63631f6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c8f60b1-599b-49bf-9cf0-fca0b72662d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f54c571-1d19-4b89-8c3f-8d2a5e5f6989",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "200d8ebe-13c9-4562-a067-129eac92c1ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9ded0b3-22f6-48f8-a182-700bc3d8e338",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc7eb61d-bb44-4bae-a0c1-e042cd5bd46e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "bf0f3108-f128-4aa1-af73-6ef999365860"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4107d373-6058-4570-b91a-e7f214c4941a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "bfaf7750-cde6-4034-bd4a-d64d0f240ed5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "87bd18b5-2828-4a9b-87ae-37f9520e6f9d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "788f7202-06c3-4cc0-b0e7-a95153d0cf59",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28636bcb-5456-4b4a-b230-d3736dc59208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5aa44229-23ce-4fab-8b51-7f3facab2f6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6c49c36-3118-4067-a865-28ccef3dc23f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "42e951d0-9431-4881-bcaf-47ccbf04a0ed"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f016ce29-b2f2-4cc4-8cf6-9b238bfaa6b0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4636c16b-c99a-4386-a107-7707cdb7fb12"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "61faa31d-d710-41b5-945f-3bf80e756ff7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3a84d061-2c7b-48ec-93da-771999acfb84"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6d649bff-8e4c-42d4-8151-9e421d5c9071",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "84d5ad45-a937-4f3c-910b-a506821ba9ca"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c66bee48-ac52-40f3-adf2-9e225440c923",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7af5922a-382c-4aa1-82f5-9a2187c824ec"
                }
              }
            ]
          },
          {
            "id": "dad98d72-511e-4909-aafb-07ef9130b128",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5c5101cf-9e25-43f8-b8d0-2d5ef3cc00ae",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b8206957-5f83-4284-9e07-9948b2019992",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "96756877-3933-40e6-b899-0470ab3320ef"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "298f2ffb-0c79-42d1-83ee-23317ba7d1f7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "53ad0285-4490-4670-a2bb-a82f7df37c1d"
                    }
                  }
                ]
              },
              {
                "id": "095cb914-11da-4fa8-922c-50f2cb7446fc",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4c3c5be8-78b8-47ff-bb4f-565f9d804cb4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "56aeaff3-c340-4003-bcca-5c2bc22ddb20"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4c4c42ce-b8a1-47b6-a200-0aa4b02281da",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "bf091708-b3a9-47e1-8c4c-e11068c3ae8c"
                    }
                  }
                ]
              },
              {
                "id": "454212dd-b52e-4256-b388-80139b42e709",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4c640cae-0a27-4011-9c69-a09d07d6f713",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fdc607fa-8c48-43e6-bfd6-b53bfe466f40"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ab87652a-2019-4ffe-9b71-8c864ae50234",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4b3589c9-2c62-4177-a458-7b184f984e65"
                    }
                  }
                ]
              },
              {
                "id": "863d368e-ede0-414e-89fa-99b00247413f",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b486d9b1-7a4f-4f5b-bbd9-23e9775e5c93",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "49803db4-a9bb-45ad-b355-7ba76aa9ad83"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "41f1958f-0a85-4f89-a9dc-648b20147fff",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "baee0cad-3842-46c7-8168-18f411083ec1"
                    }
                  }
                ]
              },
              {
                "id": "b7e56eb2-59c0-493a-b1c7-4d8bc2dd8fe5",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "995ed371-74a5-4c19-b5c2-81b0b059281c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6b76eaac-b63b-4208-90dd-de86bcc1c50f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "57a10464-203c-4d12-ac5a-1bba8947122e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "8a58d4ad-b18c-4c47-9eba-8de3019f4d0b"
                    }
                  }
                ]
              },
              {
                "id": "f6a88d7d-5291-4136-bb41-fa649d9d3b50",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "22fb8b07-00a2-44b5-8b1a-45647c2f65a4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1fdb12f8-40dd-401e-b29d-6cc3e552a4ee"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d2d52232-5a1b-4aad-8186-1d3bf70f2a7b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "cb861cea-fc70-4694-8bde-ba0b524970bf"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1d21368b-5bf4-4b2e-9ca8-4ce4eb9220c4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5e840b92-a742-4fe2-88f6-d6effc27d64e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b24c445a-de26-4e85-98b6-c0fc3709bf8a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "32775853-df32-49f3-a315-372c45af2b8f"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "34cf878e-ac7f-4c93-81d1-5599e2f0c001",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "fe1a091d-5a58-4ee3-836d-cad16249bee8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "99f2eac4-d961-4f30-836d-9c064549c5b1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9bc36a01-3c48-4bd0-a428-84bbb253d05e"
            }
          }
        ]
      },
      {
        "id": "22b9fa61-2494-4745-8db2-deccc5576618",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "1826e133-fd87-48da-8d25-44389ef4845d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "779c2022-f9c6-48d0-ae38-f90533755cb9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b157a97e-c08b-426d-8560-b3deabd389d5",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9ddf505-0f52-41d0-82e0-ef0f578a5a03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea6d36df-3a40-4cd6-ab33-ec4e0bec96eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6238ac79-cfea-459e-a2b4-a38438617208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "06d46a87-eeb6-4158-9ab2-939cceb936e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "658642ee-eb0e-4c68-8c4d-9a35b93cceae",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cae38a92-8246-4297-869a-12a901ed5421",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee299a99-7780-45be-b50e-86563408304e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60663742-4850-4a6c-af14-ecced2b8c99e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad4b34fb-8c59-4199-b8c3-5486a7cf47be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1bae406-b157-4345-b8bb-da43deebcffc",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc5f0320-82be-4866-aa80-4fd47d42ee6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f73c2cb6-8152-400e-b7b0-627e6287a531"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eacdc88d-474a-41e3-be80-5cafe0b41d0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e9820bc6-4917-48d3-ac36-687a17be2b84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce91a323-03ba-4052-8f0c-f2118d4660a6",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a47fd59b-7f63-4fca-a184-f5266ef3e1df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2273e2d4-a55c-4ddb-8fb9-d0d4d6dde875"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc9ac058-e408-4a4f-af94-89e9c5bfa0ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "af177ff9-436e-433c-82db-eb77b0be82c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68791255-1a6e-42ac-840d-d902dee351e3",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dead2cc-c89e-4417-aa80-2ff8eea53ae7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7126034a-70e3-4d4c-94d7-a41106341882"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e7bdd5a-26c7-412c-9944-53041258a3d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8eaddea4-1d06-4f86-ace2-304d9efa576e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38a1ac79-7740-4145-8101-979ba097b57c",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8143b44f-52ad-40db-8db6-375226fe7ece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e64f90a1-9a94-4fc5-b1bb-507f3e1e9086"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b4dbbce-5aab-4b1f-848c-8d2209e5d93b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9711fe02-55f9-4ac9-865f-04b2b1fa18c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fcd2f95-4e0b-4fdf-82ec-713be4cb8bab",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f91e0b0-5c10-4ebd-b0fe-42a19d92894d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db48997c-f5e9-40c0-995e-ca4225592fef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7117214f-5e61-4768-8031-bdd884beb877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ee490bc-1b10-4fad-94bc-0607199ab819"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71d695c7-abbd-4971-86f6-1e80d71cc1ef",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "737754a6-7e74-4458-b102-92884f356c0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dabde35-179f-4bc8-ac3d-37c0781d1995"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e36ae7b-c2f9-418b-9916-922200c678fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc48e637-10a3-4626-8963-655dcd646e83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea858371-1e07-4773-8507-7024a13b4bfa",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06573c63-f733-4515-aa44-62bd4cfb2df7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc76868f-32e6-42d0-afc2-b1b70cb53b1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a585fec4-b3ea-4c43-a1c8-9a3eb426a7c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec2e2c8c-d7e2-48cc-b61c-a1fb4d849cb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b441b37-d8bc-4ec8-b55f-c0f830a9d46c",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66ac8ef8-70b7-4eda-88e6-eeb718508069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ad3a048-1524-4f39-9c5c-67bdc1a34a42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "410bca64-9a31-4abb-8467-296ec6d82dee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f09de4da-8a96-4ca0-8bae-115fb30bb666"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1d54a34-b133-4707-9059-d89bb0bc52bb",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f67c2ff6-18bb-4980-abdc-6e3e14391639",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2d54d7e-aac7-4ae3-a58c-6bf03d5351fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64149d32-ad63-4c5c-b73d-7543a3826bec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "a1e09721-45c1-4629-9fd9-2e8bea31dd01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87db475b-8b19-4ccb-852e-9b12b90f1886",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34d6547a-f2fb-48d8-81f8-f371855ccac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b413b2d4-20b2-4480-b972-787fa83964cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a1231c0-d8a1-4217-8c12-b7e768bd2881",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "36b93f76-be4a-45f4-aa9c-456297533cfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41cf1c11-127b-49cc-b7f8-5b9c55767dfa",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16c8e735-d48b-4bdf-8506-62d9d0de5377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87895233-c21f-453e-9afd-130d68edbb75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c3c32dd-9070-4750-9e75-db98835e210a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "eaafcd40-59b0-44a9-ab02-ce0b5513df3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dbbc857-18ac-4bae-9f7e-4b5904e17f29",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f029035-b100-4f19-bcd7-8b03eeb411db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7eb0de6-2f5a-43dd-ad1a-51ecbfb6541f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "221d84bb-f992-4646-b8c4-e20fc8dda538",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "62a5a678-9574-44a6-b4da-1d3b6d538608"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d9e7ba8-712d-480b-bf6b-159b8b2aae9f",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d1d3401-8213-4b3b-92ae-2ad87d7ea570",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d161aee2-9591-46f5-8263-da0dc5795674"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0356aec2-f5a2-41b3-92b3-70f686735f1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "88aa4c74-8f3b-4424-a03b-e0802bebefa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3106242a-8853-48fa-93db-aff8c752d5d8",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1c3b012-b68d-4f1c-8ae5-4f7cad925568",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0498d77-a57b-43c8-87b2-97c9a9c47eb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a098dcf2-b026-4185-8516-5253fb88b622",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "59027d5b-bf56-4409-a1e3-f22968878441"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19da18df-e469-43ed-9394-4d16c50398a4",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cce425b1-5d8f-4f2c-b773-a3fed16775d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b1e2da6-55d5-4e18-8f27-2a221ef8812a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af492d4c-fc54-4a4d-9e6a-36cbdcb616db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "03162d84-45c0-427b-a84d-ca9e4d4f9d03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "225d96d0-4c03-4339-bc75-0d71a4522f34",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d847fca-d86e-4cf8-bc09-b6f32cefe742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7887e123-6093-4be3-88e3-1ef7b79dd8b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12fa5dd7-5023-4d96-8caa-0d5550d5e635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2986fd59-deb5-437e-a288-1dbdfe9c0b8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de0b42b9-8929-4f6a-b18b-8caf03b443d6",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d100bb7b-ae35-4224-8752-eda7e56c4b13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "933e19f3-bd1d-4e5c-a00e-2e63213bc72e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72af350a-6f85-461a-ab5c-872d8b423f1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f6c270f-5540-4114-83b5-b492eadf6683"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8351d62f-f740-44d1-97a2-ff3b5b6d1e36",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c9636fe-a09c-4dfe-9248-92e354a72e03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35e131d6-596b-4b0a-8ff0-614d0b4d6e6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5de3721b-640c-40b7-b50e-1c54623fa8f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aca29d16-d4bc-4381-812c-114817982bd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e69bdddf-3e6c-4ad3-b120-de4bfa12ebe0",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0520c30d-e705-45cb-99cb-743b6228f3da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd7afc3e-f83c-4d75-aa9c-344f19aa8224"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe567a67-5a26-478b-b3f8-3af9d88c1244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e36596e4-ea52-49d7-8d32-c0f2a56f3007"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7be597ee-8b74-41b7-8aa7-c6b154125782",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06b93cd6-9517-49eb-9081-59ed59eef81a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fab01e99-835c-49f7-836c-1b3f7057c9e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "822551d3-b6ba-4302-b9b9-0f1db5a3faf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae771714-d987-4aab-9e33-d37f276d820c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ee384a5-a0ab-4e28-9a72-d8284b9697a8",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "981c6c09-5405-4465-ad60-52a14e15e980",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72603915-b6ea-4b74-a23d-d1e158dcaef5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f65c0a33-4bcb-46ee-af29-18c1b95afe04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0dedb764-16d2-4ebc-b606-6f1a39776bba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3e56670-f5fd-4685-932b-e2a6b35ada91",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbe6d54a-2bdd-4cfc-a689-7a7e0ffde190",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d2f453c-ddf2-457f-ae01-ad5d5854ed5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b6f8433-3ac7-4316-8f1c-8d7e17c922b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9226910c-04fa-4280-9760-a92b36d749c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e9f9959-5fec-4e7e-a061-a9f8bc6671ed",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43d49b2b-2844-4726-9a25-21d19a303fa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c039c8b-1cd3-4a7f-9883-152d5e6b2b47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dcefd37-1b30-4baf-aec3-a81114dae974",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9eed0dbc-7cfa-4a37-8d33-63cfc15d89ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65d2f208-c1e7-44b5-9028-44e042cdb149",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6858641-43ff-479e-8238-6534db5b0bdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98d1783b-7d2a-478b-a426-32c6bbc419a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfe94a78-4fe8-4dce-8774-a9348c524922",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "35519ada-0361-4db8-bc74-3c9f23fe9842"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e7f93a6-d00e-4191-9332-033b18eecdd0",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2993ea82-1819-4694-880e-1bcfe44c9d37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e622ff8-3e8e-4108-87fd-a773c88dc831"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecf57890-019b-4fdc-9595-465cde8f5cab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e2224b9-6552-4a0c-9dda-ab180d510cba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "144a0b42-f7a8-47ca-9072-d049512ca2b8",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bae91e1d-4f46-4ad3-9d0f-c2f298006409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "389215c0-b64f-4d3b-bcfe-afdc07fba136"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d1f655a-d7c3-471a-9843-51adcbce531a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d657865-87c3-43cc-90ed-8f39be41dfc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8432c9d-a049-4fb8-891f-8187e058e922",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a15d35c-b32a-4af0-97ad-29d7aa357cb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51ba9545-7bfb-42d7-befc-67775c517d15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77fc6340-7608-4a05-8e14-d68d86696c87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "98b05bf5-f153-4ee1-be84-2fd499278171"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55ca136f-5ad5-4a00-8a3b-1c5c368994fa",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a09245cb-e69c-4caa-93b3-c904957132ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b0d5767-1128-4262-9f43-629385f78668"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e616074c-38e6-4ca8-9d46-5aa5b25bbf42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ddcbbcd-d1fc-41d3-a05a-2323d4b79dbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11b16f0b-26c1-476b-b522-db064b56749c",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b100b17-2876-4c8e-ba4c-8946b01d0821",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f4d9dbb-983c-4544-a126-1cfddaf6582e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "116a59e6-d646-4f88-94be-6effbc248deb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ad479dc-dd6e-4308-a5c6-948ef80f5bfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a6bfd87-d49c-4729-be63-0a31c7db0c04",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb05612b-af5b-4c67-b2d9-391d585c7b05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6041f2d-eb43-411d-8105-534098e47964"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7af2838d-ac87-4173-a430-cd183adf23c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "42058a19-cffa-4ac1-a75f-bebf497b0659"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8829fafd-58e3-43cf-9baf-336dd7ee5160",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8a64a1d2-d62e-4c68-90a4-b5e5bd3d0be2",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbb54ec6-6916-4084-9b1a-4c08b13d5fa2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a233720b-e25f-49e4-8fc8-c6372ae74d03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af720c2c-f06a-4738-93b9-3fbd9c6f9c56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0a4c734e-465b-4b9e-a2a8-a25cb2f9909e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b5b37eeb-3935-4143-b7d3-1b4b270482dd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "33f00aaf-d41c-4cda-be09-2e2ccff7ec88"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6eafdc6a-996c-43e3-b91e-e291a8842372",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4dc9ca02-22b4-486a-87a9-eb44eba555ec"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1464238a-8d2c-4c53-9d8c-5fe8aefb02c2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0da2f91a-d10e-46c9-b690-15315532fdd1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a0af6275-83e6-4474-a7e6-c9375c0eb97d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8492ea88-2a0f-410a-b973-44575772e9a0"
            }
          }
        ]
      },
      {
        "id": "b4c6e7d4-9df0-42dd-a4c5-ccde43604428",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "91e855dc-5532-4267-8325-ff90f5b389ef",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3463481b-1914-4db8-9698-77fc4c6ae6da",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1708ca10-8384-46a8-bc5f-db4c95e24785",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e7ec6dd-a357-4ccd-95ee-116d1d0feac4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a7abc4d-f436-4022-b008-46ccb1b0f5a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70ee3d2c-2bb7-4b74-92c0-91d14b97a1eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "7500c654-e3ac-41fb-a282-fede6c3e862a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0413fd2d-af70-491d-815a-0c40ee780abf",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a231fa62-d718-4184-b2e3-1bc9ab1ebc94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35672cae-d062-4767-8140-2f2efa5fc385"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5db96bf5-6981-4a4a-acce-b1b84caa2ce2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3a8a252-e8a5-42ed-83df-a687719f420d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcb870cc-7a35-4efc-8e74-c54b3441981c",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58560a93-13b6-4a81-8d17-5c4cd8d0464d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9d5d525-ebb5-4327-840f-3e735d28361b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "645d835f-f300-4999-8d62-905b5e7ea132",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5449f796-5231-4c56-bae4-442f7cb9465b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f91c95fc-eb40-4864-b5c6-6aeca8c83bdf",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af269bd8-ed59-4096-a8d3-f3faed64a506",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0c3a111-3592-4e05-8e46-5a6563294ec5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44757683-4fe3-4f7c-8600-a43e3081b916",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "230fd13c-5f65-49cf-b4ae-ca4d4d21282b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0df860ac-aeba-4b58-a680-c2c56239bc03",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f392f0df-d464-475a-802a-7e29a9fce2db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7da5e12-d718-4c97-a988-a7ade65b81a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f9b1416-1cd2-40c4-ad20-8b11327910cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e403f549-53bf-46be-b41d-cc59bb1f10ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c03d98b8-7ba5-41b2-8225-57dcb68af5e3",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9737c062-cd03-4c78-9cd5-bf64c945683f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "057ccc9d-2118-4e8d-a338-9cde675c7b38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c43a82c-2c6b-4a86-b16b-30515b7e5f22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2a37afe5-b508-45e1-8c27-d371fcee07af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58b6cef6-b06b-4a62-b36c-408ed6000151",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b63d8963-7825-43a3-a1b6-2bc37d7381be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd9265eb-9b3f-408c-9487-b0130872dbad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36806b8b-4af4-4e02-adcf-bfdd974a45b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "90f91087-d9e8-4e6f-9a87-f41fc0a0680b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79c15c25-2c69-42fa-93f1-4202711b2c25",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4bc1ebf-c3c7-4c12-8718-e7cf2e0685bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2538c694-53af-4ea2-b66f-37355865449e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cfffd0e-b261-4e72-bfb4-b537d5915062",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "26666c2d-90ee-4252-b03e-27d16d2d3e99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24b24d0d-dcfb-4b84-bb63-b510b91547d4",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90f3bc0d-2c0c-4d12-9874-a706525f21e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "451acbc1-336a-4064-b304-c4be4cd16fbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5d1a14f-b7bd-4da5-ba2c-4763cf2f7650",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed6d0c54-bae6-4598-b0b8-738f936a098e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97b2fb90-72f7-44de-84a3-5deb9d2c6a12",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "421b31ad-ebe6-48ec-93c7-ce61f5d412e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67a938c3-2621-4f57-86e5-d89f5eb7f40b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "563c145b-423f-457a-96c1-c897694534fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc5a7f16-dbf9-4b5d-811a-76f4bec6a64f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9cbbf87-0f22-44ae-8b01-a42f2324889a",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1221138d-7e49-4058-a9d5-5b554f7abeb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0dcab05-64ab-4d4a-8f22-28c32df373b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c5b3cb3-6f4c-4cb6-99aa-9a8086413605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "624eef78-7d60-4517-9659-4ff3cce0e46e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f8eba12-6c71-45e0-b1e4-e2f81a54f415",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4993199-1866-4287-b883-cf1290456fbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d9acfe2-a31e-4334-b0ef-4953410483a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1ccf8b6-f980-4e74-bc7a-ba651ef1f495",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "943cf457-e62e-41c8-a945-780503234d81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f3d32a3-1143-4f69-9681-6b59ed773432",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0793315b-bf53-4c21-8d91-44c3148d7588",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8076d39d-0806-461c-8365-949b40818ed8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "532208b1-cfe9-40c1-bb5e-330c1b9c8999",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d3240b5-62ad-4929-a217-4d297371d4af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e23f19c-3826-4554-8caa-103e4434ba19",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22e11b33-822a-4d37-895a-873167aa1c07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be92d78e-8792-4747-ac8b-76b1206c0c3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fd3cbb7-85cb-4306-bbb6-b43b369baa9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "78ce9a8c-e758-4ec2-9e10-e9a898d9fdb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b65b8f85-22ac-4d28-ad93-d34dda389c8d",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d28e97d-de3a-4c93-81a5-bc6b09ab27e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d73bc333-ceb1-4ddb-9969-08c8ffaf62bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a45106d-ea58-4ace-9b89-2f971baac495",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "5cedd392-20d9-4d94-97e5-76c761dbcce7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "240cb412-066f-44a6-8446-348229356cae",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a976ba45-af25-4a5d-8997-df9ce3c6ecc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78a8a497-7f0b-42a3-9c7e-2166a45b1bd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0429eaf3-0d87-45d4-8188-1efb222b44cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ba104ff-42a2-449c-a538-42a4bf27c3c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96d09a73-eb39-42f5-a28c-07dbc3b79f94",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43ebeecd-78b2-40e6-b991-b36a91e79dad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef6b4c6c-3df4-43d8-99be-d5ee4d92004a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdfcbd97-c8e2-4b6e-a6cb-fb494dcbaf8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d168582-dcfa-4697-8e1b-036190000eea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c5c86ae-38f1-47ce-b066-5525352fa2f5",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "875efcb3-1b70-4c94-bc6d-e40336d79aa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cc50c55-d328-4bcc-8e68-dfff79057bfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68cd7930-861f-4684-996f-04322dc722d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4bf0a4ef-62cb-4861-8cf1-d68a189abea9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "174dbdf1-3ccb-482a-ae46-b7e3c9250388",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47e7de37-1d6e-4b16-8085-0827bae91831",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "329c60f4-5765-4db2-8eac-e7c69f99ba46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21b37a7d-0026-460e-8a6d-1b0ea304f468",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "95c8088e-bc8c-482d-9369-c9dfe54e83f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "461671c9-87f1-4111-9dd7-4a00a24ce0a5",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e91170a8-167f-4c91-aff3-9016ed1af574",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdb430cf-5510-401c-8904-1997174e8203"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2685c5dc-70f4-42e0-bee6-9d9630bf902c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3f82034-24da-4b68-8057-bc2fba85b020"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c93cba9-70b2-4694-afcc-6a5e712f4ff2",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a318b216-a870-4ea2-a928-3a321f1b4049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88d254f2-897d-492c-9e41-3a09bd2a3207"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f2a0b98-32a0-421a-947e-3c89da01eabb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "517f3453-e7e9-4fa8-860c-bd92dce745b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e38720d-b22c-47f5-b862-cd7bafa02ada",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f78dddd1-4f9f-43cc-8fd4-fdb1cedad4e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6f6253b-1245-444b-9d5a-9bf94aafb013"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62cc0594-418d-4b18-bf25-7e25a2794b1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eec4a220-7d02-40d0-ae40-cc8f4f821c1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6752d087-48f0-4f27-8ec0-419dd4786f0e",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e934e0d-73d3-4306-b5e7-6c5df7f2fba2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0659baaf-936f-4c73-8246-445f4d704d50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fdfb5ad-94ca-413b-a03b-06d02ee1868b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1c07299-579c-4fcb-88dc-536dd9ed72d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "299628c3-987b-4e91-a69b-ec7046f3b4b5",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f829f6c-9855-4fcf-9ffb-a634840bd9d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d90ab9b-f139-4bbe-bf0c-3111c69cdbc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5332e5d-653e-43da-8e41-e7d78635c577",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "404fe81c-400b-4c18-8b1c-5793b4b838e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "316fe0be-cf21-49b1-a62d-fa0fe7b5e2ba",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b24c8bf-1e3b-4b5b-a8d7-18a125bcd694",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14608a89-a032-4518-b922-349202b1e388"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9e4b31d-fbb8-45fa-8cd3-3dc1435e920f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "df33bdf7-435c-4213-b7e9-91e556fa066d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df3af35a-e592-40f5-a5df-40e6588d7186",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3af267a5-81be-4534-9df4-4ff804e7db3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6df172d-327e-40ff-a575-990dc911cada"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe47633a-87dd-40ad-bfc3-745446a766c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "460ec024-a8e1-400f-b13b-54f46a6d4cd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99a9a489-0a2b-44a2-b544-1cd16dee323e",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d8e59d2-d0f2-471f-bb06-7a977bfa4d04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f27b10e-a3f6-4b69-94fa-7a1e986b8437"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d575c90f-181b-46c5-b95b-6dad0a9768c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e17ee30b-c4a9-4d97-baf0-ec3c069abd3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ec68f8c-cf89-42c2-a1cc-7cb7c5aecdb1",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e9ab4a4-a5e5-446f-88e0-5a5e6e5601d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a8df739-b18e-4856-a8ca-2713ea1cd6c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a972d49-140e-4a8d-84ab-62646d6ed948",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "34424caf-f1d1-48ee-813f-a15a15eebf20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eac2924-abae-4d66-bd6e-1a02fa17e3dd",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4abc2ad0-3c4f-428a-ad4d-ffc840ce4c66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d268c7cd-204c-4831-986e-b80e41596e6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab609193-c9ed-422e-88cd-0a79b44c6679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f380978-30f3-49be-9ecd-4a44a4aa4476"
                        }
                      }
                    ]
                  },
                  {
                    "id": "917ca9f5-256a-4507-b3b3-34cc4e58830f",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aa7e399-2afe-4648-acb2-926a8e7c19e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5695b34-858c-4534-98f5-3ec09cf592c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30c18b2d-fae3-4878-b682-4a879576b7f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c5d1446-80cc-4042-8cdd-7bad62a7342e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eb8eb8d-2c50-497d-b55e-38749985dc99",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5d83c45-260e-4d5b-8988-4da59a383c3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34b2e2af-44c5-4d63-947b-291251e6d7c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "611c224e-5fa8-462f-83ee-aabf6b87be5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c55d92b-6f6a-462e-8851-0cc496fb9b3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e4e0bb3-0b29-45fb-80f2-304e4e5939ad",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17f30742-7e86-4c72-8471-e1bc0da9ecd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c8bcdb4-18ac-44d6-b07b-085f71f2ac17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c73b9cec-d622-4a51-a9a4-afdec591708a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d09a80f3-aae7-4c27-bee3-1351c82bff73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f3944d4-be2a-4c8f-8b21-092dda82dbfe",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "948c2baa-ca02-4459-bcbc-f8f837533908",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db60773c-0d0e-4284-b638-d5a628bc66fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f48c1dcc-3594-4b4d-b55a-1d1f7361da7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "98aca6c3-8494-47b8-a2e6-4add613c9c8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b072a84e-4b7c-431b-aba9-cb6694e04182",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "426fa879-0fba-4ee6-979f-e3051fb86c31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1ba85d6-c60c-4be3-a603-8584350beaa2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7c1937b-3b36-4067-ad49-52b4e51e0310",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "37d31047-b1fa-4bfd-b8cf-23214c6b176c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1c93ac1-7554-42d7-8da5-531cf02b4258",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b759ff1e-5651-4fbf-b1fe-cb5b29fc4d7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bee5b907-5623-4c88-9125-45ea1e51b936"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5b2f468-beed-41a3-b854-3ced6cf9836a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "04c74473-ea1c-4861-b93a-abfb7f686c2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dffcd2b-23ff-4a2c-abb1-745157f4fed0",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4f85daa-8be0-4711-a753-05a3e8588183",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b17fb8d2-71dc-4151-96c0-4dc6b116eeb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c68eb0a-d9b5-465b-a1d3-324d735a8ac8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "87f1c849-3444-41b2-8c8e-d24f64da2c9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e0787f8-7bd7-4a81-a665-7969d1eee4e1",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8af6059-2450-4fb0-ab4d-43a7fa0bcc16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afa3723e-2a31-4a38-8ef9-fc931dc137a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5fd9901-ffc3-4e2d-9b6e-ea1407fc744d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d1b58ad-085d-4d8a-bf60-d76f475928af"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f7e07cea-3979-4fe8-a685-ec565a9634f3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "82e67944-0736-4907-bc54-a476c81275bd",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77250328-eb0f-4bf0-a88f-0845f5439d1d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "309f9c5c-9f8e-4b27-8846-9d09497d3d89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3145209-9b4a-4eed-9eaf-9d0d593314df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a60e62f6-f96b-40db-80eb-90436c137081"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "684a1453-388c-4d39-96cf-5dc32fefe705",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "888554cf-d951-44b1-a74a-985743d29f78"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "01a3f4a3-a277-449b-94c6-0a5e7c072537",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "155c0ab7-69ef-4965-9d7f-7487864850ec"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9b8d7d27-7ca9-4bd9-9a60-a0b3e98d9b83",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "91b12192-c420-41ff-b785-77c966f950eb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "25d2e40d-bb6f-4ba8-a8f6-5217ec4c46bc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4b70b316-b114-4e8c-b476-091b022e5a97"
            }
          }
        ]
      },
      {
        "id": "a1ca973e-6bba-4c68-aab5-02dcba52b99c",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "b0b11229-8ad4-4ef3-b058-4a486ac9609b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "eea8f106-5d1b-44e1-9e74-a1314b8e6c4e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "fa67d13b-5d00-452c-a1cf-94128184e6e2",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b014b2c0-8b6c-4d4c-8d40-c65c8a965427",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "611e26c6-561b-4bf4-ac05-a30eff559493"
                        }
                      }
                    ]
                  },
                  {
                    "id": "526855e3-c3ae-416b-87e0-040188be54c2",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2e4fe80-dfba-4358-a3e2-dbd33d6153d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5949d15c-b74d-4874-909f-6e2d3761e483"
                        }
                      }
                    ]
                  },
                  {
                    "id": "881fe4d0-358d-40de-a6fd-834623810642",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eb89f7e-837f-4782-96a4-ea99ec213a25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8795b439-276b-4b15-aea4-c019bb2a2a4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "965f26f1-07b8-4af6-a986-b046d59cb1d0",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9841210-7635-4cd6-bc4a-62aca859bd14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3a1edff-20f5-4bda-92b8-66242e3a98aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d0b239d-718f-41fe-a6ae-8590bce95e59",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74365991-3011-4444-931a-4d9d7742c7c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0cd74f6-0a23-412a-94d7-e72a1b4de371"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d28fca33-ac1b-445d-ad00-09aab54e5473",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02eb3b7d-fdd3-4298-9107-e6d9beaa4cf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a24eac6c-d478-4ac0-83cd-fbf31b11b80b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "723c03df-5d92-4a6f-b44e-e95f9586073d",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58798fff-6b1d-48d9-bce5-f66f61b3cf26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31c3541f-ce77-47e5-b71b-e692c38386de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2f5fc16-36a6-4b73-a5fe-1dfd6e9419de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "886d5086-5b81-4e45-8afe-167eb33c23a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6777d6c9-65e1-47c9-bf4a-04edc5537916",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fad42afc-009d-4e09-9dcb-0bab0fb9b783",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c40eb95-b239-415c-9b9d-808e2cd3caa1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69f13f66-4eec-4bc9-be6e-85ac8b2a1fa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d171a0ed-6097-4353-975d-4031b7853b6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7915ea1-e631-42f9-8733-a8fbdc077d82",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8582e20d-2fad-431f-96ad-3e04d3ba91a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3db89652-5a96-4013-9d09-8b8d0153b4fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84abbf06-9ddc-47b4-a918-2a7f3d03c069",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1433f6b7-55a3-4cdb-a698-3adb47345382"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80264a17-419a-4738-b5ec-b7e7353553d3",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69ccd972-0fe8-426c-8315-4ec323ba9ae2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c03af17e-aca4-4ebb-8390-c75d88f70a8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "727d7697-0497-4b61-86b0-a4a0ecb0b1a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "452d2dfe-97e8-4321-bbef-1d30b14ca15b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9955a51a-0d55-4b9b-9509-98b84814302a",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb3f48a0-afbd-4db3-a5dd-82728b7add74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f216f841-57f0-4bb6-be15-53611b000656"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4200adc-4145-48d6-8c44-a6244b34ce34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2475c6d-b4e2-40d5-a956-e64904ea46c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8ea66cd-b2d0-4903-9388-a2c53fe0ef25",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d5ac366-dc03-47af-beae-c786211779ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83d13734-0793-4b50-990e-9ea27ad38869"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f938319-78b9-4d34-af3b-75b285ba0c7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8ef93a7-d131-49c6-aeec-ea3fcdc00478"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cdd3508-51c3-4c98-858a-688111a4039c",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "492da84e-9094-427f-b968-c24962d92767",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f7b31d8-51ba-424e-9d18-af6246be7d15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df407df0-f011-43f7-983f-7a9b75481e3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fe9d2dd-f4da-4db7-9f37-9fac88e08154"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c037d696-6f86-4e1b-83de-b384b6243cb1",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fa6cc7f-bb19-4bce-9aa6-947b3bc0a4b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8e9dcf2-4d15-48bc-8855-72407bddb393"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81a9eb0e-0185-4ba4-907d-1539bb155999",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ae6fe33-af5d-4d25-b9fa-4900cb3b64b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "900d58d6-bad9-4c35-91eb-98e292f1ec8a",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96e6a49f-bf88-41f6-abb8-64817a791130",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6023870d-a382-4b16-a1d9-fe264726c544"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08a50bab-1f7c-40f4-98c6-92c9148a69d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3331254a-fa3e-4b88-8299-0202bbf963a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7abc210b-d60c-47cf-9000-3eb8d0a5d702",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ae740b8-9624-4e80-bc38-2861a9837bab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac06cca7-4e90-401b-84f1-4b835681d2dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b1a2414-c803-4f65-8d8a-7f33341e4819",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98895250-81a6-416e-8eb3-27fc8c1d3cb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "743e9ff8-11ed-43ca-b055-94294bf72703",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b63c242-49a3-4cb1-8bbf-3e9e01b9e31f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e46aa014-c6aa-47e1-be2f-06d78683cc46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "697a86cb-47c9-43b0-819d-02e17da7d401",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad3bb5e5-49c5-4635-ab6d-f115a6c01d5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a5c0aca-00fc-42e5-bb53-723f7039c04d",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "953080ab-de4c-4860-9750-c45f5c884d38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53b62409-3021-4af2-8bc5-6930f52ec641"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "febcf279-2da2-4a53-a1c9-691d6896dc23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3ea64c9-935f-4047-a0c7-12d062beefac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6f0e485-682e-414f-aaa3-ecb903a5229d",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7469795b-da24-4c6f-9a4d-1ff0f6a206c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efcaf3bc-9045-419f-a41c-504d12ac1ce7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8767af8-bfb0-4c67-95e4-757171285b88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "149eef51-c8a3-4b3e-8aed-f963ea959d1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15628351-3c51-4fdc-8870-d6b097d65bed",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1979abb3-ccba-463c-9a27-e63fbea42a1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e945ad9f-61bf-473a-a24b-5439d0ffc2d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98a65067-d3e1-4084-bb5f-114a59a5c7c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef4225d3-1747-45ec-a53d-f9930d7c91ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7707f820-c6b9-4c95-8690-05ee28094982",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a393f92-936f-4612-8f02-434706b13c45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1f467fb-dbd0-431d-8f0e-2581bb63eda0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45eaa151-43f8-42ca-90f3-8eab94dc640a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04f7a29f-11ec-425d-823e-f2c4087f9ba8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ce5090d-83eb-49a2-9c64-d534dd7ca10d",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42a9bd78-6a9e-4a01-a775-758c4ef65288",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09b90769-bf3f-4c70-821c-9b2ecee8e211"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6c99eab-08f4-4d89-accd-58028f53c262",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5d3cb01-ab3e-4c6f-a5ce-297bab89ad76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d16396a1-646a-4894-9e9e-1b6ab9c00a5f",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e66a75e6-256b-41f0-b424-ec34bfc705db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32079126-7c8d-4733-8ca7-f7ec1e15aff0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95fc1d18-3cbf-4acb-ab0c-18eb7dc9ec38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6c0ac88-077a-4757-9918-b9d8c115b740"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1bbe781-d9d8-42cc-b155-887d1023bdd6",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f020413-f8f9-44e9-a9a1-f1c5df8949f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77c360f0-a091-4e41-9441-abf29809ed30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "714b7631-5511-494b-b60b-eed1a000e4ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38d6f8f4-7375-4076-a2e1-a6ea3bd3419e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0f2126c-2696-4a61-811d-828cdffacb4f",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d0e1591-c259-4fbb-8e2f-8be8a09b6498",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d71e2112-35c7-4046-9837-ca74359f9915"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8be18526-da1c-4deb-8776-4bfc4a197956",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffd2d066-ce13-414c-b690-0d8d526c698b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01f405c4-d88d-4de6-b765-9441e5acf29c",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "919609a6-1427-4d67-9d20-dc1130c93b01",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f783b7b7-735a-4bf7-ada2-f2e07419daaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7ff5ae3-53d5-4870-a9d8-f7593ac985fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a37c170-789d-4f6d-871b-e7255fbbe55a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ec1c76e-b060-4110-b210-61f894741d56",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9610770-b5dc-48f5-8812-4265bff5b1e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e0286ca-2177-4141-b1c0-9826fcc24294"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d48b418-c89c-46fa-bece-6a5c5090bfb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5b3537e-a11e-4f69-9c7b-fa17e6319f1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4472cd06-4cde-432b-8ee9-02eeefbd225a",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d38a1f6-4c5f-4b06-b589-31bf06b7df4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfb7a23b-d368-4622-b6ec-a0fbf762c9d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50b7a852-ec01-443b-9f6e-4afa68c6c42c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4ca5bf9-479f-4687-bece-88815afc44a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4874a65-ba74-4635-8e9c-f0f495f71949",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2b0732a-29a3-4577-821b-ba58887010fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76d7a84c-2829-4d96-9127-c9572c3d032b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddc62382-4015-40ce-8cbb-c3eef41e9bf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6dfd6d6-5205-4a72-a297-0c89fa85a193"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2c0765a-0080-4ea5-b5ab-ecb6fd8a2d86",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ccd8624-d84b-43cb-9840-7d41df04d8ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c7e8983-eb91-45e0-a5b0-489092f26041"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d9427aa-09c4-41a3-8b64-3dbcfce2d129",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f62e036-d185-4822-9e8d-6e59e2b7a4b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e86bed2-9f84-46a3-8d24-446e0bf6bda5",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7500179c-a01a-48e3-ba35-73812ab1d222",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aca06243-15fe-44d1-aa10-7ba626dcd27f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec642f97-0b2c-4bd4-b09d-bbc3bc888736",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8899b2eb-1ff1-4f20-8b74-03c8ed047a57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf89f8a5-b4cd-4303-96a1-9ea840250443",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ac4abbb-f034-4407-b766-e65489aa44b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16fbd09b-e5ab-4681-aa28-4a6e2504e0f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9adf0eb6-06e5-410e-869c-5d3f8a0eb487",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "560477c8-450a-4152-9bf5-0540587a4432"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee88b8bb-9682-4396-b5f0-d04943ac38c9",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cf33976-aa8a-4fe0-8c7a-e012206c363a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e0454c9-afb8-4d13-9421-cb5f7298922c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eb89f7d-7d55-4bc8-abc4-d976aaf55bbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04447bf1-0e51-4db9-9c92-1d03c92ec8cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e022e76-8897-4ae9-b89b-742203c75fa8",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7313007b-3f51-4eab-8450-caef26d52e31",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c83acadb-e21c-4505-bef2-c14928234719"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dea04711-2ee3-466e-9807-ed92abf4b27d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3431de2c-4a44-401d-af20-3e28f1f65122"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48de55e4-9b76-43ca-abf3-d6be2677d87e",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11166a6c-19f8-4285-bc0a-19aa492b0dcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97b152c6-afbf-42fd-9164-41b28f730521"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2880c433-f370-4013-9974-f127cc8eeb3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8faf6f4c-e5a2-4223-9a76-01738be6b8c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22779ec6-e47b-4329-9e45-d44960b98460",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7928674-deb9-410f-a0c2-69799f23867a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd176bf2-c469-4b6c-afe7-8fb558fec383"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "874f6838-7489-4971-911e-d71e42759246",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbba3f1e-d6fa-4e78-bf8f-bb5237f52424"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51ba97f4-ff4d-4ddb-ac8a-e32495f1bcc7",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63b266e1-11b5-4555-a27b-e7a035bdeae1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3072703a-eaee-40b3-a7fe-63fc36a1f075"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7a2bffb-99ab-4c6e-af33-ed26778447cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "436b4a75-7840-4a57-822d-8fe53862dafe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e983d49-2a92-40f2-a423-25256181fbec",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1323cab2-8096-4718-8740-96a935e23edd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc239673-790f-4d67-b461-646caf422996"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71b5f22e-4b3d-432f-9e99-28c9858fca4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a139af50-6e85-4438-bb4d-163e9d72022c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bbfb1ac-4ab2-4a79-a3ad-4f52fde4d0ce",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c637fd2d-7e2e-416c-908f-1f605bd980a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6170ad73-d4d2-4b5c-bdc1-e96b9a022726"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9a6f28d-7153-4c72-8cda-03aea25edfdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "761cc6bb-8f17-4496-bf15-6b1b7d50d86a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9281c63a-3f61-4334-8605-ce7648ccad30",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19883ce1-f122-42eb-9dfa-232d754e0b0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "700cb2cb-56f6-4ca8-8ec4-19ba046d03c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5fe78e0-dd9c-4d33-8d3d-543350f26488",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca09d076-add0-4e81-9981-f4b6af8064ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adeca073-7be4-4b3f-a62c-d52a56de80e1",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c807350e-19a9-4dda-9ec3-e475e2c67b2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76a3686a-db3a-4b7e-a237-dd57bd7f8d15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa88fafd-b5f6-4cad-a7a1-dd38eb5ea88f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7b7514f-7ddb-440c-a961-c6ec3ba605fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b668f06b-a6f5-424e-8aca-893e77b3d8fb",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c27fb0a-c029-4c65-9404-01be1b0a478f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aab6c1d7-b2a7-4290-8c62-9bd9fc80686f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eb2a514-f1b1-4e0b-acae-e77c0d46e29a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcb4484c-1e8e-41ae-bfcd-191cd5f874d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f383736-a50e-4832-9ad3-fd41dd97385a",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "453e45c5-0141-4c04-836f-06ee0a001882",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b3bc407-f0f0-4e0c-b970-d2a2795faaa2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed91d0f4-4ca4-4f94-b756-0d8eed024153",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8af05aa4-ded5-44a1-b00a-a67155a07dc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbf0e19b-d0de-40e0-b619-94aaf8285409",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9497464-f402-44f3-89b1-dc80fe88ce7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a242cdf8-ac8c-41b9-a065-2996f326d235"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "673b91e6-a995-4046-8942-73bb6b2181c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0be46dd-054a-4686-96e9-583445e92ebf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd305611-6a36-4f0c-8f1e-74d92307b01d",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54fca6fd-0516-4067-a3d7-9273d63a2edc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18a12b88-844e-4a78-a8be-c338eebcb65b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6d45295-008e-4b65-9171-aa9a5052f015",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "437593c9-da8b-4102-a7be-7e03d81e5a50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c76cdcc-f098-4b0b-aa0e-8811cfb91563",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7346ae96-2ace-4288-b0fc-d741f07c87a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a72f640a-d113-4437-8d7a-7fb5f79ca468"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f26a611c-d063-48f6-b974-fb65244dc5e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a062068-e1e9-4095-8723-e7d4ea0d0053"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a151adec-0854-447d-8a1b-6cbd834471c0",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4be4f4c9-b8af-4af6-b981-59393c54a6d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03405881-8e6f-4668-86ff-a9247614021c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ccf0d7a-c1a8-4d88-9e97-901329e66149",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d77a9326-b8fd-42ee-a35d-733128101bd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eeb90d4-0053-4403-b3e2-e8132f75de06",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b03ed0b8-aca2-4ae9-8bea-663d070f106f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8cb41d4-f12a-4c7e-908d-53ce4a705dcc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ee4cd9f-b1e0-4986-8463-172d48f13696",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69516416-8a0e-4944-9373-8ceeeef6ba69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18767ca0-47a3-4e19-8f7b-1817fefb8326",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aa0ab9a-f619-463e-bd16-8016d26428bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9347e8e6-a23e-48b4-9817-72e075d6e4b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a6f0a47-e219-4c62-b01b-754cf7d9214f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20b8f111-18dc-4ccf-8a34-e8c891985b1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fed9635-36f7-41f9-810d-3c7f145ed4cf",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19b683ae-f4ec-4919-b958-34d3c2089a41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95f3ed9a-959d-4e81-ba89-2c98d3bad626"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2c53ebb-08ff-43b5-8e68-d73515934134",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0be6a25-1de8-4e5f-963a-dc74885ea193"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cd39938-3e25-4493-8a8e-4d3c529c65c2",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07b5f069-fc65-421e-89a5-2701295c496c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7590e1f-4d88-477c-8ae2-33a2c978654b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f925731f-a3a6-4871-b15e-f4b3597a2b60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "053a8c59-b1b8-4924-b633-3e62e65bc923"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a431df2b-1603-4fa6-8736-eadb71afd67e",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9d5113c-c5d4-4540-bf2a-34d3bcc8893d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac7a7add-0454-4266-9738-60e0c8212276"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c369ac3-a6cf-45ee-9a9c-c2b96ecd4f0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fb6efc2-730a-4c86-8afd-0c6c21b86af3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85507000-c813-43aa-aee9-0bbeedcf0186",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2ef353d-e87c-4fcc-a44c-0d0c85d7d7e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9716399-4a22-4f62-8095-42630af42e3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6773211-8be2-403b-93d3-75e30cfc4005",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "533999b1-9071-4176-bfdf-c47b86820946"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ad10aa4-17f6-4e0c-b029-4cd60d38008d",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17900f21-6433-43ad-95a0-38a8104508a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cc8102a-cde5-43e8-87a4-dfde5d760914"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89602982-56d2-4b9a-80b5-d7adad9c2ae2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4551f00d-479f-47c1-8523-dc581d7f6e61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce0f7e9b-4df8-49b0-9246-929e04fa1901",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07433cda-c485-4f97-8cc1-5b88eebe0679",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bd6bf6f-37b5-4346-aa3f-de287e70664c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "977a8f9b-9421-4ee8-b02e-a5f52b7cbf89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ad6f138-23d2-4fc0-893c-cf9a29422124"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0946b3e9-18c9-4bef-97f0-90865de40b66",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4299848b-0374-4579-87bc-bc68115d5cef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc240e8c-e814-4205-9aab-a18a8e8bdfb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abb31f33-b0f7-4460-bd3f-3127a0fa5ab9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5b5ad59-a0f8-4cac-8df0-4394015723b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67a8e27b-8ece-4bb4-9492-606eb607c149",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5fba7e7-e138-4a8e-9e97-7de04d593fc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11ad14ae-2911-4cd1-9527-13ccdc379ff1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b50d9bb-1830-4941-8c0c-02829ed338ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ba56b18-4bf8-4a68-a16f-44e72e307a2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebb57157-595e-48a2-bb2a-70907420f271",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e53871f0-00c2-4ae3-9eb9-636d9671b919",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbe0e79a-70bc-45f4-bc1b-b0f7c5d9aa0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4b43ca2-040f-4fcb-a750-7ed72bf872b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acfbed60-f931-4492-9b7e-f051f7795d11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30589026-8f45-4d54-8d00-4975e1529ee0",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef8825ac-757c-44cd-8dbb-696343a87f23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a27281a7-dedc-42d2-b6d9-572b986c95c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6489903a-5148-47b8-96a0-4cc818608a90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fbb5f52-1674-4814-b3c9-ac3ec21a021e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ffe877f-4e97-4472-9a74-e2f5361826b7",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c8aa260-98de-4499-9f36-5e74eb104f7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6dcca21-7f43-4ceb-8bc0-afc10437637c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e3bac96-5ac0-46b4-bf2b-073124a75228",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8cd9950-8a0e-4bec-874d-f2256cdca061"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e67de416-964e-4097-9c1a-81f0c188c316",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a9f7b92-3d9b-4db4-8b61-cad6dd753868",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf0abd4d-501c-41ca-a77a-fb957e4a68c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcfab3c5-0da1-46b6-a4c7-68da91843f00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b68a955-5d18-4460-95fb-c8e00da2fa95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0225aca-cbf1-4a5b-a420-af80a0eb144c",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d30fba6-60b7-42b1-8e92-51bf61263a97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cf6ba27-8af0-4648-8114-bc7b03db02ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "562b2720-3227-434e-b657-a4d93121894b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7031bc13-c5e0-43e5-a54e-fde849003a73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5c20126-9a84-4a84-ada8-66ad02f9a411",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad72e91b-adbe-4d03-8182-61724a3b80f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b21f7b3c-b8e6-4e4b-a2ed-e7aaab4d4c7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee2dd51c-1be4-4d35-8572-c38a031493cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "771e521e-4bf2-40d6-bf68-c62b7ccd1ce9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60bc78ec-77cb-4f6d-83d0-c5f784a82bf0",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaab8d33-96ce-4770-8346-01c63cd8df9b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f08102a8-0add-43f6-931d-176797a70954"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5484033-b7ad-4c67-a158-e8e704aa4f33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de688bd3-daae-4910-8a71-ac8972a2a757"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e09a626-6119-4100-81c0-23b945cad908",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63e6d75b-691d-40cc-9ef3-133f186132f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9b8e3ea-b04b-4f51-984f-cbd05175fd74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f029f8a-ff79-4360-8759-1790d5813082",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f78ed71f-c789-4fe6-b9ad-11016c1d56c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b09ecf0e-fc27-43c5-bb8b-9aea1dcbe492",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8db6c54-3b70-4249-94b3-c80238861c3c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53fa75d8-1991-4ac1-bfae-a15089ed5a52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a479083-ff11-4bfb-bbdf-0ef97d98f0fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "666604d1-3987-4952-a5bf-c4ba2d0b93c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b1ffc6f-d001-4ed5-a092-f19b87609da0",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "853bf55e-0f16-4bd9-9037-5cde243d596a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "139d703e-72fb-4cf1-b1e3-54dbc9b7f41f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b13a5f3-4db4-4dfc-a922-e1f3406a6512",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ead4c2e-b1a9-4daa-b477-009e5291d00d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48ae996b-b62f-418f-8bf5-2249f97689e2",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9772003f-6751-429d-8fef-7bf5276b564f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e18f3f1-0407-4db7-96f3-a622a9f6d849"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "693694b7-39e9-4bf9-89f4-adcc68265b8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e90fb11-1a92-4702-b40b-05bea7226650"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e35dd30-6cf7-466d-add2-5c3c04859a12",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3588ea8-75c5-4ada-98eb-31a695d1fd5a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26503155-0fd3-4a0b-b5e1-3bf7b6493ff1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7281a877-feda-4865-8a7f-fb1becb535e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e905e78-1619-4a42-a279-c59a7c0a0892"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fcb0eae-f6fc-4d22-8016-700d175242f6",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aff0e310-6026-49e2-9439-d1474c2cc959",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6122d953-0d49-41aa-90b1-4f1e68597baf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fc7cb63-f1b0-4233-b2ac-b2dc7d047e26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07edad76-a95b-4a3d-8484-b2044a8e8eca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6547523-2814-4702-b998-7b5bd1447703",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63e99d5d-e306-46bc-9334-34d64eac2212",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf1379cc-bcf3-4839-9698-dccffb29816c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "498ea005-94f9-49ab-b7e0-6680f22dbf1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1044a85-1952-47a0-9857-8a2b8a054641"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edefa772-1e25-4d3d-b1dc-336f8f8ad3fc",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32026d28-c9b6-4a05-90e8-5b52ed716035",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39021928-7d33-4d63-a8be-9e85a70389f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d60f96f9-6540-4da0-a7ea-d88d83b237f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83639091-59d9-423a-8881-110ffe80f956"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f20ad19f-746a-48a8-a1ac-3a67fcf11fa3",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcd358f4-a8fc-46f9-b9d4-dbffdf26fb0d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11c391a3-316c-4649-8dc2-139789da58e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8121208c-894c-4e61-91e2-fb2dfcc9fe46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b5e0b8c-bff3-4b36-87a8-071ac9996828"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bb965f4-2513-48fe-8aa4-62bc937a74c4",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90f784f5-f381-4a23-97f2-fe38bd40eb84",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68b65503-c99c-4d73-892c-446f4ee026d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d3fa0ad-a9bc-4af7-b313-ddd09d801cf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "587d2760-5203-412f-b3d6-48f965a4792a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e41a6cb6-608a-4c74-94e2-e43922cb1268",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51b7640b-4c7e-408e-9e5a-1b5ff071904b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59e0ed64-0353-49dd-a69f-c7fb3d426436"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb39af4c-3117-4ee6-bb29-9dcc2c7e736b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c46d1a1-fe2b-422f-b81e-41a9ae07f5a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c9094bf-7b89-4c70-bad2-d216fb8a84e0",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddfafbeb-92e2-4e92-a7d0-11b395bc9bf8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b238aee9-2349-40ba-8369-4313b8433b84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d58817a0-469e-48a8-9a55-869ce54ab656",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bb4151a-753f-4d42-9a27-1b4ec49a2884"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80c57b01-e977-4d17-bf4d-5f16b421e6b5",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4271a7db-ba29-49d9-b1ec-43818fd8117a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f17ad216-a2eb-4dcc-8b57-6908a33f7e8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9346e94-de55-433d-b8a5-f7d9d0e68fa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af228646-a2c9-40d5-8778-f2e25893bba8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1738dbb-c26d-4643-befa-1dda8bc8c3b1",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d47952b-7f1c-479f-84a4-76b2c9cc0785",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8a4825e-afda-4920-b329-07c91e1b1f2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4367f719-a355-4686-91f2-1715737fa4c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a6de813-6ace-4db8-82c0-452ffbbd771d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4860a7cd-c8ea-4a1a-b622-c4c53b1a702a",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8ab6cc2-971e-4b08-a3cc-8eb66fb23f11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "438bf975-7975-4e4b-9406-c631ea4746ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18614243-addf-42ca-90ee-d66d736da82e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bf2cb0d-2728-4100-90f1-a69fd880343a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56c7f0a0-d50d-45f7-a7a1-495c4a00be10",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6148050-f04a-49f2-9438-fce34a70575b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8cad5141-e3c0-4953-97fc-1a14b84bc567"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81206a07-2fe6-41d2-b648-2613103aa5bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3281aa04-6a84-41a0-a1e6-9663c79e1f80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0af608b7-4f73-4b23-8aef-04872dabfdce",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24608f6f-b191-497f-9f72-3cf5dbf1d7cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16bf31ae-f79a-4af6-ac75-7c63835b23cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f41193b7-0f53-4dd1-afbf-589561251acc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce4b1286-d953-4c5b-968f-d3dcd842187a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00c508ee-405e-4f46-b869-36624da7ead5",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c549d497-efa5-49c8-9b55-531d74ecf570",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9d6786e-8fe3-4602-9e01-ab7eae93743c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14535665-b793-4fb2-ad12-751a613b5b98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4df29e1e-f9d9-4d17-a53a-ea3cc9fda558"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f937b85d-9780-4482-8e33-559eef27abde",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b20b18b4-4303-4e60-ad65-75324a62e7c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42eb6361-9dab-4c5a-bdb7-abcef06e3794"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38dd62b5-26c5-4715-b15b-46e1f1345ab1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "706ecd7b-2f8d-4a09-a4f1-d6f94ed3ee9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac3a3429-8681-4188-bbfa-6d05d0f5d8bb",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c1fe2f9-31c4-4ed0-94bc-91837052a03f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e2a1b79-8e95-4b51-b3c5-9c0ec780eec8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48ed3fa3-fe4a-4284-8551-cf372b31f2d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1a62f19-b95d-49c1-98f5-e728e78c8142"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03633beb-8f98-40e8-8476-935fad9a58fa",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee7ec3f4-7a3f-4ee6-87c3-255ed70f37a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f12c04b-4e59-4d36-a13e-db3276b74c8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3472e643-b280-4e22-a15b-3471922375ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbe5c3b3-117f-45eb-9208-21f4d1149441"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a045e01b-9825-425e-8c97-51051217c760",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0e91381-44e2-4cef-8cb9-07ba41e5d00b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ab3228f-a3e8-40c9-8f65-66ead1bb22c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6946a202-be9c-4e86-baab-989b8f5f999e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "149ae581-1565-474c-85c4-88acc0f9eae0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e363823-c819-46e3-879a-82291be63a3e",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6979abe1-8d41-4afb-905b-c78dc627059f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac3977ff-3919-4de6-bfe5-3c7c8e11eb2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db54dea6-7385-4fa5-8f56-98f5bd689dde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2143c620-7518-4a57-9e6a-c0cb6ec313f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c52d7131-30f6-47e8-a426-b8d05099463c",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1cb0b3b-6ef7-4cb3-8fab-2cd9a6ab34fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5eddc2e6-a2eb-4a34-bc3f-0a29e7fd4d91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c16c06c-ad4f-497e-b283-a76b44d7b49c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce3f74b5-1501-47de-891a-355887aa7cbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd26c3eb-6f1d-43c3-b970-c418962e430e",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a753ee3-09f7-4ea7-a614-119b9e19b410",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "990b766b-2c55-4f0b-9c05-0b1012f0d297"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ffad818-ae43-4e5d-a7d7-bc5f869eb520",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1af1164c-a6f8-4ba6-80da-da76199e23e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad11c815-3787-4de4-8008-df20a7b90d7e",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f30b668-9cf9-4e16-8118-18e89b742625",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab4e6da3-4cb7-4d69-852d-155f4f5b60a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80432e5c-1c7d-408c-82f3-5f55541ed5fc",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35807a7d-bf06-4324-b339-fde66368d16e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "422737e8-3aa5-4f8c-8183-6baa84cb39ca",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a21d55aa-538c-46a9-b5c5-4a215a205360",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9db04a32-032c-40a8-a1ef-44e6a8bf5678"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa5f73b6-fd82-4953-9444-cea748ae3a4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86605603-54c5-4bcd-9f06-4dd85672391f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c76cc00-b3c8-4169-b940-0d9106002e70",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6972ef33-66e9-4aac-8eab-9a36dcefc90e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea1fddb0-072f-40ce-99bb-595d3d07812e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "416fb3ef-27d5-469b-ac47-05ba0c0fbab4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c376c58-3bbb-442d-a5f4-6648f2d7f2eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c72c15c-cf33-4bce-a99c-519b64c5f5bc",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0711119-a150-4547-8c70-7d1b988eee16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "531c2ec5-db8d-41c4-9b7a-3ab277897bfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31204a4c-fd02-42f5-acca-068efeb5baf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bb06c80-8ae1-4301-9660-49e44821d0f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8b91b4f-1dcd-4858-b81d-910efe4a53fe",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3279c9f-143d-43ae-bdcc-076bacbce322",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c2a1f96-782b-4497-86cc-629baf26eff3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45f339f4-4f6c-4695-a3d4-4e8d5043cfc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b258d5d-06bb-43f8-a20c-6340fb2c78c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9183fff-b2bd-48d5-abcb-6e44b868dc73",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6db3e49-3016-4931-b8ff-637b2a98590f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d4480b3-6b51-46d2-a033-65fb29a3426c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b4ed847-d753-4892-9df1-cccbb06ea471",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "680e8f0f-3bbe-41ed-8fe2-522ed410ffed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6476cb23-e112-4ff3-91b2-07ec84bb4980",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4dd2b90-eb49-409a-8d9d-415035989e95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0b58434-2b4f-42f1-827a-ed22b08b15ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "033bc0ca-ecd7-4165-bd87-75b5000efb89",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "495fb268-14d7-4b4e-8731-c496e7662edc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66796f39-4196-4db2-bf68-73f5273fc3be",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc2c8314-46f0-4be8-b1a0-0aa3c7a3a269",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87f32425-5ecf-4b15-93f8-fefbf6aa3f99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "299bee43-ff96-40b0-bb50-99af90cffe47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e06cb5ff-cf11-4ccc-88c3-522e741ffad2"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3c22b6e6-0368-40de-83cd-79b8eda78ec6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5db062d7-6075-4128-b705-2ea79adb758a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c293be86-b1ca-4508-bbc7-5fb6dbb6ad73",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8c281082-95fe-46b4-8394-185a3d1dbe56"
                    }
                  }
                ]
              },
              {
                "id": "009de082-c58b-41d0-a90f-2e5c6b98079a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8876e729-b4aa-4367-839c-b2360ffbaef9",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bbd98e2-c97f-42d9-b539-a810418a5bd0",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "ff37ba55-8007-4f00-b594-6c858fde2477"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7683b06b-55e1-4bd4-a7b6-3790e4d740f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b377d314-9ca7-4bae-a551-6754fa36c340"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c8979eab-b3a7-4b42-a739-a9e5201c436f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7ce3dba3-c425-48ad-a117-360609eeebc9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "639d8027-93da-4bc0-a50d-e183ea355fab",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "05471f98-af35-4b19-b8ab-8448d0072927"
                    }
                  }
                ]
              },
              {
                "id": "752d648e-fd66-4683-8768-e190327ed8ff",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "fec4c564-38fe-4a8b-a44b-8e089d84b1d5",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d03cf4b5-5f5b-4bbd-b05c-3db65a7118e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "4f7aea97-94e2-44fa-b183-19395cccd482"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c24631f-0e5b-408e-aef2-1dffd9969529",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fe4919a-5882-43ae-8555-6f5acfef841d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "e639b700-34c1-4003-8ae2-d089935da5a2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5be8916b-fce4-406a-a6b4-d8b601da1030",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0ee897eb-2eaf-4c58-a7bf-67c6fc4a6ab4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "93cf86e0-89b2-4075-b566-f3de53c256de"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "87b54e0c-80b5-4c10-8a54-2c05a7361597",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9dfb1886-8daf-4e03-a923-25a80fce5f37"
                    }
                  }
                ]
              },
              {
                "id": "6ce43f40-5b30-4d0f-b0b7-f53f5b0ed042",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "318f69df-5dfd-40a7-83de-75c310f9ff38",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "67995aca-0949-4bab-aef9-50faff5f05ff"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5d0ec285-1954-4b6e-9cba-e094ed705178",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "15e441c4-edc2-4f6b-9345-a92ae0e47379"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "30790b71-a0d6-4f69-b19b-16830ee3ced6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "9e161450-cc82-4bc8-90f6-767049228df2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b4d09f2c-3243-44c6-a1e3-85a42051f868",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9ee33791-16c4-438a-b2cd-94aa2a4f4ae7"
            }
          }
        ]
      },
      {
        "id": "9570c10a-18cf-4663-8ec8-83c51c0e400b",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "e6e1d837-2e06-49f9-a302-94b18fe793f1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "047c8d23-89cd-4a41-88fc-e731a73cf73c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2c9f28a5-3657-4df9-bcbb-9f3e98464cfe",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7be6083a-8d11-41fb-ad56-5b4a7d25cf87",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "1666461a-1f26-4950-a207-d512abbf2491"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5409297-fc37-4ae9-9b48-43dc13bbb874",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a4a32c83-8957-4d3d-af66-92a0171f3704"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "722f5f8f-f01a-453e-b897-1c409723a081",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "74c2f037-63ad-4f77-9538-3e300ae9da16"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "472cac0d-bf60-40a1-8fab-438fbfdd20e1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c484b885-fce4-4493-a95c-fc4bfccf5259"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "73cbe8d0-1ad4-4beb-8bd1-9c661226c433",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "7f39f1f4-d686-4cff-92c6-66d8d7142bcf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e5907fcf-ae71-4373-aa2a-ff9fb1f3058e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "93f16352-a360-420a-8c9a-c341f755fb19"
            }
          }
        ]
      },
      {
        "id": "0d6a0fd4-c48b-4463-a357-235e924f91cf",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "b44c9ed2-13b3-401b-ba0d-a1854b357d19",
            "name": "Negative Testing",
            "item": [
              {
                "id": "49a3fd81-531b-4d3b-850e-01ce970f277f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cb4338a5-f5bd-4f05-acb6-5f650afddef1",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6372ba3a-ac35-43af-b275-9e15ba2e0811",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cd31c4c2-b004-4892-9a29-2a0fe851848a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10ee430f-8b70-4662-b86b-8f6af3bbbf05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "26a873bd-b860-46f7-bd4f-0096dd9052d8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "777d173b-e818-4074-b5b2-8acc34e61aed",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "05786e31-c35a-4673-a7fa-6a4dd6bda366"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9d074f19-38aa-4a92-94f6-c75e77b3372d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e6cbd805-69be-4c3f-bebf-aeeec491744c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c92de103-ca7b-42a1-8c1a-b43cf4e7ced6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "cdea6104-1031-4a0e-ba2c-6f408b220265"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1d24bebd-a1fb-4d7a-b453-82ae855c378f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f7c79103-050c-464f-837c-d5d088db2983"
            }
          }
        ]
      },
      {
        "id": "2397f36e-35e6-4cf8-a827-985d572001ed",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "8ec3e9ee-2edb-4a4e-85b5-6b3ce9dfc730",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2ddef9d3-1693-40d4-8fb6-8ece3faf3d95",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ae1787e3-a37f-41ac-9355-4f657c9cb85c",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8ef9f43-947c-49e9-9876-ee0945592971",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2b0b48bf-6a86-4b44-8776-c9241e357d55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3486225c-4594-48af-b695-6bc5e4e4a774",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9a6cccf0-8eea-4285-86be-e14140456670"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4cad472c-0450-4c88-a3fe-df0298144fad",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3dea715b-ea36-4488-a50c-b42913fa4979"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "754742d0-130e-47f1-8f74-1ae62be518dc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e23f2411-f9b6-4125-be52-89f6b7cf558c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0f3add1b-ce56-4644-9137-8cb9ac086be7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f42c3f16-c6b1-4ee5-9a4b-212853177f10"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "58a35ccd-4fb7-4652-9526-668f1bafee62",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d7ee726d-2f54-41dc-8246-b962372fa062"
            }
          }
        ]
      },
      {
        "id": "c6ff9dd5-434e-4c34-a9ff-6434e5e69257",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cd909e86-7db1-4c37-9b65-7b4fa9856142",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "24582175-1f76-43cf-b6bc-87ea99c8c479",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "b4f6c08f-c36c-410b-b065-d1558ccbae17",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6df0d4b2-0e58-4006-a42e-7d7b3c6ec890",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dec2f5e1-1eee-4d83-a0a3-69a0af45116e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 8.894366197183091,
      "responseMin": 3,
      "responseMax": 477,
      "responseSd": 32.383748259873435,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1694046735633,
      "completed": 1694046749692
    },
    "executions": [
      {
        "id": "15853be4-5774-427b-8e5e-44fb9d2d5c72",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "d867d56a-9bb3-4ce0-956a-0a644c480d20",
          "httpRequestId": "82ac9794-8832-4f73-946c-38657104f91c"
        },
        "item": {
          "id": "15853be4-5774-427b-8e5e-44fb9d2d5c72",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "6be957f8-5315-44c6-8923-234524314627",
          "status": "OK",
          "code": 200,
          "responseTime": 76,
          "responseSize": 0
        }
      },
      {
        "id": "c777c04b-f7bc-40f0-ad24-acef2db30eba",
        "cursor": {
          "ref": "fdf244c3-00ed-4874-9ed0-b35019c67675",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "c373c862-8264-46ea-8fae-0bb5f3f88b5e"
        },
        "item": {
          "id": "c777c04b-f7bc-40f0-ad24-acef2db30eba",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "44472283-d29e-4327-83c1-d05a18412ae5",
          "status": "OK",
          "code": 200,
          "responseTime": 11,
          "responseSize": 0
        }
      },
      {
        "id": "e7df0a06-182a-4dd1-8224-7fffaa948947",
        "cursor": {
          "ref": "08629bde-b8ed-49b2-b3a6-5052745c1149",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "3dfead66-2f12-4095-b179-10802a3aee8d"
        },
        "item": {
          "id": "e7df0a06-182a-4dd1-8224-7fffaa948947",
          "name": "did_json"
        },
        "response": {
          "id": "00586b54-a158-454e-b4d4-4505764a8fa1",
          "status": "OK",
          "code": 200,
          "responseTime": 221,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04c4a21d-3c6d-4bd5-ba2c-78055e8168e6",
        "cursor": {
          "ref": "9c5303dd-b18e-4bcb-9f1f-6da82147853f",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "8607fa28-38aa-405c-9e25-57996187109a"
        },
        "item": {
          "id": "04c4a21d-3c6d-4bd5-ba2c-78055e8168e6",
          "name": "did:invalid"
        },
        "response": {
          "id": "9ace5d82-d82a-423e-9af1-554286269b3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04c4a21d-3c6d-4bd5-ba2c-78055e8168e6",
        "cursor": {
          "ref": "9c5303dd-b18e-4bcb-9f1f-6da82147853f",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "8607fa28-38aa-405c-9e25-57996187109a"
        },
        "item": {
          "id": "04c4a21d-3c6d-4bd5-ba2c-78055e8168e6",
          "name": "did:invalid"
        },
        "response": {
          "id": "9ace5d82-d82a-423e-9af1-554286269b3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "788bdded-aedd-4396-9f75-99738b605689",
        "cursor": {
          "ref": "a93d4de6-ffe6-4478-88c6-86cd4df2f4a3",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "83ae6185-c867-4a5a-88b8-1bcf7b27f930"
        },
        "item": {
          "id": "788bdded-aedd-4396-9f75-99738b605689",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "cf399881-90cf-4cab-8a1e-48682e0b1623",
          "status": "Not Found",
          "code": 404,
          "responseTime": 49,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7962457-f606-4e70-9f80-f02dd077fea7",
        "cursor": {
          "ref": "d2b0a5c5-2b1b-4905-8a60-a57d917395f6",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "2793e39a-f711-4862-afe2-cb0e6caee670"
        },
        "item": {
          "id": "e7962457-f606-4e70-9f80-f02dd077fea7",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "8fdb767e-9751-4f44-824d-e625410191a4",
          "status": "Not Found",
          "code": 404,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9f55523-b1a1-4081-85d9-fce02b583086",
        "cursor": {
          "ref": "a1262d63-2526-4020-ac5b-c10e855f4162",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "e9372afb-1277-4d6f-b669-c17ca6264dd0"
        },
        "item": {
          "id": "e9f55523-b1a1-4081-85d9-fce02b583086",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "747ed6c6-b18f-4906-8a52-de2b733550ec",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16e2036c-a1d4-4a22-b775-0adcb1f083ce",
        "cursor": {
          "ref": "ed03aa00-ec2b-4635-bd81-fb85db1bedc2",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "85143879-c37f-412c-8cd7-3fc7e1f7f7bf"
        },
        "item": {
          "id": "16e2036c-a1d4-4a22-b775-0adcb1f083ce",
          "name": "identifiers"
        },
        "response": {
          "id": "0aa2c1d5-a29f-4088-bc31-1f995af8ebb4",
          "status": "OK",
          "code": 200,
          "responseTime": 59,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51d58008-86e4-404e-a3eb-a0d748416a5a",
        "cursor": {
          "ref": "2b987b99-bcd1-4af2-b37d-f2b182ddb894",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "56ba3ebe-9b9e-4264-8c76-8127e1315690"
        },
        "item": {
          "id": "51d58008-86e4-404e-a3eb-a0d748416a5a",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "49a8bb59-c6c1-4510-bbe8-61dbcc7f6652",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecf2992d-ac00-44b0-84bb-56f3d17e06b6",
        "cursor": {
          "ref": "2c47b5a4-ac63-4992-9898-7af095633887",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "0fdc7358-912b-4809-ac11-2a71ddf349c0"
        },
        "item": {
          "id": "ecf2992d-ac00-44b0-84bb-56f3d17e06b6",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "9bfb62df-2fda-4941-a4c5-284048fb4887",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6110ad69-6fb2-45e5-a14d-cd202ff5a13c",
        "cursor": {
          "ref": "6903e34a-ff99-4baf-9e3d-3d845129fe29",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "3d98d6f4-70a7-42fb-a345-8faa349d873c"
        },
        "item": {
          "id": "6110ad69-6fb2-45e5-a14d-cd202ff5a13c",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "71d15e81-cd5d-497e-8d46-69caf2dca793",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "576dc539-02db-437b-ada4-3c825bd290c8",
        "cursor": {
          "ref": "5e89b824-2e7e-47ab-a51b-7a7237acede6",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "30c31a91-7f56-442e-a31b-44925d600243"
        },
        "item": {
          "id": "576dc539-02db-437b-ada4-3c825bd290c8",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "f9b0cbe5-60ca-4187-9353-31c5113d0c4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f1c1241-282f-4502-8384-5e16913d7dd3",
        "cursor": {
          "ref": "7f837fd2-2a7b-4e8a-947b-5c65abc1b8e6",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "cb0e4da1-ffb7-4cc1-8733-ee0be21e94cc"
        },
        "item": {
          "id": "5f1c1241-282f-4502-8384-5e16913d7dd3",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "3e232c73-6c12-4262-8e4a-1d897f1dfda2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "085fc3c5-e69e-4240-a9bb-ab828cf0e04b",
        "cursor": {
          "ref": "f29747d1-be3d-4fc6-b479-bc94acc6266b",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "0dfe04c6-4c18-4887-a101-27a40e0b19be"
        },
        "item": {
          "id": "085fc3c5-e69e-4240-a9bb-ab828cf0e04b",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "aaaae600-8421-4bb1-b0e1-ac0e38183593",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e554bb8-80a4-466c-8310-dadd42935ab2",
        "cursor": {
          "ref": "1fcb8033-7fbe-478f-bf98-958558b2d012",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "d62eff58-2e03-4d78-8ca2-f66232008605"
        },
        "item": {
          "id": "7e554bb8-80a4-466c-8310-dadd42935ab2",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "a824ccff-87d1-4221-af10-0e6f205492a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fde923bc-3685-4781-ba00-c5d9b0c85653",
        "cursor": {
          "ref": "de852a6d-e7e9-4b96-a394-8acadd0b4b4a",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "dc6e3909-c8b8-442c-a418-d2f9bc2c8600"
        },
        "item": {
          "id": "fde923bc-3685-4781-ba00-c5d9b0c85653",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "139e32ac-9d34-4bee-928d-6fec96ff8658",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3e5b5b0-dec0-4c37-92f9-a513926b82e7",
        "cursor": {
          "ref": "fd2fb443-fc75-4e89-b20f-4982a71df852",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "44ac40e6-d1a6-4037-bcc9-a12a3fa27ebf"
        },
        "item": {
          "id": "d3e5b5b0-dec0-4c37-92f9-a513926b82e7",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "911d5a31-9c2b-48d9-90cf-e5db49e0a58d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60d37456-2217-48ad-b80f-91494e542aff",
        "cursor": {
          "ref": "7785fbba-d85d-457d-a7e5-c631cace3b02",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "df3712bd-a5cc-4779-8c00-7dd0173237c5"
        },
        "item": {
          "id": "60d37456-2217-48ad-b80f-91494e542aff",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "e3010bd8-bbd7-40b4-809f-275ce441658c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbeb90c7-65fa-4802-aa16-7860372f9c5a",
        "cursor": {
          "ref": "703b8429-7985-49d8-bbcc-261f474f8ab6",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "4fe8e646-61e9-4fb9-b614-79efc4e2a415"
        },
        "item": {
          "id": "fbeb90c7-65fa-4802-aa16-7860372f9c5a",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "e64ae8e9-0415-47c4-82f4-ad88b42c69bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3165e1c2-955e-4827-a8ae-15fb05290864",
        "cursor": {
          "ref": "fab0c4da-c65a-406a-9ce4-36bf412d88f4",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "17eb389c-4733-40d5-b2d0-7c764dfb645f"
        },
        "item": {
          "id": "3165e1c2-955e-4827-a8ae-15fb05290864",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "f576c9e7-aa34-4d9b-bb21-d00f8e08f2f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e698ea3a-c1ba-481b-a01c-9ed4ccfbc835",
        "cursor": {
          "ref": "15547649-4399-45ac-b27a-6f7cd2c62ce8",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "59a6b3e7-2c0a-43df-abc3-a6d6349b1236"
        },
        "item": {
          "id": "e698ea3a-c1ba-481b-a01c-9ed4ccfbc835",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "994a3d08-69a1-47b0-9b19-227a9fcb1418",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81ffe771-a994-4baf-a71b-205853f55030",
        "cursor": {
          "ref": "a032cdf9-2eda-4ad6-9ea3-510cd9140abf",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "aaede9d1-0450-4214-a6c3-c8d79fa23117"
        },
        "item": {
          "id": "81ffe771-a994-4baf-a71b-205853f55030",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "eb9a9c22-f55a-449f-b4d8-487ff172dea2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0177959e-765e-49f0-bc9f-54a89eb7cc97",
        "cursor": {
          "ref": "dbb0aecd-9876-44f6-851f-625ea2275d8a",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "e73de822-8936-4897-a941-b06ed3511a09"
        },
        "item": {
          "id": "0177959e-765e-49f0-bc9f-54a89eb7cc97",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "f4df5a14-bc3c-4c3f-ae26-5f611d25d2ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48579f11-7339-4be4-87b0-5397bc6bbf4f",
        "cursor": {
          "ref": "b4d6d082-8fd0-4097-8358-1ef79d116d2c",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "845c6f72-f948-4a40-b79a-d55f8bf854c7"
        },
        "item": {
          "id": "48579f11-7339-4be4-87b0-5397bc6bbf4f",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "549d5fb4-263f-468b-99d1-d83b711b9066",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6b84ae6-9c3d-4c66-b801-ca6c0d6164b1",
        "cursor": {
          "ref": "3bef0ed5-e387-4885-9b51-73ff196fc3fe",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "1cf06533-131e-47b1-b9e8-b03247ce0de6"
        },
        "item": {
          "id": "b6b84ae6-9c3d-4c66-b801-ca6c0d6164b1",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "d2411bb7-87ec-44c9-8092-133727ce151b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bd4d663-5a0f-4505-b504-cf79075b356e",
        "cursor": {
          "ref": "c2ae8eff-20c4-43a3-8878-0d858523e269",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "9f3ec426-30c6-4516-b8da-fc284a13ad6c"
        },
        "item": {
          "id": "8bd4d663-5a0f-4505-b504-cf79075b356e",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "5c30dcd9-e3e3-4a3a-b272-9001a8a6f74c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79f70168-a467-490c-b17e-da496b4e7dfa",
        "cursor": {
          "ref": "8a4b2c89-f5b5-4796-9dac-25af87e3c48c",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "3c556926-c087-4879-9e7e-320ae92c54c5"
        },
        "item": {
          "id": "79f70168-a467-490c-b17e-da496b4e7dfa",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "fa3af006-3321-406e-9757-92d34e4915f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a06cdcb-ac98-488d-acac-f4e42701c476",
        "cursor": {
          "ref": "ad112805-a5ad-44e3-912e-49bc5236a4a9",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "770a4e8f-090c-4237-ae80-03e8f9c85a4c"
        },
        "item": {
          "id": "5a06cdcb-ac98-488d-acac-f4e42701c476",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "61d622e9-429e-4924-b07f-da4d3926f820",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2792ca9e-7521-404a-8c90-bb02e214a953",
        "cursor": {
          "ref": "3df484c9-e3d1-471e-bd85-cde9443048e4",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "df13132a-f4df-4a01-b47d-febc35fe55f6"
        },
        "item": {
          "id": "2792ca9e-7521-404a-8c90-bb02e214a953",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "14e08935-fa6b-4bce-82be-17b348a8e4a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "633b9201-56c7-4114-b572-e2f5a8f7e1a6",
        "cursor": {
          "ref": "f34ad007-4468-4511-967a-61f0d341c74c",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "f1cba14b-1c0a-4082-9bcd-12819fc71417"
        },
        "item": {
          "id": "633b9201-56c7-4114-b572-e2f5a8f7e1a6",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "8f132a46-e9d2-40d5-be89-b749f7337b47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07caec2f-dd40-4fdd-8dff-47b8f50bf031",
        "cursor": {
          "ref": "6c7df9df-6c5a-4b1d-bb0b-cd7a762d3d3f",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "66b7cfd6-3cb3-4d33-83bf-6077bb4b1a21"
        },
        "item": {
          "id": "07caec2f-dd40-4fdd-8dff-47b8f50bf031",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "fcffe050-21f3-4b39-8165-6fdb81f75063",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eab20eb3-4e24-427a-aad6-cf4adbeb5642",
        "cursor": {
          "ref": "69210d02-c5d0-4852-bff3-05ae280cdbb4",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "ad5b0cf6-b9fe-47c4-abcd-cc88ef0473ba"
        },
        "item": {
          "id": "eab20eb3-4e24-427a-aad6-cf4adbeb5642",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "1c886ea6-20bc-478a-8748-c62bb53bb836",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad59e33e-f3c6-48bc-a791-4ed2ba6a4f65",
        "cursor": {
          "ref": "7d7e7810-6bb0-4228-8a6a-0ecfee52ab4a",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "9c105807-74c0-4de2-9e02-87f338b3cf29"
        },
        "item": {
          "id": "ad59e33e-f3c6-48bc-a791-4ed2ba6a4f65",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "f7a79930-059f-404e-ac59-cafdbb9ac618",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbdb7829-3ac4-4bfd-8155-95d19d56e072",
        "cursor": {
          "ref": "043b3ea4-f308-4f8b-813c-8c3f78057257",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "009ed22f-765e-4a52-b661-ddd4134f6279"
        },
        "item": {
          "id": "bbdb7829-3ac4-4bfd-8155-95d19d56e072",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "f51d547b-5dd4-4ba7-bf71-c20a74d4b5ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60057737-78f8-4ba6-bb14-7aff59bb7d91",
        "cursor": {
          "ref": "335e6307-b93d-443b-976c-5802a6e0e883",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "2cab76a0-d3ea-48cf-8262-58f770282443"
        },
        "item": {
          "id": "60057737-78f8-4ba6-bb14-7aff59bb7d91",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "8810437f-d4b4-4735-95e0-ff8c6a723193",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9149a94a-1b22-4754-bd26-648890f91b87",
        "cursor": {
          "ref": "7d9cf5f8-137c-478e-8d65-bc7789855baa",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "cdff4161-916f-40c0-8d98-1a9f5434cf5d"
        },
        "item": {
          "id": "9149a94a-1b22-4754-bd26-648890f91b87",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "31117047-ccb4-4819-a52d-48b5fa764cb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7585fc92-4b97-4e43-a6a1-733347c8a00d",
        "cursor": {
          "ref": "9c4398a1-1bec-401e-af57-ed2ea7f3bc9e",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "80dffc05-365f-4031-b0da-d00cd18dc6b8"
        },
        "item": {
          "id": "7585fc92-4b97-4e43-a6a1-733347c8a00d",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "855276e7-7c6d-4745-bdcb-f666411e51b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b3538b7-33a9-49ec-bfa0-1fb7ba08b43f",
        "cursor": {
          "ref": "2c01d8ee-d38b-4532-8309-fa6ece16b55e",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "7eaef2f0-0c0f-410f-9fb7-1f0d26e5ebab"
        },
        "item": {
          "id": "8b3538b7-33a9-49ec-bfa0-1fb7ba08b43f",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "0b8dfa64-5f94-4600-ad92-b6051e30d04c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10d06b94-155c-49dd-8d0b-d7a4647e4851",
        "cursor": {
          "ref": "35f849d8-5d80-4d95-aaf4-ea639331bcdf",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "52f64bc7-3941-4b0b-b875-b8d8cd954ccb"
        },
        "item": {
          "id": "10d06b94-155c-49dd-8d0b-d7a4647e4851",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "91fdc97c-dc8c-4291-84b7-f9be768b1df4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1faa1ec-3930-40b2-ac3f-b0648a8de650",
        "cursor": {
          "ref": "004e2291-9871-4cdc-8179-971e0f1ccbb0",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "47084872-809d-40a7-b006-ee4d24d98871"
        },
        "item": {
          "id": "b1faa1ec-3930-40b2-ac3f-b0648a8de650",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "5af32e41-7de3-426a-80bd-15f5c4fad4b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7479828c-0117-444c-b1f9-2433a7f897ae",
        "cursor": {
          "ref": "97789f0d-bfaa-4a6a-946d-65f843a474b1",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "4f17a196-7c7a-4ebb-ae13-035b2dc91bec"
        },
        "item": {
          "id": "7479828c-0117-444c-b1f9-2433a7f897ae",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "8d5e2812-33c6-4ada-815c-8e55131e62bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80dd098f-a61f-407e-aae2-34f000f12f74",
        "cursor": {
          "ref": "b6c48c1e-35ed-4ede-bdd2-c1e6452c0d52",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "4b492600-b19f-48b5-b041-2c1004159c5c"
        },
        "item": {
          "id": "80dd098f-a61f-407e-aae2-34f000f12f74",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "1882f621-83e2-4651-be99-99fba79f69f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a88daa5e-5127-4499-a320-7c95471040b7",
        "cursor": {
          "ref": "ea9e250e-d1f3-40e9-9bce-2710501b6747",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "72b23c3d-c3b2-4f13-a976-8f686062682d"
        },
        "item": {
          "id": "a88daa5e-5127-4499-a320-7c95471040b7",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "a6865a3d-ddf1-4a12-9482-33ac40100cd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d344e1b-e8b6-4ad1-8e0a-f1ae0e74fb4c",
        "cursor": {
          "ref": "24f0a507-cd09-4343-b747-bf8423a2a193",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "7b799170-06f8-474a-943f-7f25effa525f"
        },
        "item": {
          "id": "7d344e1b-e8b6-4ad1-8e0a-f1ae0e74fb4c",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "0c883651-98e5-4599-b796-322af1fe9588",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 26,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb171e9d-f0b9-4f0c-8cf7-ad2f14238798",
        "cursor": {
          "ref": "0841f2a9-59de-43ef-a085-f05e03addde6",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "3abbdd84-90f3-4e86-9567-cd296e2ca541"
        },
        "item": {
          "id": "bb171e9d-f0b9-4f0c-8cf7-ad2f14238798",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "eb65bb83-cf57-47ec-9899-a13c4fae5423",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e49d2d47-c8e9-47b0-aa97-e42bf36b2f7c",
        "cursor": {
          "ref": "bdfc9428-ea4e-4ef7-a51d-428b7e5afa15",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "681ac148-d473-4fce-8091-8021e6314a1f"
        },
        "item": {
          "id": "e49d2d47-c8e9-47b0-aa97-e42bf36b2f7c",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "63e7dca2-aee6-4757-8716-164726f0e069",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f7cebaf-1c14-4dd9-af74-3740f03939fe",
        "cursor": {
          "ref": "1c82a18b-46a5-4f4b-8679-7c3dde08ab0b",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "33930989-7fde-48fe-bca1-96f805f51c9b"
        },
        "item": {
          "id": "0f7cebaf-1c14-4dd9-af74-3740f03939fe",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "bb4d6b9a-a220-450d-a88f-c91999a5a791",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a293c4d5-6688-4bf7-b311-5ed10bc37bf9",
        "cursor": {
          "ref": "e28d3af8-e8f5-443e-a6f0-28c07b99addc",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "3f27f39f-853b-4544-b2c6-0b4a04a4eaa9"
        },
        "item": {
          "id": "a293c4d5-6688-4bf7-b311-5ed10bc37bf9",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "3f21e478-3728-42f0-ba46-7b21ce726496",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4be83f07-e8f5-4d7e-89d6-2d2edea0f668",
        "cursor": {
          "ref": "644b728f-51f1-4ee6-a0fd-365414a99d70",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "ff7ebe5b-87c6-4f37-ac85-f91353487e89"
        },
        "item": {
          "id": "4be83f07-e8f5-4d7e-89d6-2d2edea0f668",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "c547846a-cce7-4a8c-930e-7f786896304f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89161f0a-b941-45ed-925b-15bc881f46a3",
        "cursor": {
          "ref": "9acc2cba-2b33-4e42-ac72-f7f7e8631bd1",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "c52e0aac-06ac-4aaf-904b-2804c86d9cd4"
        },
        "item": {
          "id": "89161f0a-b941-45ed-925b-15bc881f46a3",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "f5e008c9-2fea-416e-bd81-c028273bc94a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3f57aa0-9715-4a1d-b9ea-bda44306d6c6",
        "cursor": {
          "ref": "37c47ae5-f23b-4fc8-a355-0dad32def122",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "13c7fdd2-f2e9-4311-a015-9aace33eb07c"
        },
        "item": {
          "id": "f3f57aa0-9715-4a1d-b9ea-bda44306d6c6",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "7f7dda17-b404-458a-a948-5803a0882da6",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 17,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e308a6f2-7bfe-4f62-813a-45df3864d947",
        "cursor": {
          "ref": "8ffa5941-b33b-4586-803f-51663d328112",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "2d483274-7f4e-4c1b-a403-f061b074d528"
        },
        "item": {
          "id": "e308a6f2-7bfe-4f62-813a-45df3864d947",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "a9700f03-ff06-4f28-a897-3e17574fc4dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf3bafce-9a3e-4f12-9050-76eb3f6be3ea",
        "cursor": {
          "ref": "17ec2be8-54fc-446d-84e3-e44195e0cd57",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "8bb2b243-6a6b-4c52-b346-d019636204d0"
        },
        "item": {
          "id": "cf3bafce-9a3e-4f12-9050-76eb3f6be3ea",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "3f510882-ee68-4719-ab05-47c76260eaf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0d4f9fe-c841-4edc-b32d-2e9fa4585d2f",
        "cursor": {
          "ref": "c1081df9-4d95-4293-b2bb-bef08d8c1163",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "39974a57-3229-46da-a4a4-164cfb68fb14"
        },
        "item": {
          "id": "b0d4f9fe-c841-4edc-b32d-2e9fa4585d2f",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "ec116c32-116a-4c93-9a58-7612a3ac2b1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f0f35e5-9cd4-420f-9c99-aa86ff3c4819",
        "cursor": {
          "ref": "52143065-cd76-449c-86d6-50cd6a0e8bc4",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "ed1511ab-2045-417d-9feb-754d9a1ce84e"
        },
        "item": {
          "id": "3f0f35e5-9cd4-420f-9c99-aa86ff3c4819",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "45963c07-0822-4d6b-b518-e87a960be7e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bd55d13-0424-45e3-98ff-82d9dbde6d84",
        "cursor": {
          "ref": "fc28a1b3-60ca-4217-bf94-47c90a6c6a3b",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "3d194b6c-a61a-41a3-9a67-be9e9416956a"
        },
        "item": {
          "id": "1bd55d13-0424-45e3-98ff-82d9dbde6d84",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "b8e1fe87-83ef-4371-8ca9-5f806833a90f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62257496-014e-4597-9f30-c9ab723c145e",
        "cursor": {
          "ref": "bae305de-a7dc-4af3-ac4e-ef54bd83f67e",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "b1676684-704c-453c-9696-3066c0b14937"
        },
        "item": {
          "id": "62257496-014e-4597-9f30-c9ab723c145e",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "65662875-a33a-49b4-b68b-d558426e627a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d4601cf-ab82-45e3-83e5-031c447df4b0",
        "cursor": {
          "ref": "2e697b9a-1b75-4df9-9c41-fa57690b1b16",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "5ed75b17-0a6e-4faa-8bed-1b116b714386"
        },
        "item": {
          "id": "5d4601cf-ab82-45e3-83e5-031c447df4b0",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "fd17742e-b8c2-4ef1-8394-1c1c812948e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9940ec8-774f-4f92-8e15-fecb34187613",
        "cursor": {
          "ref": "004aaafa-e668-4715-af88-2819edebbf2b",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "906999fc-ca4a-4abe-9a68-a3bd46a8a4b0"
        },
        "item": {
          "id": "d9940ec8-774f-4f92-8e15-fecb34187613",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "498872b3-9195-4a8d-b140-c2e200c187c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "925a61ae-3ec3-4dc7-b666-0bb4dc7fd184",
        "cursor": {
          "ref": "07d00de3-4a3c-41d3-ad39-ca0a230522c9",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "70f432b5-8d3a-4626-9116-2f30c5f9722f"
        },
        "item": {
          "id": "925a61ae-3ec3-4dc7-b666-0bb4dc7fd184",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "593b6cfa-5107-4fbf-aa06-aa4232d9fdba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6036a03a-065f-4997-a4cb-8d4043e67d89",
        "cursor": {
          "ref": "5919c90f-0a04-4f2d-ac4f-24fe49fde33d",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "40d9744a-dd54-4029-8b1a-d3eda6be11bd"
        },
        "item": {
          "id": "6036a03a-065f-4997-a4cb-8d4043e67d89",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "432b4efd-47ad-4c9a-a41a-876fc5cc5477",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20df57ab-89bd-4f46-9d9d-b3c4488f91f0",
        "cursor": {
          "ref": "ebcca87e-c21b-4fb2-9e05-c48701e708bc",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "6fd65c0b-88d8-4f4d-8586-41dad1ad2890"
        },
        "item": {
          "id": "20df57ab-89bd-4f46-9d9d-b3c4488f91f0",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "af3a1aa6-3145-4860-8bff-bd1fddcf9d48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6c00ee3-75fe-4a53-900a-79317a824e12",
        "cursor": {
          "ref": "5e5c108a-749b-429a-a700-74422be51e3e",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "245f1f46-9411-43d1-836b-4b3638cbe4d4"
        },
        "item": {
          "id": "e6c00ee3-75fe-4a53-900a-79317a824e12",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "0910a785-66a6-463c-ace1-46341b8116e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "953e81fa-e3b8-4a31-8890-e5a016e53511",
        "cursor": {
          "ref": "79c2fa89-b158-4147-a644-ad2183465e06",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "9980a90a-6004-4f8b-8a09-701528dca5a8"
        },
        "item": {
          "id": "953e81fa-e3b8-4a31-8890-e5a016e53511",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "987ef3f9-b2d5-41a2-961f-5146f3399181",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a53b8640-dd83-416b-8545-11cd73b3d63e",
        "cursor": {
          "ref": "59ad5d28-78ab-4c23-9330-f9c6e9003ec8",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "25577990-465c-4536-a064-b9af76c094db"
        },
        "item": {
          "id": "a53b8640-dd83-416b-8545-11cd73b3d63e",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "8aad087a-00c6-41ae-8702-deecfc7be8fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33d64736-61b2-4ec4-a21f-058268399c82",
        "cursor": {
          "ref": "5f4f413f-1a76-4146-b451-32c25efbfabe",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "2712f1ed-a908-4898-9d6d-3be9d4b43afb"
        },
        "item": {
          "id": "33d64736-61b2-4ec4-a21f-058268399c82",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "15158665-86c8-4d66-9328-7420139aa619",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d532cea-8336-4832-9b1f-c67e8dc9d7c9",
        "cursor": {
          "ref": "b363bc2d-276f-4098-bbfb-f29164265022",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "e5ae8d09-540d-41c7-ae8a-e9e56cdd9326"
        },
        "item": {
          "id": "6d532cea-8336-4832-9b1f-c67e8dc9d7c9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "5eef950f-716c-4f57-8515-618d416b08ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d23842e8-c88a-43f7-a434-b86b2b103548",
        "cursor": {
          "ref": "73a96bdb-7757-447c-8501-12bd35be9fe8",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "8cb293e3-732f-4803-8f12-7e72cbaf1206"
        },
        "item": {
          "id": "d23842e8-c88a-43f7-a434-b86b2b103548",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "d1488040-bdc0-4624-82bc-4472cc5d9ee3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3863359-feb2-48fc-979b-5883f541b02e",
        "cursor": {
          "ref": "982b5323-7aea-4a73-88dc-5c4d38d4a07a",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "6b96d87f-d977-40c6-bb36-4122c9a6eb55"
        },
        "item": {
          "id": "a3863359-feb2-48fc-979b-5883f541b02e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "ff2141b0-5110-49ef-8169-1e9502f7fa99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3387fbe0-897a-4670-b127-ed6a1f64e5d1",
        "cursor": {
          "ref": "7c57b668-5e3e-4773-ac0c-9e11eb297f89",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "b29fa225-c131-45cf-a1e9-8ae65c4d1677"
        },
        "item": {
          "id": "3387fbe0-897a-4670-b127-ed6a1f64e5d1",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "d7e85e56-f3f0-40ac-9d0f-d146ca44fbf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4034a9e6-85e5-48be-903e-c57701a26f9e",
        "cursor": {
          "ref": "d0dcecae-d541-4a1e-9b66-86def7f50392",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "17c2663c-2d45-49c3-ab43-9ce75bcad448"
        },
        "item": {
          "id": "4034a9e6-85e5-48be-903e-c57701a26f9e",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "e3ca4c6c-d881-47d3-9c1c-975e2d003170",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f65f135a-805e-4ec6-91e7-1fb612d73fad",
        "cursor": {
          "ref": "40cf4fc6-761e-46ce-8311-78ecd9956ce1",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "f9d41032-641a-4a43-8e70-842918ce8f0a"
        },
        "item": {
          "id": "f65f135a-805e-4ec6-91e7-1fb612d73fad",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "d5564a3c-818e-4bf6-91df-97d4159350cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6f21afb-ed9b-4c3f-a2e8-5d535ee049a2",
        "cursor": {
          "ref": "77558492-a73e-453a-9570-ea7225ae508f",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "86b59935-f25a-47eb-a7b0-a87385922842"
        },
        "item": {
          "id": "f6f21afb-ed9b-4c3f-a2e8-5d535ee049a2",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "b8c0401b-d34c-4254-8e41-c7f737dff307",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "430dd7ca-dc71-4843-894d-a4d34206815c",
        "cursor": {
          "ref": "f8ef8e3c-2699-4d9e-a332-84999b27bb29",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "1a386c59-99d7-4dca-8e64-32df63628420"
        },
        "item": {
          "id": "430dd7ca-dc71-4843-894d-a4d34206815c",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "b0514f34-f68e-497f-ba56-b966fb94fc27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "093cc1a1-09bf-443e-bfc4-a73b0409fa72",
        "cursor": {
          "ref": "615b9536-d349-4e3e-aab1-1406b8a7398f",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "09a07bf7-c50b-40bd-973a-e842e9746269"
        },
        "item": {
          "id": "093cc1a1-09bf-443e-bfc4-a73b0409fa72",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "7e87f03f-b49e-4af7-83bf-547bafe8e93f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfdf9e30-638c-4ec2-a01e-36da1879570f",
        "cursor": {
          "ref": "0a2f030e-112b-4723-a63c-11b946e97317",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "f97d4157-fe96-4603-add0-12c476ff9e29"
        },
        "item": {
          "id": "cfdf9e30-638c-4ec2-a01e-36da1879570f",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "abbf53a5-d242-4efa-a932-5739a7a52179",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b26205fe-8c13-453b-a04b-b6c1e00fa59b",
        "cursor": {
          "ref": "86ac94fe-bcb3-43f3-b0b2-b52822d63c52",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "065bea8e-40d7-4066-b2dd-baef1a61d4db"
        },
        "item": {
          "id": "b26205fe-8c13-453b-a04b-b6c1e00fa59b",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "0370422a-4043-4aa2-902b-903de59f4960",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abccafd6-2c2a-4193-90f6-f6cea35ee9de",
        "cursor": {
          "ref": "f6e21d84-d947-4af7-93f6-b5503fd4cbc4",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "894f52a2-f78f-486d-957d-b4be8a0c5fd9"
        },
        "item": {
          "id": "abccafd6-2c2a-4193-90f6-f6cea35ee9de",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "b160f44f-bb4e-45a4-af0b-c5ad526dfda1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cda9f3b-e1cb-41c2-b3e7-0c1061c455b7",
        "cursor": {
          "ref": "e1570526-eb01-4f7a-9d41-d75c3ad2df65",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "81fb3353-cb75-44ee-b44b-935135f3e306"
        },
        "item": {
          "id": "0cda9f3b-e1cb-41c2-b3e7-0c1061c455b7",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "f94918af-e9f1-49e0-99e8-7cd870a5b6a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fce5f64-7e8a-4204-91e9-4c78f78c88a2",
        "cursor": {
          "ref": "cb405277-7505-4ce6-9688-03f412c5b1ea",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "7ac60f79-fa6a-4d8f-ba96-6baa29dd0c7b"
        },
        "item": {
          "id": "5fce5f64-7e8a-4204-91e9-4c78f78c88a2",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "09c16644-c041-4544-98cc-cacf6ecf1830",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b193ed1d-e94a-40f5-8548-5d10a108db84",
        "cursor": {
          "ref": "10cd86f5-aeef-411f-8eba-cae1f5e8f4af",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "f8b3be60-e2a3-45bb-8bee-787362a8447f"
        },
        "item": {
          "id": "b193ed1d-e94a-40f5-8548-5d10a108db84",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "da4aea2a-41df-4a1e-951f-1d52bed97b02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df340357-4750-4e81-8637-497d14245c8b",
        "cursor": {
          "ref": "4cc1219b-af45-4789-82e3-bd8ac34b2604",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "9fd0f3c6-46c6-4c90-be22-ac0366266312"
        },
        "item": {
          "id": "df340357-4750-4e81-8637-497d14245c8b",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "b45becde-5d03-489e-b64c-531b11022861",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d549b80a-0b8c-4b89-8c9f-34e42c39aa28",
        "cursor": {
          "ref": "69c89817-25d1-45da-a0a6-e7ff3e450dc0",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "cc7be267-9909-432d-9043-62085e88a2f6"
        },
        "item": {
          "id": "d549b80a-0b8c-4b89-8c9f-34e42c39aa28",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "d024631f-87a5-4a6a-a535-cc6078f72d56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b56737c7-259d-4fa4-a4fb-323251319e7a",
        "cursor": {
          "ref": "1f2b159a-bc86-4ae0-8228-5c1ff4f57958",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "c1c92dc0-f11a-484c-9cea-4c3b8fe88895"
        },
        "item": {
          "id": "b56737c7-259d-4fa4-a4fb-323251319e7a",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "7dc87f66-4cc0-4410-b8d8-08d1390bae6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1add5905-5eff-42c1-b52d-a26e9e2329ba",
        "cursor": {
          "ref": "046d6e26-ba79-4580-8888-f94c9e8d626a",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "1cc5e9e7-1f43-4146-8498-46013e19aed4"
        },
        "item": {
          "id": "1add5905-5eff-42c1-b52d-a26e9e2329ba",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "e7e2f162-5cfa-450d-b93f-f36428ca90d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d80f9e3b-5423-4b5e-8a7f-9cf9d818a04d",
        "cursor": {
          "ref": "4fbdd5ce-3e8d-4d84-bab5-8b3d80070722",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "4d0050b8-3eab-487c-9ad5-262451413fee"
        },
        "item": {
          "id": "d80f9e3b-5423-4b5e-8a7f-9cf9d818a04d",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "d712810e-7bab-4e15-be41-91398a6b27f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82b170a3-a6c0-412e-b698-33be25791962",
        "cursor": {
          "ref": "dce1bf22-6a4c-465f-bf63-b73c934cae13",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "ef805b97-2b0c-4c91-9bef-294525d7dc2d"
        },
        "item": {
          "id": "82b170a3-a6c0-412e-b698-33be25791962",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "1b8fcc23-fd2b-4be1-8cee-385b995bcd1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "341f0011-b4df-4883-be50-b32522460160",
        "cursor": {
          "ref": "438b56eb-a955-4fc0-8516-d0f9488b10bb",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "ebdc8d17-0c22-4857-84ea-1f907f79a57a"
        },
        "item": {
          "id": "341f0011-b4df-4883-be50-b32522460160",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "9d82e964-0d98-4e11-844a-90a3beef57f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3726390a-080d-4f19-8ad0-51db7c102e03",
        "cursor": {
          "ref": "540a09d9-1fc7-4964-8a23-381218afd9e0",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "995d6bdb-7c32-468c-81b5-6cbb68200e19"
        },
        "item": {
          "id": "3726390a-080d-4f19-8ad0-51db7c102e03",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "aeed7c4b-3780-49f1-89c5-3580a910a03b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12ee7120-47cd-4872-b381-c1adbc38e58c",
        "cursor": {
          "ref": "5426c763-7d68-4391-abde-95e5ae4daf53",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "19c10ae3-8102-4b33-a3c2-bf524b30c5a7"
        },
        "item": {
          "id": "12ee7120-47cd-4872-b381-c1adbc38e58c",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "dcff879d-e634-46ce-8c6d-01b40d45f17a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62ec2f02-fdc5-42e9-9de7-78b9d913897c",
        "cursor": {
          "ref": "0fcc93a0-d97f-4c3d-81f9-c8085005fee3",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "787b8c71-0a5b-438d-9bd8-dadc2f953ef1"
        },
        "item": {
          "id": "62ec2f02-fdc5-42e9-9de7-78b9d913897c",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "50546cfb-d1c0-4719-877e-152c052bce2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c209548-9df3-4270-b07a-0ca72bf12018",
        "cursor": {
          "ref": "44f58c2f-dbd9-44a6-ac3d-7f38085e9bd8",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "a7eef50c-15a8-4ed5-b721-41a42aac2c8f"
        },
        "item": {
          "id": "4c209548-9df3-4270-b07a-0ca72bf12018",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "61c8309f-0531-4ead-8a58-81b62d7b3ffc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ec406d0-dbd4-408d-a4d3-3e55eac2c849",
        "cursor": {
          "ref": "37eda003-ec8d-4d89-b26a-9a9ae6fcb5d3",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "5eb3c7bf-0245-4a81-8439-e00110784d7c"
        },
        "item": {
          "id": "4ec406d0-dbd4-408d-a4d3-3e55eac2c849",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "56a64b95-4778-4fad-88c3-c8eb3ecacad2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "275f3e3a-e990-438b-ba70-05b20f530c5e",
        "cursor": {
          "ref": "40edb85e-b1b7-4fe2-bd90-48988937a606",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "c4b4cc19-a919-4a96-b096-cbfdafb59b9d"
        },
        "item": {
          "id": "275f3e3a-e990-438b-ba70-05b20f530c5e",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "5b9890e5-58b1-4bbb-84f0-746ae1e4c682",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01d08b91-902a-43c2-b9d2-e3f049dc04e7",
        "cursor": {
          "ref": "4f4727fe-df27-41bb-b31e-c9a00b2aa3ce",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "675e1a3d-f948-49e1-8efa-587a45913a33"
        },
        "item": {
          "id": "01d08b91-902a-43c2-b9d2-e3f049dc04e7",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "d7c7af03-6689-477d-b0d4-437d1e93deb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1a4a8c4-81e0-47d2-87e3-5bbea710e33c",
        "cursor": {
          "ref": "03441bdc-e592-4709-9167-d8045805fa21",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "a28135dd-31a4-443f-87b7-c29ffbf3d0b4"
        },
        "item": {
          "id": "e1a4a8c4-81e0-47d2-87e3-5bbea710e33c",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "4d7c41f4-7fc0-4891-b0b9-f2beb4929797",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79f14a78-d3de-47d4-a3c5-b343304723b3",
        "cursor": {
          "ref": "e632168f-fddb-4f91-85a0-3c0871c2a0a8",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "f0f5caa4-1adb-4450-a7fc-d76fe23f87f8"
        },
        "item": {
          "id": "79f14a78-d3de-47d4-a3c5-b343304723b3",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "64deefa2-ccbc-4b0d-a71f-e8de42b636f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bed086ea-e67f-4236-97a9-ec18bfe14bf7",
        "cursor": {
          "ref": "bbc9a89e-2215-46a7-b069-1a47b5ce462d",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "9042ebb8-b755-4ba3-8363-163ea3b3ae8f"
        },
        "item": {
          "id": "bed086ea-e67f-4236-97a9-ec18bfe14bf7",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "344e76f4-ad00-432e-9776-b1e5daa9d8dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abb04352-7e27-448b-80bd-e8f021f293cf",
        "cursor": {
          "ref": "67bcfa39-3b41-4fd7-8806-4d4f8c1fc377",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "02f6801a-dfbd-4d28-b196-f1d8ba89a198"
        },
        "item": {
          "id": "abb04352-7e27-448b-80bd-e8f021f293cf",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "90649cfb-2d86-43f7-96b0-255a96ceb919",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9ded0b3-22f6-48f8-a182-700bc3d8e338",
        "cursor": {
          "ref": "652dbe2a-7e21-4852-8f2f-74ff7524c0f2",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "5e533112-98d3-41c9-b22a-30afc6fae15d"
        },
        "item": {
          "id": "d9ded0b3-22f6-48f8-a182-700bc3d8e338",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "34882da5-821f-466d-9933-db8f2df019de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "788f7202-06c3-4cc0-b0e7-a95153d0cf59",
        "cursor": {
          "ref": "13e5f1de-ec54-4ff4-b3fb-72a3543ed2f2",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "9178bb7d-bbe3-4e23-8c65-98ad55f1c925"
        },
        "item": {
          "id": "788f7202-06c3-4cc0-b0e7-a95153d0cf59",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "ae64390a-ed11-4b9f-b3c2-98cdd2db9e81",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c5101cf-9e25-43f8-b8d0-2d5ef3cc00ae",
        "cursor": {
          "ref": "d618c0ec-ed83-47f6-84e8-2cf22ade2b7d",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "c44149cc-23c0-4427-a738-54f33aa0ca7c"
        },
        "item": {
          "id": "5c5101cf-9e25-43f8-b8d0-2d5ef3cc00ae",
          "name": "credentials_issue"
        },
        "response": {
          "id": "0dc005f7-68f2-45cb-aafc-f870b5ca23cd",
          "status": "Created",
          "code": 201,
          "responseTime": 39,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "095cb914-11da-4fa8-922c-50f2cb7446fc",
        "cursor": {
          "ref": "e82097bc-3459-40ff-84e0-50d997e8bd80",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "f4ed3f38-ec0e-47d3-81a5-1109e4b34565"
        },
        "item": {
          "id": "095cb914-11da-4fa8-922c-50f2cb7446fc",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "e72b0ab9-d51a-47f0-b95f-085b7a22bf7f",
          "status": "Created",
          "code": 201,
          "responseTime": 61,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "454212dd-b52e-4256-b388-80139b42e709",
        "cursor": {
          "ref": "1d288df3-8838-489e-b6d6-e2191872eaa8",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "ff3c2e3d-c348-4025-8cb0-fa92188ee75f"
        },
        "item": {
          "id": "454212dd-b52e-4256-b388-80139b42e709",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "d47742a0-bec4-4126-8cac-7e2a7b11013b",
          "status": "Created",
          "code": 201,
          "responseTime": 119,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "863d368e-ede0-414e-89fa-99b00247413f",
        "cursor": {
          "ref": "817d36e9-8e6a-424d-aa68-873e92de8c19",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "3a25b45e-72ec-43b8-8153-28887aae5ae0"
        },
        "item": {
          "id": "863d368e-ede0-414e-89fa-99b00247413f",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "e18c3557-97be-46a8-a6c3-464ed64092e7",
          "status": "Created",
          "code": 201,
          "responseTime": 28,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7e56eb2-59c0-493a-b1c7-4d8bc2dd8fe5",
        "cursor": {
          "ref": "7c942d43-9df6-4678-ae13-6a504cb79004",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "22651642-ff5c-49f6-a2ac-c9063676188e"
        },
        "item": {
          "id": "b7e56eb2-59c0-493a-b1c7-4d8bc2dd8fe5",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "ff32e705-a8a9-41e4-b760-6a5e0b32bdd3",
          "status": "Created",
          "code": 201,
          "responseTime": 33,
          "responseSize": 907
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6a88d7d-5291-4136-bb41-fa649d9d3b50",
        "cursor": {
          "ref": "baa031b2-47a4-44da-94a9-bb50a0cc3858",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "e0cc0571-f124-4346-9bef-5dd03daee313"
        },
        "item": {
          "id": "f6a88d7d-5291-4136-bb41-fa649d9d3b50",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "bea4d7f5-2107-4737-927b-5fd2d7cc2c7e",
          "status": "Created",
          "code": 201,
          "responseTime": 27,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b157a97e-c08b-426d-8560-b3deabd389d5",
        "cursor": {
          "ref": "7a7e2671-c690-4bc8-b515-bc6dc5b8d9b5",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "ca0f000a-a01e-4ba4-9be8-ed30e2166a90"
        },
        "item": {
          "id": "b157a97e-c08b-426d-8560-b3deabd389d5",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "43fe51f7-d093-4411-bd26-b6ee9a0d3741",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "658642ee-eb0e-4c68-8c4d-9a35b93cceae",
        "cursor": {
          "ref": "c96d79f0-d623-4223-832d-a97842e5dcaa",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "f0c23e1a-6984-41f8-8ac0-02d4a8877a93"
        },
        "item": {
          "id": "658642ee-eb0e-4c68-8c4d-9a35b93cceae",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "7112e9f3-de7f-4578-b57d-5da581f3de89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1bae406-b157-4345-b8bb-da43deebcffc",
        "cursor": {
          "ref": "0e652683-1803-4096-a3c5-3b2a5d02cf3a",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "004610c3-6d8e-4ebb-bb87-f956fa998b1b"
        },
        "item": {
          "id": "c1bae406-b157-4345-b8bb-da43deebcffc",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "ba214fbe-b591-4547-819a-adc0b241946e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce91a323-03ba-4052-8f0c-f2118d4660a6",
        "cursor": {
          "ref": "0b19d1b2-4296-49ed-8474-80b9dccfb3b6",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "b4b8e41b-1f8e-4f6f-9185-8ed4f879e7c6"
        },
        "item": {
          "id": "ce91a323-03ba-4052-8f0c-f2118d4660a6",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "ec8a5465-6d9c-43b0-8f32-a98c78ba6af2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68791255-1a6e-42ac-840d-d902dee351e3",
        "cursor": {
          "ref": "b580c386-2f88-4a5a-aed3-9b6d084e857e",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "902ed996-f6b2-4941-8879-534062a52cfc"
        },
        "item": {
          "id": "68791255-1a6e-42ac-840d-d902dee351e3",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "4e42e87e-c22d-4dd5-b4e7-c64c08ff4b1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38a1ac79-7740-4145-8101-979ba097b57c",
        "cursor": {
          "ref": "51f953ab-2f98-4aed-bd21-ff52dff31170",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "896cd46a-fcc7-4e8d-b58c-f33296335940"
        },
        "item": {
          "id": "38a1ac79-7740-4145-8101-979ba097b57c",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "66a63d1f-732b-4936-9d41-5e938b5f6908",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fcd2f95-4e0b-4fdf-82ec-713be4cb8bab",
        "cursor": {
          "ref": "60a92b8b-e734-4643-b281-22fd073a9150",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "5367bf55-6a5f-4f43-8321-c5b948c69e9b"
        },
        "item": {
          "id": "8fcd2f95-4e0b-4fdf-82ec-713be4cb8bab",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "232daf0f-0219-4e1f-a0bc-e46c90593475",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71d695c7-abbd-4971-86f6-1e80d71cc1ef",
        "cursor": {
          "ref": "c9f2f669-0a02-4165-807b-e21a96fc81a0",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "17284a57-c26d-4ba1-ba4c-288b62035a65"
        },
        "item": {
          "id": "71d695c7-abbd-4971-86f6-1e80d71cc1ef",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "0329c62c-0f89-4ad8-b167-575c32ae5a1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea858371-1e07-4773-8507-7024a13b4bfa",
        "cursor": {
          "ref": "e2d05625-6ddb-475a-89f9-0a2ec5359716",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "a7c9f36f-fc1c-468b-a27b-e9f9033485b2"
        },
        "item": {
          "id": "ea858371-1e07-4773-8507-7024a13b4bfa",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "99b85ab9-b736-4b3f-addc-ea943da6fcae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b441b37-d8bc-4ec8-b55f-c0f830a9d46c",
        "cursor": {
          "ref": "43945146-5693-47d9-837e-b643a8900ec0",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "794a501f-a595-46e1-8139-284ac92c6aad"
        },
        "item": {
          "id": "0b441b37-d8bc-4ec8-b55f-c0f830a9d46c",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "bf2c08a0-d296-4d89-a3c5-4b63dc7509e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1d54a34-b133-4707-9059-d89bb0bc52bb",
        "cursor": {
          "ref": "72534a81-fd60-4f1a-bece-fb4cbe848718",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "514b5fff-48af-4b4a-8d9a-7c0729872f10"
        },
        "item": {
          "id": "c1d54a34-b133-4707-9059-d89bb0bc52bb",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "9cf26086-ab80-4be5-8bc8-1ee07b0a715e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87db475b-8b19-4ccb-852e-9b12b90f1886",
        "cursor": {
          "ref": "32745419-c073-47c1-9c34-927205d97a7c",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "28d4facd-e121-4d9a-85e7-7fe53768a7c2"
        },
        "item": {
          "id": "87db475b-8b19-4ccb-852e-9b12b90f1886",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "29fc88ea-971e-4107-b26f-c1022d6fe053",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41cf1c11-127b-49cc-b7f8-5b9c55767dfa",
        "cursor": {
          "ref": "80e5db33-3d2b-49cf-8354-46dd8a1a9230",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "bf3ac2ba-c190-40f6-a061-851325b58043"
        },
        "item": {
          "id": "41cf1c11-127b-49cc-b7f8-5b9c55767dfa",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "537a8bb7-cc4c-41c0-915a-a067d7507667",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dbbc857-18ac-4bae-9f7e-4b5904e17f29",
        "cursor": {
          "ref": "15d9ea16-64d9-4ddd-84cf-525ce9aa48da",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "bb3f25b2-11ac-4837-8c81-2867edb58f64"
        },
        "item": {
          "id": "5dbbc857-18ac-4bae-9f7e-4b5904e17f29",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "5f190713-7ea1-46b8-a598-4f5e369c780a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d9e7ba8-712d-480b-bf6b-159b8b2aae9f",
        "cursor": {
          "ref": "d3edbf7d-6af7-4988-9877-8716c11d4f63",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "ac70b455-08b6-41a6-9b9b-2db3fb422867"
        },
        "item": {
          "id": "1d9e7ba8-712d-480b-bf6b-159b8b2aae9f",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "22d6dbd1-ea76-49e8-997d-210cb3faea5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3106242a-8853-48fa-93db-aff8c752d5d8",
        "cursor": {
          "ref": "8672ce1f-7e67-4a2f-9349-788687cd1b02",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "ebf77461-aaa8-4c1a-886a-6c3fa23eb91d"
        },
        "item": {
          "id": "3106242a-8853-48fa-93db-aff8c752d5d8",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "a8f3c93f-ff9c-461f-bce5-b0e563f943a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19da18df-e469-43ed-9394-4d16c50398a4",
        "cursor": {
          "ref": "57965180-9c77-4f48-b19f-974477c21a78",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "a15bebc4-0ce7-457e-a891-32eacf78e853"
        },
        "item": {
          "id": "19da18df-e469-43ed-9394-4d16c50398a4",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "e863ca7c-4dfa-4217-a97f-1b1d83556a76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "225d96d0-4c03-4339-bc75-0d71a4522f34",
        "cursor": {
          "ref": "4386601b-a65a-46e7-9ba9-555a49bee97a",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "17283e0f-45da-44e6-91da-a3f29b957466"
        },
        "item": {
          "id": "225d96d0-4c03-4339-bc75-0d71a4522f34",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "e65a59a1-78bf-4d19-963c-b97d5a4618a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de0b42b9-8929-4f6a-b18b-8caf03b443d6",
        "cursor": {
          "ref": "4f41f2ff-0cd6-476a-b4a4-5da5f78f5175",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "9065b089-7cbf-4044-bcb8-e9ff26e9d2ba"
        },
        "item": {
          "id": "de0b42b9-8929-4f6a-b18b-8caf03b443d6",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "40b01b1c-fa3f-4b76-b3f6-53c1e43a063a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8351d62f-f740-44d1-97a2-ff3b5b6d1e36",
        "cursor": {
          "ref": "21d53971-3032-4922-930e-43d265056394",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "f1ec9ede-4ad7-49ba-a944-bd0ba0ca444f"
        },
        "item": {
          "id": "8351d62f-f740-44d1-97a2-ff3b5b6d1e36",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "3c0a0a69-f905-443f-99cf-0d40c4ed2b29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e69bdddf-3e6c-4ad3-b120-de4bfa12ebe0",
        "cursor": {
          "ref": "1bce3951-32fe-41e2-960d-7f142d4a4813",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "2ddf0b3f-5857-49db-ab2f-f5faa6616987"
        },
        "item": {
          "id": "e69bdddf-3e6c-4ad3-b120-de4bfa12ebe0",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "4a343a17-92a2-4c3c-a753-ac4c37960de8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7be597ee-8b74-41b7-8aa7-c6b154125782",
        "cursor": {
          "ref": "6b130709-eb20-47d5-81e3-b637a26583ea",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "7027e5ce-7336-4569-b431-398331a7ccb3"
        },
        "item": {
          "id": "7be597ee-8b74-41b7-8aa7-c6b154125782",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "9022c231-86ad-4a3a-b842-d93e5cbf6859",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ee384a5-a0ab-4e28-9a72-d8284b9697a8",
        "cursor": {
          "ref": "ed37740b-5595-42db-b81c-2cf8fcf1cc95",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "49728e86-c62d-4c95-91ce-a20af15b892c"
        },
        "item": {
          "id": "4ee384a5-a0ab-4e28-9a72-d8284b9697a8",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "0b179520-45f2-46bc-8bd0-3faa7a471b41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3e56670-f5fd-4685-932b-e2a6b35ada91",
        "cursor": {
          "ref": "eb23e9a1-3c8e-4cb6-9879-959cef572411",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "65f6ed40-4438-4a57-8cd1-1538b0572351"
        },
        "item": {
          "id": "e3e56670-f5fd-4685-932b-e2a6b35ada91",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "0225e39a-6ef2-456b-b810-7d813fbd6ad3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e9f9959-5fec-4e7e-a061-a9f8bc6671ed",
        "cursor": {
          "ref": "d7f64384-bfd3-41be-b6e9-93f329d5b90d",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "d62f0404-b7b8-4481-ac3f-521d5e0eec92"
        },
        "item": {
          "id": "3e9f9959-5fec-4e7e-a061-a9f8bc6671ed",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "23385c00-1a9f-494e-a8bc-7a226063917b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65d2f208-c1e7-44b5-9028-44e042cdb149",
        "cursor": {
          "ref": "da0e3e03-2ad8-4123-9aad-9615938bbff5",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "69c52d09-cedf-43e8-8120-92a9aa1a40d9"
        },
        "item": {
          "id": "65d2f208-c1e7-44b5-9028-44e042cdb149",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "804c49fb-6b9c-4c38-96cb-fa1823f410fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e7f93a6-d00e-4191-9332-033b18eecdd0",
        "cursor": {
          "ref": "759d6d66-5d56-47cc-960a-2e0a53abae92",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "829448c3-7afb-41e8-839f-f6e4720f5c11"
        },
        "item": {
          "id": "3e7f93a6-d00e-4191-9332-033b18eecdd0",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "82fbedc9-4a30-4004-8af3-ec33ab684e53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "144a0b42-f7a8-47ca-9072-d049512ca2b8",
        "cursor": {
          "ref": "363c7fd7-be05-44ca-84b7-dd95eca0afcc",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "1bd686db-2bd3-45f8-955d-df7afcbaf7e8"
        },
        "item": {
          "id": "144a0b42-f7a8-47ca-9072-d049512ca2b8",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "ac37ecce-ddc4-4edf-8dd6-87853967f4d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8432c9d-a049-4fb8-891f-8187e058e922",
        "cursor": {
          "ref": "043dbc74-c4ed-4f4b-b61d-8d12c74e4051",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "cef7e681-662b-4cb3-90e8-d1bdf0ce2ca4"
        },
        "item": {
          "id": "f8432c9d-a049-4fb8-891f-8187e058e922",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "79c026e3-45a5-4373-9717-1929adb750fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55ca136f-5ad5-4a00-8a3b-1c5c368994fa",
        "cursor": {
          "ref": "cfcf9634-78dc-4ff9-b943-6395ac55e093",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "e1751e91-6dac-4350-ad6f-14a04feb8ed6"
        },
        "item": {
          "id": "55ca136f-5ad5-4a00-8a3b-1c5c368994fa",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "7c0852ce-45a2-42ab-ab73-6ecb5f678156",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11b16f0b-26c1-476b-b522-db064b56749c",
        "cursor": {
          "ref": "126f9e9b-bac0-4dd7-a471-6c1978c5de44",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "5c0a53e4-801c-437b-be07-5ed5418ebee6"
        },
        "item": {
          "id": "11b16f0b-26c1-476b-b522-db064b56749c",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "97d0de72-3dc0-4556-aaee-12f7dab6a056",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a6bfd87-d49c-4729-be63-0a31c7db0c04",
        "cursor": {
          "ref": "9139ba9f-1818-48d7-b747-ba14aa1330f3",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "68bf19bb-a851-4847-85cd-9e4e3ec92a98"
        },
        "item": {
          "id": "8a6bfd87-d49c-4729-be63-0a31c7db0c04",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "bec0c588-c56d-4a1b-8323-987f4ddd298d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a64a1d2-d62e-4c68-90a4-b5e5bd3d0be2",
        "cursor": {
          "ref": "9d9cd533-10e4-4054-a395-55190aaf142c",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "06b07dcc-3b74-4c4f-af53-eda34f209093"
        },
        "item": {
          "id": "8a64a1d2-d62e-4c68-90a4-b5e5bd3d0be2",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "81afeb2a-8463-44e7-a3e9-69bcbfac15d2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1708ca10-8384-46a8-bc5f-db4c95e24785",
        "cursor": {
          "ref": "25fb5e74-61ff-4482-a3b1-27643fc52fa6",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "c59df31d-dd9e-4580-ad4d-833572462ab5"
        },
        "item": {
          "id": "1708ca10-8384-46a8-bc5f-db4c95e24785",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "e8c4fc74-6183-4ae1-a1c4-94c1244f0cf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0413fd2d-af70-491d-815a-0c40ee780abf",
        "cursor": {
          "ref": "889722c8-02bf-4364-8394-13da12fa82ef",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "b4172955-9199-430d-9783-6bfbe34f0d2c"
        },
        "item": {
          "id": "0413fd2d-af70-491d-815a-0c40ee780abf",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "1d5e2527-77c8-47c3-9b10-3a58a09bf905",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcb870cc-7a35-4efc-8e74-c54b3441981c",
        "cursor": {
          "ref": "593d710e-6c22-4ab2-9350-b637770cc5d1",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "5690326b-b495-40be-ad77-2f98855c7a71"
        },
        "item": {
          "id": "fcb870cc-7a35-4efc-8e74-c54b3441981c",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "e7c907ed-d1d8-4ad2-a376-ef56121dd7d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f91c95fc-eb40-4864-b5c6-6aeca8c83bdf",
        "cursor": {
          "ref": "552e30df-f023-4f27-8bb6-62c47fd90cbb",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "9d5e0da4-2eb6-4778-9727-4267ce899800"
        },
        "item": {
          "id": "f91c95fc-eb40-4864-b5c6-6aeca8c83bdf",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "9c8c5452-5bfe-4eee-9fc5-efc1bbbbd23f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0df860ac-aeba-4b58-a680-c2c56239bc03",
        "cursor": {
          "ref": "f06f55a3-af8c-4ba1-bde7-314ef7715213",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "4a958a15-1f7f-4892-9c9e-0cdec5d8a37b"
        },
        "item": {
          "id": "0df860ac-aeba-4b58-a680-c2c56239bc03",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "f27beb4b-7746-4925-be1d-f2ca97f01f0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c03d98b8-7ba5-41b2-8225-57dcb68af5e3",
        "cursor": {
          "ref": "047524a3-81cf-4e50-aa1d-31b75dec22a2",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "52679443-52ac-4273-a975-4a66f74f2009"
        },
        "item": {
          "id": "c03d98b8-7ba5-41b2-8225-57dcb68af5e3",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "dbdbba78-4fff-4f45-be88-ecc43bd74d2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58b6cef6-b06b-4a62-b36c-408ed6000151",
        "cursor": {
          "ref": "995d70ad-4f27-4651-a751-7eb484df9171",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "19d39a39-9855-44c8-aa9c-0577a6d6279c"
        },
        "item": {
          "id": "58b6cef6-b06b-4a62-b36c-408ed6000151",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "852f1605-3682-41b4-bf81-bbd9d1a4d53b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79c15c25-2c69-42fa-93f1-4202711b2c25",
        "cursor": {
          "ref": "7b50e2ee-8022-486f-9f8d-564ef34815b6",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "b1f15e3b-038a-47f9-9ad3-435b584b050c"
        },
        "item": {
          "id": "79c15c25-2c69-42fa-93f1-4202711b2c25",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "7d5eaddd-6a90-473f-bef6-968245c425e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24b24d0d-dcfb-4b84-bb63-b510b91547d4",
        "cursor": {
          "ref": "fb6d1873-c7bb-456d-9420-0851f6231344",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "c14e820a-f7e3-4cfb-a917-60bf5bfabe96"
        },
        "item": {
          "id": "24b24d0d-dcfb-4b84-bb63-b510b91547d4",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "23494a2b-106f-4ccd-a7c7-223148a82baa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97b2fb90-72f7-44de-84a3-5deb9d2c6a12",
        "cursor": {
          "ref": "321e1def-bb8e-4223-b6ef-780166a8ea54",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "e419fdc9-a122-4694-af50-5763537f1f28"
        },
        "item": {
          "id": "97b2fb90-72f7-44de-84a3-5deb9d2c6a12",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "9c95c018-a5e6-4194-8c1e-0890b9a921ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9cbbf87-0f22-44ae-8b01-a42f2324889a",
        "cursor": {
          "ref": "dc5369f3-1869-45e3-9a05-f3044ee4f610",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "238654ae-4f61-44f3-81b6-a5a31cb424f8"
        },
        "item": {
          "id": "f9cbbf87-0f22-44ae-8b01-a42f2324889a",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "b473b299-6ccc-451f-a47b-54785134a8b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f8eba12-6c71-45e0-b1e4-e2f81a54f415",
        "cursor": {
          "ref": "77d8274c-747d-43ef-a38a-865214128ea7",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "4a764219-4a58-479c-83ac-94f8fe948f50"
        },
        "item": {
          "id": "5f8eba12-6c71-45e0-b1e4-e2f81a54f415",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "8839df78-d9b8-43fe-9d03-dc19647e892e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f3d32a3-1143-4f69-9681-6b59ed773432",
        "cursor": {
          "ref": "91ff22ff-a65a-4d25-a3bd-b892d5886ac2",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "21bff745-b68f-4a56-b06a-af42c1d7327f"
        },
        "item": {
          "id": "4f3d32a3-1143-4f69-9681-6b59ed773432",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "b5529aec-aa2e-4580-8064-9e300cf941ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e23f19c-3826-4554-8caa-103e4434ba19",
        "cursor": {
          "ref": "212b0d71-da4a-4be6-aaf1-38baf7dd5cfd",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "efe16d94-564d-45f0-a946-f64c7e40bd3e"
        },
        "item": {
          "id": "2e23f19c-3826-4554-8caa-103e4434ba19",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "e7e47033-fa40-48f7-b134-c334b97dad3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b65b8f85-22ac-4d28-ad93-d34dda389c8d",
        "cursor": {
          "ref": "09064ff3-04c9-4b8a-8e8b-d0b8f0815962",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "1b1c23e0-d214-430b-ad05-0490460eb9a0"
        },
        "item": {
          "id": "b65b8f85-22ac-4d28-ad93-d34dda389c8d",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "39234b0b-4730-45ff-b978-fef1d7a9e138",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "240cb412-066f-44a6-8446-348229356cae",
        "cursor": {
          "ref": "bab45735-03f1-4c35-bc22-5e00c715535e",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "91fc9407-7d5b-4c7f-8478-f8079f8165aa"
        },
        "item": {
          "id": "240cb412-066f-44a6-8446-348229356cae",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "328e99aa-5e03-4d4e-b5f3-6659c82f184b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96d09a73-eb39-42f5-a28c-07dbc3b79f94",
        "cursor": {
          "ref": "87b9b37f-daf1-43c9-955a-a682efa4b663",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "b8d195c0-de2c-4e2c-8c0d-0a5ebd739c44"
        },
        "item": {
          "id": "96d09a73-eb39-42f5-a28c-07dbc3b79f94",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "db888226-d6fc-41ef-aef2-4e5c51ad535d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c5c86ae-38f1-47ce-b066-5525352fa2f5",
        "cursor": {
          "ref": "9f90cd19-327e-4bcf-8081-b0944d0e6ff7",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "8e165280-a377-48bb-b97e-db9a70d90d2f"
        },
        "item": {
          "id": "0c5c86ae-38f1-47ce-b066-5525352fa2f5",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "747877e3-113d-4ee3-a578-c112cabf3c37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "174dbdf1-3ccb-482a-ae46-b7e3c9250388",
        "cursor": {
          "ref": "85a4acad-715d-4efa-aba4-3ea4506cff3e",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "5271b3b2-91f9-49b3-bed8-10e930dbf576"
        },
        "item": {
          "id": "174dbdf1-3ccb-482a-ae46-b7e3c9250388",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "b79b0c26-61f4-4450-9e65-c4ae06043f31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "461671c9-87f1-4111-9dd7-4a00a24ce0a5",
        "cursor": {
          "ref": "789132c7-7915-4c47-b719-bdcb0f7c9437",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "d11b02b2-b0c3-495a-bcdc-28bfbf45f229"
        },
        "item": {
          "id": "461671c9-87f1-4111-9dd7-4a00a24ce0a5",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "d9626c52-34fa-4f57-af0f-9efa4575e72c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c93cba9-70b2-4694-afcc-6a5e712f4ff2",
        "cursor": {
          "ref": "97cb08d4-0c86-45e9-b235-7bd2b3d3d7cb",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "07cd6e23-58b9-4491-9804-2cc7a563540a"
        },
        "item": {
          "id": "0c93cba9-70b2-4694-afcc-6a5e712f4ff2",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "dad88279-cae3-48fe-be6a-0aac2b59f75b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e38720d-b22c-47f5-b862-cd7bafa02ada",
        "cursor": {
          "ref": "c4598c90-636e-44a2-a1c6-af4ee8507e6c",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "61a68327-616a-4b88-9083-c0629d3b80ae"
        },
        "item": {
          "id": "4e38720d-b22c-47f5-b862-cd7bafa02ada",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "66e4cf5f-cea8-42a1-9b69-3ab897a6ac9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6752d087-48f0-4f27-8ec0-419dd4786f0e",
        "cursor": {
          "ref": "1f1cd602-e801-4646-958d-9bef2987cc9c",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "2f42178e-57ed-4b44-9e5a-5d0928e59925"
        },
        "item": {
          "id": "6752d087-48f0-4f27-8ec0-419dd4786f0e",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "cd41bdae-7969-41ea-9ebe-a8c59886a1b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "299628c3-987b-4e91-a69b-ec7046f3b4b5",
        "cursor": {
          "ref": "6cfe10df-d388-4430-ae5f-be8a064d1b4e",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "621a0d29-42fb-469a-a3af-83f6a009d149"
        },
        "item": {
          "id": "299628c3-987b-4e91-a69b-ec7046f3b4b5",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "cc71c17b-6d9b-4fcc-bdda-bf3d557e44a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "316fe0be-cf21-49b1-a62d-fa0fe7b5e2ba",
        "cursor": {
          "ref": "5c524788-4554-4a6d-bb8e-3264abd225e3",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "2b576349-da04-4d84-b40f-7442e04e7c1c"
        },
        "item": {
          "id": "316fe0be-cf21-49b1-a62d-fa0fe7b5e2ba",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "931281dd-9858-4bf8-bc9a-6431a0f18b24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df3af35a-e592-40f5-a5df-40e6588d7186",
        "cursor": {
          "ref": "d48840ab-29fc-4040-a2b6-8285920d42cb",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "74672b6b-74ad-4957-badc-811d7316c421"
        },
        "item": {
          "id": "df3af35a-e592-40f5-a5df-40e6588d7186",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "e4cd999d-ca62-4b61-b46d-542153924edb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99a9a489-0a2b-44a2-b544-1cd16dee323e",
        "cursor": {
          "ref": "092cb0a5-7caa-413e-b5c7-f4c5685053ce",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "dbc0b445-9f65-4e5b-be3a-eea10adec773"
        },
        "item": {
          "id": "99a9a489-0a2b-44a2-b544-1cd16dee323e",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "48081f0b-5b6d-4675-8a4b-b6dd3f9faa65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ec68f8c-cf89-42c2-a1cc-7cb7c5aecdb1",
        "cursor": {
          "ref": "1bdc6aac-8a58-4ebd-aae0-fa7a2503d4e7",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "59596b59-2608-4895-bd96-998e57fe937a"
        },
        "item": {
          "id": "4ec68f8c-cf89-42c2-a1cc-7cb7c5aecdb1",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "81fa1b19-7483-4051-8145-a506d15beb37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eac2924-abae-4d66-bd6e-1a02fa17e3dd",
        "cursor": {
          "ref": "136c60f7-0753-4e8b-8415-e1665d2ef4e0",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "d61c1fbd-448f-4b61-9bca-0203023e437b"
        },
        "item": {
          "id": "6eac2924-abae-4d66-bd6e-1a02fa17e3dd",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "d4504dce-13d5-48db-a5fb-f6915fdbb5d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "917ca9f5-256a-4507-b3b3-34cc4e58830f",
        "cursor": {
          "ref": "e4b5efd8-8ab7-4768-8784-664477926f81",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "574f4b54-d610-4c5e-a845-261c92292ee0"
        },
        "item": {
          "id": "917ca9f5-256a-4507-b3b3-34cc4e58830f",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "647d7c2b-dfdd-4b7b-ad2c-838ef64eb54c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eb8eb8d-2c50-497d-b55e-38749985dc99",
        "cursor": {
          "ref": "3736e356-4c71-44c8-8907-5ba30ad6f013",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "f7dced2a-58df-4981-a89e-a210ec4bacdc"
        },
        "item": {
          "id": "2eb8eb8d-2c50-497d-b55e-38749985dc99",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "9956d51a-3077-4440-9a4b-466e9bebd332",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e4e0bb3-0b29-45fb-80f2-304e4e5939ad",
        "cursor": {
          "ref": "99639e02-6b40-4d8f-930d-6804acbfff74",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "de8d1f5a-99b9-486c-be58-2173a93e27f1"
        },
        "item": {
          "id": "9e4e0bb3-0b29-45fb-80f2-304e4e5939ad",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "e9640590-8d92-46bb-bebe-4403aa7bb6c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f3944d4-be2a-4c8f-8b21-092dda82dbfe",
        "cursor": {
          "ref": "b2bf7759-0d57-4ebc-b3f1-1655e038e451",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "5a46408f-e8b5-40d3-9600-0b0af54e0163"
        },
        "item": {
          "id": "9f3944d4-be2a-4c8f-8b21-092dda82dbfe",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "9da4b1f6-47c4-4dc0-bbf0-7c2335f927fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b072a84e-4b7c-431b-aba9-cb6694e04182",
        "cursor": {
          "ref": "cfad8420-d06d-4fdb-b789-20c6031bf3f3",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "6557db89-f2d5-4b09-8a4c-72b862c9c021"
        },
        "item": {
          "id": "b072a84e-4b7c-431b-aba9-cb6694e04182",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "40ebfd7b-afe8-4ddd-8f99-405f79d773ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1c93ac1-7554-42d7-8da5-531cf02b4258",
        "cursor": {
          "ref": "be89fd3f-0217-4ed4-aa44-266db46a972c",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "3ecf26b8-3648-4f64-8bb8-067c51c54e5c"
        },
        "item": {
          "id": "b1c93ac1-7554-42d7-8da5-531cf02b4258",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "80baa0b3-76ce-490b-be3e-d00f6466ea43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dffcd2b-23ff-4a2c-abb1-745157f4fed0",
        "cursor": {
          "ref": "978c8a72-3fa9-4125-8d76-9f7600dd8935",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "e0b3ca0a-d8e6-4bf9-91cd-be320da5206e"
        },
        "item": {
          "id": "1dffcd2b-23ff-4a2c-abb1-745157f4fed0",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "ee39a7e4-2b93-4cda-860c-a44b1a3750eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e0787f8-7bd7-4a81-a665-7969d1eee4e1",
        "cursor": {
          "ref": "190195d4-4155-4b60-98ab-dfa8752a2056",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "3eb12ce6-1df4-4044-8b78-eb119e761e97"
        },
        "item": {
          "id": "3e0787f8-7bd7-4a81-a665-7969d1eee4e1",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "c3a37a82-c9fa-4ff5-ad5a-c46a8c465407",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82e67944-0736-4907-bc54-a476c81275bd",
        "cursor": {
          "ref": "c12a3220-cd1f-4a3e-97f5-380927770b59",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "91dd1c10-1ba6-48f5-9286-6690145edbbd"
        },
        "item": {
          "id": "82e67944-0736-4907-bc54-a476c81275bd",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "32d46ee6-3a7a-4382-8b8b-04837cf9a5d0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa67d13b-5d00-452c-a1cf-94128184e6e2",
        "cursor": {
          "ref": "cb732402-1d6d-410a-8d7f-d7844b4bf31f",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "f58a5aa6-fc6a-4b83-83cf-af7d7fcc1b79"
        },
        "item": {
          "id": "fa67d13b-5d00-452c-a1cf-94128184e6e2",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "3db042dd-3882-4a43-8fae-617def19a4ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "526855e3-c3ae-416b-87e0-040188be54c2",
        "cursor": {
          "ref": "60787e61-60a4-43f5-aa5b-e7a8ad31d8e0",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "b2ddb9a3-aea9-4ae3-9447-9ced5c239d1f"
        },
        "item": {
          "id": "526855e3-c3ae-416b-87e0-040188be54c2",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "bfa5748e-de44-468c-a51e-1853bb9b8007",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "881fe4d0-358d-40de-a6fd-834623810642",
        "cursor": {
          "ref": "8d09978b-88a3-47b7-a31b-270a9e7c7644",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "443223fa-cec7-4ceb-aaf3-9dabffac015d"
        },
        "item": {
          "id": "881fe4d0-358d-40de-a6fd-834623810642",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "56455e05-265f-46df-8c58-e01f9d6abffa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "965f26f1-07b8-4af6-a986-b046d59cb1d0",
        "cursor": {
          "ref": "d18004e8-888b-45ba-908c-69bc0ff77f78",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "f0dab8fb-24d4-41e4-8ef9-11cc7b34f098"
        },
        "item": {
          "id": "965f26f1-07b8-4af6-a986-b046d59cb1d0",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "5f69e3c6-abb4-4277-97cb-435b872d5c64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d0b239d-718f-41fe-a6ae-8590bce95e59",
        "cursor": {
          "ref": "f46386ff-7e85-4ac3-808e-7c96a18414ab",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "bcc2c5fe-23fb-4b56-ab9f-b57660c8f603"
        },
        "item": {
          "id": "6d0b239d-718f-41fe-a6ae-8590bce95e59",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "f8a21afd-4036-4343-942e-ab1a386752e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d28fca33-ac1b-445d-ad00-09aab54e5473",
        "cursor": {
          "ref": "77886599-0678-4d09-9e27-72a1fe437c07",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "2a8128e0-d452-415a-9b6e-b2af388498d7"
        },
        "item": {
          "id": "d28fca33-ac1b-445d-ad00-09aab54e5473",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "c311adaa-7024-46d7-94f8-42035a1b40df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "723c03df-5d92-4a6f-b44e-e95f9586073d",
        "cursor": {
          "ref": "15a24a22-ec2f-41da-aa79-9a6378de7474",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "080d120a-3c8d-41a8-ad3d-1a464d65ff50"
        },
        "item": {
          "id": "723c03df-5d92-4a6f-b44e-e95f9586073d",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "572cc497-6f86-4920-b49b-cfd5d9ece890",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6777d6c9-65e1-47c9-bf4a-04edc5537916",
        "cursor": {
          "ref": "62bd7477-7641-45b7-92eb-ecdf8941dda3",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "b75370b6-7e3f-4268-9599-95a451686640"
        },
        "item": {
          "id": "6777d6c9-65e1-47c9-bf4a-04edc5537916",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "6ed07df7-18d1-48b0-b3fd-f91abde8902d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7915ea1-e631-42f9-8733-a8fbdc077d82",
        "cursor": {
          "ref": "e3c501f5-1f67-4660-82ee-4ce9f8ffc2c9",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "1429342f-d383-40e6-9643-b6c4c09ee016"
        },
        "item": {
          "id": "f7915ea1-e631-42f9-8733-a8fbdc077d82",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "1c29c7db-147d-4a86-a849-ab3103b4386f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80264a17-419a-4738-b5ec-b7e7353553d3",
        "cursor": {
          "ref": "80f0a443-eb3b-4b3c-93e0-cdf99d5ad586",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "9ce897b7-b907-49b3-8c91-76b5ac985e31"
        },
        "item": {
          "id": "80264a17-419a-4738-b5ec-b7e7353553d3",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "c8379534-7662-4bd7-86d1-5936f0852924",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9955a51a-0d55-4b9b-9509-98b84814302a",
        "cursor": {
          "ref": "1badd148-a852-4753-ac78-f9fbcafbf930",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "f52a6aa4-b4f6-45ae-b65c-545b15e062d0"
        },
        "item": {
          "id": "9955a51a-0d55-4b9b-9509-98b84814302a",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "07548c72-0cec-43f8-9b7a-0a07d57b58d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8ea66cd-b2d0-4903-9388-a2c53fe0ef25",
        "cursor": {
          "ref": "c5f5220e-d049-40a9-a314-5d70e9d1ead0",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "68178719-3965-4130-a9ee-06fda383f1fa"
        },
        "item": {
          "id": "d8ea66cd-b2d0-4903-9388-a2c53fe0ef25",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "fe4f1161-1cf0-429d-a3da-dce72b4e4622",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cdd3508-51c3-4c98-858a-688111a4039c",
        "cursor": {
          "ref": "5be1860e-8760-4bb5-ab76-12e720273427",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "7a6e191c-5f79-47ef-a4f7-5023c38f0837"
        },
        "item": {
          "id": "2cdd3508-51c3-4c98-858a-688111a4039c",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "ecd998c0-32de-4593-abe8-4885c4e6d72c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c037d696-6f86-4e1b-83de-b384b6243cb1",
        "cursor": {
          "ref": "f06cfb86-40f4-4133-b73f-b2d46fe51f3c",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "40d2d9c4-f3a7-4e7c-9cce-93cd782b99a2"
        },
        "item": {
          "id": "c037d696-6f86-4e1b-83de-b384b6243cb1",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "5ca63784-9455-485f-9020-3fff94f7e62f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "900d58d6-bad9-4c35-91eb-98e292f1ec8a",
        "cursor": {
          "ref": "dbaaa995-eced-4c74-8616-68725be172c7",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "19ea2298-0b81-4208-8f25-7aa6d3706380"
        },
        "item": {
          "id": "900d58d6-bad9-4c35-91eb-98e292f1ec8a",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "4beed326-62b9-492f-9326-a3b808c06ddf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7abc210b-d60c-47cf-9000-3eb8d0a5d702",
        "cursor": {
          "ref": "edfd87cc-19de-4f74-ac65-faf0eebccb47",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "3d5a3871-41ec-46f1-a7b2-5f8448b6ff80"
        },
        "item": {
          "id": "7abc210b-d60c-47cf-9000-3eb8d0a5d702",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "8dad6950-412b-4ddd-bfc6-7938fdd4e7bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "743e9ff8-11ed-43ca-b055-94294bf72703",
        "cursor": {
          "ref": "52e5f03e-f4dd-40f4-af52-6e2770a6945f",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "f27bb5a3-67c5-435d-9add-110ea1cb7d7b"
        },
        "item": {
          "id": "743e9ff8-11ed-43ca-b055-94294bf72703",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "17a437a9-f4ae-4f6e-9f15-b0d2e12c43fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a5c0aca-00fc-42e5-bb53-723f7039c04d",
        "cursor": {
          "ref": "5b9d0cb3-dff8-4be7-97ef-53bc17361e0a",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "8c70decd-baf5-4af1-8440-f65749d07f14"
        },
        "item": {
          "id": "1a5c0aca-00fc-42e5-bb53-723f7039c04d",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "e51c6dbb-0cb4-4b77-91f0-0857043aa083",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6f0e485-682e-414f-aaa3-ecb903a5229d",
        "cursor": {
          "ref": "26a1076e-493a-44a7-a841-0b5eaf3eb8fb",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "fc166a90-1b2b-4687-ab68-1611892cc9fd"
        },
        "item": {
          "id": "f6f0e485-682e-414f-aaa3-ecb903a5229d",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "7627f179-83e8-4f09-ae9f-6363f02ce4e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15628351-3c51-4fdc-8870-d6b097d65bed",
        "cursor": {
          "ref": "ee209efc-c896-4133-aab0-873bcc21ed04",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "18bc091c-f419-468f-b495-3c6caf28d5db"
        },
        "item": {
          "id": "15628351-3c51-4fdc-8870-d6b097d65bed",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "e39adb76-2177-4a4c-8185-e5fc97808ca4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7707f820-c6b9-4c95-8690-05ee28094982",
        "cursor": {
          "ref": "c71fb3a3-689d-496a-be6f-5c0084e9e560",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "3d675f9d-3ba3-4692-b2bd-c6789cde7388"
        },
        "item": {
          "id": "7707f820-c6b9-4c95-8690-05ee28094982",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "2a9c6908-1811-4814-a021-a40b9b5c3fc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ce5090d-83eb-49a2-9c64-d534dd7ca10d",
        "cursor": {
          "ref": "b7b35a65-39f8-4942-87b1-36b660a8f787",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "56e6e93c-30ef-406f-bac3-90e211507475"
        },
        "item": {
          "id": "4ce5090d-83eb-49a2-9c64-d534dd7ca10d",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "b346f2d2-4141-445c-b737-b934ab04b156",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d16396a1-646a-4894-9e9e-1b6ab9c00a5f",
        "cursor": {
          "ref": "dae8edc3-9e78-4895-bfb4-1e3ff4866fad",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "e9ee4f82-0beb-4d26-a47c-f2f83182dad9"
        },
        "item": {
          "id": "d16396a1-646a-4894-9e9e-1b6ab9c00a5f",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "10a51bd2-1e74-47d8-95a2-58aa5e7a4513",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1bbe781-d9d8-42cc-b155-887d1023bdd6",
        "cursor": {
          "ref": "2e2ad599-bfa6-497f-9736-6f4a331562cb",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "350784e8-1cbe-4356-8276-71582f5edefb"
        },
        "item": {
          "id": "c1bbe781-d9d8-42cc-b155-887d1023bdd6",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "e6df0fb9-f775-4296-97f1-25a6203d3d25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0f2126c-2696-4a61-811d-828cdffacb4f",
        "cursor": {
          "ref": "8ee3eb37-fa5a-448c-8b38-e4dc53c96c3c",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "d50e2df0-a9d5-44fd-a0ed-1c5cc63bfa26"
        },
        "item": {
          "id": "a0f2126c-2696-4a61-811d-828cdffacb4f",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "3346251c-0a04-4e88-813e-e82bf71b2d29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01f405c4-d88d-4de6-b765-9441e5acf29c",
        "cursor": {
          "ref": "a3d3d701-a961-48d0-a115-e30d017446b0",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "07f73cae-4c58-4550-b655-7f357541f3e5"
        },
        "item": {
          "id": "01f405c4-d88d-4de6-b765-9441e5acf29c",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "59c96e7d-b95d-4490-a92e-9996f5d22991",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ec1c76e-b060-4110-b210-61f894741d56",
        "cursor": {
          "ref": "d8f539b9-06d6-4281-a38a-cf70551c3913",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "b7541924-3a71-4459-82c2-545d70c423ef"
        },
        "item": {
          "id": "0ec1c76e-b060-4110-b210-61f894741d56",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "efa15df0-43ab-463b-adac-8bf8cfafb0a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4472cd06-4cde-432b-8ee9-02eeefbd225a",
        "cursor": {
          "ref": "fa25f294-7fda-457c-8d0d-34445a4334ca",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "1765e329-b439-4feb-ad15-3e29cfda9bd2"
        },
        "item": {
          "id": "4472cd06-4cde-432b-8ee9-02eeefbd225a",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "a5f696f8-67df-4571-bdeb-032ccafa836d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4874a65-ba74-4635-8e9c-f0f495f71949",
        "cursor": {
          "ref": "2324c36d-4d8c-4af9-9002-8e03600bedf0",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "beab6492-8661-4b52-a2ba-fef69816621c"
        },
        "item": {
          "id": "e4874a65-ba74-4635-8e9c-f0f495f71949",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "7082f524-2938-4b53-acff-3b03e44036e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2c0765a-0080-4ea5-b5ab-ecb6fd8a2d86",
        "cursor": {
          "ref": "9e5d2a51-66c4-4475-8336-a110f1bb74d1",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "103f9bab-81ad-4c3e-8747-303293dd4d33"
        },
        "item": {
          "id": "d2c0765a-0080-4ea5-b5ab-ecb6fd8a2d86",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "73a84464-ca31-4695-9a0e-64c8ca455b1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e86bed2-9f84-46a3-8d24-446e0bf6bda5",
        "cursor": {
          "ref": "6a880f55-ef68-4bd1-b175-397886345184",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "57e1be36-dc92-4a5e-89ab-0692cd0edd07"
        },
        "item": {
          "id": "8e86bed2-9f84-46a3-8d24-446e0bf6bda5",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "7174c0da-23ad-477a-8834-47284cf93d4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf89f8a5-b4cd-4303-96a1-9ea840250443",
        "cursor": {
          "ref": "90f79931-0d24-4608-a3b3-3e40165fe23e",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "5bef8c4d-784e-47a8-be0a-04b68cb3d04d"
        },
        "item": {
          "id": "bf89f8a5-b4cd-4303-96a1-9ea840250443",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "d679729b-eb5a-43d5-a328-53d6b92e3026",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee88b8bb-9682-4396-b5f0-d04943ac38c9",
        "cursor": {
          "ref": "fd18c145-14d0-429d-948f-025a46dae762",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "72818018-085d-4f74-a74b-e26ce8d58c6d"
        },
        "item": {
          "id": "ee88b8bb-9682-4396-b5f0-d04943ac38c9",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "3879ea68-0e57-442b-8738-8fed067fe78e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e022e76-8897-4ae9-b89b-742203c75fa8",
        "cursor": {
          "ref": "3cf17308-e0d4-4f34-bbd5-cf53910e8ea8",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "e9e7dd1e-ecee-40d3-8bf0-c940c38697a4"
        },
        "item": {
          "id": "5e022e76-8897-4ae9-b89b-742203c75fa8",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "28239920-19ed-42f6-9579-630e5333854e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48de55e4-9b76-43ca-abf3-d6be2677d87e",
        "cursor": {
          "ref": "dcb2645f-f390-40e3-8a11-cf63dc2b5cf1",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "21064287-ad26-4533-9879-9ab3b809d116"
        },
        "item": {
          "id": "48de55e4-9b76-43ca-abf3-d6be2677d87e",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "d47ddad4-60fd-41a8-b8df-3e159d4ed3d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22779ec6-e47b-4329-9e45-d44960b98460",
        "cursor": {
          "ref": "5b3521d2-be5d-4eb7-af6e-5effda1e6532",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "c95f9dbe-249a-471f-a9f5-f34523e74a56"
        },
        "item": {
          "id": "22779ec6-e47b-4329-9e45-d44960b98460",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "db062ed8-b041-47fd-beee-ea96647838e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51ba97f4-ff4d-4ddb-ac8a-e32495f1bcc7",
        "cursor": {
          "ref": "9619e7cb-773c-441c-89cf-11f5e924f71d",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "c61a61c5-167d-4105-a5a0-ea322d163d58"
        },
        "item": {
          "id": "51ba97f4-ff4d-4ddb-ac8a-e32495f1bcc7",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "d08838fe-0ab7-47c0-88f2-b00b6cc96a50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e983d49-2a92-40f2-a423-25256181fbec",
        "cursor": {
          "ref": "2533d610-98ac-42e0-9eda-c8075c90e780",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "acf295c9-611c-4886-af17-dd592cc2c3ad"
        },
        "item": {
          "id": "3e983d49-2a92-40f2-a423-25256181fbec",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "86e9654c-7633-4b24-a2f8-2223e88bfe86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bbfb1ac-4ab2-4a79-a3ad-4f52fde4d0ce",
        "cursor": {
          "ref": "038352d2-4c3c-4e45-9074-7a10413d5953",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "0596241c-c833-47ad-a9ac-15836363187f"
        },
        "item": {
          "id": "5bbfb1ac-4ab2-4a79-a3ad-4f52fde4d0ce",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "fff01607-79d1-4c39-bd98-3453c2d31826",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9281c63a-3f61-4334-8605-ce7648ccad30",
        "cursor": {
          "ref": "7a5bc798-b94e-4a23-8cc0-d0f646385138",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "e3a25a85-579c-4e56-a9ba-b39ffd983aa0"
        },
        "item": {
          "id": "9281c63a-3f61-4334-8605-ce7648ccad30",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "273649ec-345f-408b-99fc-532598fa95a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adeca073-7be4-4b3f-a62c-d52a56de80e1",
        "cursor": {
          "ref": "898a7e27-9979-4bd5-bb77-b41d2cec85d4",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "8df681e0-4f94-40d2-9e3e-767620cf9ad2"
        },
        "item": {
          "id": "adeca073-7be4-4b3f-a62c-d52a56de80e1",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "24e68a0b-5d05-4e8f-a5d4-87c87e79f12c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b668f06b-a6f5-424e-8aca-893e77b3d8fb",
        "cursor": {
          "ref": "4bbcf46e-4bbc-442d-ad78-d0ec89d60624",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "d0f507bb-f0dc-4138-863c-dafc479343b8"
        },
        "item": {
          "id": "b668f06b-a6f5-424e-8aca-893e77b3d8fb",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "2935d37d-3b21-421b-beb2-6395b2261bec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f383736-a50e-4832-9ad3-fd41dd97385a",
        "cursor": {
          "ref": "1dc281d9-0bb6-4ab0-90ce-2ea022355a19",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "436b84da-240b-4d3d-990b-c05a25e67456"
        },
        "item": {
          "id": "7f383736-a50e-4832-9ad3-fd41dd97385a",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "63693f50-40b9-4362-916c-250ff451a0fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbf0e19b-d0de-40e0-b619-94aaf8285409",
        "cursor": {
          "ref": "da18d498-f560-4c45-9cd4-fd14f36304a5",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "2115ee97-0f95-460b-aa17-220854c3ff06"
        },
        "item": {
          "id": "dbf0e19b-d0de-40e0-b619-94aaf8285409",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "fed6f2bc-1602-416f-b7b4-fac689f1fd1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd305611-6a36-4f0c-8f1e-74d92307b01d",
        "cursor": {
          "ref": "adb234cb-3d60-43cb-ba17-592c46d29e51",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "3ab5ab9e-6f8f-4ce8-8b8e-c755ef7e070f"
        },
        "item": {
          "id": "cd305611-6a36-4f0c-8f1e-74d92307b01d",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "1b2e9e1c-b4d6-48e1-81dd-9730ad08d680",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c76cdcc-f098-4b0b-aa0e-8811cfb91563",
        "cursor": {
          "ref": "1bf78f8b-d7b4-4f7a-96a4-54884180cdb7",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "7306c4c7-1c1d-4124-893b-02a2b07325a2"
        },
        "item": {
          "id": "3c76cdcc-f098-4b0b-aa0e-8811cfb91563",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "560d0f51-b73c-448f-b822-736b024fda36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a151adec-0854-447d-8a1b-6cbd834471c0",
        "cursor": {
          "ref": "19e7cd9f-b5a0-4755-b65b-1c50da86ce33",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "f8386035-0fa1-4b23-816c-744f0721a040"
        },
        "item": {
          "id": "a151adec-0854-447d-8a1b-6cbd834471c0",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "a54d2546-cbbc-4b25-bd12-5f4879f5f63a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eeb90d4-0053-4403-b3e2-e8132f75de06",
        "cursor": {
          "ref": "e4751393-7f4d-4ac8-b023-293f0dd25a19",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "22c80de2-7f36-4144-9125-00c7298dc41a"
        },
        "item": {
          "id": "4eeb90d4-0053-4403-b3e2-e8132f75de06",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "f38608fe-70c3-44ff-a42e-414a3f2c5b2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18767ca0-47a3-4e19-8f7b-1817fefb8326",
        "cursor": {
          "ref": "94667162-e755-4b72-a075-041cc5aac594",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "0fa91961-0287-4f23-830c-d1f231884ff5"
        },
        "item": {
          "id": "18767ca0-47a3-4e19-8f7b-1817fefb8326",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "f5b8f0cf-55fd-4747-a632-1cd4966fc58f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fed9635-36f7-41f9-810d-3c7f145ed4cf",
        "cursor": {
          "ref": "6e83594b-49cb-4ed3-b4fa-e6461a9acfd4",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "d08b8453-d798-4100-8db7-3da28738eacf"
        },
        "item": {
          "id": "1fed9635-36f7-41f9-810d-3c7f145ed4cf",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "123e3103-dbcf-476d-95c3-1cf3dc5708c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cd39938-3e25-4493-8a8e-4d3c529c65c2",
        "cursor": {
          "ref": "bb44fae5-3542-4f18-9afc-2e7a61cef8f0",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "c6cff21c-fedf-4f27-b634-44fd3600c3a7"
        },
        "item": {
          "id": "9cd39938-3e25-4493-8a8e-4d3c529c65c2",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "720c92b8-963b-411d-b3ad-218780f8e3ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a431df2b-1603-4fa6-8736-eadb71afd67e",
        "cursor": {
          "ref": "961d668c-b158-429a-ab3d-0409722cb9db",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "8cbe5d8e-178b-44e1-a5a0-c61598283576"
        },
        "item": {
          "id": "a431df2b-1603-4fa6-8736-eadb71afd67e",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "dde19f11-4ae7-45f2-8865-2fe430368b58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85507000-c813-43aa-aee9-0bbeedcf0186",
        "cursor": {
          "ref": "372e2187-70e7-45f1-abc4-d034d6070ed8",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "a83ce37c-527a-4ed4-b0e2-7d80d37f5ab7"
        },
        "item": {
          "id": "85507000-c813-43aa-aee9-0bbeedcf0186",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "2e2d3393-29b9-4ae0-968d-511eeab398d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ad10aa4-17f6-4e0c-b029-4cd60d38008d",
        "cursor": {
          "ref": "645dd358-2f19-41ae-95a7-297875cb6527",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "024769a3-d359-4960-9629-9425708dac39"
        },
        "item": {
          "id": "0ad10aa4-17f6-4e0c-b029-4cd60d38008d",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "b8acb5fb-6e56-4c7b-b933-7f3b37250108",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce0f7e9b-4df8-49b0-9246-929e04fa1901",
        "cursor": {
          "ref": "a971ceb4-ae89-418b-b5a2-e75ce76a956b",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "1a0593ae-5c41-4e36-bb7d-6d4f7e9bcc0b"
        },
        "item": {
          "id": "ce0f7e9b-4df8-49b0-9246-929e04fa1901",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "5c130180-5320-4c21-b1a0-6fe3b5447539",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0946b3e9-18c9-4bef-97f0-90865de40b66",
        "cursor": {
          "ref": "d5ec5eda-d83d-4566-a65c-e3cd9a4075fa",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "0cc241e5-af20-4f31-bb1a-11309ea32075"
        },
        "item": {
          "id": "0946b3e9-18c9-4bef-97f0-90865de40b66",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "289cae40-ef7c-48be-a8bd-62ab9a9b7200",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67a8e27b-8ece-4bb4-9492-606eb607c149",
        "cursor": {
          "ref": "912566cd-0160-44c9-b817-2b15ac354923",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "c1bde0d0-d12c-495b-9f94-7c4c4373773e"
        },
        "item": {
          "id": "67a8e27b-8ece-4bb4-9492-606eb607c149",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "52e44824-0032-4479-8634-6a6bfe239fb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebb57157-595e-48a2-bb2a-70907420f271",
        "cursor": {
          "ref": "67718a4d-374d-4ce6-b6cb-7b0cb3e6cfe4",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "d9caf2e0-1b7d-4dc4-97c4-d97f65e97945"
        },
        "item": {
          "id": "ebb57157-595e-48a2-bb2a-70907420f271",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "d1232815-afa1-4fd9-9af3-27b06f83642b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30589026-8f45-4d54-8d00-4975e1529ee0",
        "cursor": {
          "ref": "12c91fcd-565f-4970-b12d-15991c081711",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "2fdc4e14-0091-4daa-8d0c-e7e8cc48745e"
        },
        "item": {
          "id": "30589026-8f45-4d54-8d00-4975e1529ee0",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "b990f1b0-2bcf-4c8d-8299-ff77602eb8e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ffe877f-4e97-4472-9a74-e2f5361826b7",
        "cursor": {
          "ref": "62bc41b2-e10d-42a4-97cd-a7d96d2f24e5",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "0311c90e-6504-414a-863e-d0348de12d66"
        },
        "item": {
          "id": "5ffe877f-4e97-4472-9a74-e2f5361826b7",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "210729d6-b2b4-4165-9ed9-a5ea835251b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e67de416-964e-4097-9c1a-81f0c188c316",
        "cursor": {
          "ref": "f2bb4f6e-b01d-474e-9aca-bbe7055f9216",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "afe0a056-71c6-4edc-a79d-c8979888b271"
        },
        "item": {
          "id": "e67de416-964e-4097-9c1a-81f0c188c316",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "2739a790-8ac2-4af0-b260-49e5014d67a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0225aca-cbf1-4a5b-a420-af80a0eb144c",
        "cursor": {
          "ref": "b599feba-df2f-4e8c-b398-51a95289b0cb",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "6dcbcfe4-99bf-4351-a278-2cfb7476bf6c"
        },
        "item": {
          "id": "c0225aca-cbf1-4a5b-a420-af80a0eb144c",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "24cf1919-67ee-4a87-a109-1d31491389fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5c20126-9a84-4a84-ada8-66ad02f9a411",
        "cursor": {
          "ref": "cab517bd-3713-42f1-8b8d-bf90fa5cd53c",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "ad086eb6-e401-4590-9f0e-697059321a70"
        },
        "item": {
          "id": "a5c20126-9a84-4a84-ada8-66ad02f9a411",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "4dd9a85c-714a-48f5-b2a8-3b619fed3528",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60bc78ec-77cb-4f6d-83d0-c5f784a82bf0",
        "cursor": {
          "ref": "130c51e2-eb95-4cc7-9040-e46634a3bb17",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "f37f4b1d-4c06-47b3-8d6b-1377062cf018"
        },
        "item": {
          "id": "60bc78ec-77cb-4f6d-83d0-c5f784a82bf0",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "7869d9cf-141f-4233-b092-0db97ed6d9a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e09a626-6119-4100-81c0-23b945cad908",
        "cursor": {
          "ref": "0816e2e7-15e6-4cad-80fb-6f72125a0ed4",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "9b6f8cd9-9621-4ba9-a31a-10a7e438e9c2"
        },
        "item": {
          "id": "5e09a626-6119-4100-81c0-23b945cad908",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "7fe0f84e-617b-44c5-82a8-8a3d9ae899a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b09ecf0e-fc27-43c5-bb8b-9aea1dcbe492",
        "cursor": {
          "ref": "daf34a03-3d97-444d-842c-1db066581b04",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "41c2993b-c295-471b-ac84-fb37e806d343"
        },
        "item": {
          "id": "b09ecf0e-fc27-43c5-bb8b-9aea1dcbe492",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "8bac2274-4881-4724-98a0-c51a6211026f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b1ffc6f-d001-4ed5-a092-f19b87609da0",
        "cursor": {
          "ref": "49e90c2b-a5f5-4149-a381-4acd96709fba",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "8f6d4e4f-9dd2-479b-bd68-69713f16cbe5"
        },
        "item": {
          "id": "3b1ffc6f-d001-4ed5-a092-f19b87609da0",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "8624144d-4d57-4080-b07c-487c4dec93aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48ae996b-b62f-418f-8bf5-2249f97689e2",
        "cursor": {
          "ref": "5ccd0216-87c5-4e7c-9285-b78318012694",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "fd863ea1-546f-4f08-8e85-c731f83ac6ac"
        },
        "item": {
          "id": "48ae996b-b62f-418f-8bf5-2249f97689e2",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "cb63bdce-e4e4-42ee-b9e3-3f6687501e15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e35dd30-6cf7-466d-add2-5c3c04859a12",
        "cursor": {
          "ref": "c128e9af-fba6-46d5-906b-aa6929888c56",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "f95ab771-8a23-4f6e-b88f-d8edbcadd56a"
        },
        "item": {
          "id": "9e35dd30-6cf7-466d-add2-5c3c04859a12",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "b7be32ab-3a58-470e-8f9a-ea64643515e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fcb0eae-f6fc-4d22-8016-700d175242f6",
        "cursor": {
          "ref": "b5410fee-498b-4557-85bb-89ed68c1ef6c",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "e60da076-d566-4852-9a35-b581c268f0bf"
        },
        "item": {
          "id": "4fcb0eae-f6fc-4d22-8016-700d175242f6",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "14df6c40-60be-4d8f-9687-d4f74ca744f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6547523-2814-4702-b998-7b5bd1447703",
        "cursor": {
          "ref": "9510a512-365f-4dd4-9ffd-c1ea947cf23c",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "80b3d6b2-35a7-4165-92af-f321b96e2b7d"
        },
        "item": {
          "id": "d6547523-2814-4702-b998-7b5bd1447703",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "969053f8-d7a3-4424-b2ca-fb63ded50e62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edefa772-1e25-4d3d-b1dc-336f8f8ad3fc",
        "cursor": {
          "ref": "65ad71f3-e864-4c14-b7e8-3fbb3e567c0f",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "0de9acd2-dffa-440c-8eb5-4c122f219121"
        },
        "item": {
          "id": "edefa772-1e25-4d3d-b1dc-336f8f8ad3fc",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "3ef74a97-87d5-4c6a-9aa2-d9a207865d6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f20ad19f-746a-48a8-a1ac-3a67fcf11fa3",
        "cursor": {
          "ref": "6870034b-df8b-40a5-bc9a-0353a806246b",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "1f154604-f686-4f11-8db3-269bd72a03d6"
        },
        "item": {
          "id": "f20ad19f-746a-48a8-a1ac-3a67fcf11fa3",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "5bbcb971-e0f8-4ffc-87cc-40fb9360ba50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bb965f4-2513-48fe-8aa4-62bc937a74c4",
        "cursor": {
          "ref": "28b01e6d-1622-44e1-a35a-6bb5dc2d719d",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "2fff4e9a-c8cc-49dd-882b-77e3aa02ec65"
        },
        "item": {
          "id": "0bb965f4-2513-48fe-8aa4-62bc937a74c4",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "4aef035e-1859-4050-8574-d00920c71263",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e41a6cb6-608a-4c74-94e2-e43922cb1268",
        "cursor": {
          "ref": "b00a64e1-cabe-45a7-a2aa-ae33e732920f",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "ec7a0305-2eae-448c-9ae4-dacbcc3f9b8a"
        },
        "item": {
          "id": "e41a6cb6-608a-4c74-94e2-e43922cb1268",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "27008de9-a54c-42a4-8609-084e928c4f86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c9094bf-7b89-4c70-bad2-d216fb8a84e0",
        "cursor": {
          "ref": "f72282ff-8af7-4b01-bed7-ca830df18579",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "e2c31e7d-6265-48ee-bb34-4d63153e9139"
        },
        "item": {
          "id": "9c9094bf-7b89-4c70-bad2-d216fb8a84e0",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "48c6a1bc-0a84-46f3-aecd-11023943919b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80c57b01-e977-4d17-bf4d-5f16b421e6b5",
        "cursor": {
          "ref": "6cc27db9-b23a-43c4-9523-d7185690760f",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "ec04130c-3dd6-4b26-88a3-4203e27487f0"
        },
        "item": {
          "id": "80c57b01-e977-4d17-bf4d-5f16b421e6b5",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "955ea24e-e93f-4980-8b25-102854ff67bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1738dbb-c26d-4643-befa-1dda8bc8c3b1",
        "cursor": {
          "ref": "8040d654-be97-43a1-a05c-ab0669f331d7",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "5c5bcf2e-0333-4f30-ab2d-7ed1d4111447"
        },
        "item": {
          "id": "b1738dbb-c26d-4643-befa-1dda8bc8c3b1",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "505fed6f-a815-4c8e-9986-7dc30f8aee32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4860a7cd-c8ea-4a1a-b622-c4c53b1a702a",
        "cursor": {
          "ref": "a5aaeec5-f1b9-43e8-bf43-4ecabc8bcda2",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "bd83cded-8b50-4546-9df1-ecb116ddb0fe"
        },
        "item": {
          "id": "4860a7cd-c8ea-4a1a-b622-c4c53b1a702a",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "48460675-b0c4-4604-bee3-e295bcc27202",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56c7f0a0-d50d-45f7-a7a1-495c4a00be10",
        "cursor": {
          "ref": "95c65cb6-f6e6-478e-8b7d-35f446fd7d05",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "0f0c07ff-5738-4c81-ac32-f2ec61ecdaef"
        },
        "item": {
          "id": "56c7f0a0-d50d-45f7-a7a1-495c4a00be10",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "80b95b4c-5c05-4104-b3df-7aacd9967e5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0af608b7-4f73-4b23-8aef-04872dabfdce",
        "cursor": {
          "ref": "6f59af6e-ef12-4615-977d-92cd9b1e030f",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "d81253d2-7236-4d0a-811b-e1673805e618"
        },
        "item": {
          "id": "0af608b7-4f73-4b23-8aef-04872dabfdce",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "b1ad2f23-4d50-4964-911b-0e7521c2b7c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00c508ee-405e-4f46-b869-36624da7ead5",
        "cursor": {
          "ref": "5006c7c5-c36b-4d68-88e1-c9c48e636d0e",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "63ff7a02-a2bd-4a1d-bc93-4c3ca1a123a1"
        },
        "item": {
          "id": "00c508ee-405e-4f46-b869-36624da7ead5",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "10ba8802-6f2e-4238-b532-ec770bc276e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f937b85d-9780-4482-8e33-559eef27abde",
        "cursor": {
          "ref": "b32f61e0-15ff-40a4-af0a-15b838a2becb",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "ee0afbcc-f75b-4b57-8850-ba820854c6c3"
        },
        "item": {
          "id": "f937b85d-9780-4482-8e33-559eef27abde",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "72429897-d65e-42e8-9090-eac8c6faefbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac3a3429-8681-4188-bbfa-6d05d0f5d8bb",
        "cursor": {
          "ref": "469b33a8-8b12-49ab-90e2-9571245ce8c7",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "8be07d0a-fc66-4cb6-90bc-61a8c0da8047"
        },
        "item": {
          "id": "ac3a3429-8681-4188-bbfa-6d05d0f5d8bb",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "ee5d0536-0745-4772-9ad2-30cd50347fae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03633beb-8f98-40e8-8476-935fad9a58fa",
        "cursor": {
          "ref": "904bf2e8-30ed-498a-a31d-ece25c32a957",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "a8496bde-9e7c-4c2f-8f3e-7b83d44855f0"
        },
        "item": {
          "id": "03633beb-8f98-40e8-8476-935fad9a58fa",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "5f44798d-0efa-421e-b65d-3df95532f98e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a045e01b-9825-425e-8c97-51051217c760",
        "cursor": {
          "ref": "b874f5a7-d25a-472d-a1a3-23da3a306e6f",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "9ef680c2-67a2-41c3-9fd6-880731c0fcfa"
        },
        "item": {
          "id": "a045e01b-9825-425e-8c97-51051217c760",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "9619eff1-3175-42f1-ad52-b672202bd178",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e363823-c819-46e3-879a-82291be63a3e",
        "cursor": {
          "ref": "d54d266d-c209-46ed-b89d-0e82b312186e",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "0e91fe06-9649-4337-aa8c-a87400dc33d8"
        },
        "item": {
          "id": "9e363823-c819-46e3-879a-82291be63a3e",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "d9b80177-685f-42ea-a539-d24b82151be4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c52d7131-30f6-47e8-a426-b8d05099463c",
        "cursor": {
          "ref": "0b97850d-fae6-4302-9beb-d9f3a4887647",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "f9fee9cc-3760-4367-b114-4490da6f23fb"
        },
        "item": {
          "id": "c52d7131-30f6-47e8-a426-b8d05099463c",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "5cc5bff1-5345-4a03-a570-7762b5a8b69b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd26c3eb-6f1d-43c3-b970-c418962e430e",
        "cursor": {
          "ref": "304b6982-71c1-4757-9c79-8b940bd33be5",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "ccf05a37-79ad-48ef-8473-8116a4b5b254"
        },
        "item": {
          "id": "cd26c3eb-6f1d-43c3-b970-c418962e430e",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "a01acd08-4490-409d-8836-1623e3bb015c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad11c815-3787-4de4-8008-df20a7b90d7e",
        "cursor": {
          "ref": "1a01f5a7-c4ad-471d-92a8-6458d18cf9d4",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "36c6a95e-8061-440e-ae9d-b4541865f54e"
        },
        "item": {
          "id": "ad11c815-3787-4de4-8008-df20a7b90d7e",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "03a47389-0ec8-4199-881a-eb3f9a5855bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "422737e8-3aa5-4f8c-8183-6baa84cb39ca",
        "cursor": {
          "ref": "7b43e487-3a00-466b-9b8e-a8672778da19",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "ae217088-4234-478e-a7b6-f65debb78030"
        },
        "item": {
          "id": "422737e8-3aa5-4f8c-8183-6baa84cb39ca",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "c4aa4864-b708-4a48-92dc-96c611a59f87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c76cc00-b3c8-4169-b940-0d9106002e70",
        "cursor": {
          "ref": "a7f84d55-7986-4989-89df-61078565836e",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "4a560ca3-a068-48c7-bca7-c15234200e2a"
        },
        "item": {
          "id": "7c76cc00-b3c8-4169-b940-0d9106002e70",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "9e29abd3-389a-412e-8296-29ab3517176e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c72c15c-cf33-4bce-a99c-519b64c5f5bc",
        "cursor": {
          "ref": "4a0c6087-a80e-43e2-8e04-3dfdd446abd2",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "01678ed7-cf2b-4853-aa3c-13538fed88ec"
        },
        "item": {
          "id": "7c72c15c-cf33-4bce-a99c-519b64c5f5bc",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "ac386a2f-c9a2-4588-9f65-cf713e6d7781",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8b91b4f-1dcd-4858-b81d-910efe4a53fe",
        "cursor": {
          "ref": "a9f70f93-23a4-45b0-888e-b7f45310d10e",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "2e208a4d-f977-4d6e-96a6-4392d5094d04"
        },
        "item": {
          "id": "f8b91b4f-1dcd-4858-b81d-910efe4a53fe",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "9033dd7c-ac31-48ac-a396-dc1dc069574f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9183fff-b2bd-48d5-abcb-6e44b868dc73",
        "cursor": {
          "ref": "f6c31b8e-f264-4451-854b-a7556c32059c",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "1b52e003-2270-460a-aa1b-f9c81c85e982"
        },
        "item": {
          "id": "c9183fff-b2bd-48d5-abcb-6e44b868dc73",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "85f299ee-8448-42db-b2ac-79c83f7049ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6476cb23-e112-4ff3-91b2-07ec84bb4980",
        "cursor": {
          "ref": "6ab08e16-a386-4800-ad81-4f3cc93bba89",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "1dae22d2-b4e7-4516-b711-23abe5f10a40"
        },
        "item": {
          "id": "6476cb23-e112-4ff3-91b2-07ec84bb4980",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "db5e7dfe-bc91-4058-ba52-2183c142ad1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66796f39-4196-4db2-bf68-73f5273fc3be",
        "cursor": {
          "ref": "e9e682cd-f606-4600-b793-f1a815006513",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "2536e4d0-24f6-4c8c-a93e-45207a538a49"
        },
        "item": {
          "id": "66796f39-4196-4db2-bf68-73f5273fc3be",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "17b7c61f-49b6-4169-aba3-87731969cafd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8876e729-b4aa-4367-839c-b2360ffbaef9",
        "cursor": {
          "ref": "c1be16eb-19a6-4c86-9fb7-8d6e87a888e8",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "af7bee87-17f9-442c-8280-aab949a08946"
        },
        "item": {
          "id": "8876e729-b4aa-4367-839c-b2360ffbaef9",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "f38e4069-7d1a-4fe0-b05a-0a4784ac814c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fec4c564-38fe-4a8b-a44b-8e089d84b1d5",
        "cursor": {
          "ref": "8c65daea-d428-495c-a01f-26b11710ff54",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "fbe783ff-2ba4-4e74-b952-da6c9bd605dc"
        },
        "item": {
          "id": "fec4c564-38fe-4a8b-a44b-8e089d84b1d5",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "2d04ddfc-db57-4a4c-8ada-91eef7b58483",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "5be8916b-fce4-406a-a6b4-d8b601da1030",
        "cursor": {
          "ref": "9bf0a9e3-a8ce-44ff-be51-3dd875158e1f",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "791edc8f-47fe-4ad4-a4bf-8e3196a249ef"
        },
        "item": {
          "id": "5be8916b-fce4-406a-a6b4-d8b601da1030",
          "name": "credentials_verify"
        },
        "response": {
          "id": "2ecc87bf-84c7-4fc1-bbcf-09ef1a0e88e6",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ce43f40-5b30-4d0f-b0b7-f53f5b0ed042",
        "cursor": {
          "ref": "0c0d7fba-4560-4f06-a2b4-5e9f74ca3a5c",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "c70dd3ec-b9bd-4c48-a808-1a3416008f5f"
        },
        "item": {
          "id": "6ce43f40-5b30-4d0f-b0b7-f53f5b0ed042",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "df96d47a-574b-4efa-ab1a-a33880ecdd6d",
          "status": "OK",
          "code": 200,
          "responseTime": 18,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c9f28a5-3657-4df9-bcbb-9f3e98464cfe",
        "cursor": {
          "ref": "1e201c2e-3d43-4145-8cf7-3069880de693",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "0096806a-7d36-4eb5-a24d-3158825f90ac"
        },
        "item": {
          "id": "2c9f28a5-3657-4df9-bcbb-9f3e98464cfe",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e10db111-28ce-4785-a627-fb48f982c5a7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c9f28a5-3657-4df9-bcbb-9f3e98464cfe",
        "cursor": {
          "ref": "1e201c2e-3d43-4145-8cf7-3069880de693",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "0096806a-7d36-4eb5-a24d-3158825f90ac"
        },
        "item": {
          "id": "2c9f28a5-3657-4df9-bcbb-9f3e98464cfe",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e10db111-28ce-4785-a627-fb48f982c5a7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb4338a5-f5bd-4f05-acb6-5f650afddef1",
        "cursor": {
          "ref": "db867ce3-9672-4697-b16d-7bd4733d0440",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "b160cb5d-4103-46fc-8af0-e7b00d1fe74e"
        },
        "item": {
          "id": "cb4338a5-f5bd-4f05-acb6-5f650afddef1",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "ea56f003-4bdd-4e3e-b9d3-422e76b945cd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae1787e3-a37f-41ac-9355-4f657c9cb85c",
        "cursor": {
          "ref": "c82b2b28-b803-43bc-8005-b5ad9bb0bcd5",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "7a2a07d5-2b02-4e87-8665-9aa60c2c392f"
        },
        "item": {
          "id": "ae1787e3-a37f-41ac-9355-4f657c9cb85c",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "16dae477-e955-4303-a42f-3fa34b93a946",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}