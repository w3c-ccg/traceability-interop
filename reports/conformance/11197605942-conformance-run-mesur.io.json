{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "2988a69b-cce6-4f95-b0ed-20caa3754b10",
        "name": "Clear Cache",
        "item": [
          {
            "id": "3d8e5504-ff2c-410a-addf-4f5e19db94b9",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b54ad9ab-af9d-409f-b423-10997faa16f5",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "cdb01a0a-4775-4f19-b233-3d26421bf662"
                }
              }
            ]
          },
          {
            "id": "e456135f-65f4-4659-bd35-e4e02c464002",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4a89bccc-35e2-4d08-be0b-1cace29ed882",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "c6a71a25-5b95-4468-98ca-679e40a978de"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "3776ba62-5c3b-4247-89d1-800ee6584b79",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "0f625845-db29-43c0-8219-237cfe30b9a2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "53f4e439-84d8-40fd-8066-38918886a232",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9bc64567-6abe-4fdc-afcd-03a40d70ae48",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "116a71f3-ef31-4e5d-9c7e-dd59993eed02"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e0e200ae-be73-4c45-9138-232d8f05ceb4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bdc324da-8293-4a24-ba21-987d99a1313b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "53ea1ec8-d482-4a8b-9671-f12af3d3fd75",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0061aeab-a497-4fa2-be17-67ed1f0013ea"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b21f0b5c-47e6-4a7c-9321-96d26c5ae9c8",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "d4dc07ea-e856-4741-b758-6f1bbe87a6fe"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "712aee16-6aeb-490f-8cac-78f70b44d73b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "378a0793-137d-4daa-a8f5-8003e8ea30ef"
            }
          }
        ]
      },
      {
        "id": "2aa1a65c-047e-4de0-91d1-1820230de066",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "8902b3e4-bbf3-49cb-a92e-a50c8f00761d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5a4b0066-784a-44ca-9686-bcabca6bad5e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "82089162-2341-46a0-99c0-beeada57b4cc",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1e12d28-c598-4dd6-8a35-c55caf307d9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a2c4e569-60a6-4572-8e5c-77a74f99cdf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fc1f353-59d3-40c0-b11e-d5066f0f82a2",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5ada0f3-1cda-4069-94c0-adcb7c8d0022",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7b6d2e75-203f-4127-9eed-57f9e34c4892"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25037dc9-bdee-43e6-a887-66aa7d80b8e3",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0eaa1c7-df56-4e48-b2fc-2f715a2c1965",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "656c0e52-9ef1-4632-8f26-b85dfca6c216"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b5a804dc-9f3c-4185-b990-ad1c8c005c2b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4b3df027-4047-426e-a829-24ee476a1583",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f035a40-f6eb-461a-aaa5-6abc9822bb83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "01af7f92-0135-41bd-9d4d-f8df8386deda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b37ebef9-8b09-4e7c-b813-9367306ada61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2a43e46-022c-47b6-a568-04150fadf2e9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b362d00b-6841-4631-8728-08e980660647",
            "name": "Positive Testing",
            "item": [
              {
                "id": "272596f7-5da1-4ab6-92a1-de2cf4af3047",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "966e0ee5-6648-4e1f-b5ab-dc217235980a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "401c928a-aff9-4668-a5f2-bb350a8da2a5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fb265c0f-8c0c-47e2-bc7f-7146f5b77241",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "9ab951e3-193b-4c3e-b2e8-ed5141c2d691"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fd76c871-ba00-4ff4-9fc4-cbb6cef502cc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b138cba3-6823-4e75-8e33-79547f1c833d"
            }
          }
        ]
      },
      {
        "id": "84144c87-c646-447e-aa02-46db15208881",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "9611bf25-e3bf-4ba8-99a6-3fde75c602eb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3e49a82e-4837-4826-af4d-0645a5aa2587",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "7c9e8df8-4c02-43b7-b8fc-1002b2a45be8",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a775fd7-da8f-4cf7-be20-17da0e653190",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "618da973-2461-4bbe-82d4-411bc638cc75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "056011bf-06e8-49dc-be40-073f978a8ceb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a6bcc443-7c45-4709-969f-e0c38162d717"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b541e446-b4e4-4d14-930a-85c3ca656aa4",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "182b50cd-89dc-436d-acdf-998717de628e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7473e3c-7745-431e-986b-9d38b54be97c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c17c636-a9b7-4309-90ce-34d8e22f17a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "79404169-b513-4349-8ec3-cb12277defb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d40e160a-398b-4511-bb9e-313f731f62a0",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43970505-d4cb-4fa5-bc0d-42a87db65094",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c03e94d-e40a-496d-bf58-b9e68870cbd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e3cf94a-a084-43f0-8a5a-9f3009b63bcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3b0f2b21-2031-40b8-bfb9-400145679463"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73adb205-275f-4c27-b214-a8fb4cd3bd54",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e07bb39-74a1-4a1d-814b-621c9b9762da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f46bd1e9-1848-4d1f-9ced-9b7a0fe4dc66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83b3f0b6-8c1d-452f-b842-9550e5b6ffb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e794f2f6-3256-4216-b4ca-a6ceabc5bb3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a13ee99f-fa22-420e-9a19-5cb7ebf9cbc2",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2641f627-de01-463e-9fcd-325be28c99df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0b15870-b376-4080-8028-60ab48a7ac74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a26b4881-0beb-4a69-a5b3-10dbcac7eef3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "41f17a44-608c-4c1c-bf7b-748b23b8d223"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e123af67-d65a-461c-b6b8-374b35e4b7bb",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27b36a5f-19ed-46af-bf8e-3fc846c0ac7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f8d50ec-658f-4097-882b-41b89f7e42d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a8a8c5b-415d-4caa-a900-da9995e6e00f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "458011c3-f6c5-4bdf-bd13-23b7e087670d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7516776a-3021-43b5-91d4-d4fa4b27160c",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e226f8cd-d906-4f30-857f-896f7328b3f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b22fef52-7082-49a7-b0bb-b7213328bbf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "288e6a42-9b86-4ddc-9b76-caa1b2807e9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0fd01f2f-105d-4864-b135-e8bacd54318e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfd08eb4-78fb-4f56-9dbc-33313fd96159",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bcce46e-b35e-4825-9e4d-ec675e5e9d11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2288501e-b816-4cd2-a589-3abaa9af48f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b0aff5f-8f66-46ed-8803-3150f6ccfcf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fda6d605-949e-4d54-a7dd-3713a65ec3c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48beb630-2a64-4110-8580-b0ef02cc5b49",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21c14f64-ae42-48ad-a364-d397e5568e1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06fe1f95-86ec-4d57-8671-4a61d8e0796c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "659d5919-957c-491f-aff7-250d217f6dc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7a849188-ee91-49c6-8ec3-a516e61b62ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62714510-e65e-4113-8816-7fefd37f4deb",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32bb11a8-4145-4383-bb5a-aa3aee35e334",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8ca6946-5119-4555-b46f-774cbc635430"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c244892-847b-46e8-a67b-017364304092",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f55778d4-e1c8-4c91-8243-23e4a977a85d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "475fec1b-24c6-46f6-9724-d86c185bbf5c",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57f2d606-2c34-4d14-950e-c50b2ded1af5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6176ce7-f4b5-4fb4-b330-92fe602d9efa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d85fa95d-4172-40fe-938c-f65f8da1dbef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6c542ae4-c7cd-4f9b-9daf-f05950fbefae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5454f453-4f38-4951-8331-a17b1715cc20",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "155e12ba-7e75-4e6b-b153-19fafec8ead8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac6bafcb-210f-4622-802d-e9dd4fc29a84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d103cdb1-5173-41e8-9a13-c2305d038630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3d8433ab-f834-4521-9488-ea668a98306a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "837952ac-49c5-4374-a138-c945b3acc4cc",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7f12fad-f0fc-4e54-aaca-f224d292e72b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78ef4efb-97dd-40ee-8c26-44650f2a575a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc96c271-1d49-4ff2-88e2-c0398347255d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1ce89a10-b0a7-409c-b256-418f9276d6fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3de7d26c-9370-4abd-b773-726e2e9a348b",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b7166ca-3752-4086-888b-3e0ac33c2a13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d39ca9a5-ba28-40e7-946c-c9b20cedbd39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f43f994c-34b4-4334-bee1-4877e7eac585",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5149044e-8c45-410d-8a27-6bec26032afe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "262827fe-1019-4944-8581-034b6a03393f",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b068a22d-68ee-4944-b028-52087feca88b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d96f0432-4f1c-4e6d-b9ac-0b6055d0ef12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2eb3742-5d30-48a4-915d-ea396133b7a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e2856db8-a671-404d-8b22-62da969e703b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57caee73-a1fd-48d7-b255-ac7205237544",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19cf790b-a187-486f-80d2-3106b23e34f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fd8a303-08cc-482c-8554-3884564b0639"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "777fd73d-1948-4347-8f82-b4308724b80e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ac7a2c8b-556d-4b28-881d-a0f6ae0fdd1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "880455ab-5d63-4415-b6e4-d163f058f882",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc79d2f9-9551-456b-8389-8d3554b40d1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "838318b3-b725-4e6b-ac72-bc029e8e0a6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cff67d0-1bdf-4f64-8727-6a04f19a365a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e3fc2fba-28b9-4a39-a6bf-fbf31d4831bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c02b864-e281-4af9-ae8a-1eaadc7539ec",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75c38245-3b5a-47e2-bc19-57c50e7d18c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb655302-54e9-452f-97af-9827f4264a69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1cf0ce5-eb3e-466e-8161-42003c44eff0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f47a22d-8bf9-4bf3-97ef-c0016cffa001"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f4315fa-7bef-47cf-9ff9-6edcb326cbf6",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "439d1cb3-ff1b-4893-901a-fe0baa75a44d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7639855e-4c8e-4971-b09c-e47086e9f237"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebfb7e53-a2ab-4285-b8ea-b83d767a29bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8eadb743-ee66-4206-94fe-3b01a6ca1f3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae8dfbbd-95b3-4067-bb88-34b1c57967da",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e84c3794-df92-4069-956e-b5f872cd8607",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5143dce7-aeab-4000-8044-94f79af9ca46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d03f4942-7c07-4b80-9ee3-0e382b90ab74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7625eb5-3508-4fd9-b652-f7ba52c3c196"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59b36fd8-234d-4a9b-bacc-d09d8876b61c",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7d05ca5-1675-40d4-8557-35e2733dbe21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb9e8a13-d6e2-4ffb-b585-62aa062522c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc92a731-8737-43bd-9b96-ea61829afb74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8a1d531-af1f-49ba-9eca-87753f1c8622"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51361592-0555-4471-ad5a-bb6d015a36e7",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4aee21e-b6b3-4369-acd3-32ef499e5ab2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1110306a-1b70-4e16-a717-78840f0a198e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a29a8b1e-7178-443e-a14c-4e6945cff870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "af6325fe-81a7-49d5-8f6e-b05e281e9fd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93997680-a6f0-452f-a895-0dd864606f84",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea22f011-e5d0-438a-a2f4-61556e72053d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6392f736-d752-40f9-bd88-22b023fa9c9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15917acd-1ff4-4534-a54d-5222021d44ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3226dab1-31f8-4547-aca7-bbf4c1c2c9cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0ce8bb6-e816-4d42-b610-c620116cf86c",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a10c4144-69dc-4b94-9bcb-13b9f18856eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33811082-c82d-47a1-aef1-c8afcb36d724"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c99b4e66-abb3-49ce-816b-fe3cfaf341aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5784a99-dd00-424e-ad91-7815debd2fdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17ebdb56-51ca-48c1-9c84-4dea2d20713b",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b204f7f-7533-4051-a295-4fa1d77322bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c285bb5-5ea7-4c32-aa9c-a3bbe701254b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76a1c4df-dd31-41f2-803e-e0ac3e02ce9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a9a5177-9620-4351-8a95-60415bb4b758"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4792bfcd-fb4a-4ef8-8751-fac1d4d4b384",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "918037ad-24bb-46d3-9dd5-1c7d30884ccd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08103103-bf05-48d0-b3eb-efbb8c704f64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e81df154-1313-4db8-bdb0-6676e9dea91f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9fa21fe9-eb7f-4a9c-954d-f224c98f095e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16a2e33f-7f71-4c11-b3c5-7a155aa2c283",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bacfc4b-1b9b-4c56-b00f-f34c0e3add3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc0bdf61-71fd-471f-93e0-4916106e5d30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d0aa816-a4f8-4672-b244-3de2d10cc4a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "14e51929-66ae-40e3-94cd-d860f649280b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bf1c20e-109d-4f66-9334-4bb6f7531bb2",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85a8fc81-c275-41bb-b5a0-1c316fcf5795",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "421ba6cc-d23e-4eb0-a46f-c7c6eef26ed1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb4cacdf-cfe1-49cf-90a7-a1dcdbc71eda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "619886d6-eb7d-45fe-bd62-2ef628b8a74f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4b0b8df-0180-4cd8-84fa-6035ce8b139c",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecb637af-3d06-4315-9751-0bb433da4406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5aa7137-d5d5-4b51-846a-59f0600c37cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54897544-cbaf-41c8-a2d8-597d6c3e65ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9505b158-6029-4050-b388-1d66379e7fa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8582f2de-4e2e-4fe2-8e0c-0caa704d7769",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "672de892-64ce-4c12-934b-b4f5bbcb9e2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8474001-fb43-45ce-8a39-438c7087d9af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c88997b1-5e26-405c-8aba-af0ec9e2b999",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "75adc468-1516-4bae-962a-024911b614dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6f07041-6ebe-4383-842a-83cbd479f668",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1cc1e2d-aae1-41ca-94d5-94ec5cab97e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5db1ec2-56e5-4132-a285-e984907cf49b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ae15ee7-189a-4050-916e-4d347c14410c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d88c13f-7f9d-4cf2-9c53-eb8552ffe131"
                        }
                      }
                    ]
                  },
                  {
                    "id": "402c1d48-4b61-4e71-bf37-190035b82970",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dec4e14e-c92f-4e56-bd1b-32ba04833a00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54c031d9-363f-44cd-b7a2-805ca7c525a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2a28f61-a405-40c7-863d-7f2c71dabd8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "27f06e88-5e4a-4090-ac22-69630fbdd009"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0673674-8dd9-4d68-84bb-545f283b6079",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0b40eb9-c6f4-4b99-ae0a-ee942079a2c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcb9fef6-320a-4a89-8399-fbb587546377"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faa2a697-fae6-4246-84fa-cefff852f01a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9995d256-0a8c-4c82-b334-f66d3de8b143"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4184cbf-2837-4d97-80c4-fe8d189341ac",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51db6eed-f6cc-4812-81d5-ae6ae12f729d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d623e72-34b0-424f-92d8-623f3ae52d1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9073f4b8-8e38-4506-bbe8-1cb6bb3dd679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b8ae7e0-3091-46d6-b485-ad7f2aaae8b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a9a7734-0c80-4b1d-9aa9-37173327c06a",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d58b8999-3086-479a-9a9f-9444f304529d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d89bbc58-9a88-4b4d-a789-c1a99b0d9757"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "301a8c9a-f6ba-4e5f-9a18-7e4e1eea0079",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "44a06e69-3f3a-453c-9e8d-159d809479e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a53357f5-fb1a-48f0-b72c-31364bce30a4",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ed6e616-fb07-4b62-9538-e17e3ec9d4f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e82c795d-10c8-49af-8f28-67f7dffed1ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98e6c28c-5777-44b3-83f3-81a4b6704588",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "31b67f04-6469-4568-b53c-d47de92ff929"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ec03563-92db-4373-b81c-564afbd5d9cc",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "267a2c0d-cf0b-4b5c-8b7a-87b6bfb96b16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "441962a1-7cc1-411d-a710-c3d93201e621"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "294b1c94-dff3-43f1-a863-5615fb62d337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dc40c1b0-e19e-47e4-9f6a-2ff2d62bb971"
                        }
                      }
                    ]
                  },
                  {
                    "id": "792caf6d-f99d-4172-b00b-60786649fcbe",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b90d62d-47a3-4287-a43a-9b69ded09646",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac9c61fc-b451-4e49-a7c5-ff01a857446f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db958f80-251a-4f50-b186-b6f21bd9ed3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2320b18b-47e0-46c2-985e-d696d1ded906"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db3bd618-3667-4b67-85f0-016f79a663ab",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eacca81-8f81-43fc-9d3e-7d542f53dbb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25917a75-e7b1-46c4-8edb-7b660d377c7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1d42bb4-190d-4f76-8efe-cfc6c6a66650",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3d944779-d55f-40d4-86a1-6b815afdb889"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c91262f-f11b-4844-830e-3f13ab8240ae",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d009bc83-9d17-470d-8a01-01ab86ee6893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "436f8f85-1409-484d-9c28-92cce5fcb545"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f891b88-b4dc-46ae-b72a-0459a7f50f94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "56b60e53-039f-4188-8664-0f19f7d26060"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89ab9c29-941f-4bd8-9e02-b755b832d5f0",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fa47053-3548-4ab5-bdda-64be079f69c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "375a9886-93a1-40d6-8ab9-1c8d13ebd670"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3452d45b-8af0-490e-8018-f10aeba6321c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c83fce10-c2b0-44d3-8ca8-da75e860e473"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1282d064-df75-4ff0-8e64-b80f7640aa09",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5bdbfdd-1ea6-4223-9a55-48b1e0dd5925",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30d3e59f-0fe1-41ac-aa62-f200df6bdcd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9ac9c2b-8789-4df9-bfa0-f00668cd6cd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "fbcf2c91-488c-4bac-b16d-a210febaf70c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f089a49-1d4b-4121-87ec-a5955747b063",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "827abf06-b521-428c-bde5-de85d5dcab1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02b1ab9f-547f-427f-932c-d9c2fc742968"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acb9c5be-038e-4610-b5f5-81236823fe55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "4e486d02-55b2-4f72-bdb2-62921d879161"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92fd227d-1b00-43c0-b5cb-56c5c2fa7da7",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "034c4c46-7c44-467c-a59e-f3ea0c0fc4eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e439ce27-3b06-4b3e-b248-e229043508db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06f0c2ff-1e4e-4d42-8faf-f8637f8d91f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b42a715-8d38-43f6-988b-576defe5a23b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f93394b-9fe9-473a-a3ca-148783de03f9",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf009b55-f451-4f1c-8823-4a29de6efd58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03a1a51f-cf74-4fdb-a359-02ad3508e459"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26c3ca25-4b09-4e3f-b19f-0e4941440b63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3139342-d24f-4a3b-b48c-e7b286232df1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d716c1c2-6e76-493b-bc69-8d489c5774c7",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "641b28cf-0d41-4ded-9834-7e1d496b107a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "415e49cc-4f7d-4216-8463-a6ad0ba36286"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21f0a778-7f86-4762-a0f0-ad2b4244bfee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "24c23365-2751-436b-8a94-865531733625"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68f3dd68-11ed-4d6a-abf7-efbcb746c2e8",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1e6e920-d6b0-46b6-a8d4-ce230e7b9b11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d8da376-1478-4261-8f0f-a5c75509d6ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94971684-d7a8-401a-9908-1d3a79e80588",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "10d935b8-6763-4f57-a181-b6bf6b443df4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7210f201-491e-44f3-a8bf-060e31b1ebb2",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "243a3d83-9ba5-40ff-bfd5-ce63043c1289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5265ec5-4235-4fbd-9989-faeae00bade6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c9e31aa-044d-47ad-912b-626bfd2aa26e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2683f81d-6e22-4e29-84fb-ecc204f28e7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d98cc6a-9c41-411f-a719-1534eb3fb1a8",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "097b9b35-b87d-4c1f-82b3-b9beebcb2a3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad775cdf-d5f6-4475-b5e2-a58cbb5a5a75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a841577-ef81-44d3-9114-a90e3f27f1e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2da93907-e6ea-49bb-a795-7324d777468d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1997d098-c106-4ff8-867b-91b14369421c",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d433ddee-02dd-4314-b18e-1106b3452a7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcdd3edb-42aa-4581-8cba-8098823a0282"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e18ab0a-b6bc-4e55-9dd4-4995b7e37daa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "17135b1a-f435-4cd2-b910-60769e61513a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a14d8d83-1fa6-4aad-99bf-981d3283da25",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd7b4e26-dd04-4f2a-a9bd-fd9ca04e61ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0dcd498-f06b-4720-912b-a8ab90577bf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d13da6cb-a3ab-4779-a47e-67ca28665dff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "70dfda7d-3c13-4180-9ffe-a4bf97d19750"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f15641ce-e319-475e-a1f5-6c456b54091c",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fb021b9-2e2a-4696-8421-8d1935b267ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5fc83e2-ed04-400f-86ad-cbd4809a977d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51045460-6b7e-4346-9432-a93ba2ba1d1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9247094-82cb-4270-80cb-1852605b2428"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22d1e6d8-9a95-4b2a-ae29-5554e43c2c3e",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7b11d41-2a5a-450a-8fb8-f2f7ad01ceb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a589f7f-8f62-4633-a5fc-0c1efd5c94a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b47223e-6c96-4d9c-8136-d529b5eacfeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "10c60efd-358d-4005-8904-01b3f6a1d817"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23c69d36-447e-4e06-b67f-db2300e20933",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0917ac7-9df0-4296-95e0-a12a0e71bdef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8c59712-8ade-4dd7-ad78-31d5ff040110"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e811cc29-44db-4ccd-bd1a-60de48ccf14f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d023021-b08e-4d5a-bbf0-e673d2a9e5a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e6980d8-7883-40d2-bf70-4ea60eb22b61",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b17cfda-4b2e-4c65-8c0f-e770338cbc6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "114f7a08-72bc-4deb-bf48-a644fd01003b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "086cf19e-51e2-403d-9416-e270a1b9c866",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "64e024e1-9f35-4aea-863b-4bd20b33bfcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "658d058e-7c3c-4089-966c-e71b4b12d17f",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d3fe3b5-da7f-4715-9795-5c839c9684db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "454cf524-da78-43e6-aa9c-5073aa9e85fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cbf22c3-2af0-4c36-a733-fbdb63e5f2ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "e38918f1-4f3f-4fa9-8381-915ebadbe85e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8fc6855-6ffd-47ed-8e91-341d9564e649",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d349ea00-46e7-445b-81bb-29368a81b426",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d21534e6-8cb5-433c-89bd-55f4d67c0874"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffd6cfd0-99c3-4d49-a924-d0e1ba51942f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4700d43c-226b-4d2e-8387-50cb9a26fe19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b942b086-ada4-4160-9b48-18b9b260bff1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c66c9e3-7d26-475d-b668-13230c16e883",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2ee7853-652d-4aae-a0cd-e1987f3adaaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf065d61-fa72-4590-a097-33372b2f6ebd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6cd6aa22-9c4e-4c91-8f36-75c8c309b536"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16626b80-fca4-4496-8272-dcac49183820",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5912bfb6-b3be-4ddd-9ae8-197cb3cff1a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e651eb5-d087-4ffd-ac46-bd135cd9d32a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b34c3151-0dd4-4807-ab45-62e73d9ab5cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "25e137c0-7f09-4636-b1c4-1b4835ad0d70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5677ab1c-381d-44f7-b91a-df61a520e018",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3f02514-3ab0-40dd-af0e-bdd127cfc1be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09d4b68e-fc84-4953-8148-d51ab4ec6618"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89aa9036-afa2-4ebb-aa35-ba37f942342b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9f2509fd-bfea-402a-8d8f-7c2de1defd70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c61ca209-f992-4f48-9636-8e2dd4d2021d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64778aa8-28a0-47d0-a5fe-1fb9e9008158",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b02ef85-0006-434a-8782-4623271f344c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02cb08dd-c608-4957-9426-ce0a9a5060b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b6798b2f-61d3-49fb-867a-179f49b51397"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a65a4d0c-41c7-4176-971d-8cfb85e7dae9",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9a1db8b-a606-46b2-b436-0cc48c41cd9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b32fb3b6-793f-4acb-8fce-d43a992e5468"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f94a9b7-2b15-4d0e-8c43-b7247a4d9515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "bdf546e7-a5ae-46b7-a398-e68c1ab473d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13198fb0-a827-4672-9b69-eab72c2c4be0",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e115861-4f34-4331-9f81-39c3f678c995",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffb76c27-0328-4db4-a41c-5de00915905f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d56bcc2e-b06a-4085-9a3e-c85c90b54bea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea57084d-3eea-4fe8-b3c1-1dca9df8cce0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6742c929-46aa-4c5d-8c73-52fffe103e01",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caec457d-f988-4f99-9121-f7dad40abf73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17404aec-1cbe-412d-80f6-8a368693f858"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aebbe98-fab9-4d83-859e-80cfc2778c63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a341150-50e6-4a77-97d9-39f14d821ebe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a968f50a-4963-4038-9e01-f2b950f892da",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8bf363e-007f-45ff-87a1-d8562dfd0250",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d2574b0-1007-4f46-8517-0d790e213702"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2d88a81-122a-45d1-b483-83ca00af615e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "87c89bbc-d85e-45c3-81ff-4fc3111147cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b633a5f-3214-4cff-ab89-64914c75d0f9",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ee9ffca-7147-4c81-bd08-dab64e056c97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9956d6b4-5d3b-4bd2-bafd-588c505e616d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fe43f5d-2d0b-43dd-b3ee-42f2c95e2a23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bae9a258-955a-48a8-8d8f-4ef212610e8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "119df32f-eb42-4fe9-b741-713c4c69c6ca",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1802304-bd80-4610-9e7f-9f847d6c946b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ab1906c-5826-45e0-9f7f-a7aa93510820"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec692e25-be19-4be5-9dd1-e3aeb47b15ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "51c0907e-951c-4391-bf4e-eeec477878fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fd5dfb2-fa4f-4f3b-98b6-2729a58103bb",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76c9396b-12b0-4803-b05e-80897c1942fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57d61927-371b-4509-a521-adb685d1453e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "321f4a22-d2b1-4c4c-9456-0b7764589630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "51007c95-b250-46bc-a6e2-42c4bace90e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "501e71d6-b342-4433-a39d-e1ae19dd2365",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c2697b3-f36c-40af-9d73-05f0f63a15e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81fbc4c8-fabf-4313-9ee3-95d54ec9c67a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "583f1b29-d81d-4ec2-99b9-d61af467b431",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c51442f7-e6a3-473b-9b07-306cab01f495"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e728dd57-2e2b-49a2-8a29-9315f404e0c0",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f132373a-435f-40e5-940c-9642e8a7c77e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d1141b8-72e9-4e07-8458-34059be0d03f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "592ee26c-33b7-47c4-aa49-898d9a6b9736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ccd2392-44cb-4e54-9355-b66050f8ba8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbfc32d6-bfb7-45cb-ad41-04bcc7eb7c28",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff2cc506-ab72-41c5-aa9f-fa078c694580",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb8e4328-6755-4f9c-9fcc-68f7cb543cc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ef27396-001a-4ecd-a557-c7ec1eff80de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "935866cf-2d8d-4801-ae43-8f0aad6deb0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5064e0f4-0523-4d58-97cb-9bf29fb53d07",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afed19f1-bcb5-400b-b871-ca9c023452f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cf28f4c-ffc8-48f6-b748-909a4011d896"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "233d751d-cb1b-4cc3-b223-7d7cedbd500d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb90bd39-9117-476d-8483-b8f5c9fe8937"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3306072-d7c0-4cfd-8abc-38218b9461c2",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6c05573-adb4-4e5f-adc5-e7d2cc5b6d1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "816cec7d-725c-461c-bad4-69a310569484"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ee95634-e782-4e1f-aea2-292b72e976d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6cf255f0-0145-4cbd-861b-521408e85044"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceaab015-5525-43b1-b893-cd9699d07626",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01b3485c-4d22-4fec-abc0-074df89032a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a96c65b-785b-43fc-8464-c76a82f7c4cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e5300bc-eba3-4419-bf2a-ba265e792fbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0bf9a0bc-d87d-47a5-8158-add5dcd93741"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c6bf3b1-7662-4123-8c4e-77dcef82ded9",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c2987c6-0b02-4f41-8531-79969a165862",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eca54a5c-e8da-4268-912c-ae1104d0b608"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72baed38-cd1e-424d-a8d7-bcd9a852f4ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4dcd6fdd-1458-4e2a-a5b3-9b6d6389b3ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0644ef1-d098-4e01-88fb-c3025f7c47e9",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e97d4e95-a698-45ea-9dc1-95d24f2b1c68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72539d3f-5dbc-42e2-864e-9c08485b0c08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99cf506b-bf45-4352-959c-c9f9e5ed8cba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d579f9a7-ec39-4cc9-9bc4-a20ff6f820e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c7158aa-d7ad-462a-a0a7-08547788f5a7",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "089e297c-a72c-4518-8737-f8794c88b1b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "470f2cbe-7063-4454-b3f6-bdc53a27f06b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3001dd3-0d8a-403e-90ca-f3ab4a732fd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "688adf50-5e17-4815-9f0d-9dcf3dcbc7c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2739cfdf-a0bf-47ab-95a8-50edaffabbb3",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18ac9e19-027c-4dbd-bc20-4abe6c96b698",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "742666df-cdf9-4aeb-bfa0-6f780889f51b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef9c6c95-b6a3-42b3-a57e-ee30a8e79881",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "63974520-0ab7-452a-977d-5c92e7c535d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20437314-81ff-418d-95eb-3b9f046c490d",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e50e47d0-d756-4d59-8a9c-ec3dbf562f3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13ac2d86-fc0c-418b-a5e2-935c02351cd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81da9524-449f-4968-a96e-aaf9fb218b2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4529deef-3a62-44cd-bd8b-a916503ff028"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57c96a7b-dec0-422e-b2a4-fad20d3532d6",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23be3d17-73a4-4130-8e3c-84d654188029",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0370cb9c-f069-41c8-bffc-2dcaa58d9732"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c1c7275-41e2-418e-8587-eee52365b43f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d694195e-baa0-49ed-89f2-ef716c76593e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c7c32fa-49f8-4912-8283-973f72ecb4b0",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4e6b27b-1a7c-4f9a-9208-31e5bb4adc14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e84ff77-d683-406b-88fd-3c78687bcc63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b73832bf-a3d9-4944-9acb-05750f2ae544",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9316e9ce-8def-4bb2-b977-2f18f979c8db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1e2904a-5fe8-4f1c-88df-035004a1b7c9",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5dfdd8d-8eec-4951-936e-50387a12d4ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29ab4162-4e6c-4435-b050-e6a6fe135a71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0c7a320-42ac-41e3-8f19-434cbe222ee5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0267a1f4-31d7-4e20-a58f-e7564ba790c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c2c59cf-bd2d-4fc7-8d32-6bf0db305a85",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68ec0355-18f4-457b-b534-3057347ea9d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4014b1d-de8a-4bbb-9196-cd2769449039"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e956647-3981-4e01-bf9a-d81add4938ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2d7f420-99d9-4b91-a046-d4467f4ed593"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60afae2e-b00a-4835-8d0d-562bc801a305",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75ea9f11-8d0a-4793-8bc9-d5ae259be6a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aaa93599-8700-4a4d-831a-810119909a95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8047b189-e571-4d0d-952b-63e0136d1609",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e83c6c7-63be-443d-8b90-4d2e92f9c847"
                        }
                      }
                    ]
                  },
                  {
                    "id": "770f363d-1b55-4f42-bb3c-e1a50f145daa",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8be7570c-2582-4893-95f3-df16f0122dc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dfad715-0d53-46fe-93e5-460f72905502"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f19f85e2-71dd-4bfe-9da6-5b3a67b0becc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e10aba4f-c51c-4e0d-9fd7-88247296c343"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd82d0d8-8374-4103-8e35-01c93ed0f7fe",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abf6c7a3-3099-419e-931c-7c60154d71a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55f5182b-ae2b-4147-adbc-f811ed120779"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4bbce1d-8b1f-4b82-a381-011e55d7097a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "96dc5e25-a859-41fb-9ab5-52810cf42231"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ca85836-bc8c-4c7d-a962-528632997fbb",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a452493-c881-4fa1-a13c-dfe895c58769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c25bd484-71d9-4c3d-a7ea-1f7d8ffe29f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f438bd1-8b37-4b5c-b538-248715985078",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e4886763-9353-4437-922e-f5a5779579c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27bc3f58-e4ee-4bef-ad76-147217df0664",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85f22946-16a6-4fb0-8aba-979da5eee202",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db71deb1-f9fc-458e-8592-c5ec68be5e44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4278f6e-126c-4dcb-8ccd-f9dfede79f9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3f4187ef-f2b8-4c3d-bf0e-eb8142db659f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52d24551-52dd-43df-b752-2e81b94beab3",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24fb4104-9ebe-4e60-8ca8-2ca9852edff6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c46b3ec-cda1-4c76-a776-23fe4412c83a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09a7da16-4200-4e0d-b3cd-1589035442e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "aa23f2fe-12f1-45db-b052-ddddc5ee7a91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64faa749-2cd7-48c2-ad68-76cf8b766446",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3913c1aa-4d3f-497e-b540-616910ad81ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d1a396f-298f-4bc3-a094-5fac32535dc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3c312f8-44e3-4961-a55e-baf34e90317d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b5038947-09b6-483a-9c10-41744bb5aab8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bedbe5f1-a965-4c44-99c9-d19b9038d339",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaa23796-cfb8-419d-bfbd-786649373cc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de60da3e-473c-4788-8759-4217385cd6b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7640b3a1-b8b7-4183-87a7-5a4be47c72e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "27a9f49d-f5f9-43e1-8a71-145703ee1fcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8ad0fef-ad84-49cc-9fe5-ffa87abd4d7f",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10bce52b-174a-4054-bf0b-43f9b9a7d245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "4be8ed29-acea-4324-9704-947a5acba8b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b1b67f2-cb59-412f-a036-3149631c8abc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "4a383e40-c396-4bcd-a3b4-3f6f94a37767"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3ce2e5ed-7ff3-4ef6-83ef-85eb9ca26c86",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3424809b-70a4-4baf-bd60-08ded3c5edaf",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05add08e-858a-427c-9943-226b4cce41d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3281de97-903e-4e4a-a4c1-b0c07ae4e0d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e863e8c-4b3b-4960-9d60-cba0f2c6f90a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4733107f-3c30-4ac4-be8d-e66b19061595"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a91fb5dc-2410-4f12-8073-8c1b8e03c368",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d4492a6b-a2ee-4d8c-9724-cc3f3af8cd14"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a711d930-adb9-4599-be61-0c6c10e78301",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0cb0e271-4bcd-4ca1-916a-e47eaea933b4"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "972a795e-24d7-4347-ad1d-9ebcd38ee769",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "83ec7d2c-361d-477f-8627-0c1ddc2d5380"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "208fcc71-cbb1-401f-b7c6-0bfee2b652f2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c9672fa0-fb49-434b-b950-118b14aae804"
                }
              }
            ]
          },
          {
            "id": "bd1d66e3-a464-43b6-b7ce-cd51d821aa8b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b7267186-cf11-44e5-ab66-1a219052da18",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "08cbaddd-d6a1-4dc4-b678-c5498ecb38c5",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d727b42-c650-46dc-9f8d-41289f16f6e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "ac78498f-0ed6-4bc8-b2e4-2a02421f757e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bda8066-052a-421b-8474-82c99860c2ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0b235fb-b38f-4bdc-ab49-aa1978caa408"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9d1b3926-ad5c-4773-95d1-199275eea5b9",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dd306ba9-0f40-4be1-b471-56aebbbda865",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3f2ee777-23d4-4769-87e3-a4a21acf5fa4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b0f069ea-5f23-4f26-84af-3c3d89c67e35",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2331e6e4-4932-4dc5-85a7-1e0c10db0911"
                    }
                  }
                ]
              },
              {
                "id": "c8475e39-2e2a-492f-a47e-5c5ab2c8e7f7",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "092ecdaf-634f-4544-a6df-0c4b3b5195a0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "751dbfaa-10b4-41b7-8598-90a6b0b857fa"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dfebf50d-0375-4014-8e9f-86000dc33af8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "dd51bca2-6138-42e3-a84a-3d0818fd2651"
                    }
                  }
                ]
              },
              {
                "id": "a5756da3-ddfe-4476-8fc4-9b4e870147b5",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5bedce3c-0e1b-48d0-96c6-c812bb701833",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7a53a133-3157-4129-a5ce-55d538e894d3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "00c98300-b539-4976-8aad-de6a533135f4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f9b27aeb-23bc-40f4-9c62-c732eb834dc7"
                    }
                  }
                ]
              },
              {
                "id": "6f013c20-ef43-484e-b3e6-5f41ff6106b7",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1d38f4d6-4f4b-4e09-88a2-448cdd0f3055",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b2d3ab51-05f5-40f6-972f-ed4b780b2b3f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "04377363-e528-4d2e-81fd-2838270837ce",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "e688f091-eecd-419d-93ea-2de4e3d10b23"
                    }
                  }
                ]
              },
              {
                "id": "583676be-1ef1-40b7-82d1-312f297b347f",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1492b3b5-dd7f-429a-9361-d5f70b46df91",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "12fd660f-0dba-4a21-a995-799676a2dd41"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "66eae36f-d71f-45c0-a645-90e8bd135980",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "d16c458b-ce75-4cdb-a3dd-e3acec7fe473"
                    }
                  }
                ]
              },
              {
                "id": "59b69ca1-fe88-4b2a-bdeb-846864bd2420",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "35f96b1f-800c-4cde-827b-a8b1457a8808",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ec2d3000-ddc4-47c8-9b6b-6d91bffc6ddc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cf742dc7-2f5a-434a-a9e4-617c130ed042",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e007aa9b-66a8-4722-97e8-da906259906a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "44327e35-7712-4d3f-9d17-c9cd46f3989d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e1c07d8f-0661-40eb-9184-e245da7dee3a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b4ef823d-734f-45d5-91b7-4c8988a87bf0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f147446a-be1e-42bb-983b-dfa6e7fe23e5"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "88e6c339-c53a-448e-834b-c01ac0af0a1f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "a7e9cf0a-4d61-4589-b252-8acf088d197a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e6b2f44f-d5e4-4f79-a51e-829ea973dd30",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6799b591-544d-47c1-b3c4-e779a7bde7fb"
            }
          }
        ]
      },
      {
        "id": "15261ff6-f16d-4a43-a924-829131ff8573",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "ba69e661-abb9-41b0-b585-d33705dbf04f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8d4b64c4-a554-48f7-b3e0-bf1c055c73fd",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d8556877-df8f-4ef1-8b9f-1f3d5e5b6549",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8d1d3d1-1331-4c6f-aac2-799302807093",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72035673-f3b6-410e-a5c4-45e9a48910a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa4cc053-ee20-4a22-b292-fb817b06a82e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "42c84358-05c4-4a26-b284-1e2aead5e2eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5898dbaa-735b-4c66-9760-d0de6d76c3e1",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20e807a8-318d-4815-9a64-da70a87b5051",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5406bb87-246a-448f-8d7c-20dd2802a475"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7c223b4-9f16-4492-afb0-ee0c8fab5acb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b28b4bf-c383-4397-9e90-213c534773af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37fdc133-41dc-4fb9-b0e5-c99cec52c37f",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "329613e1-2ed1-488f-ae36-7e167adcb686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb09ec6b-d7c2-4c88-96f2-15cf526a5afe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "983b1963-1465-41a9-a37b-b9740bbe56a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b38c013b-c29c-4368-b24e-8b983f2604d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d3a9a6d-0f71-41b0-9c98-8743a7ff8786",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43ed5bc8-19d7-40b4-a70b-c01258f65ef8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "259b6f78-fcc1-4780-88ef-c45cf8126fdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc086d50-a789-423d-af3c-f6173ef23056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6cb8f242-9f3b-418f-bb9f-5c142e319377"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7384557-4adc-4879-892c-a657df0d2ce3",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4133268-cc0e-4df4-8d50-a8666093eb01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51228d55-3313-44d4-bbe8-ab767aa6cb7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ba4eef7-bd47-4e98-94cc-6afccad3d582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "01c69c4c-5038-4035-9ea6-edf42e790bbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb91ca6f-54b8-4283-b748-e81e304b95cd",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dd6abbb-0976-4061-82cc-3d0d84fba7d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cf806cc-f050-4ec2-8eac-1525fc978d4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1ae9350-1064-4c68-8079-eedcd7319b97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "71c7e5c6-7df5-4a08-a799-30f84e07a8e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71e951e3-3429-4bdf-9f70-4d84d229d88d",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa8b98a2-3a3d-4ae3-bde0-6cd43bc351f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "676620d4-306b-4f5a-a125-c9438bc7abea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe6e72ef-31cf-456a-a621-e90d6ffc67c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "16ad4f2d-9ee7-4911-b06f-46c2426c4a9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6da4a090-4b2d-4918-9778-f2b9882ba57a",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a1d238d-813d-47fb-8486-51c06d1787cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f6a1791-3046-4d25-ac6f-b8647763268c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74ac197b-6219-40c2-a734-f5012a7d6c5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ddc7d92-4957-4408-836c-a9db58c13168"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06c3c9c1-f90b-4ac9-8a3f-1ae2ddf3f175",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "824d16f9-257b-4c63-8384-9435bd51707b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ce285ea-bfef-4d98-931a-c2c8b3b00873"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e4370df-4381-4e11-9435-6ed97c3807ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "50070183-9dea-445b-ae53-a37277c18fd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12f7ba77-ecd4-4c61-a352-450671b9dada",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "660f84f6-0e74-4742-a7bb-5c9d276082f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f021c1ff-ebba-4704-b299-e42a5a56d8ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e460a63c-cce1-496c-b497-8ecae68c43ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a1061a8-2727-4fed-85bb-8878991098df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff163233-053c-4276-8e91-a0766a0215f5",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8d9e5b3-43f3-4d32-9947-2d682e392a39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce3f0fd8-8fc1-4d95-a8ab-7eb38a232e73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb35e454-0c10-4832-a2b2-1f628bb1c72c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "701fd236-d8ba-4769-b3ee-bbed1a8cdcf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48767566-5d82-4d58-89a1-63fcd82692a8",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd5528f6-bdc7-4634-89ae-035f97fc9e6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41459dcb-286f-4f62-a5d4-ed1b09d1bd78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2053e360-43ae-488f-b4e8-edea3fa3230f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ebfd6d9b-9d98-4386-896e-ddd7ecd06509"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71cb509d-e1e2-4cc4-af46-9d612d64aa84",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "908eaaea-71cb-4a9d-9b9a-0a58b05f8838",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11ea526d-c43f-4137-9c91-b504a45f5da5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d2fe7d0-1330-4399-b23d-4e1d4f13b41b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3778455e-7e9b-471f-924e-965e0cd0ddee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c60150c8-3020-465a-82c7-a5c9d63141ff",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4786d254-ed24-4fdb-8506-eb6bf0138aa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b405870f-011f-44c6-b79b-bf7ae17b3b31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1faf021-9870-4c77-a4e1-3e352dda07ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "6826e94f-f291-4282-8b58-4333492fbbf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "279ab144-ce8c-48c6-909b-9b6640a60560",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc3b53ad-736b-4c36-9451-7bc17b372297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "229593c0-8c91-4a8d-975e-d1d27d8e576c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4205aba7-f718-4401-b506-d72f2638cdce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e8fed5b-d42c-47be-b24f-68d67a088618"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c34c7a1-6c66-44bf-8829-a5fac96b7dab",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68c71979-a150-4f41-aeea-aabdab6c9c19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93c6ef9f-b290-4784-893b-63ad6e034e5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a947da9-0def-47d6-8e29-c54b9592f979",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "201a8f1e-3ee4-49d5-99d8-bdb4acc5a098"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d51a962-8a80-4c0e-93b8-75a1005947bb",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d19c446-f0dc-43d6-b85b-843a2e311de0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f7090ac-526a-49d0-8083-674f1f3bc65c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba2c2534-1b13-4cc5-abe9-defcccd7f15e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "af58a9e7-6f2e-4aa0-ac7c-2e4988e87cd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be31fd61-b971-4263-83d7-965a0301403f",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32a4eae6-f335-437c-9618-6d60244954d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1943d7e7-947e-4cff-bc6c-619bdfe1858f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00ffbd35-27a2-4a03-ab89-5d36413caced",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c292a271-5d48-4ea5-9afc-249c3fb5e7b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42b1618c-d93c-418c-8775-57a1692cfedc",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6afb421-b659-47c7-8661-b2519cf45b0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97e939fe-f92c-4166-b68b-769fd2c7f18a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baba523a-cee8-494e-9b40-28fe9d1d39fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "768a2e90-dfea-4a97-8de9-2a38393969fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7d4a3dd-ac0a-4d1b-83a3-b5a29c96dc58",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "417837e9-3aae-422e-b84e-a9fb3bf64c97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b69ea599-4583-4aa9-bd9a-dc2fe9afae2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65fde157-3f01-41d6-a08c-648c45bbe472",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4137bb5-4a90-4621-8b18-5872e0491f3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fd2b23c-b271-40c1-9596-f31f9add168e",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd527e39-25d0-4070-a8b7-39ea128ea766",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "160bdf8a-f4c8-462b-a294-c03de185bb03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28a3fd65-2dfc-4659-8bca-4e7a2214361c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "89373dc0-3340-42b9-a19f-e1414730866c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f29817db-445e-4a7d-b613-95eb630329fb",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73e2d49b-3d4e-46e6-84ed-80c14be6744f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fdfd90d-a31a-45fc-b677-9c1c7e0ace21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a2388c6-565d-4ac4-add4-b1cba7d78b73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7abaacf-2a17-47ef-9408-4157146fd54f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8692ea0c-1bce-48a6-b378-b5ac5e6deb48",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d904767e-977e-4847-b7fa-45bbb1704c27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04ec390f-32fa-4d87-aac6-48582e81967c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec98e924-c404-464f-870b-de2bc056a974",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c2c2035-183f-41c5-a17e-8c1736007dee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e531570-c2a6-4b60-8b5f-7590078e0ed2",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e834465-884f-4963-83f7-2d698bec24b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cd83f6e-cb5b-4ebb-80a8-2391d3e45bd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dcb1a25-0ef8-4706-be26-d0bd92507436",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb85c9fc-a863-4d66-a8da-279217fd520d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4aee91e-30d6-4885-829f-2b185f197108",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f0adb54-2202-496f-a413-956aab22ddbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2b3affa-250d-4f64-9a3a-d48c3c5079cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4910563a-c4de-4006-86d3-3aaa2c19dd11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "25f16071-000c-4cb6-a107-1124e91f4b1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "867963dd-052e-4e37-89ff-06454f4c6fbe",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31a9c86d-8e60-4a4c-8769-335d29613c45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47ad4736-4fd5-4be7-8618-7a9af120d96e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fca6d5b-ec64-4bde-bfc5-3368d9219a99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3068659d-d2f2-49a3-a7f9-1da22710d3b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13c71e64-34cd-4030-aa3c-6c7a39ec5260",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c4bcb07-442b-4feb-92de-a368f8db559b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9cde5b3-45e5-49fa-aec3-1518b1999cbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf7bee74-3027-4619-968f-2f927e79f300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0193246-a1be-479d-a26b-1223417abeac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b39f51ca-4039-49a7-92e5-8b4268d25149",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79b56a6f-2e7f-41b7-b9b3-266715ded0c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e6fd150-50e1-47fd-bcd9-72c1824d6e2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "967d9900-5386-46ae-87ec-3b6019bd64e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "99a56a55-3aba-4fc0-a988-8bd17db87892"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f0a5ca2-11a0-4bb9-a63f-5a5cc6fa9f14",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0b93168-81d1-4b66-be80-e95ff60e6fd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e046330d-21d6-4bd0-9eb1-1fce91a42411"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b850051-ead5-473c-81b9-5da47c27ad94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "86771d94-8d34-4201-8d06-c4c720670be2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34c3fd4c-bd63-4bf5-b37b-b17de2776a04",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc16bfd6-32b1-439d-852f-b944438b1f30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1218d5d-c176-451a-a976-16b27794cbe6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cd0d2c5-fd0b-47f2-8bd7-3714d85fa316",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "768944a0-9d93-436d-b234-a752c7955dfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "294a7f63-d6f8-462a-9c29-35a2d1527d18",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b593539f-fe71-4c52-a3bb-952f6a76d99a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b80250f-e368-472b-9901-3547c77e82f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbd6c185-d332-4e12-a10e-404eb88ebe6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "400fe83a-c8cb-4499-bd42-7aa1bb84e277"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7014f9f1-67c0-4eab-810c-8220eaee0823",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5226cb5-6b25-4fba-adda-7ca7b5e258b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1facacfd-5c49-41ad-ad9d-7157d56e1ca6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31960dd5-98be-4496-ae22-bd4c82231cc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "461b7a43-ede0-4d5d-abb8-fdf2ef2c77b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7e733d5-9a71-4fca-93be-83bab1c0041f",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebe109b1-f3ab-48a3-b804-9271c2bfeab2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48bde3d4-55da-498b-8a86-a6df0b736675"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a72c73b2-4771-4e39-b3f1-2958bd93c0fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "66811bd0-a64b-42a7-a84d-fea2727b75a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc7883e0-6de9-4ad5-8d00-c155bb333c07",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b952d2a-afe8-4da3-8500-3497f54ffdd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c2d6c5a-812b-47e8-8c18-dec538fc4c17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f9f6390-baef-4608-8682-095481518438",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ba953d3-de6e-402d-b519-7ba6eed77d91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8df0c8d2-c53a-41b1-bd3b-0a98c0a68e9a",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ee10003-6dc3-45bf-8e90-9353092acca0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c002bed3-01df-466a-bec0-34c4a84d8e9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a003d0cd-1511-40bd-a3d7-5d3599f752b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe9608cd-f868-4900-a89a-438f4d8725e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4021ed7-7b15-4de2-a5c6-aaf089eed7eb",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bee2fd3c-546f-4a1c-b452-c40ce93a77e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4363b5d3-57fe-497c-9f39-39a4465a6567"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77f6ede0-3555-4095-b975-3ff6db53532b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "81ec17a4-e073-45e9-9109-dba32219f2a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9273ace-f2c8-458b-8640-4b7f5336a6c0",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eae48c92-3458-401e-b5ea-8e670cca24ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f5dc96a-f979-41e1-9ff2-d82ffa693288"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6110540d-bd6c-482f-a5b8-1cf47b773fdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b86b16c1-f711-46d2-acdb-3e42943a1d20"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "534c8e22-6c1b-4360-9aeb-b343e87b7587",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ea39c033-845b-4443-9677-495c9eddee71",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1b7c6e8-bbfa-4ddc-9a86-4db16358bc4c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "11614021-0d1d-418e-8857-7f8bf9dbd55c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72746a05-bb90-4849-a60b-de1d08d7835f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cd5327d1-1b44-436f-a088-fe8c28e05c17"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ebfd15cd-abf7-4c07-b076-f91eaab04f91",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e612ea31-6da0-4a8c-a892-4ef6b1233f13"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "31d668c3-7108-40e6-b5fb-10eeb02830eb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "793c5076-cd4a-4f5c-81bb-737b47521187"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "247b835d-7621-41a4-949a-1fa929e33a42",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ab0caee9-722b-4e46-8e84-512ab7116427"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f7a92969-ceb0-43c9-8052-d95cd4078c9e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6d2b131f-5fc7-4264-9b69-89cef6b3291b"
            }
          }
        ]
      },
      {
        "id": "f60b6b1a-5899-41e0-9acc-b9f532424b2d",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "9c88a6ca-ae98-4bc1-86d3-8b8854ed7c83",
            "name": "Negative Testing",
            "item": [
              {
                "id": "585ed470-234b-4851-b985-f528c3f8cb28",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c1f91ae9-a950-4a79-908c-a067a42215df",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0cad201-8aea-44e9-9642-8ece5b9774ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4474ba18-2de3-4c93-823b-7dab503652f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d4cea37-0f3e-42a2-aa25-bf77342f4c9a",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc4fe7c3-ba15-4a45-a0ca-2a5a42b7bf1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e5654ca-047c-4e59-a9be-9fe8a7db9cec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d7d42c4-f6db-4a26-8eb7-d51f3ce90b15",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98c3b748-2f02-4071-8ef2-48c01039948d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaa54aea-f124-4112-9332-92c58d731502"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03504785-5724-44b4-ba3b-02a6e7e67a3b",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a98fede-2d8e-4eb5-b413-5681f9df61f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26d46608-99d3-47bc-a1bb-7096eaeff854"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f263e7e-7b72-4a19-b2ff-56632bb7c237",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f982ed3-dc33-469f-a30f-871a1809b62c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63177e09-b55e-4ffc-8ab8-ef51fd245193"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3de2547c-8421-4382-8a57-ee50916678a1",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "deb6fe58-7412-42bf-a6c5-a60ee4580902",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33c7e7f2-5571-4a82-a57a-0627eeccb32f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "609ae0f9-9a80-4723-a5c9-65506b9555ea",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54410609-928e-46c0-a345-18193fc6f3d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a79abba1-027b-412e-adaf-cedb1ab4325e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91d1620f-9276-4c4f-9106-fccbe71f7204",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "547d99e9-a009-4ebf-a1a7-db3978ecef94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39de925b-33a9-4796-9ee9-23a615b2feda",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bf9c900-1ef5-44df-a0e0-ea87cdbc93d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0c72fef-d5af-4595-9b0f-69957ace1b11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "893c803d-af15-466a-8923-b6b8d33648d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dac14fb-8569-4ac1-b858-3ea227a9d72e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa2cfa59-79d0-4018-964e-d831f2695016",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc6d4536-166d-48e1-9df0-fc392053fecd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f05ab310-1c97-4251-9337-d203a12f8f05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e18ac62e-59e4-46c8-992d-10cd510f802b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d81cfee2-b4a5-4b20-b7c0-5c62573322f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a95da6b-7a3d-489b-9983-7dbdb98667a5",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b0b0ba1-7e14-4490-834f-64a433f3efad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09a957f9-16bf-459c-bbe0-9f19035432ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a700b856-836a-496e-abce-61f5f427f955",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a3c507f-b13b-4663-837a-b0e7e155c5e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "073b2802-3aad-4f26-919b-4a9d5774e735",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cb66b64-0d27-4f78-94c0-5cfa42b40f25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f72c138-89c8-46ad-a82a-058fa5899d05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a93edb9e-3288-4a8e-a4c9-e0de8362693f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dda1f48-ddf3-4bf8-b4da-ef9332c34e2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "692643eb-e5c0-47d1-bfb3-70f3e6c8f34e",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "364633d8-c637-466b-a71f-0d09673ed1e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bce183a3-e621-4579-a120-d380184e8473"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57aff845-7ffa-476c-b8ce-f19e2acb542d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2385946-15aa-4812-9a02-6d1a4692e797"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ef48247-4b2a-452a-b6c5-545288a28a39",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b430030b-e8cb-4c32-8cd1-635916e4e7ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48dbbe8e-35e7-4638-a1ac-8898cb5b8427"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6e28665-5f4f-44e4-a77a-7eb3ec2e1d2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33f76b2b-d7dc-4b08-b5b1-9785e2fe408e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3079a7a7-8f7c-41e6-af9c-937d09549843",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7189372-cb8a-4bba-846e-4b6199debc3b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0307ed4a-6b71-42ca-8d6d-34c4d75769b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1780faf0-8012-4342-8cbb-59dfd12e1446",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d3f14fa-8fdf-4d6c-b8e5-dffbe8ceb2c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22b64093-cc64-4583-992f-f70aeade9d5b",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24944065-f782-4121-ba96-0d8d50ec7870",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a4c21b9-09ab-4529-9aa2-b47a57258553"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "498b00b4-10cc-4709-aa6e-9c35165c3f2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "561633ec-2f7a-4761-ac13-9fc35a2d9862"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdcebd0b-678e-4ed2-a352-43e09edbc84f",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fd2dd95-7dc1-4d07-acc6-56afc7d5bcce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e626dcc-4a46-4833-b7a9-9054e333d60f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6993157d-4d82-4091-a091-bd18c0c3306b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcb0afb0-bb43-4553-98b3-1a4ccc059abf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a480e35f-be2e-47f9-834d-5b85896c4999",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "070d8a91-2cf0-454d-8e46-f5ae6babaed5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a6a910d-39e3-4015-8280-61503971f00b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58a47dd1-40d1-4745-bcf0-32195919da08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dec2a88-3e5e-49f4-a890-3716a7b89589"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26064289-0dbf-4cdc-801e-acfb261bf7c1",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "393066bc-a88e-4925-b665-22b83b76237d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6998546-85f5-461c-ad80-34ddb12ea12d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f7f5bd1-9ba0-42e9-8cda-ac673a56fa4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45360c46-da48-42ba-8e2e-13679605278b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1efba926-c344-4def-ba6b-29a8ddf7b90e",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be75b883-bbb4-4882-9a23-d5d616af4c64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e891f5e8-33ce-49f6-b5f2-6e61134cfead"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69b526a5-2e97-4b7e-b38d-0245b95cfac7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3b3402a-5405-493a-b206-acaecfacf9a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dfe068a-5bc7-462a-a207-e323c1837012",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa388282-55a0-4f5b-bcb5-9d65116bcf8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93295796-9ffe-4867-8b8d-96f83dd9f854"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7978f707-ef79-4919-a7be-fdeb5c4825f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69f2f995-165c-44fb-80b3-c873bb77968c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e8fef0d-42ce-43c1-a9fc-1027522ce682",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0727c3e-2e73-4460-8511-ce82a4133b3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bab90302-28f5-4640-9157-5f71fef30d12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dccb79b4-4f61-4ab2-abe5-04af75707186",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b722b07-4929-451b-b8a3-e12b082f5f82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec6f805c-f76a-45a2-a109-edcdb6c90732",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2680ae9-8d32-4f0c-a926-660309a1a78e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4572c4a8-2262-4422-b226-5356d38c83a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62d82447-7639-46e1-bab0-b686af6fee17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87b51e2d-10df-454b-96b7-027d9b937352"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd0a68e2-dee9-4227-8d7f-09360108cd51",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cda8237-950a-4665-bba7-c14dab74e55e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "299ce9e2-67fb-4cda-9cf1-3f142ebce9c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e29bd81c-3e22-405e-896f-84b969f0be3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa251afa-5773-441a-b62c-4a7863de74df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99c3a457-96a9-4076-b0d8-6b7cf03b1724",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "299e29fe-9cf1-46a5-af8f-9628ac1e6dcb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7dee0cce-0bf3-408e-b58c-97ab4e122d92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c982fd0-19ab-473d-8da3-92fb60c884f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6ae1442-b11c-4a7e-a579-cc387874d805"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7769796c-7071-41d4-a48e-d0ff7171378a",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5b0bdf5-eebe-488c-85d8-b0eb10ec6c89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84c1341a-3264-4407-80c7-6c66a3da129b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e308f4e-87a8-4346-9180-dee2143f6543",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2423c8df-3994-4516-bb70-b89be68df58e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64c12d86-9517-4a59-875b-8056df0b67a3",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08b52e5d-3b28-4bd6-95c7-609e5b898d07",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7ebc494-23b3-4b0c-8ea2-7b630d5c037e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "513280f6-ff11-41e2-a270-49ce011c3989",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b0f6e9d-aa85-473f-9fa8-57382c09ced5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baf55e29-f380-4624-a60a-eabc4608596b",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6558d1c-5405-41d5-b10e-af4b7392d36a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83e8e314-899e-406d-b2aa-16c961b5a851"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8bfd783-8f8f-4b44-a64e-15f4d2bed67e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8001d051-a55d-4e53-bd04-7b3957c541e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61a8304e-09ee-463e-b4a2-f4406dd06c3c",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "295e2439-600c-47a0-bc53-85887536bff3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c26d3a8-ed46-4be6-8c23-483dff58b269"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf72e137-8df1-4fc2-9951-299cb0a9f91a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2b06600-f5ef-44a7-8162-520a37e99ec1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e20bd676-4b22-4529-b70e-b6a06f671502",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca1d6583-194c-4c33-8b37-4befd0e80f77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ac713c8-04f1-47d9-955d-0f235fb19c57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca417c77-1d9a-41bc-8d11-44bd5834ab22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb07f097-b768-42d0-a43b-9943d02de31a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "038a4bfd-4730-45ae-8e71-b33f6dd92a64",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e813c6d8-19ad-4c21-a1fe-4b80f9489295",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ad9208f-7f1f-4a8b-a204-8b5ddd5c9166"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "116ce449-63d2-491c-8a87-433835d544c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bee8659e-4520-45f8-93c7-0fcc1b2289d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f7cad9d-982b-4976-b41a-565398c6360f",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7c6766f-7d69-4a50-99e5-7293e46f1f52",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0e463c9-2483-4d1c-b327-708d58ca89f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d217337-cce0-43e8-9f7c-a94f79b6cd57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "086e2ffc-0739-49b4-bbc8-03879412a69d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9863a27-4e82-443e-aef9-cbf193445308",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cee79133-f725-46a9-8a67-0297a4086bae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70d08de0-f944-4c6b-ad10-6db470cfaf76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6016bd2-d09d-4d26-8b25-d259e3bf3ef1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bff5c7c-fa3e-4a39-91a8-cf1c5c2136d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e6bffdf-340f-429d-ad84-83ccbd1f5b5d",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42aadf37-78a4-46e1-9401-4ccb5e974f08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76e41345-b649-4dde-86ac-4304c6d694cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d85d34eb-fd26-4c40-8d54-8e75f46c2f07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23aa07d4-8337-4cc4-a8da-9e5d9c7217ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4b9071a-6462-4c42-a067-856a2b5f52f5",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "565c8a92-2f40-4728-bcae-98be0463ef5e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53c75f97-5d15-40b8-a1ea-582977fae71b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd7c0143-86fe-49ce-8497-e93a1a1bdbb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e1d68f4-8901-4cfb-9798-352e4955e272"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1981f3aa-b03e-4498-8738-9cbffa23f5a6",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ce5c88e-aea4-4c2e-8f09-924fdf691af3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6c804e7-242f-4d0e-825b-f48d5d4a9476"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "757edcbe-08c7-4423-a710-e50e7e39e0ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "387636a5-034a-48d8-99df-3b494c4ad462"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e82d7fcf-aa22-4764-b11d-c37168c658d3",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6091437-7535-4036-bfea-037375f58465",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1eb72f22-77fa-4135-9668-fa3f949a3183"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ade8cdcd-3fa7-4711-8fb2-18a6405d9c30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b592c02-5f06-4b5a-9c10-86becf2e6341"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1336bd7-9383-4fd7-ae41-4de64c55a828",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9af0741-601f-48c8-bd9d-07604e370734",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7846866-a78f-42e8-9924-5f88ad399104"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13870c6c-d857-413b-8397-699a6ff46bea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e76f9fc-01d4-48e2-97be-f1ac5af3c41c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96ac6aff-1a6d-455c-918a-84f40f7315c9",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e50f61ad-cdef-40f8-a4a6-15209c26cf81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c0e6dbf-b3fc-4b02-86fa-29f31e3920c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eef6620-7ef3-4ed2-a4e7-5cea3ee88b20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7be85ff5-8d63-440e-a040-9839c5446f75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d66f06a4-bd5f-4d94-8a7a-387ec4b2b187",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ddd8e95-218e-4f66-bbd5-c415b2082345",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be5c6a4b-968f-457d-9cec-cdcd999a3a06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1761e468-d844-4af1-b2b5-971c2f92e63f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26a3d423-42c8-483b-a995-bfec086fc524"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bc1de5d-27be-4b0a-88df-b34ae420f38c",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a8dab5c-608d-459d-8b81-814bee43ce1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95885b6b-08cd-4de4-a9a7-6e3047b557e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3428370-00aa-4f73-99f2-f870f00084dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1686575b-1d7c-4e67-9818-1ce91d6cb9c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f1d5f04-a63d-4d74-af79-0c9bdd5ef4cb",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98428150-2a0a-40a5-821f-7ce2987cd9be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22415cbd-b6e6-4533-a46a-ace99530f072"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ced8e3f-6ca4-4365-8241-8949a03716f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ac9e961-c848-4b4a-a56e-d1093684299a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6fdfabe-bb70-4579-b146-d3e7686f067e",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c62c65e9-e59a-40fd-a887-9b89cea85e06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cac030a-bc8a-4698-ae6d-90cc5cd6c1ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74b969da-0e89-464b-acc3-d60ef1b0ebbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32159931-f16c-4622-949b-7c8a300863c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddfddc84-006e-4e2b-877a-369041a1654d",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "978932da-5958-4d0b-87ba-917341055675",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "119b55ae-bbe2-4b36-a8f9-5f6bd5a6be85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc69586e-5268-40c9-b161-2a565ed40d74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16e00b2b-aea8-4530-b027-5bbff34e9ea0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e7d4984-d790-41d0-aa1f-b073a1b71011",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a534dad1-ae31-431a-8f0b-4908d2a72b60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e63da462-1bfc-44b5-a5d9-eaa5a1287d4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4ea88c3-01f1-45f6-8d24-693443fb5093",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2c0ad85-d601-4678-9146-74a02a878d76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "415bcdb4-c78d-4a31-91a0-174c0ffc9c32",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ad70eb5-3b4b-403b-9cd5-040156f1735b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d31d0ca7-e8db-47ce-83ee-865d1e778054"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b45ab70b-5267-49e1-89b6-9956764ee00d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "387cb36e-d3b6-4ec0-bc90-fb8bc28f5dc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50f53ded-0137-42fd-b895-91409c9191b4",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c6a953c-7632-4a15-a9f1-46399c975ef2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd27d291-2606-432a-974e-b76644f1538e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "384f2cf4-4dbb-4212-899f-e9388cd12f74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eac46e64-adcf-4b33-b93b-c0570d4c8ab2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4880a808-38e2-4b47-93ed-247dba04027a",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1699be8-c837-40f4-909e-f5c05b1a03d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11f11f66-9a0a-43bf-8375-e1153a6f8302"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0159a1cb-aa78-41b7-9b8c-8789d6af023c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "962932e4-518d-4ede-b14e-3cdd51aae430"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a78d9907-bc1a-4138-ac5e-220b83831dfe",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfa91482-a2ac-4d3e-a708-771c7ba57803",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8acac110-3f85-4de0-8300-2cf4676081df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f201e2b1-046c-4498-a8d2-0471dc10e2bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85557345-f1b7-43f8-8c63-6caf03600e1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8696f913-672a-4c88-89ce-34c0db44c496",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41e682dc-d16a-4b26-84cb-8b07dfad05a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e58cc91c-9c45-42f5-bb68-86bd00932378"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcabaa09-a754-476f-9e81-5b990e124104",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebbc45d1-e7ac-46c5-9413-96cd1db85a07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4243071e-83b7-4e62-ac57-6bebea51a9c8",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25d0bb9c-7bd5-4db1-846b-784bda948933",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a889622f-4d60-485b-8fdb-2329e1448c28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ba44a6e-e736-462c-aca2-41efda2aa4b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9703773-b16b-4b51-8ec9-6258528199d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05eef9bc-6149-4b20-9885-82a71ec79333",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67adf15b-968c-405e-a2cf-a2534a9e7a4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0cae503-d499-4a1c-8253-fd0f6d2d23c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aace6767-f4d0-463b-a7b8-5f1299645a90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93e1e1a3-ff54-44ac-a7d1-f3290708662d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a4a34bb-f1c4-4c33-a298-9d4c1a3749d8",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da376642-16c1-4c4f-97b5-9ddddf41f35f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a73f6d4e-8b67-4b71-aefb-e9ad18843d24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db0811de-d870-4f2e-a022-8853ce5b346f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "670dfa85-d507-493b-82ec-c91c337627de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bb9f928-af7a-4a50-886a-443b563c3723",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57460beb-7e31-4d6b-b981-f1e967b3260a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e8f0cb9-3639-4e2e-8d4c-1630ffd7bded"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c797ccd0-77eb-4fa9-b4ec-ef248a56d1e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa3fa1a7-531c-4732-ab39-2519d7d83290"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edfe8d47-8438-4e44-b47b-f4f9d69d8df9",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b447665-a83e-4998-84d4-d868ab9e5007",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "016ce698-feb6-416d-af46-8dd3bf65c4cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90843221-8a4c-4f60-a1bf-9a74332f3d5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df356b41-b9a2-4947-b7cd-bb2943a7a2b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ae41338-501a-4396-82e1-234f4613e794",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d548b80-b1ed-4ba1-9179-7d0be289d9dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0800439-5d8f-4132-99c1-50d561fa13e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e4ed305-9fda-4257-ae13-7a9ba65c8938",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12a1e02e-a05f-4484-bd07-0a0feef369f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfc6ac2b-53ab-4d54-a449-df1f7c8e1c74",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcda6f52-e9ce-4252-be0f-4911594e2ef4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1987d7ae-6d39-4a7a-8ef4-d926babebc35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18c6aa0a-b2b7-4fff-b2ef-809fe4c9d186",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de077a57-e8a8-43ea-aa58-460c2b9d9ee0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1210ae61-2e97-45bc-b757-b197bd6be570",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2bfc14e-fca3-4f4b-b3c0-f8a9338b9836",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71bf149c-fd6b-423f-b48d-be4f298fb90c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e324b05-cca0-4afe-913a-f7c96ae5de7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4356e8d-2119-4964-9a20-9fbb539772e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c3e423f-0cfe-4b67-9e15-c6a3baa5ba02",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b7d51ab-0508-45ef-91e4-a676db95d1e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa1748a7-468b-468d-8bfe-3d2fa2874857"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64ef8c8b-a822-47a7-bfa0-8868f697239e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd7a2d65-ff72-48f5-8ecc-8f33d9c29f89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee99af86-330c-4f26-b2b2-8b480cce4437",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0449c210-ea99-4253-96ad-157821f5f13f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6b3f1e4-3234-424b-9076-34fd7dcecfa2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62f7d055-8ae4-4c97-ac9b-8b0d3a945e6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94c42099-1b12-4f9a-8dcb-4ac679d2c66c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eabd403-13cd-4dbf-9571-1ba35078e218",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cf1c9c0-961d-4dc5-aa85-d617d7a6d7d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd08c227-7bd6-4e4f-aaf5-07e6a46d72be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ab8d618-107f-4303-ba30-d842f481560c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5817c590-ae69-4de6-9c21-8a49b65d3672"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f03ef35-652e-400f-bde4-d97560a8e5c9",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4f3ba86-5997-4c3e-89f8-ee79531921dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cf7580b-331d-4cd4-9da8-3586f029afdc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af864a9c-f4f9-4db3-b21e-ca61af5e8e86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a62782d7-d882-4493-a151-ed10c4b8a9c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3824895-2a67-4ae0-909b-f1c801c5fc2c",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1da79e0a-c480-4049-8d54-bd08976d1126",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8afb8a32-7ae1-4239-9d17-87112c759b34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7e77fc7-a4d2-4d2b-ba9a-a2b4db3aac56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90b26197-6f00-4b50-84ff-238e24814b96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0876aefe-4e18-46e2-b2f9-4bf0daeb5811",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b63fd002-c3ca-470b-9ac6-b586728e8c60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38f94c05-c8b4-4fdc-a240-eef8b5b1f904"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2c91f16-8f6c-4b02-96f6-69d8a155c95a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ea85891-2269-49c2-a821-23caf4d5c579"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db8b8375-3e4b-4880-b6de-ed6e582a1b6d",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffc8a870-8a57-4b0c-b7ac-f895242fb95e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79ab0e2b-e727-4481-9f91-2b8dcd0fdd9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfdc427f-1969-450b-907b-ed53dc75346b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "725415e3-be24-4148-90ca-c6b4eb828074"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b63ba897-d3eb-4d88-b073-d056029c55f9",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cee891c1-c443-4d4f-a73d-f6523691282a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e636fa18-4a62-44df-b2eb-afb86644e2d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd7de197-c2b7-4488-99f4-b0a9dcbec4c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bef1fdd7-0a59-4096-9b6c-3c1324605afe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38fd8069-4619-4ca3-acc6-19a65015be86",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59e4af91-4493-4dae-b3cc-6e0cdcee6e5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94b50a8f-e203-4464-966a-0dd7856d3f85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3362b466-98eb-48e5-af8b-691127792099",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc9fa29f-3d0f-4092-848e-6aec9a9a19bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "984058a9-5e3d-4dc7-bc2c-a0c49df43522",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d026bbdb-4ed9-4e94-9a5a-0de37568a013",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45e778f3-31d1-4732-afc6-e9c56f468b73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "891e4eb0-2b7b-43a7-b3f4-abaca336840b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "196bd631-877c-4e1a-a0dc-e3f3ae95d52e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "550b9067-a778-4cba-a828-c2a2340e07e6",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49fb7f7f-c6d7-4012-8e6b-189fa4b71d45",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "529e0997-2a37-4810-af68-64d297e84f3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f37f8b1f-b06f-4bb2-9df2-cb165a6a141e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "380dec2f-4196-4555-a3a1-3cf1e51c61b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05c34606-2854-4810-9689-879444a97d85",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba704f84-55ff-4c30-bde2-24973ee265aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a0df579-fa9a-4a3d-96a7-34297ecdcd9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ee44a39-caba-4f99-8ab4-56535f872ba3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0115ed6-c30f-416f-9fdc-1ebf48b4ee62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e510be91-f312-4bb5-9a31-088c61421246",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "749c377f-57ee-48e6-8b1b-d9daccdcca22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1cd69b63-9f4e-4e86-85ad-2401b7bc2ab8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "511bc611-a7a9-47c0-9be7-0563a7040361",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20c881ae-dd96-49a4-97b9-c0e92c05ff1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88d92270-cc31-4117-aa11-0e09be772e46",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57610ada-f23c-4549-ab4b-4f221ffa2204",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24dcab7e-403f-476c-a070-219f17902e7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07a8ca92-529f-4793-acda-7566c5fe6a4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94fb2bda-65b2-4b4e-b7ac-0b121ea49c09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f600dbf0-6cbd-4ff5-9310-b63676d5d5a5",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8c7ad61-2d9f-4b79-b8c1-04b9f197d484",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6e5d48f-4ece-4ea5-bb3d-a65d59ad5f2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "284be3ba-08b1-4fdb-98df-baa263b95fc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48014383-c71b-4e77-ad35-d43091a180d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05acae0a-8261-4ddb-9878-431c17dcf8bb",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efd99a8d-171f-45ca-814c-07b14aa9d3b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "548a3474-19cd-4154-b4e5-357fbf1305be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb84c527-f90a-41de-b91d-724861d278df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e876e35-c934-47d0-b10e-9cd5128e5f18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "018bd0d1-ef7d-46fe-a9d0-37a146396ed3",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dd0ec77-8572-4fba-a1d4-237592f582dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e16acaf2-86b4-44b0-9fa4-932715d28123"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "457ee1bc-fc2a-4306-8561-3763a315c2b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da97413a-ca10-4ef2-9d6e-c0fba97bff21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7a192c0-fb60-4596-943b-91df2da1fa6a",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95932015-1ca1-4ec6-8d9e-b45c3015cc19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "514c0a3d-5772-4064-a033-9bea0a9f872a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ad9768b-97b5-4f16-9986-7f77478990ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce912b99-0c0b-4383-96ae-55c7a31f6548"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5a3962b-a783-409e-b726-e34da64c907b",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3869a19b-c7e4-42d5-996b-64277352ac69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91416323-e38f-4f92-93f8-68f46ea0d488"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18021ca2-cc40-41ba-ab83-4d317b971719",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9951b4e0-c044-44b3-bc70-8918a2497fce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "575b595a-dcb8-4c99-acba-eb697c8750b1",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bde4948d-250c-4b89-bcce-27d51d57e17a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2888113e-9b31-4b47-a30d-eb1901511f1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ecb0882-ed7a-43be-a608-9cc7b56b51e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dd16f01-d1f4-446d-93b9-776200fa66df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "409452b9-ffa3-438c-ad08-709e44960f7b",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24732626-b0c8-46c7-aacf-25309571627e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23601849-4a2c-4a9c-b74b-3fcce27a264f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33274641-98c8-40bb-b932-9778c3e04b47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc464143-15ad-4ec2-87d9-18f18f476f80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "879cfe27-e4ce-4ad2-b009-979fd595a82b",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1cb0c7a-b188-4df9-b084-d51994dda4df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b84b0f3f-c299-4d60-b045-cc91131170d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29247e36-1a57-4c85-9e30-30010d9ca494",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cbfd359-d78e-41e3-a293-6a6d72bd6906"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5e4938b-d980-48f5-9cfc-b34e1e6d52d1",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2ab603e-dff8-4da1-bb52-a6180130149e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14dd4c3d-8d99-417d-8e18-67059167e7ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00260004-6e48-402f-8364-acc4f53a4058",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76ae8a3d-6fc3-4a06-8f73-35b9d850e9d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "861218da-8a74-4532-86a5-8ba5f1e0da84",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82666175-2144-42b7-a810-9ac2790c92fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8e93788-513b-4a12-acb0-1aa7e5999712"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8f8d15c-a22d-491c-b8d8-477472e2dbad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87676089-325d-43c2-91af-0c96a38f20a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e753491-28bf-43d9-8852-33ef22111d12",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd8e6ce5-7a5e-4c7f-b2a2-88c20f4e5ece",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e800240f-b14b-4ad7-94dd-96f69d52471a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d87ebd60-905a-4cdb-8eae-ff582c1bb971",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb717a55-772b-4611-b26d-46d6448d9946"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c8074a9-8a2c-4428-9154-192034569213",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adb72711-ae79-45f2-a893-a4d05d1ccbfc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf006b0d-f94d-4e26-a6a7-8fa80efeea2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b00294d-a5a2-4790-9403-5620eed99491",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6255db7-357e-466f-b4ca-8498ae87c887"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bae9650-b670-499b-9e0e-38a033a40ff2",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c4bdbc4-ae0b-4b7d-a31e-1caee6eb0191",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53d238ff-c101-400a-aa27-6769570ac7b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "baed585f-5c9e-4b76-a77c-6e85188681d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12cf52b1-d9ae-42f1-9fe1-947ba3e7fc91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b46ee315-79fa-4044-9640-7a40e94a5934",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8411baa-df33-4986-b8c0-361de6fe121c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d04bba75-ab0e-469f-a4b9-a87ab5e16188"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c3570f0-e738-4361-97da-8207e11485ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6457e6ab-aaf3-451a-b1e5-9d47ca854b84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee4993af-0fcb-4ebd-9c9f-3d9aba177bbf",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7e7400f-9e67-4a8f-ac49-a948c0c3970a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb47a73e-5ea3-4e9f-8ad0-ec2236db492c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19b78ea2-ee92-4a9c-b95c-06652a01a28b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c85935f-5404-408c-93db-8d7cbf98624d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aecf6f4-e27d-467c-924e-5203d93b0e1f",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79a6a250-9ebc-44ba-96bb-a95d9c58df05",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2a72a1e-87d6-44b7-84ae-8bcb1931d40b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2da8eb59-db8f-4782-9409-e439c1fe8cb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6e50474-a5f4-4059-9dad-3d9311855323"
                        }
                      }
                    ]
                  },
                  {
                    "id": "675dc99f-a154-4007-8974-8854c442bbbb",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6273e545-bdc7-4c1d-9ffd-fbd020a0581b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a005ee1c-356d-44ee-a6e0-22872dd46f7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e812f786-5c88-42af-b70a-d48e773a72a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f5e9e85-f51f-49bb-a774-7856a348c4db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dead4017-f8f1-4393-84d9-ae67cf548e1e",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f7e2aca-73c2-4a06-a9c1-5db8567d2f8c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bed6c357-c268-4ccd-b2ba-425ea6594e0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9791ef8-7233-49eb-a65a-380704e4f718",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10f625de-0fcb-41ee-8868-d3aadcc25b7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60489bdf-07f1-405d-80ab-5ac483d43cdc",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73bd4637-d225-4af8-a714-be452151c6c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d8f6d52-8d50-4ff5-8373-c1810c5d2c61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ca087a8-e087-4d38-b768-f08d97cd9d31",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68f1bd1c-21db-428c-a200-faad1de29def"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0622aa2-0a88-4801-a87a-dd99c4f80ca0",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eedf04ca-f168-49ec-8970-5c392a1aff91",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "567d0127-8333-4aff-84ae-d84965c31b98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eb621c7-50e6-497b-a089-0aa73b49cf90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a522abb5-0ed6-429f-a3f2-4aecac34173e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5b7c99a-a291-49c5-9fd4-bf9dec0453ea",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55005467-3e22-4339-b099-3c81d8f79349",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01c7b621-338c-48cf-87b8-67fb9e248894"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17ad6077-e595-4f42-a1b6-6ebd534f54b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03be2cac-bb2d-42bd-99c1-235ea4c705c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "435a8639-f6e0-4318-bcb8-c65edaf14614",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8737498d-2c0a-40b5-b8cc-87df09f57ac3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05c5a8de-5573-46e4-9bf4-7e7c8eff9aa9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d65795f6-6672-4d4a-a8a0-9e6bc5caeb71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4991c13f-7626-4e72-b8a2-249f5ac7f951"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a8b3946-2e4d-49e9-a7bc-b868b052e788",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8e0d055-be1f-4bd1-9f5f-a5ab4fca9a6b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0decd3c-9916-42de-81e1-182663b28b59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e37fea7-9b92-4a63-a807-80daa338a37e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f110f200-eee6-4095-a7e9-1050d1cfd058"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b49ecd83-d20d-4fb8-8548-db61f47cbe17",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cd967dc-c934-45f2-9aee-35e45b0c7b82",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "008bbaac-184e-40e3-ac1c-dc7d11146ee1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33d2335e-36b4-48c7-915e-f38f145939d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "597872f0-6c1b-408c-a714-b87a0b7be8c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cef3e212-3931-4297-a236-3e0ff9abaa59",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bfe8ddb-0fe7-48c5-8a85-81956adcc396",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d36e561-ca5b-44e7-a718-16e55206bc54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9552c2a8-330e-4bb4-a723-71a5536b52e5",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01e75593-9a3e-4627-a098-588ccd900fc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ace012d8-0f1b-47aa-b5e1-5a4bf34a565c",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85d67374-1d56-4452-8311-f88b4173bab8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "827ded3c-b998-4857-b010-b6828227be7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d2d0890-8cd7-4b6e-8019-247704f6b2cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12a6d127-dbb8-462a-9588-16c895ce6121"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c1073092-0d47-499a-81be-85939499fda7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7395dcad-f92c-4a44-aa7d-2440bc941ac7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fcd74d20-77e8-4595-9b2e-0819fc382605",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7239fa19-1d4c-4aee-901a-5621db4e25d4"
                    }
                  }
                ]
              },
              {
                "id": "ee9819c6-98a4-430e-9a8f-990b606acbd4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f1c59aef-6e8c-4bba-9e9f-70e9a7b5d418",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a852def-ee5c-43ee-9753-dceaca51c4c7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "b1a44dbd-e53a-478d-89c4-5c56f50e03e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "beac1b2c-53e5-451d-a938-0f6fd369a1ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "25e9dee3-b243-495f-86ee-9f64e829b061"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b575f027-d6ac-411d-be67-765375e73d80",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e66c992b-14f5-4afc-89df-3c6481345c87"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6db5a3dc-c40f-45e4-b626-5c0386bab8e5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cf142b6d-26ee-4d09-935c-a12dd080a18b"
                    }
                  }
                ]
              },
              {
                "id": "10adea61-7498-4fd7-984a-26f0d47a38ca",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "c5563fe7-7a81-4d7b-8f73-d6110e4cf269",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83d91972-6af2-46b0-b670-cb7678d0bea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "18884a4f-d046-41c6-9477-f7f0a3bd5443"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ec13023-094d-4b3c-ae16-289242f4b495",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8289d813-f8e5-45f2-85e7-7f99b36fe2f7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "dff949f7-04a2-42e8-84f0-4d7be92e03eb",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b7e3fe36-6da2-4e52-a9c6-173339054472",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a106018f-6523-4069-8054-5abd4744262d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "14c5d948-fa96-4050-acb8-b8fd04ce0878"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "055519b4-658b-4189-abf3-4d968f753285",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "62f9f5ec-cb63-4679-bec9-6c4d15b236af"
                    }
                  }
                ]
              },
              {
                "id": "efda52b7-3076-46f2-adea-f0c367b06540",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2b36b4e8-efbd-4c72-a52c-e91ff236b658",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "69608495-2582-4d6f-b0ca-38fb32dd0582"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e349d5f2-f7b6-493d-a3c1-198b4295dd51",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1f5df7f6-dd7a-4e96-bc9f-e0c936365f9f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "af6f2970-d803-4990-8f79-fa41ea41fbe0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "414584a5-234b-4070-81e9-11a41389eedb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ab663f15-a0f6-4e4f-a0ae-2430793c59ca",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "520fa919-a387-4c9b-bdee-93cdc0978100"
            }
          }
        ]
      },
      {
        "id": "314ff311-f2e6-43d2-9571-dbd0d242bf54",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "e2a88f19-9a55-4354-bf19-f16a7d1c15a2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2e64d87c-818e-4dab-933f-dcb7a4c3e58d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a0f1a1ee-68c8-4f95-855d-8e6592f06ec9",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8462a995-8e80-4556-89cc-9e8d40094da5",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "76c4150c-376f-4468-9ee5-bcc5400dcfd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1076bef6-0e2f-4714-b7fa-9767f0846c1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5268a655-7bab-41cc-a95b-0766b333ffeb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "17e6cf75-c3c9-476e-b5cb-553ca8152d42",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "493ba121-7765-4c5e-aea7-800b903f7a94"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "140baaae-d9a8-4cb4-bd4f-87bac3fa0119",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9111f615-1d2d-413e-bb74-51ae26746531"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "387944e8-e768-4863-bcf8-ddc830866805",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "398151e1-6367-45d0-9752-6b62b7f60fbd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "32276049-ee63-4464-afa3-f9e7cb317928",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a5d3fff5-c814-41ca-9d08-cecd4009ec1e"
            }
          }
        ]
      },
      {
        "id": "bff75fcf-d973-4976-820f-58f5fe149f5b",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "348775d2-2ebc-4367-a553-e4f829aed440",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a8541e43-22fc-4bee-89ef-7545cc5d11d4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d1dfe6f9-f7bc-4c32-841b-089352c1743b",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4348ac40-7e4f-45cb-8738-2b0263e95a70",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "41886caa-3b36-425f-814b-6641e48c9a43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5e345c4-a3c0-477e-983d-2a417eed01c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4f302a6f-3871-4ae3-86f7-e291adcbc5f1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6661ba46-b03d-4d08-a9fa-935c57da80a2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "929825f6-2e4b-4e0b-bbab-540fa73d5301"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1fbfc7cc-3695-473b-962d-4b8066f5f2d3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7763809d-cc3f-4264-868b-7b0fe3b03219"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5f685635-be8b-4077-badb-78b1bd4843ea",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2dee8b8a-7656-4412-84eb-16575d32de2f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fd1fec9b-59b8-43b7-9b11-7892860fecce",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4a29ecea-34b6-4311-87f6-1cc05e29d7d1"
            }
          }
        ]
      },
      {
        "id": "ece5532f-425e-40ed-a162-96a3b52792e3",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "c44cb290-5bbd-42a4-b341-718462f0992f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b2f7d4ea-d227-4ce8-85be-506a39cfe562",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a7e231ca-b0ef-4bc6-92e7-e7d33204d901",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "154f4702-fabe-42a4-8e5a-dea71bcd3516",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5956eee5-48df-4b29-b9af-44b428846c6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f77f6c5-a008-4c4f-a8c8-eee8ea903e28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "93e880ae-dd92-4ac5-96f9-72279a108c07"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4ca6351e-b055-4c21-94c9-c5c9ff5257de",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a9eba1eb-9c48-408d-84fa-7b7b9f4a7e7c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6c0c94b5-80da-4416-90aa-4bc144b3bb73",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "804f2dc1-a673-48ef-bac0-4b9cac0be170"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6ce2d5e2-6c2b-45df-b849-8cd9a8f6ec30",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9c8696f7-30e7-4dac-af45-ef973a177e6a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6e6b532d-775a-4a34-9c27-e88432a7b95f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "65f19709-0ef6-4b35-95ef-da1f1a4d928a"
            }
          }
        ]
      },
      {
        "id": "96bc4ce6-b29b-4db7-bc87-b3053e6bbcff",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "aac16284-0d9d-48f5-b3a4-14762d395e60",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "587b83f8-3aef-4074-8704-0f141fec54b4",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "b5514cc3-7d9d-47d4-b762-41c1e9636aa4",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "251957e5-4e1b-4738-98cb-9b0dcd2d6e4d",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8dd0c5f0-ea27-4298-a231-f0c07b482705",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 37
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 8.003968253968244,
      "responseMin": 2,
      "responseMax": 687,
      "responseSd": 46.16021942396756,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1728175827483,
      "completed": 1728175838123
    },
    "executions": [
      {
        "id": "3d8e5504-ff2c-410a-addf-4f5e19db94b9",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "4592586c-874b-42db-ab16-36682f8f6658",
          "httpRequestId": "b947cdf7-9b08-4e7a-9714-91047e4417ee"
        },
        "item": {
          "id": "3d8e5504-ff2c-410a-addf-4f5e19db94b9",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "2b222824-0142-499b-bc09-cf67030f6a5d",
          "status": "OK",
          "code": 200,
          "responseTime": 62,
          "responseSize": 0
        }
      },
      {
        "id": "e456135f-65f4-4659-bd35-e4e02c464002",
        "cursor": {
          "ref": "3f53c6c6-2f0b-4280-94c6-50a6b51df1b4",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "dccb5e93-492f-46b7-905a-b22f16652981"
        },
        "item": {
          "id": "e456135f-65f4-4659-bd35-e4e02c464002",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "9bea609c-78aa-4511-ab08-e6bb176e6d8e",
          "status": "OK",
          "code": 200,
          "responseTime": 11,
          "responseSize": 0
        }
      },
      {
        "id": "53f4e439-84d8-40fd-8066-38918886a232",
        "cursor": {
          "ref": "74ddebd6-aca1-4320-b78e-44ee07e50867",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "e09615ba-ce74-4edc-8b01-61c17946e69e"
        },
        "item": {
          "id": "53f4e439-84d8-40fd-8066-38918886a232",
          "name": "did_json"
        },
        "response": {
          "id": "0914369d-24eb-4dab-a8ce-18540a78b06f",
          "status": "OK",
          "code": 200,
          "responseTime": 209,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82089162-2341-46a0-99c0-beeada57b4cc",
        "cursor": {
          "ref": "08864632-b80a-4fd2-955d-ff241313018c",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e38cbcb0-a4a7-4176-878c-0ce5580e7d42"
        },
        "item": {
          "id": "82089162-2341-46a0-99c0-beeada57b4cc",
          "name": "did:invalid"
        },
        "response": {
          "id": "970a394f-c140-4f76-b5c0-21d3c68ee035",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82089162-2341-46a0-99c0-beeada57b4cc",
        "cursor": {
          "ref": "08864632-b80a-4fd2-955d-ff241313018c",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e38cbcb0-a4a7-4176-878c-0ce5580e7d42"
        },
        "item": {
          "id": "82089162-2341-46a0-99c0-beeada57b4cc",
          "name": "did:invalid"
        },
        "response": {
          "id": "970a394f-c140-4f76-b5c0-21d3c68ee035",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fc1f353-59d3-40c0-b11e-d5066f0f82a2",
        "cursor": {
          "ref": "de2ed83f-5aca-480a-9b2b-8b3c75cdfc68",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "605057d0-e7ac-493e-b277-330401398b40"
        },
        "item": {
          "id": "2fc1f353-59d3-40c0-b11e-d5066f0f82a2",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "a32ec410-00f7-44f0-8578-67895d2bb37f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 42,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25037dc9-bdee-43e6-a887-66aa7d80b8e3",
        "cursor": {
          "ref": "c40774db-4797-44be-81ee-292d3f2393f1",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "75abee4a-8ee2-4bae-a48e-019cfe5c56ba"
        },
        "item": {
          "id": "25037dc9-bdee-43e6-a887-66aa7d80b8e3",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "a3bd17d8-6f9e-465b-b8c6-2d8fb6978afa",
          "status": "Not Found",
          "code": 404,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b3df027-4047-426e-a829-24ee476a1583",
        "cursor": {
          "ref": "7e682b83-1c9d-4ea0-946b-68cb87f6157b",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "20d7cc39-50eb-492a-bd31-02d3da3494c2"
        },
        "item": {
          "id": "4b3df027-4047-426e-a829-24ee476a1583",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "caecb140-c235-4c1a-a2d3-93b64d9fe9eb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "272596f7-5da1-4ab6-92a1-de2cf4af3047",
        "cursor": {
          "ref": "bb2aad11-2ba1-4596-8d93-1ea6c912b382",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "91a83b10-19ab-4bd5-84e9-f7d00d179da9"
        },
        "item": {
          "id": "272596f7-5da1-4ab6-92a1-de2cf4af3047",
          "name": "identifiers"
        },
        "response": {
          "id": "089bfbf9-453d-4c4d-8697-8a63a5e4155b",
          "status": "OK",
          "code": 200,
          "responseTime": 169,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c9e8df8-4c02-43b7-b8fc-1002b2a45be8",
        "cursor": {
          "ref": "325fe8f2-86f0-45a4-926f-085cf50b1852",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "cc35b971-7bb1-417d-ba60-034cf2f317e3"
        },
        "item": {
          "id": "7c9e8df8-4c02-43b7-b8fc-1002b2a45be8",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "e5ddb825-245c-4c5e-9c65-6dfc53c7149b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b541e446-b4e4-4d14-930a-85c3ca656aa4",
        "cursor": {
          "ref": "6d4ae73d-43dd-4326-8593-3766f7731070",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "46393809-13ba-424f-8e12-8effd7ea37b5"
        },
        "item": {
          "id": "b541e446-b4e4-4d14-930a-85c3ca656aa4",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "6c858024-7ee2-4206-a6e6-532bbd4ed43f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d40e160a-398b-4511-bb9e-313f731f62a0",
        "cursor": {
          "ref": "24dbbb86-600d-41d7-a56f-70e9fd6c6dcb",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "f75c2233-a3e7-40ea-9726-308b6410cf6e"
        },
        "item": {
          "id": "d40e160a-398b-4511-bb9e-313f731f62a0",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "82557176-8b1a-4720-9d49-f27ef89ab154",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73adb205-275f-4c27-b214-a8fb4cd3bd54",
        "cursor": {
          "ref": "62c6a5d8-7876-430b-84f3-1226dec79878",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "e821b6c2-8ca2-4515-bb88-e4ac3c41614f"
        },
        "item": {
          "id": "73adb205-275f-4c27-b214-a8fb4cd3bd54",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "cece657f-fcb4-4612-9fd1-b93745a06ad7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a13ee99f-fa22-420e-9a19-5cb7ebf9cbc2",
        "cursor": {
          "ref": "f86deac1-c763-4d7c-85b7-795dd48e65e7",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "ba453ad2-70ca-402e-a41b-3f77159cc2ae"
        },
        "item": {
          "id": "a13ee99f-fa22-420e-9a19-5cb7ebf9cbc2",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "d7e8f565-e585-4e50-8d86-f5979cb67209",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e123af67-d65a-461c-b6b8-374b35e4b7bb",
        "cursor": {
          "ref": "a876f8d9-7fe3-44cb-91ea-7b3ed29c573f",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "2ca7326f-1091-49e8-8ab8-b7428e219165"
        },
        "item": {
          "id": "e123af67-d65a-461c-b6b8-374b35e4b7bb",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "af8c5961-35d5-4848-b865-cdb3b05a2853",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7516776a-3021-43b5-91d4-d4fa4b27160c",
        "cursor": {
          "ref": "2cdc0f9f-db63-423f-acb8-1288c7e2646b",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "8e36fc7f-0f00-49a5-93f4-a9e6a55875b1"
        },
        "item": {
          "id": "7516776a-3021-43b5-91d4-d4fa4b27160c",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "3181f97f-e328-48d0-882e-f5748f4a44e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfd08eb4-78fb-4f56-9dbc-33313fd96159",
        "cursor": {
          "ref": "52ab09f4-78a4-47af-ad64-e282095e1264",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "d50569a6-0936-492c-a42d-7c054aa6feaa"
        },
        "item": {
          "id": "bfd08eb4-78fb-4f56-9dbc-33313fd96159",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "7e769dcb-d967-4db3-9319-cd3456c765a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48beb630-2a64-4110-8580-b0ef02cc5b49",
        "cursor": {
          "ref": "0b0d64f8-5acd-4b6b-939b-382df52392df",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "c6dc6625-1279-413a-ae1b-f33cf3d655ac"
        },
        "item": {
          "id": "48beb630-2a64-4110-8580-b0ef02cc5b49",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "41ad9ac7-81df-48b6-8833-4a0c2ab92576",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62714510-e65e-4113-8816-7fefd37f4deb",
        "cursor": {
          "ref": "867179ae-227a-405c-8362-5a101b6d9361",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "cee3e2db-7ca9-4992-a2f8-66f58243a77b"
        },
        "item": {
          "id": "62714510-e65e-4113-8816-7fefd37f4deb",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "ad968b5e-e513-4348-8b0f-56ab4fac06bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "475fec1b-24c6-46f6-9724-d86c185bbf5c",
        "cursor": {
          "ref": "27366969-38fb-4657-9392-c366aeee01c9",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "95fdc09f-0999-4e54-9df1-25a3134b40ac"
        },
        "item": {
          "id": "475fec1b-24c6-46f6-9724-d86c185bbf5c",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "a19925bb-1b8f-48ed-b547-e240788f81a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5454f453-4f38-4951-8331-a17b1715cc20",
        "cursor": {
          "ref": "3406cc84-2781-4031-91c5-1d8c334dd9b1",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "a3717cf6-0c94-483d-bc94-82ddc2a85845"
        },
        "item": {
          "id": "5454f453-4f38-4951-8331-a17b1715cc20",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "270e03d6-88cb-4130-a061-42d3cac56c9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "837952ac-49c5-4374-a138-c945b3acc4cc",
        "cursor": {
          "ref": "b4187f83-3b5c-4350-abb9-974c82478c97",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "e48d4981-f3a9-4b00-93f0-a32ec1134f09"
        },
        "item": {
          "id": "837952ac-49c5-4374-a138-c945b3acc4cc",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "83e18a17-0ae8-43e0-94f1-503f175d543e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3de7d26c-9370-4abd-b773-726e2e9a348b",
        "cursor": {
          "ref": "5e462ec1-49b1-4104-8e2d-270b9d2cefa9",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "86e531fb-e0ab-48f7-be8c-5f3cdf40cbe2"
        },
        "item": {
          "id": "3de7d26c-9370-4abd-b773-726e2e9a348b",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "ae226033-6d0a-4dfe-a84f-722bdab7829e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "262827fe-1019-4944-8581-034b6a03393f",
        "cursor": {
          "ref": "610312cc-49a4-4f5a-a830-2573fc4cf688",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "32d4949d-7dd6-4e7c-823f-aef9946536cb"
        },
        "item": {
          "id": "262827fe-1019-4944-8581-034b6a03393f",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "60cb560c-bef4-4b4a-8a42-a0122defd60c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57caee73-a1fd-48d7-b255-ac7205237544",
        "cursor": {
          "ref": "3e9d18cc-5b69-4f1b-9249-9bdb21d4e3ba",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "e362943d-0af6-48a8-b606-542af995ac52"
        },
        "item": {
          "id": "57caee73-a1fd-48d7-b255-ac7205237544",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "ca5ce081-f467-492a-bd7d-b95463507309",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "880455ab-5d63-4415-b6e4-d163f058f882",
        "cursor": {
          "ref": "4c126d84-e3ff-4f37-8abd-0eb17448b5bb",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "5e139b0d-cf44-476a-9afc-846c4ccfd417"
        },
        "item": {
          "id": "880455ab-5d63-4415-b6e4-d163f058f882",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "2e820d49-33f2-449f-b532-d85af2d6fb7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c02b864-e281-4af9-ae8a-1eaadc7539ec",
        "cursor": {
          "ref": "da16220d-57e3-4b2e-b041-f6a99cf2443b",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "7319d209-0a81-4c03-8a83-c95ca61e2f9e"
        },
        "item": {
          "id": "6c02b864-e281-4af9-ae8a-1eaadc7539ec",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "5ee7634e-08f5-4af5-949b-9d8cd2d38223",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f4315fa-7bef-47cf-9ff9-6edcb326cbf6",
        "cursor": {
          "ref": "76943b32-941c-4ff6-aed8-b984c9b1da97",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "d82ac3d8-407d-4a4c-a6f1-c4cdff9783cd"
        },
        "item": {
          "id": "8f4315fa-7bef-47cf-9ff9-6edcb326cbf6",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "6e0c661e-7724-49eb-bf6c-dd0f72263518",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae8dfbbd-95b3-4067-bb88-34b1c57967da",
        "cursor": {
          "ref": "f38e0c4b-5b43-4b1a-a75b-46d8cef3fced",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "9f6b1b33-7e3a-4a65-b134-809dd219dede"
        },
        "item": {
          "id": "ae8dfbbd-95b3-4067-bb88-34b1c57967da",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "30bbb9b8-9f91-40f3-97d2-9198b208914b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59b36fd8-234d-4a9b-bacc-d09d8876b61c",
        "cursor": {
          "ref": "a56a66ed-069b-4235-9b1c-a3bc5d64c239",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "5701ec5f-bb93-45fb-9eee-6a8e444728dc"
        },
        "item": {
          "id": "59b36fd8-234d-4a9b-bacc-d09d8876b61c",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "0ed595bf-1bb3-45fb-b6bc-46b3e751ad04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51361592-0555-4471-ad5a-bb6d015a36e7",
        "cursor": {
          "ref": "317fc444-ffc5-4dbb-af57-601f7b9c268c",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "523c76b9-b7ba-4c29-81d6-426623a5b36b"
        },
        "item": {
          "id": "51361592-0555-4471-ad5a-bb6d015a36e7",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "271d691d-7830-41a7-91d1-457ef5370bfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93997680-a6f0-452f-a895-0dd864606f84",
        "cursor": {
          "ref": "0e22675a-eb4c-400a-86b7-0e7db90ac308",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "f868bffd-5242-4bf6-9b03-9adf98878664"
        },
        "item": {
          "id": "93997680-a6f0-452f-a895-0dd864606f84",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "96d1fd67-a967-48d8-ae3e-2b812075d5ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0ce8bb6-e816-4d42-b610-c620116cf86c",
        "cursor": {
          "ref": "7d63a274-2bc5-4440-81e2-b4217b47df0c",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "4b8aa7c3-31ef-4878-8a02-ff09fc6eaf5e"
        },
        "item": {
          "id": "d0ce8bb6-e816-4d42-b610-c620116cf86c",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "4c98e954-0261-4cc4-88c7-2ff303932513",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17ebdb56-51ca-48c1-9c84-4dea2d20713b",
        "cursor": {
          "ref": "10709611-c876-4786-baec-f69136d8c920",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "7dc52e3b-958d-4456-a828-a336967bd259"
        },
        "item": {
          "id": "17ebdb56-51ca-48c1-9c84-4dea2d20713b",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "3e0eb10f-9b96-452f-b449-ea4f22138c48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4792bfcd-fb4a-4ef8-8751-fac1d4d4b384",
        "cursor": {
          "ref": "7f70643c-ce89-4734-83b0-e1382ee8ae82",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "4d47c043-bb51-4d0c-adab-431e1d7c5bcd"
        },
        "item": {
          "id": "4792bfcd-fb4a-4ef8-8751-fac1d4d4b384",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "a9cb6486-9b31-4a24-a285-9e12a7f0e6f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16a2e33f-7f71-4c11-b3c5-7a155aa2c283",
        "cursor": {
          "ref": "c943b5c5-1de9-4933-a7f5-487764fcf696",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "208854d2-1c68-42ca-98d8-1d49870bb7f5"
        },
        "item": {
          "id": "16a2e33f-7f71-4c11-b3c5-7a155aa2c283",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "d8e433d6-d6a0-434e-a646-2471c1c00d11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bf1c20e-109d-4f66-9334-4bb6f7531bb2",
        "cursor": {
          "ref": "d2f4b622-1844-4980-a93d-0ee0b260d42c",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "44e7ac91-fa7b-4055-bb8c-cb35e16e4ec9"
        },
        "item": {
          "id": "4bf1c20e-109d-4f66-9334-4bb6f7531bb2",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "a9798b34-7895-4a9f-83c0-7733d530f868",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4b0b8df-0180-4cd8-84fa-6035ce8b139c",
        "cursor": {
          "ref": "44c89304-4b2d-44ca-a5bf-11f25b461dbe",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "3f81da31-fe3b-4e02-b3ad-cb79cf1cc0f1"
        },
        "item": {
          "id": "a4b0b8df-0180-4cd8-84fa-6035ce8b139c",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "93f6fe08-e6c6-47f9-bda2-5a7e3c976a05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8582f2de-4e2e-4fe2-8e0c-0caa704d7769",
        "cursor": {
          "ref": "8ea42221-374c-4e5c-8db6-95f5a679e2aa",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "f22059eb-6ec0-4b55-ab59-70b64c57cf68"
        },
        "item": {
          "id": "8582f2de-4e2e-4fe2-8e0c-0caa704d7769",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "0f26d498-898d-4bcf-82ce-ba338f0f4015",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6f07041-6ebe-4383-842a-83cbd479f668",
        "cursor": {
          "ref": "0a591157-8151-4ac4-a58b-d720035f58ee",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "a3837115-8fc5-4359-a5d1-ba7e62dcbd26"
        },
        "item": {
          "id": "a6f07041-6ebe-4383-842a-83cbd479f668",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "a1c80338-77f3-4bd6-bca2-9cfcd17a525d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "402c1d48-4b61-4e71-bf37-190035b82970",
        "cursor": {
          "ref": "8ed1f52b-84ed-4566-b973-544bc016d007",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "4c7c3063-7c9f-4987-b7db-e337c96cfaf7"
        },
        "item": {
          "id": "402c1d48-4b61-4e71-bf37-190035b82970",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "e711183c-5519-406a-9040-785f8761967d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0673674-8dd9-4d68-84bb-545f283b6079",
        "cursor": {
          "ref": "3ad4e572-b83e-4b6b-b98a-e90a2c564a3b",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "38f568dd-eb12-4230-ba9a-2c91573cea12"
        },
        "item": {
          "id": "f0673674-8dd9-4d68-84bb-545f283b6079",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "7e81b498-cc56-45b8-96d0-cd6f4a4596d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4184cbf-2837-4d97-80c4-fe8d189341ac",
        "cursor": {
          "ref": "5ceb2daf-3074-4d7c-aeb9-9763761bc0eb",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "3681039a-473c-4720-8abd-118f97d82352"
        },
        "item": {
          "id": "e4184cbf-2837-4d97-80c4-fe8d189341ac",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "07ab0b25-7de7-4c90-822c-bb839b1f2beb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a9a7734-0c80-4b1d-9aa9-37173327c06a",
        "cursor": {
          "ref": "c29e603d-7d7f-431a-9df1-1e9ba393efe6",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "aa9d802a-8b7f-44fa-bfc5-1551060bcc3c"
        },
        "item": {
          "id": "2a9a7734-0c80-4b1d-9aa9-37173327c06a",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "ca4de263-c7f0-4f08-8f89-498844fdbd51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a53357f5-fb1a-48f0-b72c-31364bce30a4",
        "cursor": {
          "ref": "4e62c1a5-7720-4dc9-83c3-a05931f24269",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "d4cf75b7-e26f-4ffc-b8bb-ca6a0acd34da"
        },
        "item": {
          "id": "a53357f5-fb1a-48f0-b72c-31364bce30a4",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "7f3df86d-d715-470f-9dbc-2d8867b031bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ec03563-92db-4373-b81c-564afbd5d9cc",
        "cursor": {
          "ref": "a0a3ef11-86fd-4ccb-aea5-2f6f8cdd2bb0",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "8f8fb45b-c11a-4a3e-91f7-54da7b954758"
        },
        "item": {
          "id": "2ec03563-92db-4373-b81c-564afbd5d9cc",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "4d6facd3-7e23-4550-91f5-a5c745400a29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "792caf6d-f99d-4172-b00b-60786649fcbe",
        "cursor": {
          "ref": "50ef64a0-126d-45d6-b55d-bd5ac928b87f",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "2efa3e6f-1c56-4876-9179-88a3c3c645c6"
        },
        "item": {
          "id": "792caf6d-f99d-4172-b00b-60786649fcbe",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "ffce9010-d785-41ef-a65d-07cd8d4c5625",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db3bd618-3667-4b67-85f0-016f79a663ab",
        "cursor": {
          "ref": "fa62cf28-a08d-4951-b0c6-1551f84a53cb",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "0563eeba-e04d-432b-803b-016219e3426b"
        },
        "item": {
          "id": "db3bd618-3667-4b67-85f0-016f79a663ab",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "16941154-2006-49ca-a6d1-2143e5a11d9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c91262f-f11b-4844-830e-3f13ab8240ae",
        "cursor": {
          "ref": "5237b8b3-6f66-436f-a97c-6939598ca600",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "d3eb0207-be00-478b-bce3-0c6704a4b6f5"
        },
        "item": {
          "id": "2c91262f-f11b-4844-830e-3f13ab8240ae",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "e0aedb5c-7af8-4455-90a7-5210c696aeb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89ab9c29-941f-4bd8-9e02-b755b832d5f0",
        "cursor": {
          "ref": "abe5e9b6-f386-4a45-a2e3-47f848d57b4d",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "81dc0119-735e-49e1-9b1a-0f9bd4de8b10"
        },
        "item": {
          "id": "89ab9c29-941f-4bd8-9e02-b755b832d5f0",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "0666078b-8921-4549-87df-faa55d55f5a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1282d064-df75-4ff0-8e64-b80f7640aa09",
        "cursor": {
          "ref": "8a8ca743-1515-4adc-bed7-1e35265271b8",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "94f22c73-1f04-43cd-991a-e76d63fdb3da"
        },
        "item": {
          "id": "1282d064-df75-4ff0-8e64-b80f7640aa09",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "f6c4d2fd-c32c-4482-a1d4-5d8447f6de17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f089a49-1d4b-4121-87ec-a5955747b063",
        "cursor": {
          "ref": "7d513232-55d4-4f93-a41d-7bc1ca1ba4fb",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "66c6b6da-d307-4296-8744-41a1611128eb"
        },
        "item": {
          "id": "3f089a49-1d4b-4121-87ec-a5955747b063",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "2a7ccede-f895-4386-9a73-44f0829a634e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92fd227d-1b00-43c0-b5cb-56c5c2fa7da7",
        "cursor": {
          "ref": "2cde50cf-545c-48dd-aa6c-727f32ac637b",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "aa9fb753-5763-4ecb-89d8-a0802d7d97af"
        },
        "item": {
          "id": "92fd227d-1b00-43c0-b5cb-56c5c2fa7da7",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "736a3fb7-ee83-4383-8dce-0aca5a5de591",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f93394b-9fe9-473a-a3ca-148783de03f9",
        "cursor": {
          "ref": "bba2093e-4380-4ca8-9edb-5b65d72f9a20",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "ed5b094a-cd42-4ac8-8127-7e7d9221e36f"
        },
        "item": {
          "id": "9f93394b-9fe9-473a-a3ca-148783de03f9",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "9c81f88d-cb15-445b-ad23-07bf242b0a5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d716c1c2-6e76-493b-bc69-8d489c5774c7",
        "cursor": {
          "ref": "4aff6a6a-e93d-46ff-8458-2e21a28526b3",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "e22c4678-7a98-43a0-82d3-1408f2ec81a5"
        },
        "item": {
          "id": "d716c1c2-6e76-493b-bc69-8d489c5774c7",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "372886a9-373f-46be-9894-4b0d39b51aba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68f3dd68-11ed-4d6a-abf7-efbcb746c2e8",
        "cursor": {
          "ref": "10387c3b-b025-4dc1-82ee-cd24bde1b04f",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "17968177-6227-438a-960b-c0c5b7b7e6ff"
        },
        "item": {
          "id": "68f3dd68-11ed-4d6a-abf7-efbcb746c2e8",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "071b7f38-8e81-4ea8-9d55-d159e330ab06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7210f201-491e-44f3-a8bf-060e31b1ebb2",
        "cursor": {
          "ref": "b9a873ca-964f-41d1-979c-c534cd81fcf1",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "ec78ad2c-bfe8-425d-8246-2e1fd4f5153d"
        },
        "item": {
          "id": "7210f201-491e-44f3-a8bf-060e31b1ebb2",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "c750fc86-d25b-465a-8ba0-6775edfced4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d98cc6a-9c41-411f-a719-1534eb3fb1a8",
        "cursor": {
          "ref": "717196de-3787-4f36-a4cf-565cb7dac7b3",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "19fdfc7c-b099-4b3e-a1ae-038d39615776"
        },
        "item": {
          "id": "9d98cc6a-9c41-411f-a719-1534eb3fb1a8",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "437336a0-c743-448d-9ec4-196f362b3503",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1997d098-c106-4ff8-867b-91b14369421c",
        "cursor": {
          "ref": "e559ee06-1865-45c7-aa23-dd4361c4b61b",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "99cfe47d-ddba-451f-961c-a67e8a626ccb"
        },
        "item": {
          "id": "1997d098-c106-4ff8-867b-91b14369421c",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "a603a9d5-8de7-43d1-909a-d7c06783666d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a14d8d83-1fa6-4aad-99bf-981d3283da25",
        "cursor": {
          "ref": "dcd3fc26-2618-436d-8302-b1e059f6cc66",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "73441c42-ae5a-432d-b662-fb9077d6785b"
        },
        "item": {
          "id": "a14d8d83-1fa6-4aad-99bf-981d3283da25",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "1df945f2-c82b-4dd0-b967-8b62fe70836a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f15641ce-e319-475e-a1f5-6c456b54091c",
        "cursor": {
          "ref": "030ff697-78d1-4371-9a29-a37f931a9f3c",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "2efeb724-5099-40cd-9dea-f6d7b7197998"
        },
        "item": {
          "id": "f15641ce-e319-475e-a1f5-6c456b54091c",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "15faa6ae-57ec-4795-a727-2f4a2b24e1c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22d1e6d8-9a95-4b2a-ae29-5554e43c2c3e",
        "cursor": {
          "ref": "8ff5b431-4cee-4c20-ac73-59cf6770b271",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "26f478c2-272c-4f38-9668-f70c967df8dd"
        },
        "item": {
          "id": "22d1e6d8-9a95-4b2a-ae29-5554e43c2c3e",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "1e4b2033-f701-4715-b871-716cce1e83fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23c69d36-447e-4e06-b67f-db2300e20933",
        "cursor": {
          "ref": "a4c95cee-f658-4e33-a2de-80005058ff2d",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "801765aa-2686-494f-8840-1d7ab2abdcef"
        },
        "item": {
          "id": "23c69d36-447e-4e06-b67f-db2300e20933",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "24019281-ef3d-4eb1-88a4-3378e2487c68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e6980d8-7883-40d2-bf70-4ea60eb22b61",
        "cursor": {
          "ref": "0dddbe7d-b0cb-4c05-be9b-e57ef27872df",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "f0d80e58-1c76-413f-b44c-451fb03e2b89"
        },
        "item": {
          "id": "6e6980d8-7883-40d2-bf70-4ea60eb22b61",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "447cacc7-5155-4ddd-bfbb-e45d99609ce4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "658d058e-7c3c-4089-966c-e71b4b12d17f",
        "cursor": {
          "ref": "57c95c68-afff-42ca-b97c-249e09c44533",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "89fba7dc-2093-4b65-b4bd-f143a87664b4"
        },
        "item": {
          "id": "658d058e-7c3c-4089-966c-e71b4b12d17f",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "7ea94bd2-591c-4beb-bb89-fee020107405",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8fc6855-6ffd-47ed-8e91-341d9564e649",
        "cursor": {
          "ref": "5b56214f-a1b7-4b49-a458-7c6f86fe638b",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "546d0016-c793-4d6a-bae0-4a94e663ddd3"
        },
        "item": {
          "id": "c8fc6855-6ffd-47ed-8e91-341d9564e649",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "fa3b4f43-0e04-4945-8de3-0e21087bd563",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b942b086-ada4-4160-9b48-18b9b260bff1",
        "cursor": {
          "ref": "7df2a1e5-aec3-4443-b1cd-7a34812e7ae9",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "e0feb1ee-bb98-437a-87ab-ad7b9621a7eb"
        },
        "item": {
          "id": "b942b086-ada4-4160-9b48-18b9b260bff1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "02931092-595c-4a8a-8b68-01b5194cea66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16626b80-fca4-4496-8272-dcac49183820",
        "cursor": {
          "ref": "aa44865b-4de8-4319-a2f8-45319be127c5",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "60bcd13d-de7f-4af4-9b46-34eabcd7dc56"
        },
        "item": {
          "id": "16626b80-fca4-4496-8272-dcac49183820",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "5d6a97cb-1a8a-40ce-9614-4a4d46083491",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5677ab1c-381d-44f7-b91a-df61a520e018",
        "cursor": {
          "ref": "e5663c8e-fcd7-479f-afd3-a96d614311c1",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "7323f29b-9397-4f9d-be43-11115f79907f"
        },
        "item": {
          "id": "5677ab1c-381d-44f7-b91a-df61a520e018",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "127f10eb-f820-4fd9-bf1b-346b4581b40f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c61ca209-f992-4f48-9636-8e2dd4d2021d",
        "cursor": {
          "ref": "a16b7b00-fa79-421e-aaa2-43fa1cd7060c",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "85d39e7a-d753-4a75-80ed-c834f39616a4"
        },
        "item": {
          "id": "c61ca209-f992-4f48-9636-8e2dd4d2021d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "99c0ecd5-1fa3-4bc7-8585-3ef8b05e32e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a65a4d0c-41c7-4176-971d-8cfb85e7dae9",
        "cursor": {
          "ref": "f7c7270f-5d9c-4345-83dc-fb5210fb8979",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "83b71361-f914-437c-ada4-3cc68509e6bc"
        },
        "item": {
          "id": "a65a4d0c-41c7-4176-971d-8cfb85e7dae9",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "6d72c436-fff4-4485-a87b-c5786f422b3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13198fb0-a827-4672-9b69-eab72c2c4be0",
        "cursor": {
          "ref": "9a31dece-6ae8-4447-9968-5cd7dfcc9900",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "41a4df4f-9320-43cc-848d-512377153157"
        },
        "item": {
          "id": "13198fb0-a827-4672-9b69-eab72c2c4be0",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "7c37b142-42ff-4b4d-9917-e9bd76dc2bc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6742c929-46aa-4c5d-8c73-52fffe103e01",
        "cursor": {
          "ref": "45fbe2c7-05f3-4654-a7c5-ef000648aeb5",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "543fe3d6-4ca0-4874-9aae-a9d655be5f8e"
        },
        "item": {
          "id": "6742c929-46aa-4c5d-8c73-52fffe103e01",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "6be3cb7c-4479-47a9-aac1-b1b60a5cc24d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a968f50a-4963-4038-9e01-f2b950f892da",
        "cursor": {
          "ref": "d30f5952-4e38-47ea-9056-e2fad31b5d3b",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "b978882b-f223-4d0c-9e63-76c5d5f86b34"
        },
        "item": {
          "id": "a968f50a-4963-4038-9e01-f2b950f892da",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "aef0220e-8c37-4f36-bf1b-d751b2e141bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b633a5f-3214-4cff-ab89-64914c75d0f9",
        "cursor": {
          "ref": "1735356e-5dfa-44b5-8f7d-99451f68e0ba",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "69e25faa-c7d6-4005-8da2-7921e8c266fb"
        },
        "item": {
          "id": "2b633a5f-3214-4cff-ab89-64914c75d0f9",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "03f06077-1863-4eb7-b6c7-0c70a49a0f55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "119df32f-eb42-4fe9-b741-713c4c69c6ca",
        "cursor": {
          "ref": "4a2ca57a-6bfe-4303-a054-fe0715064480",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "e4b55c83-8406-4d39-94ed-6b8cdf67aa00"
        },
        "item": {
          "id": "119df32f-eb42-4fe9-b741-713c4c69c6ca",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "fe90742e-008f-427d-b656-b0916ca725f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fd5dfb2-fa4f-4f3b-98b6-2729a58103bb",
        "cursor": {
          "ref": "1166710e-e6ac-4242-ac99-8aee91282c9d",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "9a31419b-ca69-451c-9078-971a60c16c18"
        },
        "item": {
          "id": "6fd5dfb2-fa4f-4f3b-98b6-2729a58103bb",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "d4b3fcb4-d9cc-4278-b4a7-0c4e4493b6ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "501e71d6-b342-4433-a39d-e1ae19dd2365",
        "cursor": {
          "ref": "7fb14dd9-2136-4803-9687-a8306c9c5115",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "e369aa95-09fe-4e03-9894-5917b55800b7"
        },
        "item": {
          "id": "501e71d6-b342-4433-a39d-e1ae19dd2365",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "fce7f70a-05bc-42b0-96e4-6c2bed53666e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e728dd57-2e2b-49a2-8a29-9315f404e0c0",
        "cursor": {
          "ref": "4b112de6-ad86-4672-86e3-1653f2368ede",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "5a4b93a9-1dfc-455b-937d-766fee5288f3"
        },
        "item": {
          "id": "e728dd57-2e2b-49a2-8a29-9315f404e0c0",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "6c65fb48-f411-4c58-8f6b-1f5878d7f484",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbfc32d6-bfb7-45cb-ad41-04bcc7eb7c28",
        "cursor": {
          "ref": "fa0e05cf-5c9a-4144-9d02-b2b2d7504ffb",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "ca7c3e13-5edd-444b-92e0-e1349de681bd"
        },
        "item": {
          "id": "cbfc32d6-bfb7-45cb-ad41-04bcc7eb7c28",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "3199c29b-dc73-4191-8ad3-29db3577fe02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5064e0f4-0523-4d58-97cb-9bf29fb53d07",
        "cursor": {
          "ref": "3db3aa22-7da1-46e0-9e75-022c9e1d3b37",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "50642898-1e6c-416e-9958-5780e924afe2"
        },
        "item": {
          "id": "5064e0f4-0523-4d58-97cb-9bf29fb53d07",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "340f4b70-866f-4c62-ab3f-29a0cde6923c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3306072-d7c0-4cfd-8abc-38218b9461c2",
        "cursor": {
          "ref": "600b2e1e-6fe8-4ed2-a269-067c40820e9f",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "3a3c7553-3882-4515-a72d-8500ba4c94bd"
        },
        "item": {
          "id": "d3306072-d7c0-4cfd-8abc-38218b9461c2",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "b142eb79-b76e-44c4-a316-7023da3c743c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceaab015-5525-43b1-b893-cd9699d07626",
        "cursor": {
          "ref": "4a749780-06cd-4f96-a7c5-ff36c4205b96",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "2810e2bb-251b-46bb-b179-362f05396617"
        },
        "item": {
          "id": "ceaab015-5525-43b1-b893-cd9699d07626",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "baea7133-32b3-43ce-b174-6f659c8120e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c6bf3b1-7662-4123-8c4e-77dcef82ded9",
        "cursor": {
          "ref": "c67ee3ba-d27f-4ba8-a632-5210a18fe9c1",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "08b392b1-93ae-45db-9a62-537963b65fc1"
        },
        "item": {
          "id": "3c6bf3b1-7662-4123-8c4e-77dcef82ded9",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "0a51d37b-c50a-431d-b582-d017cf88d6cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0644ef1-d098-4e01-88fb-c3025f7c47e9",
        "cursor": {
          "ref": "f1930123-c168-4ac1-a1ad-7e94c6e34737",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "e73d0cdb-cb56-453a-9641-22a6db6ace86"
        },
        "item": {
          "id": "d0644ef1-d098-4e01-88fb-c3025f7c47e9",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "fbb098b1-bf1b-43f1-a3c3-8b2234056b00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c7158aa-d7ad-462a-a0a7-08547788f5a7",
        "cursor": {
          "ref": "e0377943-001b-456b-863d-aec83599dfd2",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "ed618188-d959-42ad-9069-011b2f3f5c6e"
        },
        "item": {
          "id": "5c7158aa-d7ad-462a-a0a7-08547788f5a7",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "1cfdcc0e-fd56-4f53-afd4-e06416362ab3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2739cfdf-a0bf-47ab-95a8-50edaffabbb3",
        "cursor": {
          "ref": "8f4e088d-fd7f-44d7-9120-a2c28f71aff6",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "1e9af972-5844-4bfd-a855-9ee16c641c2e"
        },
        "item": {
          "id": "2739cfdf-a0bf-47ab-95a8-50edaffabbb3",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "c990ba0d-66da-453f-b59b-b4841b96328a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20437314-81ff-418d-95eb-3b9f046c490d",
        "cursor": {
          "ref": "6e792345-d0f8-46c2-8714-fefba4fa4c6b",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "23190d69-0194-4b39-93e4-fffeea138c02"
        },
        "item": {
          "id": "20437314-81ff-418d-95eb-3b9f046c490d",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "ae1a5aec-2707-4550-b7e1-9702dd5d3c7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57c96a7b-dec0-422e-b2a4-fad20d3532d6",
        "cursor": {
          "ref": "fa46884a-196e-45c8-b28a-342a1aaa05f4",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "af25599f-4aab-408e-828d-8fb86d28091c"
        },
        "item": {
          "id": "57c96a7b-dec0-422e-b2a4-fad20d3532d6",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "e39865bb-7098-4002-bd07-06a738123923",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c7c32fa-49f8-4912-8283-973f72ecb4b0",
        "cursor": {
          "ref": "2c0b4dd9-9a26-4713-b4e6-0f64730689a2",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "113e957b-1237-486c-8359-9c2ef8ba0b3b"
        },
        "item": {
          "id": "6c7c32fa-49f8-4912-8283-973f72ecb4b0",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "88b70472-a937-4adc-a8a9-75cf43666051",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1e2904a-5fe8-4f1c-88df-035004a1b7c9",
        "cursor": {
          "ref": "50855c94-5c9c-4125-9802-b10aa6965490",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "8f4710fa-60d4-44b8-b894-fb3a06506253"
        },
        "item": {
          "id": "d1e2904a-5fe8-4f1c-88df-035004a1b7c9",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "c8afd15b-318d-432a-99b4-c9cfeaa6f6ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c2c59cf-bd2d-4fc7-8d32-6bf0db305a85",
        "cursor": {
          "ref": "78eeb3ca-b302-420c-9272-e29e6eefc733",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "569f5559-10e3-40a4-88a2-e8fd23b7f7b9"
        },
        "item": {
          "id": "6c2c59cf-bd2d-4fc7-8d32-6bf0db305a85",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "ea66337b-745b-41b8-a34e-c49cf168e3e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60afae2e-b00a-4835-8d0d-562bc801a305",
        "cursor": {
          "ref": "efdb54e5-5601-4303-8f8d-460c340c3a18",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "7adcfcc0-916d-447f-8388-2eb60612c5b5"
        },
        "item": {
          "id": "60afae2e-b00a-4835-8d0d-562bc801a305",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "b33e481c-0e7a-4085-886d-9b273e4f18c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "770f363d-1b55-4f42-bb3c-e1a50f145daa",
        "cursor": {
          "ref": "0c90e936-df7b-4467-bd11-edfbecf63cad",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "b098529c-39c7-44e3-864e-3657c0059eb8"
        },
        "item": {
          "id": "770f363d-1b55-4f42-bb3c-e1a50f145daa",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "048dc8c1-64ee-40ac-9e19-df3478d3e557",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd82d0d8-8374-4103-8e35-01c93ed0f7fe",
        "cursor": {
          "ref": "bedf6abf-13fa-4a78-9310-90e5b4703feb",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "c12522cd-0842-46e7-a9bf-96cd4302fa04"
        },
        "item": {
          "id": "fd82d0d8-8374-4103-8e35-01c93ed0f7fe",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "26424091-c936-420b-b494-798372ec52a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ca85836-bc8c-4c7d-a962-528632997fbb",
        "cursor": {
          "ref": "6c25ad3f-0429-4ec6-acdf-af14c4796ed9",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "662b315f-f64f-4125-9887-49e947a2d573"
        },
        "item": {
          "id": "2ca85836-bc8c-4c7d-a962-528632997fbb",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "4064499c-10a6-4c37-a1cb-0a65cdad646f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27bc3f58-e4ee-4bef-ad76-147217df0664",
        "cursor": {
          "ref": "4ada8ac4-b015-4b77-aa47-1e3d7b050678",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "d595207b-37f4-491f-9987-4d2553e530dc"
        },
        "item": {
          "id": "27bc3f58-e4ee-4bef-ad76-147217df0664",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "6f345f8e-dfa3-4524-a5f3-3d05a0e1b725",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52d24551-52dd-43df-b752-2e81b94beab3",
        "cursor": {
          "ref": "b63a9636-01eb-4e08-b7e2-4afc893a9470",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "5b0f6ee0-981d-4eae-9ed8-38b2f0eaa3e7"
        },
        "item": {
          "id": "52d24551-52dd-43df-b752-2e81b94beab3",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "7c81b748-a8b3-4706-849f-62f8bd7e92a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64faa749-2cd7-48c2-ad68-76cf8b766446",
        "cursor": {
          "ref": "356d213e-42d7-442a-bbc4-1d3612b91413",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "037b3477-ac90-4e04-a18c-dca21c6cb4f7"
        },
        "item": {
          "id": "64faa749-2cd7-48c2-ad68-76cf8b766446",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "de03ee17-1edd-4672-82f5-9e3f12b83590",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bedbe5f1-a965-4c44-99c9-d19b9038d339",
        "cursor": {
          "ref": "3d810e6a-c17c-44b1-985d-c2129db8182e",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "15c7a292-ab8d-4603-8137-aa5e9275d663"
        },
        "item": {
          "id": "bedbe5f1-a965-4c44-99c9-d19b9038d339",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "e140b9f3-01dc-4dfe-bf20-f1a6d5c45673",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8ad0fef-ad84-49cc-9fe5-ffa87abd4d7f",
        "cursor": {
          "ref": "e3ad09f2-6b4d-4e5c-bb9e-96d54e427c96",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "f1f7ffd8-7160-4d57-9083-34700941c13e"
        },
        "item": {
          "id": "f8ad0fef-ad84-49cc-9fe5-ffa87abd4d7f",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "08c29d3b-a2f7-4136-9fed-26fedb9ccd3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3424809b-70a4-4baf-bd60-08ded3c5edaf",
        "cursor": {
          "ref": "ea332036-12fe-483d-a9d7-487c1743f35d",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "60b2842d-3366-4bff-a589-81fbf769733c"
        },
        "item": {
          "id": "3424809b-70a4-4baf-bd60-08ded3c5edaf",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "349e29a2-34c5-4c2c-bbdc-ba6877133d03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:101)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08cbaddd-d6a1-4dc4-b678-c5498ecb38c5",
        "cursor": {
          "ref": "43e586be-48aa-4b5e-81ac-6ec138749245",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "4c8b56aa-f164-4f98-9f8b-1f8a3509624b"
        },
        "item": {
          "id": "08cbaddd-d6a1-4dc4-b678-c5498ecb38c5",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "faf457f1-c889-4fd7-a6a7-857255af5a85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "9d1b3926-ad5c-4773-95d1-199275eea5b9",
        "cursor": {
          "ref": "96fcc8db-d385-404d-8ae1-702c7446e0c4",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "0481b80c-3991-457e-b5ef-2f7d73cf9366"
        },
        "item": {
          "id": "9d1b3926-ad5c-4773-95d1-199275eea5b9",
          "name": "credentials_issue"
        },
        "response": {
          "id": "04e7942a-73d8-4c78-ad01-6a1f0f020db0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "c8475e39-2e2a-492f-a47e-5c5ab2c8e7f7",
        "cursor": {
          "ref": "bf9d2b5b-67e5-45e4-b28c-be273388382e",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "2dc18a10-0c1e-4bc6-a06f-5cdac05858f2"
        },
        "item": {
          "id": "c8475e39-2e2a-492f-a47e-5c5ab2c8e7f7",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "2971472e-23fb-4967-a6b6-14c78889a2ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "a5756da3-ddfe-4476-8fc4-9b4e870147b5",
        "cursor": {
          "ref": "47cc443d-51f8-471a-8b41-fe308aedfc81",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "304cecf2-dbad-4fa8-a29c-1d93e9e5ebc5"
        },
        "item": {
          "id": "a5756da3-ddfe-4476-8fc4-9b4e870147b5",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "9499292d-5d38-4a30-802a-be87c2159a8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "6f013c20-ef43-484e-b3e6-5f41ff6106b7",
        "cursor": {
          "ref": "37fd3cce-0fe5-4cc3-9f43-59d191ef5d9f",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "b9701d62-58c9-4800-9554-97392746950f"
        },
        "item": {
          "id": "6f013c20-ef43-484e-b3e6-5f41ff6106b7",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "8eb1f9d3-fbdc-4070-af16-cd9016dfd267",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "583676be-1ef1-40b7-82d1-312f297b347f",
        "cursor": {
          "ref": "88904819-abee-4b60-ad56-1e906978c5c7",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "c72c42a3-0b75-48fa-9e8f-04c608786837"
        },
        "item": {
          "id": "583676be-1ef1-40b7-82d1-312f297b347f",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "8b3a70dd-3342-4295-9bc7-001852a826ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "59b69ca1-fe88-4b2a-bdeb-846864bd2420",
        "cursor": {
          "ref": "eeed5610-6f60-4fa9-9b73-7c06b0f30fc1",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "9bbfdd4b-87b9-40b7-9546-4f0e4d961ce6"
        },
        "item": {
          "id": "59b69ca1-fe88-4b2a-bdeb-846864bd2420",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "ae2702c1-93f5-49a5-970a-b25166fb3b4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "d8556877-df8f-4ef1-8b9f-1f3d5e5b6549",
        "cursor": {
          "ref": "46a72ca8-dd13-4d42-84ec-8b34e58336ff",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "52c1bf43-6383-45c4-aa34-12dc039e1e57"
        },
        "item": {
          "id": "d8556877-df8f-4ef1-8b9f-1f3d5e5b6549",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "aa050651-c191-4498-8517-bbc478c8a41f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5898dbaa-735b-4c66-9760-d0de6d76c3e1",
        "cursor": {
          "ref": "e8be9d40-2467-40e1-925c-0a3327d9acce",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "7fd7996b-35e8-4f9a-8892-a7deb7e2aa4c"
        },
        "item": {
          "id": "5898dbaa-735b-4c66-9760-d0de6d76c3e1",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "3b22f82c-f63d-4afa-9188-80076451749c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37fdc133-41dc-4fb9-b0e5-c99cec52c37f",
        "cursor": {
          "ref": "9013cc33-cba0-4d5d-b25d-b031e6ebe908",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "76fc8231-a968-4682-9cc9-c4a818b98280"
        },
        "item": {
          "id": "37fdc133-41dc-4fb9-b0e5-c99cec52c37f",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "6d30ddab-3ac7-48fa-bc1a-563c4ed67dd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d3a9a6d-0f71-41b0-9c98-8743a7ff8786",
        "cursor": {
          "ref": "d1fc3a9e-30b0-4292-8bd5-053ac5c82d20",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "4c88daae-25e5-4b65-b4f8-645f21fa636d"
        },
        "item": {
          "id": "9d3a9a6d-0f71-41b0-9c98-8743a7ff8786",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "61b7d67e-1c8c-49be-a78b-514ed2659368",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7384557-4adc-4879-892c-a657df0d2ce3",
        "cursor": {
          "ref": "a6f7c147-1546-422e-8c23-67a5bc05c72c",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "5822d543-bcde-4e62-b08f-060dcad63add"
        },
        "item": {
          "id": "c7384557-4adc-4879-892c-a657df0d2ce3",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "40745843-49ee-4717-9323-9777f9cd55bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb91ca6f-54b8-4283-b748-e81e304b95cd",
        "cursor": {
          "ref": "ab711a6f-ca25-4e68-897e-6cf079aa851d",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "f30ac314-7f24-4818-a29b-46a5455ae7bb"
        },
        "item": {
          "id": "fb91ca6f-54b8-4283-b748-e81e304b95cd",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "cedcab9e-256a-4969-a5cc-ab80b4024e03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71e951e3-3429-4bdf-9f70-4d84d229d88d",
        "cursor": {
          "ref": "0e1cc344-0def-43f3-a775-ae7e3ae22c3c",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "2c615dca-375d-4a16-a5ef-6f404d21f1bb"
        },
        "item": {
          "id": "71e951e3-3429-4bdf-9f70-4d84d229d88d",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "35301d42-ddd0-46dc-b150-af4314a08a28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6da4a090-4b2d-4918-9778-f2b9882ba57a",
        "cursor": {
          "ref": "c85a1662-a8c7-47ca-8661-1c95ec68da7a",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "ac9104d1-275b-437a-aaaf-afc5ad04c4f9"
        },
        "item": {
          "id": "6da4a090-4b2d-4918-9778-f2b9882ba57a",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "f5f15231-bfc7-49e9-93ff-9975ef367adc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06c3c9c1-f90b-4ac9-8a3f-1ae2ddf3f175",
        "cursor": {
          "ref": "0dfe8080-5eee-42ec-8a3e-196c05d8d472",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "6b14f7ff-780c-4f58-adc0-1465d3f01bbb"
        },
        "item": {
          "id": "06c3c9c1-f90b-4ac9-8a3f-1ae2ddf3f175",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "a3e2ca43-36d3-4fed-b3bf-1429f0fe6b84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12f7ba77-ecd4-4c61-a352-450671b9dada",
        "cursor": {
          "ref": "80ea18cf-e29e-4db3-9e9d-e3efe3660602",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "f5b0e2c6-b80e-445e-b779-da2dc0ac51fc"
        },
        "item": {
          "id": "12f7ba77-ecd4-4c61-a352-450671b9dada",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "33a0f374-2115-442b-9868-35be4b84a9d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff163233-053c-4276-8e91-a0766a0215f5",
        "cursor": {
          "ref": "c4828c42-d7c3-4d7a-8fc9-f9bc5f2bd306",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "2466c378-cf53-4b89-8f34-f0b7d0b94094"
        },
        "item": {
          "id": "ff163233-053c-4276-8e91-a0766a0215f5",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "af10615f-9925-451a-80a0-d4503f5843ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48767566-5d82-4d58-89a1-63fcd82692a8",
        "cursor": {
          "ref": "89aeaf4f-6d91-43fd-b0bd-28b2c0419709",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "4c517fe5-6718-4e94-8382-e024a3fa9858"
        },
        "item": {
          "id": "48767566-5d82-4d58-89a1-63fcd82692a8",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "e10320e2-ddd6-453a-91d9-3dd1fbacc0bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71cb509d-e1e2-4cc4-af46-9d612d64aa84",
        "cursor": {
          "ref": "b635256a-c9c1-4452-85e7-b1011a369c4c",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "10323e88-8fd4-4e12-81c3-c1ce25edc22b"
        },
        "item": {
          "id": "71cb509d-e1e2-4cc4-af46-9d612d64aa84",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "b8cfa1d2-28e3-41ac-9aa6-b0a2427a3131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c60150c8-3020-465a-82c7-a5c9d63141ff",
        "cursor": {
          "ref": "95f12d81-4134-49cc-9cff-bf87f11e8439",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "876c8d6e-cb70-49aa-88b8-80910159d443"
        },
        "item": {
          "id": "c60150c8-3020-465a-82c7-a5c9d63141ff",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "b975f3a1-3acc-41e6-bdf6-bc7f72389635",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "279ab144-ce8c-48c6-909b-9b6640a60560",
        "cursor": {
          "ref": "e3fd3fdf-9eea-4251-925c-74b420bc4c91",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "443fafe5-4960-4c00-80be-32305d8eadbe"
        },
        "item": {
          "id": "279ab144-ce8c-48c6-909b-9b6640a60560",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "985e4272-c209-4b86-aa9b-66cec2b6d8c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c34c7a1-6c66-44bf-8829-a5fac96b7dab",
        "cursor": {
          "ref": "d6b33353-7af7-496b-b390-abfba0fb8b2b",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "7963f1ab-f95d-4f58-ad06-421c6d7c5572"
        },
        "item": {
          "id": "1c34c7a1-6c66-44bf-8829-a5fac96b7dab",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "568af5c0-4608-4837-9dbe-a8c6023e4e1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d51a962-8a80-4c0e-93b8-75a1005947bb",
        "cursor": {
          "ref": "13dc10f6-acfe-4594-b147-2e591707f3bb",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "8eed6639-8064-42b5-954e-473ea5e5f0fd"
        },
        "item": {
          "id": "3d51a962-8a80-4c0e-93b8-75a1005947bb",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "63cab343-36af-4641-a063-c1696f6fd5ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be31fd61-b971-4263-83d7-965a0301403f",
        "cursor": {
          "ref": "c92d76a0-a1d1-491b-bd25-df87774a3b93",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "e30147ea-bf59-4e5a-b590-0995683fd23b"
        },
        "item": {
          "id": "be31fd61-b971-4263-83d7-965a0301403f",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "df28ddf7-bfcd-4c6a-bf53-40c0ae625a5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42b1618c-d93c-418c-8775-57a1692cfedc",
        "cursor": {
          "ref": "6a88c9c7-a970-4ba1-8024-b807286acc8d",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "f9d356ea-914d-4636-971c-680fdb4ba117"
        },
        "item": {
          "id": "42b1618c-d93c-418c-8775-57a1692cfedc",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "14c720e7-011e-4842-ac1c-a56e7931e78b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7d4a3dd-ac0a-4d1b-83a3-b5a29c96dc58",
        "cursor": {
          "ref": "73c5a805-b931-4d11-847e-efcb3e9a9954",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "31bb59ae-7e89-4846-958e-3aef9308ec60"
        },
        "item": {
          "id": "e7d4a3dd-ac0a-4d1b-83a3-b5a29c96dc58",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "18afb072-3128-4317-b666-fbad8b20035b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fd2b23c-b271-40c1-9596-f31f9add168e",
        "cursor": {
          "ref": "83862cfd-cfb0-4a20-b7cc-6b4b91dae0de",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "ec675b3c-35c0-4754-871f-1054d56edcea"
        },
        "item": {
          "id": "6fd2b23c-b271-40c1-9596-f31f9add168e",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "a907c0e1-103b-45e3-82ed-c71f3b548c5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f29817db-445e-4a7d-b613-95eb630329fb",
        "cursor": {
          "ref": "5ce5015e-25c6-4dec-bd4d-c8af10077200",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "6543dae2-8dac-4099-8a5a-3e813c57073d"
        },
        "item": {
          "id": "f29817db-445e-4a7d-b613-95eb630329fb",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "d0eb7010-33c4-45ef-84cb-573a28f74cea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8692ea0c-1bce-48a6-b378-b5ac5e6deb48",
        "cursor": {
          "ref": "45e61e40-eedf-4114-ad6d-459b51c19225",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "68674aec-417f-4384-a76a-f1a534a88d11"
        },
        "item": {
          "id": "8692ea0c-1bce-48a6-b378-b5ac5e6deb48",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "62a149e9-c177-40e4-8df4-b263cff5c0d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e531570-c2a6-4b60-8b5f-7590078e0ed2",
        "cursor": {
          "ref": "382c043f-6511-4114-831f-70d578a1e7ab",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "c965d3ef-3ab5-408d-9931-5c5ef95e5936"
        },
        "item": {
          "id": "3e531570-c2a6-4b60-8b5f-7590078e0ed2",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "ffc57a84-2701-469d-a295-052aab816414",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4aee91e-30d6-4885-829f-2b185f197108",
        "cursor": {
          "ref": "70e1287c-5506-4738-a05c-f03574b62afc",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "85ac87c6-7be5-4883-8fb1-f31c7f1cdd4e"
        },
        "item": {
          "id": "a4aee91e-30d6-4885-829f-2b185f197108",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "14752d62-da84-44bc-ba93-2488929ee60c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "867963dd-052e-4e37-89ff-06454f4c6fbe",
        "cursor": {
          "ref": "28f96c48-8257-482c-952b-862e6d796e22",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "daa2c187-2bed-4106-bdd4-97790346d181"
        },
        "item": {
          "id": "867963dd-052e-4e37-89ff-06454f4c6fbe",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "61d102d5-45f4-4cc4-a11e-60c38d50305a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13c71e64-34cd-4030-aa3c-6c7a39ec5260",
        "cursor": {
          "ref": "5907c9f2-d230-40b4-8ef1-b4bf69a1130e",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "ec25346e-6d2e-4a3b-a907-1ed34d028e00"
        },
        "item": {
          "id": "13c71e64-34cd-4030-aa3c-6c7a39ec5260",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "3ebf0a76-f37f-4c98-8a07-2597506a5cb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b39f51ca-4039-49a7-92e5-8b4268d25149",
        "cursor": {
          "ref": "7d6098c1-5d36-4aa1-9818-c467c1864c81",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "02eddc7b-b195-4a81-abd9-35374e860a9b"
        },
        "item": {
          "id": "b39f51ca-4039-49a7-92e5-8b4268d25149",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "8bc181e5-42fe-4e53-8201-8bd5e53ecbfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f0a5ca2-11a0-4bb9-a63f-5a5cc6fa9f14",
        "cursor": {
          "ref": "35ee4499-d59d-40a6-afbe-e4e094c71d4b",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "c10c5eb9-438e-4655-98e0-26ade3e322ed"
        },
        "item": {
          "id": "0f0a5ca2-11a0-4bb9-a63f-5a5cc6fa9f14",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "fdec2edb-2f99-4f84-b306-980b139a94b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34c3fd4c-bd63-4bf5-b37b-b17de2776a04",
        "cursor": {
          "ref": "9289950e-1c69-434f-bc20-7e4cf1140b5c",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "002e0665-154b-42ae-8dbe-142c07417131"
        },
        "item": {
          "id": "34c3fd4c-bd63-4bf5-b37b-b17de2776a04",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "f2f6b3ce-6a6c-44cb-b314-aaa622e059c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "294a7f63-d6f8-462a-9c29-35a2d1527d18",
        "cursor": {
          "ref": "37437c81-600a-4f9f-98b3-d26074bacee2",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "a952dfc7-d870-4772-a827-32008d8921df"
        },
        "item": {
          "id": "294a7f63-d6f8-462a-9c29-35a2d1527d18",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "048ed309-eb7e-4abf-b59e-d670ab7a220b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7014f9f1-67c0-4eab-810c-8220eaee0823",
        "cursor": {
          "ref": "6cbbf72f-1856-4547-b811-f74ef58fbf85",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "74e16a6e-a4f2-4128-9240-29d2c251c913"
        },
        "item": {
          "id": "7014f9f1-67c0-4eab-810c-8220eaee0823",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "51ffac41-b29f-4a09-a039-85abb7512c93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7e733d5-9a71-4fca-93be-83bab1c0041f",
        "cursor": {
          "ref": "7896eb91-89dc-4f91-a2ac-d1236e8e01d1",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "e74ebba8-665c-4ea8-acf8-a45dee0ca0f5"
        },
        "item": {
          "id": "a7e733d5-9a71-4fca-93be-83bab1c0041f",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "0434ab98-3185-43d5-93c0-93915d0c4878",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc7883e0-6de9-4ad5-8d00-c155bb333c07",
        "cursor": {
          "ref": "c9ae2d92-46a4-4a23-a6ae-d918d4f88bba",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "adb4e732-7512-4067-b400-c67bfe7035e7"
        },
        "item": {
          "id": "cc7883e0-6de9-4ad5-8d00-c155bb333c07",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "fecef57d-ef66-4d92-8122-9278eb52e0f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8df0c8d2-c53a-41b1-bd3b-0a98c0a68e9a",
        "cursor": {
          "ref": "1c0a725c-1856-4665-abcf-ded9c9cb549f",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "671a5ef9-d5a2-452a-95fc-fb8219483874"
        },
        "item": {
          "id": "8df0c8d2-c53a-41b1-bd3b-0a98c0a68e9a",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "fe3e4e6b-69c0-4635-b862-1c266cc8ceb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4021ed7-7b15-4de2-a5c6-aaf089eed7eb",
        "cursor": {
          "ref": "9cb7c6ce-2ed3-41b2-8da6-db1cd1caba78",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "e453d1e4-7ca1-4392-a2e7-aa237f4b4ccc"
        },
        "item": {
          "id": "e4021ed7-7b15-4de2-a5c6-aaf089eed7eb",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "4193a9ae-d299-4cd7-9753-263df170447f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9273ace-f2c8-458b-8640-4b7f5336a6c0",
        "cursor": {
          "ref": "4a724001-14e5-4d2d-81b1-ae7d6de31d4a",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "fb5bfa3a-5a23-43d5-99b7-b2731bf63481"
        },
        "item": {
          "id": "f9273ace-f2c8-458b-8640-4b7f5336a6c0",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "fa914150-fea8-40f0-bb2a-5176208ab00b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea39c033-845b-4443-9677-495c9eddee71",
        "cursor": {
          "ref": "f9cdb5b7-5899-49ba-add1-e1b8eee988fc",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "2171bcb4-9b9b-437d-8b59-0df426d99f3c"
        },
        "item": {
          "id": "ea39c033-845b-4443-9677-495c9eddee71",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "e850bf28-e23f-467c-a9d8-995b7521c972",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1f91ae9-a950-4a79-908c-a067a42215df",
        "cursor": {
          "ref": "9c61e950-0737-4128-aa95-202802bf2b4c",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "48b138fb-01a4-471c-8fa3-14829a913cf7"
        },
        "item": {
          "id": "c1f91ae9-a950-4a79-908c-a067a42215df",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "db9257a9-ae54-43fb-90d2-a06b35093e6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d4cea37-0f3e-42a2-aa25-bf77342f4c9a",
        "cursor": {
          "ref": "212c5f83-4bca-4514-9187-d930de9a26bd",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "1d5aa89a-6e49-4088-92d8-d2f5d923c7bb"
        },
        "item": {
          "id": "6d4cea37-0f3e-42a2-aa25-bf77342f4c9a",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "d444e28d-f38f-4140-8cef-bf94238b5d55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d7d42c4-f6db-4a26-8eb7-d51f3ce90b15",
        "cursor": {
          "ref": "d902d1cd-a5e4-445f-8f2a-80cfdf1c7fdf",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "9c3fb67d-96f6-4d2d-a543-435958928f27"
        },
        "item": {
          "id": "7d7d42c4-f6db-4a26-8eb7-d51f3ce90b15",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "ddc64914-fef0-460a-918f-a33095524de7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03504785-5724-44b4-ba3b-02a6e7e67a3b",
        "cursor": {
          "ref": "d606ba9a-4724-42b1-bdce-8a0c49b98039",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "3449481f-5202-4e5a-8798-90651d1afaa9"
        },
        "item": {
          "id": "03504785-5724-44b4-ba3b-02a6e7e67a3b",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "6a7bed22-4ad5-4573-b5c5-c3b724469fc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f263e7e-7b72-4a19-b2ff-56632bb7c237",
        "cursor": {
          "ref": "59c0e475-6c2f-4ea1-a8d4-d33ba7cb0956",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "c03525f4-2725-44e0-acaa-b7426472d2e3"
        },
        "item": {
          "id": "7f263e7e-7b72-4a19-b2ff-56632bb7c237",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "c04e9e89-13a7-4198-bb54-044aa3a194b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3de2547c-8421-4382-8a57-ee50916678a1",
        "cursor": {
          "ref": "e5908e91-fde4-4005-a0d1-85f59f9fcb63",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "76fb0f98-4151-40aa-8dbe-949bfd40bfc5"
        },
        "item": {
          "id": "3de2547c-8421-4382-8a57-ee50916678a1",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "ef84dacd-1db4-4dd6-b545-f0e9870236df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "609ae0f9-9a80-4723-a5c9-65506b9555ea",
        "cursor": {
          "ref": "d57771cb-1d63-4507-930a-2b66cac08b7e",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "6188eaf3-7913-406e-908b-b87390081765"
        },
        "item": {
          "id": "609ae0f9-9a80-4723-a5c9-65506b9555ea",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "7cde092c-dee2-4dd8-b56c-052bd8657599",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39de925b-33a9-4796-9ee9-23a615b2feda",
        "cursor": {
          "ref": "36aea215-edca-4e47-9d7a-c6d16c5f0a74",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "511b563e-a123-4454-bf37-470135c7ab35"
        },
        "item": {
          "id": "39de925b-33a9-4796-9ee9-23a615b2feda",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "497ca12f-9d99-4c69-914b-a903085b140b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa2cfa59-79d0-4018-964e-d831f2695016",
        "cursor": {
          "ref": "37c4ba22-251f-42e1-accb-69a86c86fd6c",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "42da7818-04b6-4330-a9e8-2d1175600eb7"
        },
        "item": {
          "id": "aa2cfa59-79d0-4018-964e-d831f2695016",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "fc192166-9b9d-4fdd-86a8-125d89e49de7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a95da6b-7a3d-489b-9983-7dbdb98667a5",
        "cursor": {
          "ref": "5ee2a9ba-14d6-4cd2-a0e0-431968950b0b",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "e7ea8273-6469-40ea-952f-58595ae0c195"
        },
        "item": {
          "id": "3a95da6b-7a3d-489b-9983-7dbdb98667a5",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "fd87470a-9ac0-4655-a515-d3b2de528845",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "073b2802-3aad-4f26-919b-4a9d5774e735",
        "cursor": {
          "ref": "5faf4cb1-f6e1-4e8a-b2a5-c284a94c831f",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "a4ca7b36-3ef1-49cf-96b1-6855df8ba3ad"
        },
        "item": {
          "id": "073b2802-3aad-4f26-919b-4a9d5774e735",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "602c7f2b-dc48-453d-9bfb-782c1bcd110a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "692643eb-e5c0-47d1-bfb3-70f3e6c8f34e",
        "cursor": {
          "ref": "8de41f01-afc1-412e-8b50-89abd24fc60e",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "0d4d0d9f-8046-4c32-a6c9-460406e4bf6d"
        },
        "item": {
          "id": "692643eb-e5c0-47d1-bfb3-70f3e6c8f34e",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "7f04f68b-b1ed-4088-9b6c-181c2c474042",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ef48247-4b2a-452a-b6c5-545288a28a39",
        "cursor": {
          "ref": "418ca46c-7e96-41e0-9da8-de181f012163",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "247839eb-f29e-4dae-bbb7-f8816d3a24d4"
        },
        "item": {
          "id": "9ef48247-4b2a-452a-b6c5-545288a28a39",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "f8e92307-9254-4804-a327-39f9326d6928",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3079a7a7-8f7c-41e6-af9c-937d09549843",
        "cursor": {
          "ref": "4a996161-36dc-49e3-9d92-744fd4858fcb",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "8366c310-8a6a-4ed0-aa48-8f8ecf72283f"
        },
        "item": {
          "id": "3079a7a7-8f7c-41e6-af9c-937d09549843",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "1c3459b0-bd78-4f62-9edb-37cf4b6a1fb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22b64093-cc64-4583-992f-f70aeade9d5b",
        "cursor": {
          "ref": "85e85d70-0efc-4bdb-8c62-47ee1c742ca7",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "4b2c6794-9106-4a2f-bcdb-f8c0d4070c74"
        },
        "item": {
          "id": "22b64093-cc64-4583-992f-f70aeade9d5b",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "f23dbd62-8e3a-44a7-9ddb-a4508aec4ba7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdcebd0b-678e-4ed2-a352-43e09edbc84f",
        "cursor": {
          "ref": "fab3aea0-08cf-4223-a03b-64def0e1de2a",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "ab23c5a5-0563-4512-b208-80bf2082ffdb"
        },
        "item": {
          "id": "fdcebd0b-678e-4ed2-a352-43e09edbc84f",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "696a5347-c76a-440d-b373-db473652cee6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a480e35f-be2e-47f9-834d-5b85896c4999",
        "cursor": {
          "ref": "217f33f9-84e5-4da0-a47f-f31fa8f6dffe",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "a81bf2f9-ac00-4e3a-b861-d9da49f6672c"
        },
        "item": {
          "id": "a480e35f-be2e-47f9-834d-5b85896c4999",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "57d01363-516f-47c5-af0e-f0b3ac44c458",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26064289-0dbf-4cdc-801e-acfb261bf7c1",
        "cursor": {
          "ref": "f24b65c0-9e9d-403c-a50b-4edf5f92a3a2",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "2ac2d6b8-a460-433b-a132-d38669f28130"
        },
        "item": {
          "id": "26064289-0dbf-4cdc-801e-acfb261bf7c1",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "85bd8358-2945-46ef-8406-211c87df13bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1efba926-c344-4def-ba6b-29a8ddf7b90e",
        "cursor": {
          "ref": "e8b7fece-5e6e-4a46-aef2-a301eaac3b15",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "786a59cc-f55d-44bc-8a11-78555707ddb5"
        },
        "item": {
          "id": "1efba926-c344-4def-ba6b-29a8ddf7b90e",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "c17bf38f-215a-4ded-b0df-ecb44c7f9786",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dfe068a-5bc7-462a-a207-e323c1837012",
        "cursor": {
          "ref": "d0dc985a-77f9-4a6a-ba09-dba6c795c225",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "6fe93a43-b496-4005-9813-dbcaacf9dc4d"
        },
        "item": {
          "id": "9dfe068a-5bc7-462a-a207-e323c1837012",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "f9ae9704-dc1d-466e-8603-d561b7b2b527",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e8fef0d-42ce-43c1-a9fc-1027522ce682",
        "cursor": {
          "ref": "215bd6c8-40db-49c4-bf0b-60069349e099",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "7d5147e0-4322-400e-b3d9-a817838a5c60"
        },
        "item": {
          "id": "9e8fef0d-42ce-43c1-a9fc-1027522ce682",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "fa305547-4862-4ee5-a30c-86ced84a1a2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec6f805c-f76a-45a2-a109-edcdb6c90732",
        "cursor": {
          "ref": "e4d78fc1-b850-4d0c-ab9a-31504efc81ed",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "c8239b50-a947-4943-82ae-af40a64bfb5e"
        },
        "item": {
          "id": "ec6f805c-f76a-45a2-a109-edcdb6c90732",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "e558a024-ef46-4d28-b2b9-6f029b7c0183",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd0a68e2-dee9-4227-8d7f-09360108cd51",
        "cursor": {
          "ref": "632a182a-988d-4a50-8058-dfc895189750",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "d56e3725-6cb1-404c-ad37-def55660b1a7"
        },
        "item": {
          "id": "bd0a68e2-dee9-4227-8d7f-09360108cd51",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "0f78e938-2152-43f8-9cac-c1ac90b772ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99c3a457-96a9-4076-b0d8-6b7cf03b1724",
        "cursor": {
          "ref": "5c468180-cc57-4a7b-92ea-f3ee73bdb996",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "9fa81021-c891-4b71-b449-c598cc171f47"
        },
        "item": {
          "id": "99c3a457-96a9-4076-b0d8-6b7cf03b1724",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "a4a4664f-3101-4c77-8197-2a26870fc476",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7769796c-7071-41d4-a48e-d0ff7171378a",
        "cursor": {
          "ref": "a9ee8be3-835c-4dac-8212-f52ba6095988",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "7918eccc-6b23-4eef-ad7f-44fa4f3a774b"
        },
        "item": {
          "id": "7769796c-7071-41d4-a48e-d0ff7171378a",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "346bd129-b6ce-46b4-83b8-5c3ac41f40e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64c12d86-9517-4a59-875b-8056df0b67a3",
        "cursor": {
          "ref": "abb9a52f-08f6-4867-a534-54a2605c317b",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "61c0da69-2a8a-4d4b-b943-f24200bb48e0"
        },
        "item": {
          "id": "64c12d86-9517-4a59-875b-8056df0b67a3",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "0d6df21f-1d02-4d3a-a537-b025ac2dcce2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baf55e29-f380-4624-a60a-eabc4608596b",
        "cursor": {
          "ref": "58f0cfce-ffbd-43d7-a27d-7a31bce5666d",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "18ba227b-0ac9-4eaf-8bce-da9f65094dbc"
        },
        "item": {
          "id": "baf55e29-f380-4624-a60a-eabc4608596b",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "a96e333e-53cc-4eac-a778-16fc08b83965",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61a8304e-09ee-463e-b4a2-f4406dd06c3c",
        "cursor": {
          "ref": "8874d60d-daa1-490d-8abb-c5d924e34947",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "a37b8592-f495-4dc9-815e-cd2f922c647b"
        },
        "item": {
          "id": "61a8304e-09ee-463e-b4a2-f4406dd06c3c",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "9f5a1d8a-9bdb-4dc6-9c98-51f63ecdd874",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e20bd676-4b22-4529-b70e-b6a06f671502",
        "cursor": {
          "ref": "5fe731f4-ba7b-4383-836e-4aad5ccab360",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "38b4bf93-9615-423d-b725-caeec0355e7c"
        },
        "item": {
          "id": "e20bd676-4b22-4529-b70e-b6a06f671502",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "7b20dda1-8c80-4401-bdf3-b7e1c54ba11b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "038a4bfd-4730-45ae-8e71-b33f6dd92a64",
        "cursor": {
          "ref": "f6a35e2b-48ad-47e9-a56b-102a2a12b716",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "e17b8350-3713-4ebd-8476-1fdf7f88dad9"
        },
        "item": {
          "id": "038a4bfd-4730-45ae-8e71-b33f6dd92a64",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "4c2a3055-a0d5-425f-bb9c-0a9f392bfcf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f7cad9d-982b-4976-b41a-565398c6360f",
        "cursor": {
          "ref": "1e1371c8-2b77-4f7d-8458-37abc1576412",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "d352a5d5-d9e6-4060-af4d-09563dad6413"
        },
        "item": {
          "id": "2f7cad9d-982b-4976-b41a-565398c6360f",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "624efee2-4bcc-4b93-b4e5-36297d61daba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9863a27-4e82-443e-aef9-cbf193445308",
        "cursor": {
          "ref": "69b5f8fc-1030-49c9-8bf9-91a807cf4139",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "215d2d95-5f12-4346-9c90-d7c5ab5d142f"
        },
        "item": {
          "id": "f9863a27-4e82-443e-aef9-cbf193445308",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "228ae3df-725d-42c6-8a2a-39ef374bd39e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e6bffdf-340f-429d-ad84-83ccbd1f5b5d",
        "cursor": {
          "ref": "8d3741e1-0f78-4908-ade5-0d2ec8b0eb63",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "3bea313d-f1c0-4b94-a50d-9402533fa108"
        },
        "item": {
          "id": "3e6bffdf-340f-429d-ad84-83ccbd1f5b5d",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "7e800592-b34d-4135-9955-f49521b5ad2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4b9071a-6462-4c42-a067-856a2b5f52f5",
        "cursor": {
          "ref": "e8a511ed-b1fd-4292-be11-c0c4a2cff532",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "01d98d40-f04a-4a50-8c7b-daa104841c7d"
        },
        "item": {
          "id": "f4b9071a-6462-4c42-a067-856a2b5f52f5",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "2b7aa712-5460-4646-b17e-134af9df2ac2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1981f3aa-b03e-4498-8738-9cbffa23f5a6",
        "cursor": {
          "ref": "8b943acd-9822-4ea4-aa15-5f28ff9d64f5",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "a21b175c-17f4-4c4a-8390-f91dd0d39db1"
        },
        "item": {
          "id": "1981f3aa-b03e-4498-8738-9cbffa23f5a6",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "223cacb0-c0d5-4021-bb6a-afc3d5b527cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e82d7fcf-aa22-4764-b11d-c37168c658d3",
        "cursor": {
          "ref": "26dd76ab-643d-40e3-b484-98f4c5767f38",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "a24f6314-5112-4212-ab5c-d4f9c2874837"
        },
        "item": {
          "id": "e82d7fcf-aa22-4764-b11d-c37168c658d3",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "695e5281-ab37-4aab-bdc6-a6bc9c21c270",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1336bd7-9383-4fd7-ae41-4de64c55a828",
        "cursor": {
          "ref": "8c3d8749-fb39-4331-8523-793e03aaf9b0",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "6e8ed3e8-085b-4a60-a0bd-5edb9270a4e8"
        },
        "item": {
          "id": "f1336bd7-9383-4fd7-ae41-4de64c55a828",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "5167842a-d3ed-46ed-b9d7-899c641a015a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96ac6aff-1a6d-455c-918a-84f40f7315c9",
        "cursor": {
          "ref": "6b245554-edac-474f-b55e-45d428818a41",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "76928211-4152-46f4-90b7-0efd346575c9"
        },
        "item": {
          "id": "96ac6aff-1a6d-455c-918a-84f40f7315c9",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "c0e11a9c-690b-4d95-9bf3-e9934b642313",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d66f06a4-bd5f-4d94-8a7a-387ec4b2b187",
        "cursor": {
          "ref": "69750497-71ef-4712-a2f9-fde35a1044f8",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "4dc4a678-37fe-4975-8fc7-da1ae6065b14"
        },
        "item": {
          "id": "d66f06a4-bd5f-4d94-8a7a-387ec4b2b187",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "b21eaf02-375c-4ad5-a3d8-3ff7afe7080d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bc1de5d-27be-4b0a-88df-b34ae420f38c",
        "cursor": {
          "ref": "c30cc2a4-2b98-46dc-ab6f-a3648384ea4e",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "126ee151-a55f-4d51-b991-49552b2f5ed1"
        },
        "item": {
          "id": "4bc1de5d-27be-4b0a-88df-b34ae420f38c",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "7733569e-753a-49d1-95b2-e00387ed80f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f1d5f04-a63d-4d74-af79-0c9bdd5ef4cb",
        "cursor": {
          "ref": "43de77b9-fa66-496b-844b-a068e3416698",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "569db19a-34e4-473f-97a5-c7c41962391b"
        },
        "item": {
          "id": "2f1d5f04-a63d-4d74-af79-0c9bdd5ef4cb",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "7faf85e9-a9ea-4fd4-b4a2-39ca22892a44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6fdfabe-bb70-4579-b146-d3e7686f067e",
        "cursor": {
          "ref": "54956b3f-7b82-4372-9e06-297de7eb6a13",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "cf42ff15-36c2-4686-bd6e-0edffbebfa18"
        },
        "item": {
          "id": "f6fdfabe-bb70-4579-b146-d3e7686f067e",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "ddce016c-c169-402d-93ac-fe007d80c58a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddfddc84-006e-4e2b-877a-369041a1654d",
        "cursor": {
          "ref": "9c92eebe-85d9-4758-bb72-e35fc2ac0b83",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "8c7281d8-67d8-44f6-9106-c1e7c9f882b4"
        },
        "item": {
          "id": "ddfddc84-006e-4e2b-877a-369041a1654d",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "23e863d2-34b5-4e38-aa0b-73f9e6d0d26c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e7d4984-d790-41d0-aa1f-b073a1b71011",
        "cursor": {
          "ref": "baa516c1-726a-475a-bef1-ed2407718bff",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "187bb033-a151-4a7a-840e-c63753deac9a"
        },
        "item": {
          "id": "9e7d4984-d790-41d0-aa1f-b073a1b71011",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "8aaa107a-4499-4130-9048-682465db9552",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "415bcdb4-c78d-4a31-91a0-174c0ffc9c32",
        "cursor": {
          "ref": "a2b69845-e473-440b-b3ba-f9031c7b38cc",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "73cdd60c-b5d3-4fee-b8dc-fe3599deec90"
        },
        "item": {
          "id": "415bcdb4-c78d-4a31-91a0-174c0ffc9c32",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "f704972e-2874-480a-97cd-aa6afa595549",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50f53ded-0137-42fd-b895-91409c9191b4",
        "cursor": {
          "ref": "8e089f9d-cbc6-41b1-9bd5-742f98839e6c",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "44e1e80c-15d8-4b8a-b324-a20a21cfd3ba"
        },
        "item": {
          "id": "50f53ded-0137-42fd-b895-91409c9191b4",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "5b11a97e-3563-43cc-9090-0aad2f8946f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4880a808-38e2-4b47-93ed-247dba04027a",
        "cursor": {
          "ref": "2b2f820b-c734-41a2-9d7d-24143000dad8",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "571137f3-54ec-4377-958f-00cd76346351"
        },
        "item": {
          "id": "4880a808-38e2-4b47-93ed-247dba04027a",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "3faf12c3-6e2b-4005-a451-4bb4e2223173",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a78d9907-bc1a-4138-ac5e-220b83831dfe",
        "cursor": {
          "ref": "ba5bdd38-3720-4b97-9663-1d36a1a245f3",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "718ffe6d-66c1-41d5-8861-23d6aa99ceda"
        },
        "item": {
          "id": "a78d9907-bc1a-4138-ac5e-220b83831dfe",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "bd98c753-66c7-43a2-91b6-b199ef0338f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8696f913-672a-4c88-89ce-34c0db44c496",
        "cursor": {
          "ref": "190b9e02-0b4c-43f0-a156-bfef5a4ad442",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "9220f597-5f4c-4f59-973b-f96ffc238807"
        },
        "item": {
          "id": "8696f913-672a-4c88-89ce-34c0db44c496",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "8c796cd3-9dda-4e48-a3e6-87465866bc52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4243071e-83b7-4e62-ac57-6bebea51a9c8",
        "cursor": {
          "ref": "45b5abbe-96c3-4a60-ac17-ad67f3bc6c15",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "c6b94983-c682-4080-9bd7-b6f83e764790"
        },
        "item": {
          "id": "4243071e-83b7-4e62-ac57-6bebea51a9c8",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "9fc375fc-2934-425f-8ea0-fc0e965d7c4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05eef9bc-6149-4b20-9885-82a71ec79333",
        "cursor": {
          "ref": "2063bf36-4ef2-48a9-86af-e9c11e6e7410",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "c3bff156-d569-488f-8e1d-bd6ae056a898"
        },
        "item": {
          "id": "05eef9bc-6149-4b20-9885-82a71ec79333",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "042618a7-ebd4-4c17-9bf1-33709e4a7af5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a4a34bb-f1c4-4c33-a298-9d4c1a3749d8",
        "cursor": {
          "ref": "0a4b7b44-4cea-4b0f-9220-1e434f735d0b",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "ddbbd991-5977-4fc7-861f-53e1fd13cfe0"
        },
        "item": {
          "id": "5a4a34bb-f1c4-4c33-a298-9d4c1a3749d8",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "8af3e955-480e-45cd-bb8a-217060d693e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bb9f928-af7a-4a50-886a-443b563c3723",
        "cursor": {
          "ref": "26985c10-9c59-4a96-8616-91133b54f250",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "2ee99bef-d5e2-4339-ba51-3cd40fa15e1f"
        },
        "item": {
          "id": "1bb9f928-af7a-4a50-886a-443b563c3723",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "7e56955d-edcf-4bcb-bc28-e5d06a99f70c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edfe8d47-8438-4e44-b47b-f4f9d69d8df9",
        "cursor": {
          "ref": "5fcd0031-3edc-4195-809d-e1a46eb90238",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "f675f550-11f9-424b-914e-7587518f0aa5"
        },
        "item": {
          "id": "edfe8d47-8438-4e44-b47b-f4f9d69d8df9",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "71887ff9-fe2b-49b4-80f9-cdd5102955e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ae41338-501a-4396-82e1-234f4613e794",
        "cursor": {
          "ref": "a9e1e859-281a-426e-8590-e2dabd28e46f",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "eccd1cfe-3e05-4f1b-8d33-544f13029170"
        },
        "item": {
          "id": "0ae41338-501a-4396-82e1-234f4613e794",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "d5cdbc1e-b2c9-4d00-bb01-cf8e0bdf093e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfc6ac2b-53ab-4d54-a449-df1f7c8e1c74",
        "cursor": {
          "ref": "75878e42-5028-4619-983d-0acb647ecce2",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "369e5c81-d030-40ea-b548-9902e9f7e7a3"
        },
        "item": {
          "id": "bfc6ac2b-53ab-4d54-a449-df1f7c8e1c74",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "d16ebb5c-d840-4545-ad87-36f418d478d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1210ae61-2e97-45bc-b757-b197bd6be570",
        "cursor": {
          "ref": "2d000327-5ecb-4d07-a6e3-721338b82141",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "738d2c49-da9d-47c3-ab33-d72fed771cc2"
        },
        "item": {
          "id": "1210ae61-2e97-45bc-b757-b197bd6be570",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "0f46dc9b-550c-4e89-8d98-bdb79a4f5050",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c3e423f-0cfe-4b67-9e15-c6a3baa5ba02",
        "cursor": {
          "ref": "330ca885-a808-4257-8aa8-85e4b3fea0fa",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "c0898753-ace8-4098-8a9f-df1d6e452992"
        },
        "item": {
          "id": "1c3e423f-0cfe-4b67-9e15-c6a3baa5ba02",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "b4048282-4ebf-47c2-810d-493b6922ce45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee99af86-330c-4f26-b2b2-8b480cce4437",
        "cursor": {
          "ref": "e31d91bd-e2f6-4396-a6a8-d43a0ae96e64",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "45b4758d-6e21-45d6-af45-5be304a93b65"
        },
        "item": {
          "id": "ee99af86-330c-4f26-b2b2-8b480cce4437",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "7db2344a-af57-4467-9c00-0d2b179e4867",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eabd403-13cd-4dbf-9571-1ba35078e218",
        "cursor": {
          "ref": "227fbfa4-3875-4ecc-a913-6497747606a1",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "0901002a-a7f3-40a3-9c97-58b5b4aa6748"
        },
        "item": {
          "id": "7eabd403-13cd-4dbf-9571-1ba35078e218",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "205f07cc-db0a-4f4b-9039-acbda0c8c67c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f03ef35-652e-400f-bde4-d97560a8e5c9",
        "cursor": {
          "ref": "4b2bd91b-2ed8-45ca-8ede-78ef0b7d40d1",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "86ef66a1-3102-429f-9712-740af2254c42"
        },
        "item": {
          "id": "7f03ef35-652e-400f-bde4-d97560a8e5c9",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "dc047218-0cc2-468a-b95e-c0c5dc2a386d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3824895-2a67-4ae0-909b-f1c801c5fc2c",
        "cursor": {
          "ref": "94c8d39c-bb4a-466a-86e2-388cc1bade05",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "e9a92720-304d-445e-a892-db8ac9ca87c7"
        },
        "item": {
          "id": "c3824895-2a67-4ae0-909b-f1c801c5fc2c",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "e6cca47c-4aea-46ad-907e-b1c56af809f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0876aefe-4e18-46e2-b2f9-4bf0daeb5811",
        "cursor": {
          "ref": "a146f714-00d6-4ee7-a18a-38dbce9b3627",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "bdfc4cc9-dac6-488b-a67a-25c6bdcee916"
        },
        "item": {
          "id": "0876aefe-4e18-46e2-b2f9-4bf0daeb5811",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "b122743c-b9a9-4eb2-b6f5-6cc9f3e89d62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db8b8375-3e4b-4880-b6de-ed6e582a1b6d",
        "cursor": {
          "ref": "721296bd-8902-4ef0-a91a-05c6a3220137",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "54e9198e-f013-4d8c-a7d6-b2ba846b7552"
        },
        "item": {
          "id": "db8b8375-3e4b-4880-b6de-ed6e582a1b6d",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "d4c11b84-cd87-493d-918e-22ea6a8c9327",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b63ba897-d3eb-4d88-b073-d056029c55f9",
        "cursor": {
          "ref": "5d3e298f-d6c2-4a97-80de-97a2ec350cc1",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "0b530a03-36fb-40b1-b72e-419dffead197"
        },
        "item": {
          "id": "b63ba897-d3eb-4d88-b073-d056029c55f9",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "03a25c34-6ca7-4f17-b5f0-a36d21db9884",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38fd8069-4619-4ca3-acc6-19a65015be86",
        "cursor": {
          "ref": "5933a70f-b95e-49fe-b2e2-63fb10b13e20",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "d7c06c25-988e-4ff1-b56c-44260e3e9418"
        },
        "item": {
          "id": "38fd8069-4619-4ca3-acc6-19a65015be86",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "c721714d-26eb-42dc-81d0-8f26a5e66b75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "984058a9-5e3d-4dc7-bc2c-a0c49df43522",
        "cursor": {
          "ref": "34e3a78b-28b4-4000-9a9c-5d1506c3a83c",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "1890135f-806a-44b3-ab02-8b420057a1d4"
        },
        "item": {
          "id": "984058a9-5e3d-4dc7-bc2c-a0c49df43522",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "8c8ffc22-0d38-4b1b-9452-21e17eecd16b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "550b9067-a778-4cba-a828-c2a2340e07e6",
        "cursor": {
          "ref": "4e92bc0b-3842-4c12-8e6c-985dca3044b3",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "5345460d-7942-4f6c-8d81-060884039ec1"
        },
        "item": {
          "id": "550b9067-a778-4cba-a828-c2a2340e07e6",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "d9089b91-2363-431a-b088-888dfdf5b31e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05c34606-2854-4810-9689-879444a97d85",
        "cursor": {
          "ref": "54abfe94-97b1-4cc7-b379-25156ad00ca8",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "f7117d37-2368-448d-a8bd-f06d45dec406"
        },
        "item": {
          "id": "05c34606-2854-4810-9689-879444a97d85",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "abdce62a-656b-4243-b2e8-2b42e72cdc43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e510be91-f312-4bb5-9a31-088c61421246",
        "cursor": {
          "ref": "b73d7fcb-52d7-4fc0-aba8-6949cec31658",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "128007c3-859a-4dbb-bd71-b2109e0b9b5b"
        },
        "item": {
          "id": "e510be91-f312-4bb5-9a31-088c61421246",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "012ac5ab-edbd-4007-9eb4-009790904881",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88d92270-cc31-4117-aa11-0e09be772e46",
        "cursor": {
          "ref": "4abd6555-5845-457b-852d-66f500aafdcc",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "ac7ebb4c-5c2b-435f-bc6e-f108763ae5ef"
        },
        "item": {
          "id": "88d92270-cc31-4117-aa11-0e09be772e46",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "172abcd3-b26a-4ba0-b0c9-48df14c29f08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f600dbf0-6cbd-4ff5-9310-b63676d5d5a5",
        "cursor": {
          "ref": "28765d79-8491-4312-8df7-703adb867bce",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "c3a4310f-62de-425f-959b-e6d770f4e8d1"
        },
        "item": {
          "id": "f600dbf0-6cbd-4ff5-9310-b63676d5d5a5",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "4e6f2228-a07c-4f82-8f05-2b281dbf85bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05acae0a-8261-4ddb-9878-431c17dcf8bb",
        "cursor": {
          "ref": "0f0ae461-5b06-421f-997c-fbbc89a782c7",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "4749d817-fa61-4b72-80b7-ae3f389328c4"
        },
        "item": {
          "id": "05acae0a-8261-4ddb-9878-431c17dcf8bb",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "bef96c13-66b2-457c-9267-777c48b044d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "018bd0d1-ef7d-46fe-a9d0-37a146396ed3",
        "cursor": {
          "ref": "7577d33e-1b80-48e6-b10f-cfdfb199bd47",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "7dfef3bf-c583-4706-998c-b59202b2d684"
        },
        "item": {
          "id": "018bd0d1-ef7d-46fe-a9d0-37a146396ed3",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "7cf9d5d4-2620-42f4-abef-f9d9e19cc54e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7a192c0-fb60-4596-943b-91df2da1fa6a",
        "cursor": {
          "ref": "aebbd18f-a903-4ad0-a354-746590b35e37",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "3efbb54e-de92-4447-8740-182a7ba2ec04"
        },
        "item": {
          "id": "c7a192c0-fb60-4596-943b-91df2da1fa6a",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "d6733ad1-a477-493d-ac86-7d19aff6c533",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5a3962b-a783-409e-b726-e34da64c907b",
        "cursor": {
          "ref": "7c651d58-9240-4c88-a59c-f84ef7c46c13",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "600fb60f-1c60-43ca-b9b2-37c6e3f74e2d"
        },
        "item": {
          "id": "f5a3962b-a783-409e-b726-e34da64c907b",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "a81a6a28-1ccc-457d-a838-10229ee03e1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "575b595a-dcb8-4c99-acba-eb697c8750b1",
        "cursor": {
          "ref": "74f5776e-e0d2-4291-8707-218c7799502f",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "5718e1e2-1687-4e12-8082-eeabf035c66b"
        },
        "item": {
          "id": "575b595a-dcb8-4c99-acba-eb697c8750b1",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "c10302ce-f542-42f5-bd9f-fc4a97c178b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "409452b9-ffa3-438c-ad08-709e44960f7b",
        "cursor": {
          "ref": "93907866-0533-41be-abb3-76109ca6f4eb",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "01b78d4c-6c64-429a-8a6a-8e7db71d6450"
        },
        "item": {
          "id": "409452b9-ffa3-438c-ad08-709e44960f7b",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "f9be498a-9084-4bf3-800f-d79ce7690e57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "879cfe27-e4ce-4ad2-b009-979fd595a82b",
        "cursor": {
          "ref": "7c69188c-af38-45e2-ad45-9f9df3240042",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "d5302117-d1aa-4ebf-876f-9d97758c765d"
        },
        "item": {
          "id": "879cfe27-e4ce-4ad2-b009-979fd595a82b",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "a435cf3c-6847-4392-9973-c74bf3fa9bef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5e4938b-d980-48f5-9cfc-b34e1e6d52d1",
        "cursor": {
          "ref": "4b4d92d9-cc31-4087-bc96-e24d62d47f0d",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "651f87c4-9784-434e-9b64-f51691f70cb6"
        },
        "item": {
          "id": "c5e4938b-d980-48f5-9cfc-b34e1e6d52d1",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "79de5aaa-b2e6-4230-9e44-1ebae59e2ffc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "861218da-8a74-4532-86a5-8ba5f1e0da84",
        "cursor": {
          "ref": "dace4411-e35a-494b-9c43-785a0e899886",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "1ddfe311-0ed4-4a97-986d-d1fc0505a870"
        },
        "item": {
          "id": "861218da-8a74-4532-86a5-8ba5f1e0da84",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "f93d5231-6028-468c-9771-64b432930146",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e753491-28bf-43d9-8852-33ef22111d12",
        "cursor": {
          "ref": "87e12d5b-552d-4e9d-946e-3dac48c92952",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "e7d6144f-aa26-450f-857c-0ea23dbb6a68"
        },
        "item": {
          "id": "5e753491-28bf-43d9-8852-33ef22111d12",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "254e6ea5-3d53-4068-9547-f0dc39de1aaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c8074a9-8a2c-4428-9154-192034569213",
        "cursor": {
          "ref": "1c99a694-1f14-44c6-bfbf-3328f69fd7f7",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "1e7ef2f1-b043-498c-aef0-6328b7c2684a"
        },
        "item": {
          "id": "8c8074a9-8a2c-4428-9154-192034569213",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "995adb60-b4b6-4243-80aa-c010b1e00b82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bae9650-b670-499b-9e0e-38a033a40ff2",
        "cursor": {
          "ref": "2dee05aa-9f68-4830-8286-cd7a18945d54",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "8dcb89da-8428-4908-8275-0c9f469d5eae"
        },
        "item": {
          "id": "7bae9650-b670-499b-9e0e-38a033a40ff2",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "48862945-87c6-48dd-8178-cf9aca536a98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b46ee315-79fa-4044-9640-7a40e94a5934",
        "cursor": {
          "ref": "8b2f0c9b-2ab7-47ff-ba60-bddfe8bf459d",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "5413673a-2abf-4c70-8a9e-b8916dbb7c9c"
        },
        "item": {
          "id": "b46ee315-79fa-4044-9640-7a40e94a5934",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "e82ee8cb-a11d-4134-95b8-c906707d6567",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee4993af-0fcb-4ebd-9c9f-3d9aba177bbf",
        "cursor": {
          "ref": "98d83691-dafc-449e-b7f0-17170b68fdb4",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "7b89eb6a-d4ad-4ad0-86aa-eda5d1e3e51f"
        },
        "item": {
          "id": "ee4993af-0fcb-4ebd-9c9f-3d9aba177bbf",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "4b6d76f4-0d57-4c83-8779-7f5c6952095c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aecf6f4-e27d-467c-924e-5203d93b0e1f",
        "cursor": {
          "ref": "affbfc28-5916-4cb5-9557-1fdb4bd2557b",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "6bafdfd1-d113-4d94-b24d-dbda53d03c34"
        },
        "item": {
          "id": "2aecf6f4-e27d-467c-924e-5203d93b0e1f",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "291b131f-ce6a-4fcc-991d-2722977f9413",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "675dc99f-a154-4007-8974-8854c442bbbb",
        "cursor": {
          "ref": "a65660c3-7d99-4102-b9cd-05036db50eb1",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "78ff3b23-b7c2-4216-955b-7d47a8825289"
        },
        "item": {
          "id": "675dc99f-a154-4007-8974-8854c442bbbb",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "61a3d9a4-bd17-4077-b773-8672a1d23f50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dead4017-f8f1-4393-84d9-ae67cf548e1e",
        "cursor": {
          "ref": "a065e825-2055-4aed-9b09-807fe04d1324",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "6d28fa5c-1bd9-40a3-b0c0-6800a2a6f9ba"
        },
        "item": {
          "id": "dead4017-f8f1-4393-84d9-ae67cf548e1e",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "6eac7e37-7d15-446e-878a-b13ad66b5eb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60489bdf-07f1-405d-80ab-5ac483d43cdc",
        "cursor": {
          "ref": "a9dfcae3-1942-4dc1-9885-6416de014c58",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "4b7ba76b-c464-4398-bcab-b4b5a931b588"
        },
        "item": {
          "id": "60489bdf-07f1-405d-80ab-5ac483d43cdc",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "ca5c0899-d6c1-4aa4-b501-8f5e568d61b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0622aa2-0a88-4801-a87a-dd99c4f80ca0",
        "cursor": {
          "ref": "96cb796f-5293-4d3c-96e9-12f76d93455d",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "d766e8c8-e7a2-4b5c-9e6d-180deec7cfee"
        },
        "item": {
          "id": "c0622aa2-0a88-4801-a87a-dd99c4f80ca0",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "8807bf20-8faf-440f-957d-88296594cbab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5b7c99a-a291-49c5-9fd4-bf9dec0453ea",
        "cursor": {
          "ref": "5981c3fa-3acc-4d52-abb0-844d13383dd3",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "43f030a5-04a6-4e64-bec0-c27c5112a3f3"
        },
        "item": {
          "id": "c5b7c99a-a291-49c5-9fd4-bf9dec0453ea",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "a432be79-fec9-4225-be00-457fd6c69cc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "435a8639-f6e0-4318-bcb8-c65edaf14614",
        "cursor": {
          "ref": "75695899-ba57-4a51-88db-4346d797a2a2",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "d5c4de48-bd24-4269-87c1-21a482faca58"
        },
        "item": {
          "id": "435a8639-f6e0-4318-bcb8-c65edaf14614",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "8ef23ba4-fae8-4695-8f11-b6557b575417",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a8b3946-2e4d-49e9-a7bc-b868b052e788",
        "cursor": {
          "ref": "0b338a73-b816-4f9d-b1a5-6ba6ba9cc69a",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "d4a703f1-6985-4156-9bbf-efea8eccefd8"
        },
        "item": {
          "id": "0a8b3946-2e4d-49e9-a7bc-b868b052e788",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "61892613-37c2-4e94-89af-dd80aeefe0c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b49ecd83-d20d-4fb8-8548-db61f47cbe17",
        "cursor": {
          "ref": "369f492c-3b5c-4185-96e8-fcd65f08a5e1",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "20b89820-fb6d-41ab-8b10-9c4dcb4a0d4b"
        },
        "item": {
          "id": "b49ecd83-d20d-4fb8-8548-db61f47cbe17",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "577c0536-1f27-4996-9ca0-45f0d07b70c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cef3e212-3931-4297-a236-3e0ff9abaa59",
        "cursor": {
          "ref": "aca68284-42df-4bb3-952d-89783b376c41",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "f7d55565-4f85-401b-8a60-fbf8a96efaf3"
        },
        "item": {
          "id": "cef3e212-3931-4297-a236-3e0ff9abaa59",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "48aadb44-6b2f-4e1f-a3b1-12e7315147f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ace012d8-0f1b-47aa-b5e1-5a4bf34a565c",
        "cursor": {
          "ref": "3af0d1fb-676f-4b08-85e3-d290525accf1",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "75d12739-b95c-4779-8a4a-4c7822e534ba"
        },
        "item": {
          "id": "ace012d8-0f1b-47aa-b5e1-5a4bf34a565c",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "781a49e4-2df0-41c2-86f1-e24bd24c0138",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1c59aef-6e8c-4bba-9e9f-70e9a7b5d418",
        "cursor": {
          "ref": "a0551add-0ca7-465f-b341-9aac17b771c7",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "1dd991cd-b834-4483-9d37-624437af7233"
        },
        "item": {
          "id": "f1c59aef-6e8c-4bba-9e9f-70e9a7b5d418",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "a2ba1b17-a6a9-48d7-aadf-1c900e82e70c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:244)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5563fe7-7a81-4d7b-8f73-d6110e4cf269",
        "cursor": {
          "ref": "f7bb6cca-481e-4cd9-833b-0c6bbc9e924d",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "c7c224bf-9daa-4cca-935e-fec2bc22d371"
        },
        "item": {
          "id": "c5563fe7-7a81-4d7b-8f73-d6110e4cf269",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "ab41633b-92e2-4595-82b0-7a53a6674850",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:245)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:245)"
            }
          },
          {
            "assertion": "response verified is false",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is false",
              "message": "expected undefined to be false",
              "stack": "AssertionError: expected undefined to be false\n   at Object.eval sandbox-script.js:3:245)"
            }
          }
        ]
      },
      {
        "id": "b7e3fe36-6da2-4e52-a9c6-173339054472",
        "cursor": {
          "ref": "a16ad577-f76d-4a30-93a7-d8a8f3728675",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "957bf762-4bd3-4fd9-8722-0aca76f9005f"
        },
        "item": {
          "id": "b7e3fe36-6da2-4e52-a9c6-173339054472",
          "name": "credentials_verify"
        },
        "response": {
          "id": "71aa1577-204c-42b1-8f78-d51a8d9730b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:246)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:246)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:246)"
            }
          }
        ]
      },
      {
        "id": "efda52b7-3076-46f2-adea-f0c367b06540",
        "cursor": {
          "ref": "97c3e24f-6534-4b1b-a377-995cbb9edf1e",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "b846addf-a771-4484-9a5b-fedaa7df4bc5"
        },
        "item": {
          "id": "efda52b7-3076-46f2-adea-f0c367b06540",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "f1c0562e-3540-4b2a-b75f-574172d01965",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:247)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:247)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:247)"
            }
          }
        ]
      },
      {
        "id": "a0f1a1ee-68c8-4f95-855d-8e6592f06ec9",
        "cursor": {
          "ref": "62fb63ac-7975-4dc4-ac14-996e45f56682",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "f85ce3ff-5375-49ab-afc9-be1e645b2e9c"
        },
        "item": {
          "id": "a0f1a1ee-68c8-4f95-855d-8e6592f06ec9",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "fbde26d9-64a6-455c-81f4-95463d0edfd7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 2,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0f1a1ee-68c8-4f95-855d-8e6592f06ec9",
        "cursor": {
          "ref": "62fb63ac-7975-4dc4-ac14-996e45f56682",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "f85ce3ff-5375-49ab-afc9-be1e645b2e9c"
        },
        "item": {
          "id": "a0f1a1ee-68c8-4f95-855d-8e6592f06ec9",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "fbde26d9-64a6-455c-81f4-95463d0edfd7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 2,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1dfe6f9-f7bc-4c32-841b-089352c1743b",
        "cursor": {
          "ref": "8d1c2382-b74e-4baf-a209-a3a4c8d7565d",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "1db003b7-d8df-4479-802e-51051757bd1a"
        },
        "item": {
          "id": "d1dfe6f9-f7bc-4c32-841b-089352c1743b",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "168a52fe-4124-4e96-85fa-a990cc206963",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7e231ca-b0ef-4bc6-92e7-e7d33204d901",
        "cursor": {
          "ref": "7e7e72fe-a908-49eb-93c8-f401296f72cc",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "7b9bc088-0eb3-4eca-b784-d056d247cb77"
        },
        "item": {
          "id": "a7e231ca-b0ef-4bc6-92e7-e7d33204d901",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "9f853ea3-0467-429d-a8b3-42f9d64d123a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}