{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "518896d7-bade-4b37-b9dc-7deadf45899b",
        "name": "Clear Cache",
        "item": [
          {
            "id": "a6386b54-9ee6-4449-a921-0e39e6023c61",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "02e497be-a6cb-42d1-8036-3d8d15381ae2",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "0920f853-6e06-415e-bdf2-2e51c091c93e"
                }
              }
            ]
          },
          {
            "id": "1a63c342-b41d-4d77-9dcb-454414625920",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4902a0a8-2aee-45ea-82f6-3a8babaa522f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "169e4509-fc23-4448-81bf-f578269060f4"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "7faad1ba-fb5c-4da9-9c3a-27c8a924d3df",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "f0bdae9f-65fb-461c-90e6-a0b6b313ba3e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2cf2fab0-5013-42a0-aa40-12d6a86e249a",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c1d2563f-0865-4fe3-85a8-ccf6ce7416f9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9298c919-3f21-41a7-a30a-6007ec8ff173"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "62b3ea5f-1aec-4485-be5a-57ffc2f3ec8e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "00c4b798-d9fa-4bd1-b22a-63719d4f687a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9c56075f-8a9a-42ca-8655-83a8f97b8e74",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "715ba3c4-0432-4f8a-a97a-ad579a4ef5bd"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "969b3065-9210-4f73-a74b-70c705ebc59a",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "a414ef3d-ab1d-4b04-9a06-944d122c0bf2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "153307c2-fe4a-4cd0-a2f0-0131590ca262",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a4717468-ab43-4064-ba01-882e77f36a54"
            }
          }
        ]
      },
      {
        "id": "da29c4af-cc06-4afb-a67d-89def59c04f0",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "1817cf1e-08cc-481a-9b2c-de5034283eb8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c64f509e-0133-4028-9b35-c08b368f4265",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2e32c824-b930-4009-b396-8a21ad426cbe",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53b166a7-f656-43de-b6a6-0e0125c38af5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "624b359a-9823-479a-8475-160a25d89635"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b2df031-7394-400f-a0a4-a9d816c495f7",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57ce22bd-a68c-4ade-adf2-d64133a2abf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "619f692a-9eb1-45c4-8049-e2c31e535982"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fc701ab-5274-4da8-af1d-4ca6bcd381c0",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ed84b1a-30c1-4231-96f1-092a8fffe4c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "37c717a6-df95-4482-a35f-a4ec965096ef"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c5defe0c-09fc-46e9-9521-d31f8a81d341",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4efec2ed-f7c3-40cb-9690-b40374fdab33",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c236a8d1-5b3f-4697-a0f4-fb0427e4b4a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0d036e74-66fb-4e11-8712-135d022ea6a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e7b1714-673c-45d5-bc6d-5f7b52050cf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd060a94-3b1c-484b-9afe-69495c06772f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "3c723041-bd53-4fa9-930d-b66bd85977cf",
            "name": "Positive Testing",
            "item": [
              {
                "id": "57029b3c-0b11-44bd-88fc-753d44da041c",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "43bb3a61-6460-4f9b-a014-d9a4e9e792d5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "2f5c810f-6d30-41d7-953c-00a56333770a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "db9ca2e3-b0de-4031-8b0c-03d27cc68080",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "50626611-ca49-4399-b92c-305fd42aea40"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a6015d37-274e-4279-881d-0d53d775570c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f70940b3-572c-446c-a89b-d0f9254e1514"
            }
          }
        ]
      },
      {
        "id": "ee1f22f7-5fc3-4e24-b718-9ba871b4c18b",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "623e6621-46a6-4173-a7d1-ab345adba3f0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a2f7fa42-1f90-4ccb-b834-0d64c7f500d5",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "ad4e7ceb-433f-4788-aa2c-50faae3645f5",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6534bb0d-c187-49e8-8624-7735bc1c7670",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b2a602e-8ed9-459a-b119-9b10999ac172"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "723e9f0e-4513-4604-808a-81e93c6ae576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "080c99d8-618e-4ca8-bfe0-11fe6ba1ff62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36f61dd8-390e-42c9-8e5b-42c975b14ed3",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96edbecf-7ea6-4d13-a413-083825a60cf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a6da441-ff1d-4132-b647-80d66cf7c213"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8186b96-4927-4d33-8a28-92f6f876fe27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a9b72784-eef8-4786-ac59-19451b8d5ef4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88d4b441-7a2f-45b2-b733-dddec8e79518",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af650481-4c1e-4590-880e-2295718ddcbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d8f60b3-34c0-4d59-a190-e2d8dd2f9e1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "939e29df-fca1-4da7-aad2-2e5b9670e4f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ba6b53d3-6a91-4466-8ce9-7863249c420b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55fd00c2-243d-48f1-96f4-c7fdb471ee89",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d41f952-2c9f-4369-9d8f-672d29c2da8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edb82c50-f75e-4b76-8919-0869968653f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbf80fa9-bdd0-4b20-aca9-55ab37beb3e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0f35da5e-0147-4692-913b-03257192ab5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aed4005-4748-494b-8f4d-aeca25d55847",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91343501-0606-430d-87cc-355d7f96e7e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00c066df-db1c-4fc3-bd4f-a61f11b51769"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb025269-fb71-4bf0-8398-5bf260da054a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "372feabd-8b63-48e7-9933-f51b1dd86dd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1e70327-e7b4-45f9-90dd-0a3766922651",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "feb08c49-8aef-4402-af58-f923f56a607e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d22b8e25-d9cf-4e87-9457-430d95026703"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6110d43e-7b29-4755-b99a-614b1ea238e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6d317914-2463-436d-a16a-4d2dff20e79e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "864d4039-21e6-4492-a22d-797cfcb0e560",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10408769-69e1-4bbc-85ff-72e86c2a0b42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50ad365a-f950-4b14-9f5c-f68ad71d8dd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e80a9ff4-3e7e-420f-9bff-9f60bba815d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4819b923-f8af-415d-a597-05dbb66c8bac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01bd6e17-cf69-4c27-99ca-7f4606649f52",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47ef0496-2de8-427c-adc3-081c412e6cf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d24b6f59-0129-4a54-8cec-d5ef10837900"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94fc5ce0-a9e8-4881-b5c5-fe639684f3af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0beba501-a244-4fb4-af4c-1db1de13df72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aada9853-d695-4e3c-b2ad-9132dfc9968c",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f7d8f6e-e5c8-48d2-a7ae-ef7eeea408e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85d1f98e-78fe-4979-a85f-d7667e12382e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19494390-7f78-4f4d-9a44-bf1fc0f88f31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f59bb2df-6e4e-46ee-a353-b58ad1e4986f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a160f70b-d038-4294-abd3-e381518ea46f",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83dcae7d-fa21-4e77-8ac3-5775560e7deb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3e0a875-f71c-4219-b8fe-6d9f8fd20067"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55582272-c830-48be-bccf-6f7b6cfb47b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1ad8d0ae-a58c-4634-8912-5b0703550bfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce3ee5fb-bd08-4c12-b61e-8afd00b8ddc3",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5e92dcb-26bc-4ebc-a95a-addf554baaf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "742820f3-32cc-45a8-9eeb-2b4ec0f8e08d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33f5a56e-edb0-4ac8-994b-b2c510e6a52b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9c5a3843-00fa-457d-b637-0ecdbf776356"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63aad50f-2e25-44fe-b408-35fa0ae1ff6e",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ccd9ede-a0ad-48e1-a3f6-90105ffb0fa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3e96836-147d-4538-b76b-1139c617c008"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0aa9242-471b-4e7a-8d7a-384a73fda947",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "334385ea-1d89-4957-8877-79d19a23a5fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3c862f8-7de8-4f72-9b36-93d180d41893",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9bd65a1-4ebf-4bbf-9d45-b51677f40908",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f2341f5-ec28-43de-b898-9a330ba8b6a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ce46b58-cd2b-4a26-bd8f-bf107c8a5ee5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "87be15a8-1fc3-44ab-8142-9a618e535e0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a1e706c-c86e-4d7b-a10c-ee746c0217d8",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9aabcb1-bb1e-4353-a51f-cabba56a3b2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fbffc0a-1949-40e9-aaa9-254aa94a3b66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "493c8155-db2f-4532-a7f1-4a3e6bde3e00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4598f281-da22-43f8-b22d-938518efad2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45e6d775-44dd-45e5-8cdf-70124da2eb63",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19d3ddde-9750-4cfa-ac13-9eb8b53da3e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7eae7a90-0d15-4917-af8a-d315055bfaa9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "237ba0b7-bea8-4949-94b6-7d3d8a093f10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7d4af5e9-4518-428d-bbc1-430a160df9cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0023a41e-e71e-412d-82d5-3369c3e2e601",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4da15fad-b106-4080-83b5-4806c3df0b36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fb4b15d-7390-4210-bf5a-6460b74e8b0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e17a8b2-a172-4cea-8368-4d822f3a7203",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "30f065e2-4847-4458-b230-00c5f6c067b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "085aa822-dafb-417d-bf25-464b77aa8c2d",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92097fb3-84aa-4925-a0d7-bebb0cfebf5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c77ac7e-d1c8-48c4-80f3-441d701738c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "887c8f1a-5a37-4558-b85d-8f08955c1b82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "185b63e0-54ac-4bc6-91d8-9deec8007799"
                        }
                      }
                    ]
                  },
                  {
                    "id": "603d22a0-ec48-406c-a555-575b8c1ddb0d",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0fbc4c1-9a10-444a-8f4a-e3d08960bbbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b92ca1c-3ee7-4796-a87b-6401266f28cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ad90e23-805c-4fd9-9255-4b4cab879837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb8746f9-c884-4e39-ad8e-d8563ccf438e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c1242cc-1ba1-46c0-b2b2-31a594ab8135",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68f6c7c1-d413-444b-8b0c-7c21d7301cce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be4c8815-0421-428b-acba-59ce945ff23f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d95bf16-febf-43e7-acb8-c6e9afc0abd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "664c017b-8442-4558-b543-7707e38909e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc677ab4-2506-460c-8a61-d33147fea357",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7abf9107-e7b5-4d12-8d75-423426c0ef56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12922869-6f3b-4dc6-a5f2-38ba0229167d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9830fdcc-2270-46ab-a20d-c15707e8fb37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "14527802-8409-46de-bebf-0cf5df35a1f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d12f0c18-7dbf-4067-9e45-af9f6a3557cd",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cacb2e4-3f6c-4b11-8f9b-f665bfc23d52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc0e8ad0-f6fd-41ea-896c-4a4fa99934e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b35c623-ae1c-4001-a300-a4164ab24126",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f212794d-b6f4-4f48-975d-98662f5b139e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22e078bf-3e66-4f19-8350-cefc5c36c8cd",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d811417b-7e3a-4b77-909e-7ea9dc951c72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af2e9029-8f28-4f2b-8689-36a68eb95d70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "748bfe95-7f34-409d-a290-ac54e667e19f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "db5b61d9-f6c1-43df-a736-2a74d597b09b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efd6d5d6-e3e2-45d2-ac30-cf2c33160714",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b95d6e31-7f71-4a5e-a42c-93779d7d59d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4574720f-907c-40e5-a22a-02cfa6e17136"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7d42262-1e32-44eb-ba16-0dae74d80db4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "27d0d9d8-3ce9-4318-8ceb-129e035b6da6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f47a0a4-ea45-4acf-b1f5-aed7d8f12083",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53c647e6-8420-4e61-8051-a9dca0d1a955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "841501be-c91e-44c2-94c6-1b573c46e41a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08910706-8163-4c55-85df-7c73f307af69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ce7e6a7-d62b-4b7d-a80d-370cb8baef8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bc06a60-7f03-4fae-91a0-2462601481d4",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d02290a-055a-4357-aa24-e36ff68b2a67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7f3e218-e84d-4fa5-a7f1-be0cebf38e1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d7dade0-725c-4aa9-8a39-956f6feb9d74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0159ad9a-9110-40a6-809f-bb95232242a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fb6e610-0786-4bba-8ae9-89dfdb46123f",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09b79587-5785-46a9-a3cc-a5dcc252feae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d32b6a0-1a3b-443c-8ee0-2d55758f1a29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "718b163e-198d-4c4b-b672-f12e2e60985c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e570b52e-2bea-4168-8de2-2d93f60b5384"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7b164aa-61b2-42e1-a547-5eee2d715f0f",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec1866f5-8b26-442d-b06e-606c03d1c221",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8503d19-4e87-4d48-bb36-7fc8795cddbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5271999c-1f81-44cd-ac6f-967082cc0bda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1610e61f-de71-4e31-a72f-75b824b657de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eaa8cd6-6a18-4779-b3b1-6a1b7fccc95f",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2564672e-2f5a-4d9a-b82a-f133d329adb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2259fa3f-6c5d-495f-b109-8b16be6ede94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a047615b-bca5-48cb-b1a2-f906062d2e9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "69a88f6d-69b2-484b-9d71-a7a93396cca9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4563ca3e-9ccf-4f88-8a95-cfcfa84e21d1",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b53a037-9ed8-404c-824e-2600a1dee42d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17146843-742b-4efe-92af-4156ffd237ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f76e734b-e6de-4553-92e8-013493fb05c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "508a7bf6-f5a7-4f78-b11c-b44ca7331a16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4f934df-e08e-403d-b3ec-ab8ca79cef10",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "412cb47c-9e4f-4d4f-8a13-7afc6993d4bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c539f663-f579-4cdc-9aaf-a7dc70d3ba5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0756cbd6-07cb-4541-8074-8536bbb914a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7ff2f09-d085-4c81-b45e-ea20703bcfd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97a17572-dc13-466d-913e-b05db034bf0f",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd097c26-a408-4c33-8797-c0c5b79c0cdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f74f585-89fe-4837-80ab-c71d19994d49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fd3255c-d410-44b7-876f-fdc39fed9988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1781f612-897d-46ec-bb69-30d32e15d995"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a50e81e7-5b6c-4796-91a5-ecb9eb13a21e",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c953a288-2922-45bb-b447-1e410df812d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2b9e9ae-d90b-4da7-9260-6f89d75fc21f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebed9c47-6ebe-4e7c-9c0c-3a715674dd34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9872513-85bd-4dfa-a88d-713a1d543c44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86c99a78-3bb8-468f-a420-0dc1f1679315",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9d22620-2b53-423e-9269-4857421c0649",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61c61185-7e0a-4a49-bdb9-6bc0c50411c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f4c0afe-34b7-4ec3-bc44-6586f4a22139",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b0a6cfd-48d9-494f-8fe4-fd77a9ecf603"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d8d6f04-bf03-4b3c-8c2b-8961b5ce3fff",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "261f872f-8332-437e-b919-d225012f5517",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2283aeb-d3fe-4811-91ba-72f646cb6148"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "643598c7-c931-4344-b1c4-67c87df2d946",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "95506d1d-91bb-4522-892a-b0f4e616f318"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fd46202-1eee-44ae-a992-3269ea4cbce8",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51004c39-9d4a-49fa-8433-de89d9532b38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eead93ca-58bf-443a-b0f2-6abc28b7f265"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88cd0506-457c-4e95-b91c-b6af423a7d75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "43a09f06-4f13-4fa1-a3bb-b920a7e01359"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f65cc2d1-09a2-40fa-8f86-ee343a3e5e72",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "881bb9e1-0a66-4f47-84e2-7d9f8a576018",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "01a5a5f5-a17d-4f11-9ac3-b33e9fc1b31d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb0a676b-4f31-43c7-8309-12f2a8a0bafc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "df6ba4d6-2b9e-4e7c-8711-a64a4c217d66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bff7a957-7506-40b3-bf54-b987db453b63",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29327ce3-80ea-4e13-b003-fddc5f128e99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c42f164d-7f36-41cb-b1e0-8c44386777d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2135433d-adfc-46b0-8139-f5457581d539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "134f9453-2528-4891-8545-7ae8041f2460"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6119fe63-2ec4-4360-a92c-2c04f6e9e85d",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78c2e8af-d36c-44b6-b012-baddf01198c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e04fe973-9dc3-4757-93e0-537dad8c072b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bd5f0d9-350a-46e3-aad0-08904b2442c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "cdd6961c-b7bb-4273-b7c1-977093994745"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff18ceac-a755-40cc-8a61-cd0c2427e38c",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c4356dc-e81c-49a8-b08b-bbf1737aeb1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70297be2-4bb3-45df-bf3b-68caab071979"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b670fd07-c2fd-4863-bdbc-65dcc7a5b9cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "257b087f-d241-4082-823b-ef8280d9b494"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cba85f6-df3d-40c2-801a-4d91f020fa16",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9932402-8db0-4850-aa8c-e87104ecc981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2de340da-2462-4718-bf29-19e3c7c8fb76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25bbc59d-9a20-4a0a-a3ae-fab890453651",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9f3b782c-ea2c-4524-ad50-a7621eed15f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "875e9077-bab4-4dd1-884c-a146e842ee22",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42582409-035c-4cf1-a877-80152807f96f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d661c22-c2a2-46f2-ba38-2979047f6ac8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b97dda72-e1c0-4eee-993f-7f63c2b90546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "36f15bdb-d878-46f8-b904-b066eee0aa25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0f5976e-2dff-42ec-96db-995893a6758c",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eac8482-15d9-4e97-9c71-40650b465529",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "789f632a-41c7-460a-9ee9-3c268ea03158"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5edcaab8-9003-4c9c-84e4-cf9483538b33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "02bb7e04-f1d5-4d4e-93c5-536a70377846"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01444dfd-9160-43ff-9f6c-e7fb706bf74c",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2196627f-9652-4e87-a67d-80a4583d0589",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5ee5e54-481e-4628-acc6-42f54f77b572"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8c03167-6732-4f5a-ba35-9475767e2193",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "5c207d94-0df3-4ddb-91c1-fd4e395ddf05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "865f57ca-bf50-4fe3-925b-4aba892e4baf",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75fb45b9-48c4-4d70-af4d-2ff9475099c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04dd01f3-4694-4643-b352-ede968d9ffaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c47827b5-8563-4c30-8270-fe5d04d14234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "ded2a7ba-0322-4fe9-aed5-babdf99afd18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bc39aec-9778-4f92-8439-aff5dbc3ae6c",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8582bfe-c866-4619-9687-7e7f389e86a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14365261-b033-451a-8c1c-7adf5082a10e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d732cf3d-ea78-407c-89bd-4e0e6eb528c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4ad2791-ffd8-4d31-a776-1ac36176a1ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba617fe9-09ea-4f3f-a2fe-a1b082b12f4e",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "219a6ef2-8921-40ac-9e8e-f23ac982c533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85b36d15-28ef-4d6c-9438-63e83509ceee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a6d5d27-7bd3-4cb0-8ae4-b455a0f7f5b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "63b0e227-f566-4319-8ab3-b0eebfff35a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93498369-4426-4821-95c1-1c124992c638",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd8b03af-9071-4924-a10b-24d9d301e332",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3e4fd17-e4f6-4294-9de2-6821d01ff3bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a290f4b-19b5-4996-a347-f42a70ce9876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "480ac5fc-1699-4333-80e8-3ad8f0eadd77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e910557a-e6b3-4c4c-94b2-3338bdf36310",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c3dc2a2-eaea-421b-8651-a2b88fc1417a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0ed4c30-7630-4ea1-bb67-f1ec7e33adb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "570d445a-6531-40bd-8eb8-b0c661cba86b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d0754c5-02ed-464b-b4ac-41a90c03f6c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "583dbef7-da9b-4ae9-b154-39f702311d24",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "052a3831-a135-43ea-867f-291a41e00aa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07a3f2f7-efff-4b03-b123-5a733604061f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e4b762d-5851-413e-8bd3-0c7da5b1da17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f1f940ef-e673-4354-b52d-cdc28f76b9c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81964d7c-46ba-40da-8e21-9d80a4eb2110",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63e3332c-ccc3-4e8b-9ef6-f6c44cdf9b6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca9edeef-9886-4638-854f-32270f6e7fbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0ccef76-19c5-405e-b04b-ef51001a0ef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ca9a6483-2286-4d14-a0bc-fdaa98bc49c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a5b5539-4426-4bc7-a093-0b4fe8d355df",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cad54dec-925c-4fef-a246-930a650dccac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0aadfae-d7b4-4d3a-b0c7-3a421474d10c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7429f64f-041f-415e-abeb-fe298d648d00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5030392-88a8-4b8b-88fc-1ebbfea70bb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89f11612-9146-4deb-90d7-0318ff358eee",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b79d686d-4d1d-42fb-90b6-61f3f703cbfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a2101d5-b4e1-4abf-800f-b9801f8f2284"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfcae694-c279-4d57-88bf-81fe70accee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc29975f-fa73-4376-80a2-cce225e320ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53216a8e-9e13-4f45-b9b6-554803f654ff",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e487226-0eb7-4835-b2a2-1c184c5d7939",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d53b4d75-0112-4066-ad55-bc33f507add2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2643fe6-392f-4351-9db9-37193e20f59b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "42a87323-ec73-42f8-a18c-921634689cfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f40f1630-1c37-4c95-8d64-b96f300e9fa3",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7941633-57fa-4e38-803f-3d4fc3e98786",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3e9b2db-0872-4500-bba4-e955eab1fc08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e270ea61-8427-4239-ba87-2130156ea2d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4bf3543-b993-41e0-964a-77d6dad440bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f65f4463-b116-45e8-a47b-16eafecde3e7",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d8591d2-6b2a-419f-8b10-fbf6bc3c130c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c1b58ef-4f23-4609-bdbc-57388f960096"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "849e5c7e-3c44-4049-9f9f-ea2201f8c572",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "48d62972-0d97-4e79-b1da-abb87119c151"
                        }
                      }
                    ]
                  },
                  {
                    "id": "638d678d-5272-43f8-8b70-30fa96dd7d11",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7088cfd-447d-4d03-b1b5-db0da0952310",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aafe86ea-3b45-4a97-9372-831a4babd93b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "becf8ec8-71dd-46a5-a07a-e9a856d4cdc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "6b43375f-c623-4ab9-8ab0-b7044a411781"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30f6e6e6-62b7-48f9-9942-1e0f34207c50",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cf7903a-57ce-4120-a4b3-ce08e8ea8acb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0269a8ff-f9c3-44d6-b849-ae76eac9dad3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e840399-7407-4537-a157-388043c9b092",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0887f835-88b2-4fbb-b048-17f74dc7e359"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09cd7268-ac27-4964-bce2-c5c9da46fd1b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44cf20f7-4ab1-4533-9f1c-04b0b33b479c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78daa6c3-916a-44c3-aaf8-de08810ef1b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "174c98c1-306e-4b89-b3ea-68cf64365a91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b8f718c0-4986-43bc-9c4f-888bf89e21fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b3daf56-459c-488f-9188-d579b40b919d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c11657ca-cffa-4c0d-8db2-2c5e9b5a1c40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "551d84d6-00b1-4bd6-a307-5c3c74756889"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05c0bc1b-4b4f-44bf-abe5-5b1a63518aa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5a8d31f7-5255-4050-ac9d-d65c4b1a53ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7890ac94-1173-4d31-9502-949e8b70029e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "176cdca9-d809-4f2f-be56-f2301235f1cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59bad897-c810-4e71-9188-e26ea73bff9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23a23575-5d9f-4e97-bf7b-5467b59d16c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "35fc3490-1172-42ae-80e2-725b315b8a03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e125bddc-9508-436b-adb7-143bd3517cf4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08595ccc-4135-402c-966a-973cecf80fcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b73297fe-7a30-4ef1-8190-eeb5880b5264"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aefae17a-3fea-4e22-9aee-5694da41729a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d2d77c9e-c375-4498-a890-fbdd089ae9f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd19c585-fcf7-4d3a-be8f-942af74edaed",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3e99fd8-dbe5-4658-b9a0-2156aed06ed4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f73f1bdf-d7bd-4bfe-9ef0-3f59fbcd8459"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25f6aeb0-7962-4a34-afc5-56d5251c02b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "34d702c5-0d61-49a4-9370-618388e839f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf21fbf2-9ef6-4237-ab85-bab2678496eb",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0e80d67-5c94-4b8f-b012-bbd2b11a4446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5107c170-167a-4314-9340-39f98e2d3fb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cda242b0-af71-4aed-bb67-9abd3aa0d95c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "37f27d41-5b4d-4fce-be9e-f6d9ea4a8bbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b38a951-c116-4fc4-b162-af1b0cca93d7",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46e4bc29-bd6b-45bb-b54d-54c340b3991f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7c6da56-a0ad-4d12-a0af-f11888a60008"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b58a4a4-45be-42d6-8dd0-dca959760128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "234da727-7e1a-4d48-9b01-9e30ee5fea38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "444bfde1-e94a-443f-b004-cb30c3976724",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "860c1c7a-8238-46d4-bd3f-6048d72f1ca0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b0d9252-cd64-43a3-8382-232245770641"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "635367d4-0bf7-4209-9092-22167415570f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ff33d10-c111-4cd2-9648-979e7f321b1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fca15f49-4759-4b4e-b33a-772ec2c785d7",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6daf3dff-cc2e-41de-9d41-5d421202c1cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ea8d78a-1cf3-4274-ab5a-8b59a3fd7ac2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c98d866-84a5-4a0c-85b8-f287da4247e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c9c0cd7-b026-4701-9826-50876a144c64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce214d4b-756e-4978-ac88-3e597d76adcf",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e659bdf-a803-4fc4-8184-dd4d62ff553c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ac86257-36e6-4f4c-aac0-ab814c589e18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fde18c1-5803-458d-9885-a5d719943203",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "46bd897c-3e2e-4294-b7de-ac0c21678a35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53e5ceca-b142-452c-b429-7c6cfe6cca15",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b27e35d2-0a0f-4ca8-8aa4-bfa5bc4dd3aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d8999a4-caae-4d42-aef8-5e02d23d9db9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ed4afed-1cb5-4189-b4b0-ee8864d82102",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6f834f3-dc7a-4092-a0bc-b2d29b3e27ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85915982-4d40-4e2e-8072-443dcc148645",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e34da32b-90ca-43db-918d-dfcc556372b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb3a451f-a8b3-4003-962d-6ed2eb63db8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "829447be-d99c-456c-a27d-dcf920cc9187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "23e725ad-bbc1-4e88-bf31-ab646643a8b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16b78109-1bb3-44ed-8ebe-f973bf116259",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fcb3154-ca9d-400e-a3d9-d634c63f5d18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1034ecdf-9297-479d-88e2-cc68e7f11705"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "987d277b-a227-42c8-9de2-46d7624c104d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c177bedc-9037-4c85-a944-9a9920daea48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa13ea06-a4a1-4836-807a-76b538a15995",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b8c78f8-f118-4346-ba06-31ade8dbaeb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8101098-daa9-497d-af3d-f4f32ad2f8dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b34752b-a9af-489c-8dd4-7d37fe9b1940",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb0d2e29-5afe-4353-b432-b06221fabeed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5f309f1-9c6f-44b2-b5d3-35d37f33e27b",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6057ce27-97d9-412f-bc25-a04163a199b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7340c54c-5bd9-4f5d-b186-ee6b4cd07148"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0890edf-a028-4ac8-9217-a49024233396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d990caa-311a-4caa-810c-f1e618b05cd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "656a1d8c-091e-4e2c-a142-830a020f08cb",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84470b4b-1186-437c-a95a-b28d38e2943a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cffac5c-4176-4bb0-a2db-cc759c4ef4bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97a0999f-44e6-4482-a5b3-48145529a3b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0dbb1db2-0f4e-487f-b008-5af72d70e3fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ced24e1a-c25e-4702-9aed-2a8a333dbd7b",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ba44b2f-29f5-4f01-b72a-cb3d852ee5fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d697289-5ed5-4ab0-a404-25d7be18cb75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d0ffa29-cf8c-4a56-aa5a-2aece9d8aa94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e2027746-bccc-458f-8384-691c4481513c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3163b897-d333-4c47-8603-c712d625a5d6",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fd3e77d-d1ea-4c07-9baa-6ff32313a848",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "420e305f-1a8e-488b-9658-528f5bca8b6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2d6e3f9-eb77-4b8e-a626-720c7bc75334",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2acaa257-1be8-48ee-a7f3-ca573fa1954f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a84ceb4e-e20d-49da-b66b-8a1a7b0deb0c",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b8a7521-157b-420a-bb52-cd91d90e8a11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f2aee55-9f3b-4406-8c35-7c459b29b8a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8829287-45db-496c-a072-ff35665364e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d6c2e09-71a0-4c0f-9485-274620cd3dd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1dc8d7f-f927-40a4-9164-69d24cb31941",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2de1f80-30c8-4bc6-832b-c0c32546554a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae07e77c-53d5-431e-b4b4-9f9c61bf02e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d4182ca-3dbd-4f5f-a2ed-34e2db7c4882",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e88795e-32d3-47f8-82dc-6952d6a651fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "820ca13b-b143-476b-b2d8-4dd7f5048185",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "683a7f34-b739-48ba-ae8c-a38400670cbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b11c125c-3cf0-40ae-a551-d3b30dd031b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d16314b-5aee-4f2d-8ad7-2237367902e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "306689ef-0f4d-4bdd-a479-87da53caf8db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2dd8d0e-45a1-4811-9de1-ea2621681eae",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff78994f-e0be-48c9-864b-100c7f205f4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5b33495-5777-454b-a0b4-8cb415d19255"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f228c37-f960-41a4-9442-461c4fae59fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8cdbb004-a37a-4bfd-8e35-6877dc93a994"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dad34a28-e854-4673-86fd-e5f81f8f4384",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fba29476-7583-496b-81db-896dc715357c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0009cdb0-d261-4ed4-8431-36ae29804395"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "776289cb-11fd-49fb-bac0-d761fa06df7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8192b559-1a72-4dc8-a22b-af515c9bfe76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68fadc76-f8f4-4c79-8d01-af6a770c884d",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2b8cf93-69eb-4639-9d52-dc9e2b164805",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4e126e5-473d-4cf3-8359-5f8564a2ef6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46f66359-8295-428e-9fd2-c88292df572f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "10e7690f-d210-469c-9f56-1f6fe8e55bd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf93eded-2e06-4a7f-a0d1-db64f26d7dcb",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1102ff1c-604d-423a-9ced-b860cf23b474",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82682542-4335-48f0-b244-f6bad4b63650"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edb613d6-090c-40a4-b71c-d5dd2a9e95a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "42f1963a-29a3-49ef-9f25-65e5c9849ae3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f46e6381-8bc6-45d1-b7e1-b6cdb183edd9",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a9df255-09fc-42a0-9e29-9c4c34b8cd6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a684bcf4-d1e7-43a6-9c39-ecf2a69d1f64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed633d38-540d-4555-8dea-6b9f70fff81a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5fdb1db3-9bed-41a8-a637-b35b16cf80d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9224cc0e-8c0a-4502-a43a-f29ccd6af2a7",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d0febda-2f4b-405f-8858-fd92b8705fd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53745e54-92bc-48e8-86b0-54391fb6d0d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77279cfc-591e-4605-a4d9-c8a7a6325f93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c58c1d98-be97-4dd2-a917-9b1aa1fa3036"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd4aa063-2b5e-40ef-9554-0afdd6babbe1",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2ed6408-fdf8-46f5-a05d-03363490100d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa76db04-a407-4e1c-98d2-f6c694027172"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2e78b21-29a7-4e0a-a5e7-05cc04eea993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c2de4c39-f9c9-415e-9d2b-1147153d434a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5afe94a8-d06e-4bf1-8755-deaec67b0559",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "660bd1fa-999c-4022-ae18-3998fab61522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3648123c-2775-4fb3-babd-039bd5e15935"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47a8e1ef-f4c3-4f84-b605-346fad1c0aeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "54750e97-7547-41bc-a17d-50712ca33200"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b687b202-1be4-4a52-8297-423822318b09",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88b1aa05-ae1b-4f1f-a2c1-d9e4f804ae6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f75cbfd0-f70d-4bb0-8e6e-c0aca6184a48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc532d18-c3fc-4963-859d-baa72f5172d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "13986b6f-751f-4e3b-909b-c1f8ac6d46d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd461bb2-c274-4665-a389-bd449740aafe",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8086e335-f338-472a-8b33-9780e2b9d732",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b471f5b9-84d6-46fb-a9db-9f3c16f1e415"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a54947c5-d570-4066-b75e-2ed8f2c2faeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e6fd5e7e-5976-4dd9-b091-c49b0fddbae2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14befafc-82a3-4e3b-97a8-b513e7b6c307",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b88d16e-3cc8-404f-bbaa-d21a781073a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e69f9438-610a-4848-9c3f-25a7e81d8586"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce1b45e0-e345-421b-8893-aa9e1c2d536d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "77664e04-1039-4f98-b92e-9df14e0fc33c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9f9564c-46c0-49b6-851f-5b79ccc5c4d6",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "076a193e-8f40-4040-807f-723673e57211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c9572f8-f67f-448e-b53f-f956ce3be280"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a19ec30-8ebf-445a-bb20-cd5cb42eb53c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "eaaeb91c-dddb-49b3-be92-8d9716b366ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85545a5b-2f80-42f9-aa59-27de979cf58f",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fee7916-b316-4252-92af-bca9e2b0e51e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8175f04f-11c4-4f98-b4fd-adf54fd693a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66c9f39c-e4a0-4d62-9789-aabee881c23b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a81d42d5-276b-48da-a768-b466c119e92c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a42ed9b9-93ce-476a-828c-162b5977a3f0",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a371980-9421-43d7-b4cf-f0b9f68eb90f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "95b9d50f-467e-4c40-98a6-e45d40c616b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "324f2619-b9f6-4c25-bcb3-c30f8c3d64b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "74a6dee4-ae9a-48b9-9a09-9204ad33879d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4adc8e01-c8e3-4b8f-b991-6fbedf8801db",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3894507f-27b2-4b46-b9da-20706e913430",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8144082-159d-4461-b22f-0f015fded1b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "82865d99-e6a2-4d5b-bbe4-bf3078e8f89c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba66aa48-1527-490e-87f8-dd31babd8dbf",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "71faad20-1d13-48f7-812e-cc46eab5c285"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a20e455c-3f51-481f-a21a-c7cba81aafd2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8ff50613-631b-4f2f-a301-9fe53c76ebd4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a0c0d997-baae-41cc-abf8-6e59e77a1a33",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ff2a494d-61d5-47c3-84d9-f7ad4d21e2af"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ba6984fe-c0f9-459d-a165-0b79bab22d8d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9ffbab98-2f92-45d6-a393-c9ac4d50b1c8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ffb1845b-dbbd-4fb2-b59e-49c7cc805b1a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3577208f-5be0-44f2-9646-e48ca99546d7"
                }
              }
            ]
          },
          {
            "id": "50546633-7293-4915-9239-8578ed3d55d2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2522d2c1-383d-4d9f-9b44-ba0fc8d0c6d7",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8aa2ff39-4f3a-405f-ad67-c898094f8831",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "99ed6400-ddf5-4089-b7a0-4890e7b35793"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0b9e9a3e-66fb-4f49-b5b1-ecd2b927f774",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "05f91c3b-1918-4a34-81e2-b653d240ebcd"
                    }
                  }
                ]
              },
              {
                "id": "2bcfb32e-17d9-442b-b9cf-6907ca135bad",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7010cb2d-ae18-443f-9b9d-a4ed500d0aaa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d495aa7f-895b-4f5a-90b7-7a4846a02488"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e358ba89-2f36-442f-9d38-0f75397fd615",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "dc548645-d398-4a5d-8f1a-bdf5663debc6"
                    }
                  }
                ]
              },
              {
                "id": "50e3cdc6-10c8-49f5-9efd-9da3db611fec",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "77478be9-5986-4e93-ab8e-547947ee2c04",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6cfe97c4-0d16-477d-a8ab-59618cf34be3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3e724aae-cff2-4703-afca-987146480ffc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "51ad7a09-a890-4f48-a9d9-a48e9b0d642b"
                    }
                  }
                ]
              },
              {
                "id": "113c5d91-1626-45a5-909d-2aee3f61abd4",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e5d48001-df0d-4356-8935-22fbb215c311",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9e3433d8-3f6c-457e-a3fb-e9777414351e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ec7d241e-3413-4821-8084-cf2eb7bb4a4b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "2456a3ce-5e37-48a7-994a-d5a171499d28"
                    }
                  }
                ]
              },
              {
                "id": "53ae2c4b-23c2-4f71-8b81-06292e7e9fc6",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "152f0f42-48bc-463d-a63a-b0b046e0205b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "90e1ddef-6327-4e34-b3e2-d95e402e89da"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "42819ada-cb0d-4b54-aab6-c3608717d7e9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "f5644965-aeb5-4ffe-8f0b-00e72ccb7059"
                    }
                  }
                ]
              },
              {
                "id": "49ba7e24-6dee-44b7-867e-b6004eccaa14",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c0197fff-e778-41ae-8a1c-0167a7dc1251",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "03a3ade3-011e-47ad-bc9e-4bea9c31c47c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8c7afe8b-15e0-4cec-961c-fed922fd876a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4d4a1ce7-9be1-4a12-a69c-20c1c142663c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7decd2c6-07f3-426a-b370-a4c5c7fafd77",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "047caff4-ae11-46cf-bd5a-4a2ae0fe00ab"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "81df1f2e-6ae3-4123-beca-a1f4c29e13e0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2fe465a3-114b-4618-8b23-7af87c1053a0"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "695de7a1-cd00-4e79-bf7b-bd5879c6fd61",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "c135028c-db13-4774-a92b-a1fc438805d5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "23895ae8-d81f-4f10-91d9-073881e8ec1d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4f81844b-8f94-48d2-af05-f5631899b349"
            }
          }
        ]
      },
      {
        "id": "feb7f6bc-eea6-4e9b-9c3c-613de7bb4f6c",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "ddcec029-26b8-464e-8ff0-44c2b4505c5f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ec27e7a7-b03f-402b-8408-f6819c4a0b22",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0985f25e-30c7-465b-9d78-a22e3d71ea09",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df8dae41-b908-4757-9729-bf6edb3d1355",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23422e3c-5ee1-474f-a86f-0a0d7f303469"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f700674-cfd0-4d56-9b34-959a4d1ef0d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8d4770b-69a4-4fff-9203-23b0e8285dc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2320a91-27c2-422b-9a8f-b16a597205ba",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b826b03c-a163-4b59-aadc-6b1393bcc675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56aca6e3-7646-422a-9eef-86c10d9720e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ecfa606-a53e-4dbf-830a-9ea3710be1f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "89b532ff-0dbb-4e4d-ada6-a2d5495cb5ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77f5f93a-7964-4b76-a9a8-e54e3bbb560f",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fa798ec-c023-48ed-8f3b-2b4b68d0776f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c8a2191-3c23-4a1d-a5d9-dd84d2abed4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4909f4de-f754-4629-ab17-ded14c0541c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "504f96da-474d-4f72-9aac-4265fcd82a65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "298b3aa2-654a-45bb-a25d-a405f4a39bfe",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d643c350-c3a4-4401-83b2-425cdde29fea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6446aa5-6bac-43f1-bb70-036efa06fc84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0dbcfeb-5ca1-48ce-82f7-238b0e291ff7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7473fd1-bbc5-4278-8fb4-3733c993632c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02666f65-7a9c-4218-9605-f1e5a4a4c53c",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9e1a38e-d0e2-410b-b4e6-6a7a28ec2235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc049119-1ee0-4556-b7ca-d6bd2eefee75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68b979b9-a6e6-4b62-a6e4-5bb9c19f87f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b20dbd29-36d6-45fa-bc73-8d8d7a8d7727"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10ed7bc9-f13e-467a-a830-364f7bd30fe9",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55fae700-7bb7-4cb8-a08d-742e42b8d7e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "526cc18c-fa16-4ede-a658-f350835740a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff83e89a-8e08-47d9-b04a-569e46e09a3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a3dfdacc-9551-49df-80ef-c1d1eaa9b3a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb9090e8-e3e7-4f80-aef6-476a04ab1301",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc6d0886-ce3a-4c05-88ef-475523a50d52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "196cb43b-0151-4abf-82fb-cbd6297c21c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6ed7dad-bbbf-45be-92c9-3b5598f99872",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "d19c0e55-835f-4aa6-8f64-9e0ca96f4689"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4baaaaca-52c3-4e03-a173-27bff67cf076",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b40e7690-4079-47f0-845d-1071b6e6ef33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19d855c8-4bbb-4f44-8c8d-4c1dcc04adee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ee7ed7c-e414-41e6-86f1-f337db7db44b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9288f102-89fe-4ac0-982d-9673daaeedaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52b91cca-2898-4224-af83-5d4b8c7f7233",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45aef215-db9a-4926-9a23-7fa933d1985c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "185e732d-ba12-40cb-a5ef-95b707eef2a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af1b2314-8f7a-485f-a5bc-e553c67f71a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "febfd61a-5596-471f-9caf-bd7a38122341"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8b1c8b9-6754-4890-885e-a8d3254db077",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b6bec6b-6da0-4937-9239-3ac258be5bf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89b59db5-3577-4cc2-b685-ebcef7ea5aea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c9e66fa-1100-44fb-b16c-4527e0f68dff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb03801e-47db-45eb-98a7-9b3e885475ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44e5c483-1e34-45e0-8cbe-cffe555925df",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "028cebde-fbc0-469d-9013-d8739a635fbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "544d3022-5233-4868-8070-4270b1248ce1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d406fec0-46fc-4100-981f-b1d30597437b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "6435d1bd-b45a-484d-951b-0e7a5ac8821f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc121a98-2836-44d3-b922-587ac685cff6",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4b84118-14ab-4db4-a0b6-4da5c1dbbfed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a476723-3186-439b-86d5-38f7982ee256"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2b440bd-869b-4cf6-b23f-e2ee88eb1160",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "579dcf62-6a15-481b-b922-0b1dc5ed11e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bc8acb4-e8c5-434e-bdf6-194671209572",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b149283e-8b8e-4329-b50a-70c42e1e33a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1184f29d-6c4f-4b70-b2bb-e4ec00fc7d7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5745163-6abf-4402-92f7-fab5d8328e2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "76b7090e-e419-4dec-8318-dd09481ca0dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dd9d988-6f49-46b7-96e0-6e903b992910",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1c8da9c-f26d-49d7-8896-eb7c6e6b182b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c0d4cf4-9e80-4385-b32c-c3efa14b26d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "812fdf89-1bde-4d48-9349-d3ef673f9fc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "83ad8d6c-d6aa-4ddb-8ed9-1bc45fe26bb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "276be937-4f9b-45ea-9b28-de523647d27a",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f9046e4-6eb6-46b4-bbaa-e6715b8cfc41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48d3b2c0-2a4b-468a-844f-b13f6ad0d97a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb761f47-c93c-4a27-9e78-4bea2d116b01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f80b2c2-f8f9-4d31-9830-99448ce6d01c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fce7f545-a8dc-4563-934a-ef115a25beac",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6c41c04-5f86-4178-ba4d-9e31216bc738",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82447157-5186-40c1-8544-079285a412d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cbaf7cd-5f10-4af0-b561-9a8637e591d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "77399a57-59c7-4522-b451-f7120e0be6fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53cf03f3-c801-41aa-abce-3ad97651001d",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90f9d537-ca40-4a4a-978a-f7068aaab5fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85076215-5fdf-457d-8012-98439c59a279"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6358c297-8dfb-4f5b-a6e9-89c54e0b3c23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a9200a4-9242-4848-8ea0-9e88de4901c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c50a38a-f9de-4b57-801d-115834e3096d",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac39e745-0685-40ab-af89-160d44a61423",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6fa0661-8044-452d-88b1-4432db27e4fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8161212-2439-4039-8872-ca994c910b93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8614bd3a-2bf7-4ab2-ab22-ec4a33db43ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08b8f114-f102-4838-840e-194651fef1cf",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51092931-a062-46fa-9f53-e63d0911febe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e8dacb5-b2a6-49cd-be2c-975355dc4307"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "700bc35d-3a6c-492b-a215-555f402edcad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "131bd69b-142f-4406-867d-44303a02a3d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2316da1f-e3b6-4104-97ab-93acf64dccae",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c11ed2cd-5a34-4711-b866-1ad8a5977f40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e33d663-9fbf-41b4-ad23-b0da3718b011"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "222c2f15-ed0a-49a0-b042-02d110fdf296",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "76813b44-1174-4ea3-9d4c-732be6c94e78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dd3837a-60fb-4b57-a704-3d624c44c1c2",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e917b7f7-e41e-4fd5-81a6-7d632e9d7784",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93a97980-5453-4fa2-901a-f49d010096cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cb6c03b-3916-4658-a591-b0cab36eb169",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "510c9502-545e-48dc-adb6-9f25ecc41b46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44a97183-c985-4e92-98fe-6f8532a5ac3d",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78a3f797-3ea3-4920-8018-eb81b050ba16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec1ac904-7035-4ad8-8313-2764abd60c0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f5e7618-425b-4463-81f6-57873a5ec991",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7303e663-c32f-42b9-a845-b8525234c07c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a88614e-2430-4ce5-a2cb-310a294411df",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1ae9233-c390-4964-b59d-411ad8d9b9d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cca229ae-6c9f-4bbc-9e47-cf9d0fc29739"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3631f3cc-4f6b-44e1-9a95-ba7d583e2a4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc636b46-c008-4964-9e4e-d0337adcd99a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbfa112d-1e45-4045-8a27-2425205fd0a2",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14018567-815b-4b85-991c-3cf5a730dc8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57412115-1d0a-4599-8362-a61c22aba4d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "337c1e26-2f29-4bc3-8ce6-c388f85f992e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6abe29c0-4364-4a07-9bf6-a1d38a6b0e2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b34f9b0d-9d48-4011-bdcc-61624d6ce356",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30839b2e-06af-4b6a-84f4-b6187260e06f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8d3b463-267a-4784-adc0-bad2a9b01db4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2448c9ad-1f93-4841-a1fc-b6635fbc8b69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c3dbe8c-fb8d-4c6b-8720-debeef56ea6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bff0467-e5bc-4976-920c-1a78af930a47",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a91de1d-4399-4b71-b0bf-4731b094ec1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d13ed47b-ac4b-49b7-929c-3d6f65a36743"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3146624a-bd06-4f39-a25d-4a56aabf583d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3cdf156e-5bbc-4cdc-8607-3071a51d1190"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6300f022-bdc5-4b4a-9a31-806dfa432dc6",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b71bc5d9-c5bf-4df2-88ba-312a0b023cd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "862083fa-71dc-40de-8ef9-be12411d4676"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ab809da-8863-468f-946f-8936554ace4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa372a3b-fccb-4e68-88cb-7e464ddbecd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aa2a9a4-025e-4e59-b0fc-147decb3b597",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5948f370-3c3a-4566-b418-51fe7732151c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c29f749b-1399-434f-b033-38ea42474687"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c776fea-e137-46fc-b90e-9410e9350571",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "43f093e1-03f1-416f-88f1-3811e91a0507"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b86f74c-06a3-43d5-96ae-e5027cc0b17f",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76abc189-7380-45b1-ac6e-b6c2f07d0c50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "326fae86-6d1a-40e6-8467-111935fe3cb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b01a7ce7-0fb3-4518-903d-8abf27963daf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "16691c26-937a-4f8f-adb9-e07aa4c9e9ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7781c07-641b-46ad-b2fa-7c77a46addbc",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24055be8-9b90-416b-b714-08e8f1b5d98e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed6ff20c-b69a-4786-9060-d2dd9833b971"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5779712b-3f93-4928-809e-e1013ebd6db6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc6154c2-c3cd-47bc-96e2-7cf7a69221b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8641e58-6c58-43d7-9095-5715e84ffc51",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8be9aab2-7d9b-49dc-8316-ca551ff436cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "531002e8-be3c-4542-a26a-63267d2793a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24a0781f-2dd6-44df-b1f9-f86f27d33ba7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "33932315-6659-4a55-9b33-36fd76a135e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92db992f-6ef9-4ef4-beec-b3e049c1cdb5",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f47fb86a-5cee-4233-a9bc-213bdf389889",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdbf5adc-75c4-4a13-81f7-392ecc8f25bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b10f6f4-5a83-4354-bf87-fbcca0da2224",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "32e20661-061f-4076-98f2-e74bd26223d0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6c7232b4-550a-4bdb-ac72-e50e6379c38e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "91cc855a-9d99-4481-bcd9-0671fb5835f0",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f95a2254-b5f8-4bc4-a41a-f7fd66e68026",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "bde84287-d090-4df3-9507-c2c706b6da0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9729e9af-8d48-49f9-a1df-64d6c9c6a2f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f371ed62-cde3-4afc-864d-4a28fde52311"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3016f806-2e2c-458a-b4ba-34e5e32444ea",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bb4c6740-a1b7-4e2c-834b-88f5f4ab84f3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "61e9f5f4-c8b3-4494-8972-97debbb6d841",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c958c1fb-c499-4608-9e6b-bdc49223959f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3f852719-fc8e-452e-a6e4-095c59ec96ab",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "fc21ebbf-d2aa-42ff-b15f-c7d44ae01112"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5a64de70-5b58-47df-ab03-8e424af37428",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9bdf6d00-a5ab-488e-ab99-4b157903594a"
            }
          }
        ]
      },
      {
        "id": "52270852-49c1-44c3-8322-38844c95f8c7",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "b9f40edd-93fa-45a7-b196-27a56796a5ed",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d2130ccb-9283-491f-936b-c10f9be26fd5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5d4bcfb0-bd6b-4160-9721-93113dc4ffaf",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93deeb01-d5da-4c66-a455-5da0d48edd43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17b1ca9e-0776-4029-9b18-3c8e847e683f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60e53c8f-f0d6-430c-a437-8f9b77537953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "c08aee59-7345-4bd5-9ca5-414ab3bc6c64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40cb8956-dc9d-4a2f-a9b4-abd76e5d39ab",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "317b1495-0c75-420b-83db-0c2862b85a28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b88bed1-9022-47cc-a3aa-346cd0b0719b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd701011-b42e-4cd9-8dcf-fdcbbd677e4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b290794-43e1-46f9-8b0a-dfbd4bbb414a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50f27a90-5334-4d3d-b3e5-a7e345782d13",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3051436-87bb-44ad-ae27-9f9e81809773",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62d70529-285e-4627-b16f-346f5cb38f0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2100929-af4c-4c16-9b0c-efb0467a0d23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "21751a98-ffdb-4fb0-ba1d-fff4a2302c49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cadf559-5998-436a-a1cd-f5f58249ec44",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82f53366-5166-4d7a-a366-3796845f3b4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "522963cd-5b0d-4007-b29a-cf10c8f1a4b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e25f9c1-7fc9-414a-ab7d-adc4214cef0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5cd64674-9729-4846-b70f-bc822888241e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2330372-4273-4d1f-b922-ac476af19243",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3323a45-ad93-403e-a569-87a9baff2586",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc1b825f-648c-42bd-bc1a-d42ee2689792"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d42b0f39-04d2-4d40-bf41-f4563707fd97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7da5fb83-8092-420c-96a5-d8f840318f4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5e167c1-a754-44e5-8237-3d4a32a95f7d",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0f30627-7f4e-412b-9e69-929c188a08a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d532f75-8475-491f-bf37-f1809132dfc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be4ede66-3274-48d8-87bd-1035509eccb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8f125e2c-0489-4e28-aa15-bc4f8bc09b13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2924da5f-9506-4334-8e4e-9efd84e49ee4",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2d1e22a-7bb0-45bb-9474-2e09d452de65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e3ff7c0-d311-4fca-8634-e4096ae0c869"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa235b71-4e21-4273-bab7-245808719f30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "73f569dc-63e7-4f52-93f0-2fdeb4bc8531"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc8af084-380d-4599-bd87-72dcb41128ad",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8afce00-a466-4701-84b6-3efeec97b55e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60e878b2-548f-45fa-af7f-0fe0f61e03d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efd6cb31-e50b-46d2-8c36-023a8689c077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b690769-73cf-4bee-b12f-63075504a81e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6e3121b-6d58-4432-ad55-56f84e13f5b4",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75ecdbb2-b6a6-41c2-9780-8fcec66c988c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a107398-8c47-429d-9782-fa518fed85be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "105304f5-6f9e-4103-bc4b-95655b729ccf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "650b04bd-0c99-4a65-a7be-99ccbb0ac015"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85f17634-4779-4745-919e-8fa6faf427bf",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9f5350a-8252-483a-87d3-2b0fa103c307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b149198-2c97-47a9-8b29-62fc2c6f5003"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09b27413-acf7-4071-9af3-c240fe78efd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "715a094a-8a1e-4f2a-95d0-45e5ae3ff29d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcd276e1-43c3-45a8-ab59-b410738aa297",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe0ea384-f435-4992-a48c-e49b4fcf7a84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d1f1065-8c58-4ec8-a88c-315efc572326"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "428cd4a5-6174-48fa-90da-9e82849547b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "0c21cc9e-90d6-45ba-b647-b0bfa5c73f88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e197d6eb-624e-4e55-811b-6795d2b9b7cb",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a74d8f47-aae3-45e9-9522-d33e18b7013e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a2bb84e-dddb-49f6-a75a-2d1f5f22aecb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44e0e950-e81c-4ea1-bd4a-480991ff96d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bba94483-7013-44b9-a5be-e912919f2e70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05612589-1f2e-4e9e-b4b3-e3c3651354d4",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b286a991-6d26-4667-a757-151980659a8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "770f2136-7909-4bbb-89eb-c83ce0ea75f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "248b93be-1139-4da4-b4f5-e61366989872",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6fc2509e-f849-463e-be93-85ccafa13812"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b287bbbf-06c1-4d1e-96f0-9b9b256a5ec1",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ba3264d-9c33-446b-8e47-4e5c96533e2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10d36c9a-a0ef-45c1-8f06-e199ba4ee2ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19883407-d594-4647-a47d-75f4a3c06363",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa21388b-4f21-4624-9388-67c762e0e14d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30ca714d-3ff9-47fd-aa44-e99ee780f94a",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "478bc5c0-515c-4d7e-8ee0-63a8d4728176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecb8e03c-cd02-47e2-aa8e-78d0add7cca3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e468dc2d-04cd-4aa1-8c60-658525033956",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ebe7416-1add-4ebd-ab14-d1eb9c75b740"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfd3175e-b417-4e83-919f-c927896bb8df",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f484570-22b9-4f09-8106-5dc09df0c5b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92835740-24a2-4666-9d43-7e3234e32ef8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "635c0839-3f25-4137-b422-da5b25d19fea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "9eb6a195-5eee-442e-8835-ea5564e42411"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c676f19-397b-4dda-8f03-ef068e4b9f51",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d24b1b7-95b7-4c15-97cf-c0e3e22bc7fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "792d448f-d113-4206-86d0-8af338ddc6bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00a40db2-f80e-455a-bf0c-a121c8711742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "3fc23c29-9682-41d4-8e30-303810c16c14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be2d2584-1f70-4c07-8c28-63ba6307235c",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7156c73-bc63-4685-8abe-45a55440aa8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "151fbac9-eae4-444c-997b-b4091edf602c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45c6b07c-d3a0-4d80-bcd8-f1ab2dd57075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "62570147-6f87-4f06-ab1f-409b631610db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af672eeb-6392-45d0-94e8-4b94f4d1446f",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e640dee-0a31-4844-ace7-5ed584a7c8d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "091edb43-063a-4875-8e45-2053254898aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "074dce44-4c7d-4296-90f3-73b0b35f6bb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "294794f0-d31a-4521-9b57-0f0c7b59d5c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99c98ebd-07df-4ff0-b927-439450e59922",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5649018-6735-48f5-9988-5c7448b494d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a4eae6e-c35a-4d75-ae32-3861e01a5372"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69f6d7a2-2415-47cd-b69b-bb093a9c0594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ac84323-6faf-4ff0-85f5-ffd5d95dbbe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a5502aa-97f0-4f46-8909-384e9ab097fe",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb08d01b-c1cf-45fa-9316-5a60c80cd5d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd1eb6d2-0e64-4a22-9e85-bad5c82b77b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd0e255d-94cf-489d-bd2e-ed9ade5f2af9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd10f616-a724-4a23-af3d-15ca04d88545"
                        }
                      }
                    ]
                  },
                  {
                    "id": "246f0318-88a6-49ba-ad34-68eec9db4205",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b71edca3-c4b9-4149-8d09-1c95bd49253b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8921b90-9bd0-4134-8127-cf0cacfc22f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3585782-80cf-4b1c-9603-90ba4781bf15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8cb02443-5842-472e-a27b-3dff51584e55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0deb6ab-0550-4f47-86a1-ae33bbfb8118",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28a7a37b-9fad-4ed4-8e10-feb4de04d13e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49fd7e12-d391-4adb-8a6f-989a1d1140d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03beab7f-f113-4a3b-b5fb-0faecb1aaac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "83b3b984-e9f3-4f70-a366-598ce9e0f27d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b6f4e8f-ed80-4676-8bc1-9a5380b791c1",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82f16666-ae4f-409d-bd9d-896aec5b8607",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d3ddf5c-7a25-4169-9118-f2daa6f96551"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2ef3304-05c4-4abb-a8c8-a56e2a30027d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b8d59a9-9197-449d-9847-5acea1b2dea8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ffb60cd-b9c8-46bf-9f28-4aaadae43fbf",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67d2a489-bbf1-47e7-88e0-56ad4479f353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e35aa988-cf0a-403b-8bc6-10bb1e55e164"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9cc2c8f-01f2-43da-93aa-59c53f582a4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "21567069-ef27-4c8c-bd9f-07b9c6709c1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ee7a303-c0b1-4fc2-a4d1-82908495b87f",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a06556d3-50d6-4ed8-aeb0-2201b2afa284",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43243301-ffd7-4d16-8b89-0abab419c7da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8227c630-9da1-4afd-b2ca-870d9528674e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a2d69f7-9be6-4c62-97e1-e035bea5b7d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2a4d01f-f1b8-48d0-bcf2-97bb34631b55",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f391734-a9b3-4849-b340-6412ce37cfa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1abe2090-be74-4c55-b5d2-78916295472d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc2ab74c-906e-4e38-8f09-dc7294a7f3de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0930c6a-f15b-49c7-a0b9-f8a3da2b32bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2477e75-ea8b-42bd-b536-fcfa0464f0f8",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "defc5f2c-428d-4303-9cc6-b0131747dc07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d048c418-7fd4-454b-bc50-6cc5275ce5be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba618a0f-26ca-4c5b-8ace-28316260708a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1f1705f-7dd7-42d1-a6ad-07990292b80d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cc3138a-c88f-42d5-8bab-b34aa0fa5c51",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13a89507-e59c-4eb1-bfe5-a773aef38a85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf3c096e-70d1-4569-a2c0-06b7a8f5bbdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "880e4772-1c66-471d-9c10-98c72acf5bc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "431dbcc9-970b-4613-93e8-469c04ceae14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8304c491-cff9-4891-9bea-1acb4e862a83",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83203d6c-9496-4d1f-84d0-f6f30a54ce52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b6200cf-877b-45ec-90dd-f8f189ace7e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9932651d-c03d-48dc-8595-6feedc9dfa7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c34cf2ca-b2c4-4718-ab02-5fe1b04dc252"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89b2f401-32ca-4364-9e01-301bb24387be",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3ad4154-35ab-45aa-96ab-7890037db5c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e007aade-c268-4e40-8c81-bbd108323864"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d939f42b-e02a-4f71-9695-7779e6670b47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "508fd4ae-ecef-48ea-938d-31278c4e85ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "539f5089-ff88-4ab6-a003-820f75ad2219",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94e6d5bf-6c23-4304-8573-a5d65904c12b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb5967ff-185d-4d01-be57-41427eb45541"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e12c91e3-a2f3-4c8d-8c29-26e5685f99c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3acf2c7d-bd25-4bd4-88eb-9652d2fa2b6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6f29635-5c24-4413-a583-bba01f3b4c40",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95c2a646-868a-4e2e-9ba5-2ccfa9110aa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c477315-9bdf-4496-9cfe-eecf3ed1f188"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a292ce87-8469-47ac-a21a-2c884ac76fbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ec02ee2-8f48-4420-9a2c-143139089c55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc0dd813-5e41-4dce-923b-724e06b8dc7e",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcaeb9ec-dcfc-4e00-972d-8590d27c5d9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47c4da38-5263-41bc-83b3-3f9ba8707a8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f3061f4-f921-4f53-83d9-4517a1010205",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9be0e3cc-9422-432d-99a5-e165c188e7cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7336843b-4e29-4378-8614-b45633699aac",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9805354d-c8e0-4d5f-a3ca-84df1c83c936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afe3134b-e3c6-493d-b764-919d4c8cf4ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b37d8bb8-511d-4818-acdf-a3effce8ee3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "73540723-9ae0-43e2-b5eb-5f125208ef6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7592198c-cebf-425d-b6e8-336ef6cb07d4",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "859c7b92-335d-4816-9210-348b0a168adb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d70e3e0-9a8b-4c9b-ae03-4e3d117a625c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33aee62c-7760-45db-a6b0-1b7e7099ab12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "17002975-6332-455c-85e3-35cedad0d2c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40df8a9b-d997-4db9-ad8c-817d40b71b30",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e3f8fe1-75c5-4a9b-b6ef-1fbbdfeb0679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1a6d2b9-6c31-4f96-8aa1-111e77020c35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1e5d403-0387-4479-ab9c-1a871b757037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5481a21b-c02b-4199-817d-52cc32e64022"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f0b2889e-b494-48fc-9cd3-a7d2453818ec",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fe58433a-65f1-4e71-9cfb-aef101293382",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc9928a7-63f5-4c4a-aaed-944c47410f59",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "c729de38-2485-46a3-aa10-0a0ae2dc6fa2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f42c9769-b146-472f-acb3-c8d4844e72d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a3af07a5-b6bd-48f0-9444-48a426790171"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b91fc646-c7e4-418a-9772-48796ad8ad82",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "355626e4-9f0c-4f67-a540-0c5bcb65a1db"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "93422562-eecb-4a4b-bec3-d9bc5e025346",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b4436017-93ef-4926-82ff-49d7abc153ff"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9eadfc22-115d-4220-ad00-f3ea66f9fbe9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b4cccca3-2692-4257-807f-a3c6a1b2cab1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "01b5667f-5d49-4241-aecd-1effd598a541",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "43213c5a-bba7-4b82-90d3-f65629d4a8d5"
            }
          }
        ]
      },
      {
        "id": "2750684b-7185-479d-aea9-75d12b08788e",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "32677617-dd72-408a-8e5a-068e8b3cb402",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1231046d-e371-40d7-99de-299c6ba2eaec",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "baca19eb-b8ac-4b6c-8c2a-5164f0ced463",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ee50a24-7bc1-4c05-b5d8-5a72862a9059",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "662a82e1-47d8-4e6b-9c5b-788d3afe2b34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c3cb8e5-4310-420a-94a6-038aacfe1c98",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e40d1664-ba87-46e4-858b-a5d18a93d64b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b29f7b38-3bab-41ad-be98-7a72c333ad43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67630b37-906d-4b00-90e2-da4328d25cd1",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d56b2dc1-a2e2-44d9-a760-035e8bc081d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55ad7808-0296-45e7-8bb4-27ce5a66b1c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3befe486-1d8e-448e-b5e4-341a787a413e",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee899670-befb-40d6-a424-636ccbf430e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0674b0e0-a544-4bda-ab8e-37d1bd71f2e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96237628-7b3b-4161-a610-2822a0e379be",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17ef7fea-a54b-4dd3-b611-7018b6a3d2ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d754d3b0-3011-45a1-a939-c6778876212d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bfbca96-d971-4d9a-81bc-298b743d5ba2",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ae5879a-aecc-40ea-9e57-8639c567e06f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ca8d06e-0dfe-41ae-9332-3f284b511eb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24ef7253-37e8-49ec-8e90-65d86e95a416",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "929c7c5f-dc96-4c59-afb3-62a7161e593a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01b76c37-be04-416e-9ccc-90514a933a36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "702d5be5-e634-45ba-b725-a50c8dc099a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "362b3652-6e68-4dfc-a910-a5f6942956cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62fd2c41-53a3-497b-8770-370d196f1189",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbf01207-8eb1-43a8-afc5-7ed50b154913",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e8f3436-999e-4576-a165-29c8bff8c211"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d92452c-2ba8-40fc-8d1f-3a5084bf3cdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdb6edc3-d117-4842-8798-5798d632d352"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c739f44-f3b7-4e5b-af6f-1b389f18f50e",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "973bdd91-ba72-4403-b337-48ee93517398",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7960550-7dcb-4d17-b45e-cd6378fc0934"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "717d0445-0b88-4833-b41a-84ae255b87bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93f20b35-c209-431e-8a73-35294888976a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e9d2c9b-77ac-4ab2-93a9-7411fd3555fc",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91daf54a-da6d-40a1-846b-879daa8eaa81",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb448e08-91a5-4610-b767-f5d8b45f097a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cfb82ae-e77c-4801-aa20-2fcb396392a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28fe5248-efa4-4b75-b16c-8e00b4f8d554"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d9ee9fe-e8ce-474e-9ca5-ca0ccd03e014",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88b825d5-1d8f-4af2-8545-b77c1c9d7f59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b506748-a70b-40cc-897c-f36577f78623"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff49146c-87e9-4abc-970d-cf17d68ae59b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4fa853e-4fbe-47f3-80ff-0e43847281aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b61f278-59ee-42df-bd4b-b6e9fa17da17",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95901c56-aa6a-4e89-8680-eacae22393db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ae3ee04-8992-4ae1-a558-da68961b551b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9545b4db-d23f-44c1-a048-f371a3511fc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf76794d-f2c6-4a79-a17b-32311639d67a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e927825-516e-4da0-9e77-21ebc6480716",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69c81525-1ec4-407a-b830-7a79f40dad72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "378caeb3-a915-46c9-b5eb-2a98c3e030a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca2717c5-6f1d-4bd4-b764-3f026efa3341",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5d053b1-4fa1-44db-8885-ed3a443cfe8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ee03cee-14ac-446b-b426-816a8058c9f4",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89b43e74-3455-4b92-9770-a2485db8600f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22b84d97-bdb2-4809-ae1a-5c34428289a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "389a2710-5182-4183-9826-f6fd8f97741a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "068a4d78-aa91-44c6-bb2c-710869e1fc5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e27abdb9-0e52-42f8-ac51-b9ee8c12cd15",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d55f99e-b7e6-491a-a824-963b763b5cc7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92c57ee0-0b3c-4526-82f1-35e9cbd82a82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f58c6bb5-1bf2-46db-9e0e-ff0b8bf27a0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbe5eb96-6cdb-4988-bac4-d8f38b91fdf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee74d3a3-d7ba-45f3-bf35-ff5c3e5cc107",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59500de2-5e60-417a-9aaa-fdf189bbe2ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c286b783-86b9-4a79-a3c3-7e0d664c2f81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c5a09ff-0570-4e32-a1d4-de5a794e4747",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dcbf9e2-de23-433c-9118-f06df30b67fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14a8ccd0-f5ad-4953-9a7e-4fd91f0c8c7f",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3d48637-95ee-4bad-85e7-fdce582500cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d56b7e66-9a44-41f6-9271-a9caa0daaf44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b85824c2-2cb0-47fd-996c-6d30d6ed9934",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64a485cf-0803-4b5c-a887-838f09aaa8de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d95c6ec-0964-4a1a-adfb-2c7cd7d3d158",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26dd1e5f-6af3-43e8-89cb-2d2c4523796f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ec4bc94-31ad-4817-8ac6-ce8272140096"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fee9199d-cf4b-45b2-b668-2adb9058923f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cebab44f-eb7f-4ac3-b1a9-c35c7c80bcdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c22350c1-e9a3-424d-bf6d-b9da17758220",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bccbf5b-31e2-49dd-8ffa-ade53a85c2fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a36c38f-c9f4-4e40-aa6c-52e7cc0df6a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30fa8a99-1dab-4523-9a28-bd251c4790a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1b92df1-0854-43a2-82a3-e0a41edf5ae3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "846b455b-879b-4f36-8bd4-7b9e35d7bf88",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fbee2db-6897-4ca5-abe1-05c5273ed489",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aebba359-ad52-4eb6-ad89-4cfde7143610"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19c269b5-f613-4efe-ba19-05030b10e97e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58465bbe-8c6a-4d13-a635-d0716064d044"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00cdb9f5-c6f5-4fe2-a76a-5f0a8c81c5b8",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf21f8bd-a97e-49ca-b06d-9dd079c3e8c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7bdfbb3-f229-45b2-99d1-b878be2ee1f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87ba15a2-6025-41a0-b659-a3abe2826bcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f010e54c-0a92-42fc-95b0-f305bdf27dbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97f945c8-3075-4379-bf40-4fa12d8f3209",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a84ffff1-9c89-499b-8790-ceb078f0b5bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ba64905-b0ad-47ab-9047-782f24d65c34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5ca4ab9-a849-4d05-9abf-320db87b751d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64f6e477-6dbc-4fba-9d6b-4270ba7dea7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b34a6df6-8002-4c1a-9f0a-e7bf3c6aecc4",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "556f2598-7c00-43ba-b796-acfcd97675ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fb22739-25e0-4182-af16-8a7bfc410a60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c7e2189-c7be-4859-b2a5-2b17c3cc2794",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d33e7f25-e238-4f31-a842-b41d88c919ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5a0a8a2-290f-44ad-a406-3c629a64205f",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffd907ea-5406-4fb7-88f0-0a326061fdd9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c490767-e28f-428d-b27f-0b9ba4bdd893"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d401f2d4-335b-4d5e-882c-f7bcc9556f72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65c25de2-e80a-44bf-b352-ebe22f7ae202"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8747dc6c-3606-47b8-ba25-2bb998523e13",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f706772-07b8-479d-8b14-dbc51cb74ed4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad124367-c30b-4e4b-9ac3-57fb8b4ffdf8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4cb6337-2fad-4643-90a7-434942486737",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8a11ae6-fd68-4cba-a3ed-19c1c660636b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73dc0a7c-3d95-4253-b95a-1b36fd3a0c2f",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6191c196-628b-44ed-8d56-19ec7d426aa3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9e96018-1d67-4ae4-bf60-e5378153e1ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98d91328-d261-441f-847c-5c4de461cc18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04afd0f9-4463-40e0-ad04-2285472d2aef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdefd966-0531-463e-9890-93c69abd7033",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feb734ce-743c-4d42-8e5f-1cd5dd345cec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "737dcbe2-a0db-43a2-96bb-69f37af1257e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ea4e44b-781a-47e2-a5f9-7a6fafed1815",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79980c68-4b9e-4f93-bfbd-bd5b41c4644e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52e1e12d-db66-4539-80ed-ddc939fc2b98",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22ac3ad0-af43-4ad6-922e-fd49a7d97e88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f60f642-e1c6-4226-b027-35df4a3ca5a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "535130e0-2db9-4d25-b1c7-f0a9218dd73a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d353471-a7d5-477b-93a9-b17c6b43d055"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb0158e6-9701-41d0-b2e8-6fbfc6457800",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05308d8d-94a3-44b3-acc1-feb961a0d4f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ccb0e1b-f7af-4802-9e07-1db2acd9058b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aa9effb-bf6e-4648-80fb-07703698cd44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f177de2-3dde-4c3b-8548-8c7875d857ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6325b1bd-5662-424f-8dcf-b2de5c00969f",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cd49ea3-6f93-46b3-9fec-9ba46ef7e40f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95195141-7e67-4e03-950a-38de4c41596a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b970a83-93ba-41b3-8d62-0841c06e6605",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60d6684e-ba40-43fd-8811-3888bff3c947"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a047d737-3847-4ae9-9e84-cd67afbf1c9c",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54e83ba8-ccfd-4308-a4b2-746c9c694a5a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8a69fb2-f1dc-4b28-b008-56d80d4993f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32f39a40-6306-4665-8911-735feaa593f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9af75ab8-7418-4c8c-8acc-08898473783b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a600e45-d4a9-459d-bbb3-d5997a538295",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0b7a99e-e8fc-4a68-b999-db33240f6538",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68da89f0-ca7e-43b7-a3c6-1892f2f1de6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4bef657-11f1-4780-9bb8-ca0293ce5fc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe608358-e436-4733-9d3f-28d0526a0138"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02ab161a-9e7c-472c-9372-8a7029553f0c",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65e665cf-699d-4818-8d48-c94223c8da5a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "626a2fb1-b4b3-4332-8c96-1d132b3cb45f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5544abbf-08c7-4f83-a93a-f4d477343e52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85a5f4b4-eb1a-4ba6-95a9-10a3e8e7be65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c210bbba-dec9-4ef0-9419-3f4daef8be29",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "257fbe1f-e1a9-4cee-999d-2a9f73727ff9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a593dfa6-c952-4555-8254-879d18b8f991"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fef1cfd2-600c-4f6b-ab4c-70dec4d40ec8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ab43453-82d5-44da-b803-ad21003a1ff1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0d0a15d-e1eb-4e50-b154-09c3a95634bc",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee1b0571-d5d4-4689-898f-7a20a4069906",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7eb38af-2c9d-4c3b-bb10-a04b6048e036"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "239dff82-1572-48d2-b06e-72aefbf44618",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd1d2108-996a-4966-9af5-bc8c7b043ac9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dca7e312-d5f6-405a-8f69-58f8bdc24682",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23f5dd40-d3e4-415c-8500-dc2478c96ae0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec93cf81-fdbc-4c14-9175-99b30cf9df8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a33c1ab-07c9-46ca-a21c-af6264ac18ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e210213d-1b0f-4f66-92bb-6469e35e1749"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a6a7a6a-60f9-45ca-b33e-b5370f5e79f5",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73659840-9bbf-43c0-b07e-ee252f0c975e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90e81c85-7078-40b1-ac92-b9e2df3a83bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65ef6ace-ee46-4338-9cc4-24cc9c7f7014",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9bc1d90-6f4b-424c-97ab-a9008885b92f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d72d6642-3633-4992-a2fa-525104d3b2e5",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5ced58d-9d09-4496-96f3-7f96eedb6285",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2fe6ed6-a985-49b9-9dd6-1ffc4a658c77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f5c97db-e73d-4e43-9772-883528b16ec5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26c677b8-2847-4ee5-95f8-12d1e45b1497"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1de614a-b6aa-448b-b64e-13e01f1db201",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "163e4184-f3bd-4e78-b424-1d9762894c8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0d36382-595b-4fee-a4ec-2ca0abb1528f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07d3e281-6ba4-4f91-bd17-557ced7b2f6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13162e7d-ef42-41d1-b0f1-76f095d21c1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c14e391b-527c-4083-afb2-be03cfa08d12",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cea190ed-dac4-4736-9de6-347c27438b50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3399e40-94f6-427d-b821-08ca12cb234b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2877e0e-07e2-4f69-837d-e58a649e3820",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3246029b-9a79-46ed-b7a6-cb1b69dc9594"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf7c77a3-71ac-4302-aa9f-d866fae4c0f4",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaf194a7-b8cc-411f-8434-5a64c7c74039",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7ab654e-c741-4401-802a-0729e742d5eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c05d983e-a397-4c90-8341-faa0fd05bb2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b066a953-366a-4a56-8074-9fc8ea950c91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1289e96-20eb-4eca-bedd-ed61239c7042",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "202004e4-cece-4968-b48a-6d9966586747",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37bec1c6-64d0-4c15-bb76-4af58077ac88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d8ddeba-5f92-47f1-aae9-fa409e897688",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f645c847-bf5a-4fa9-80cc-fa93aa1dcf05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "802cb64a-41d6-480c-a44b-f71f383fcec0",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6856b74c-ce9f-4b8e-8ac6-95e8376e3964",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e121280-9766-48ea-af13-e8b4d4d2e60b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8dc42c2-e495-45e8-b685-dd741931183c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f42fd06-190e-461b-98b6-e01facaf3faf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "def7f184-664b-4954-8c69-39144eabe48b",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b30d1bb-e76e-4243-a6be-a2a67b5abaab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a96bc6c-0eec-461a-b032-126f11ebf194"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c094cb31-c294-4b95-a276-4546d62527e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "987d9bf3-5530-4b6c-9a16-61a8947ee263"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b32b809-7cc7-4076-bb4c-c84ba0c4e264",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df2ed467-58f4-42c7-a9f5-4731c8e8e668",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bb684bc-396d-4a9c-8763-10ba6b39b8bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcc56b5d-7375-403e-9ac5-f3f31a2ce18c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b92fcbc5-c7e0-4445-9985-25b12fdf2697"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d38a7b13-77a4-43c0-8d13-9b6501c85a21",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "141f0245-c3e9-449d-81af-c26be8001a11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47c77d2a-eab9-49b9-a367-1d64fe87cecd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01fd25d9-b993-477d-9543-712a11df480b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ff7d956-06ec-4eb9-bcd5-a52f2adb9eb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5c78d54-6112-4b16-8e96-a94a911fe890",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a939b8a-aaa5-4a26-80b6-c54fffd1be6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78246718-7f3f-4411-a1e6-16413b52f48b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07d32b8f-47f0-4ba0-8592-dc642013277a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59a399a8-c0ed-48eb-829e-59375bc1cc88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1527734-c206-4889-be8c-7df7ae621c39",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e4a332a-6eb5-4ab2-8ea8-c74197143e73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dd75817-8efc-4b04-a993-974d5bfc758c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fbdb10e-8d52-40dd-824d-a93544b72834",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6074bd54-9704-43a0-a002-027a483ac096"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef178ae3-3116-42e1-b36d-ef50b4b30a9a",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc5d46a8-22a5-453c-9cd7-0b5bea9a4e76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4d5ddd6-952a-4767-8f57-13c0294c246a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "063f7d44-f958-4cac-bd7f-bdf8c930a477",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5afe7616-5657-4156-b659-56b513bdfdb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9366a48f-4201-4e86-874f-35b3adbf6164",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5e5a853-4f4b-407b-a419-0c9843737654",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12473b6c-60fd-4202-9440-8ad1864d4bea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79008e2d-8460-4e33-9a1c-17aa3d73aaa8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17877797-ccd7-48a7-b666-85f096bd51cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc249e4c-6a4c-40c6-baef-c39ceb5188cc",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d23ecaa-d3bc-4c8d-bc7e-51ce0470bfb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a47ae85e-f03d-4d84-9d25-26ff77f7ec05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94fab499-100c-4600-8014-7421dc049518",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c429668-5892-4f79-bcfb-d189ad901735"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2c00e49-f99a-44e4-9b72-03f851366669",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d813127c-baf9-48a8-b977-9f46d3d9d2e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b5e6726-69b2-474d-b15a-4f33cb29aec2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a9f03d7-b4a0-482a-98fe-6fd9b952d43f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b84f0418-df57-420b-9807-e267d02ec804"
                        }
                      }
                    ]
                  },
                  {
                    "id": "386e610a-1139-4807-8712-cee6802f157d",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09e91180-e918-4158-824e-4810ed338d02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e10ea87-a81a-40c4-8347-5fd352ef49e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11374e04-ce98-4940-8484-a366983a6dae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a4b73ed-0adb-4f47-aace-7b35bace41df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faad042c-63bb-4577-9c92-0f1708c772b1",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a598ece-5850-4d21-b81e-3621de0d88f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e33eeb68-30f7-4283-ae57-5c2a947cb909"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69e4165d-0355-4a6a-bae7-332ca5c75356",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dff6686-6f27-4e9e-8c99-0bf1e587f3c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80f3d980-547c-4d52-837a-6405537a1d2d",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a6cdd5f-ed18-4af3-bb65-88647f49f495",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1da98e38-c36b-49e3-b050-705d1f3f964f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e423aee7-92d7-439f-a9b3-0fd864a60a73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b76b1ab3-fb8f-47c0-9f47-e4a3630aa887"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e46bc5a-3fce-4ea1-a5cc-bfa26bd0f52a",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a080577c-7ef2-4056-bcaa-7c0a1639c3b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96a79036-1360-4a8a-b458-d9033b83b5da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b656aa8-ba49-41c2-baa7-3012269ec324",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0570a9a3-a8eb-4de6-8f7c-3562c892d5a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9346377-affc-4d6a-8cdd-5a1cb977d8ea",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0409fd2e-78d3-44da-b7ba-37e33ca27cc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7372e33-61fa-4206-8fd5-579baeb7f8a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17833ddb-c9c8-46b3-ac5a-b43ea7bce7b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aae6b393-316d-40f4-85f3-c6cd600321ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ea09a0d-7312-42c3-900e-cc5150dafb2d",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76089d45-1125-4994-99cd-14448b03f183",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c38d9695-dea6-4e6b-807f-2a4cb1489467"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e0613dc-eea7-422b-b8d1-73b9d2d7e474",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c085d273-c4ea-4c0a-b088-68c86967dcb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "453c1e8e-e1df-4d1d-b0fd-f6da50c2dd25",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3710e47-7149-4ae5-a68b-fb961383d542",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb3e2b1e-87ab-48ad-ab8c-b2cc4e123ebd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4e244fc-b0ff-425f-a229-8c3fa28f88d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae914515-a2c1-4a90-8a17-8c62a7afc342"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c2fde7c-a025-40b9-8df3-57415312e012",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4e8d561-012c-415b-a839-cceec6e808de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40631ee0-09f7-43f9-b36e-6f11cc5b8c3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c44e72c-092e-45f3-8469-e5a0d3b976be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4c175fb-b23a-48a1-be79-61950f62c94f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4296bcd6-9edf-4273-8364-b941523b9c9f",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e2e78b3-88cf-4313-883f-b180bd9f8eb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be23f1b3-3dd2-497e-8f55-83474b1eec40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c48a25b0-b844-45aa-8b12-61549d18d8ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c7852fb-b30d-400e-b6eb-7e25b410ac7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "519182e5-6ec5-49f2-a440-0f0db9a3a4ab",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fecb29f-e46a-4d64-8da3-8f81360cf3cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ea13be3-13f7-48b3-9c9c-9edf72593830"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d0c86e4-4455-4311-b4b4-a8c5ef305d83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "811850b3-0774-4ea7-9e6b-c36b8b004cf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0a97ccf-fc9a-4250-9263-faf88d55e71d",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27be61fc-8497-4604-8c61-c5f0ebc26448",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c71dd1f7-a3f5-4ff9-ae31-effd2ad2add7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26fc8216-e15d-4a95-9c46-b562b0eeb832",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "250b0442-2acc-4373-b175-c28c07b1ca5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac01255b-84d5-4707-af37-bc0e288fa821",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47f17522-8ebd-493d-97b0-36bc9d7c6bfd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "515f57b7-8a7c-4f08-bfb7-ac4b83d53b1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b6fbb00-17dd-4305-946c-05bdb5a05da7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c8cc235-69e6-4cd1-b5b3-e96d257b0727"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46102270-ab6b-4f8d-9ed6-f8922d91969a",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aa0c8f5-9d52-4556-a991-d7be4742e7db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16128487-816a-4aa2-a202-af34c7a37d3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bed0d63-df90-4019-85f6-557d252840fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb5c69e7-6ea9-4d99-b5e1-793ff397746f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2201af27-4511-4433-916f-c0b4c34e9fc2",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abcf6b84-25c2-4ddb-96c5-a52db535b200",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f87cad8-808d-4c4e-a432-724ea690efa9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e901f613-7534-4e55-9b00-3d7de6ed825e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f829f357-be1e-4059-af43-727b31dc72dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d1183b6-de5c-488e-861b-dfd556163c3e",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c090e60b-3b94-4656-b6ad-0304fed8e068",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b7db5c0-b362-461f-a710-816a39e93924"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "273e3d4b-4ebb-40f5-897e-a181d487b26e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "926dbfbc-17a0-496e-955e-e206c44b2a41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ecb033f-212c-43a1-b640-95fdb1cfbf2c",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "566f3e1b-2f02-4b2f-887b-f60b56465e22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9c42a9c-5d41-4e56-8ae7-175c109461fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dcf721a-3e08-431f-820e-9f3dcdda78d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7b1e780-2ade-4083-b220-39ef1ee00744"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55bcac44-61c9-4418-b4dc-b3145c46e983",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c40ea303-5c34-4dbd-b07a-6f875e015332",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc9eb9f4-481e-4d1d-a792-581b2bb99ab6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a17ae287-e655-4c4a-b54b-982d376b325b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31e11b43-acc3-4c17-a94d-31f8fb862232"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d205e03-bb60-413e-9b2a-42e66b2f80d0",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d18e8e7-6a7d-4d70-a053-eb351a8840a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8eaea2a3-717f-4d27-a6e5-ae6b0e8721ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33413148-339d-49f7-be96-af2e2d0958dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7fb2624-98f9-4bca-b8fb-2119c21afdba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5581695d-23e3-4678-a7d3-20fcf54a274d",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "605560b4-f8cb-477f-962b-0d0ebcde8b81",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8942ef4-e266-49ca-9c86-e38a3a859cbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38d76feb-3853-4595-9219-41c76e82bbc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e36a1666-e286-42d1-8e88-fc4929d0b750"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15c9b3f9-3175-4c49-adc3-e1a8769b9448",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ff7cb17-8720-4ff5-ba50-6249e2f5ef8d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eae8bef2-05de-436d-8080-a4c05772f30d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51abaf6f-aee2-4a7d-a373-e31aac03101e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db86f8d4-7f3d-4bc9-a6a9-ed404958972d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2581790-5022-40db-824c-bd39b4f45a0e",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6954b38-7785-4fce-9779-cd63e7ce5c54",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb6e1d53-d5e0-4579-b9d2-5f83e6f30c80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b642a4c1-7a84-4f8c-8a72-891c0f9f48f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "341ee2cc-9cd8-476c-9768-bbef069f40bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fe5f600-137b-44ed-a5e6-6cd175d17ac8",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8616b59b-1c9c-47ac-8667-ac92385697ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d88825f2-64bb-42bc-9c98-84f6b0e74c71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2005411-b3bf-4cde-afed-f2ebef1d1537",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc47d8b9-f75a-44ff-969a-6ee36a716a1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3e4c6b0-da79-46c7-8de2-ca44780939f2",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f43351bb-f64e-4275-8448-6fe399b49d22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e27c8156-b590-4727-b486-e74267efe455"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3667b2b-b404-4ee1-ba8e-ce7bca49b489",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "191ec8dc-6583-465b-9159-c2cad126178a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23fbf068-a39c-4bd1-b13b-cab56ab4f02b",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ee0e497-cfc9-4d49-b753-c69f78e664b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90ccc61e-f814-4f24-9bcc-9780af548888"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0a1eba5-d624-49f6-a07c-808350997daf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2e27e38-7d28-406c-8808-01339514b5df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c5d82b6-7b27-4f5c-b72a-30092e3b6bcc",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e2da303-4093-4bbf-a6ee-dafa6054e2e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9dc54a64-9126-4f46-8ed6-0f9c155330fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d76718f-4d5e-4a31-9c94-cb171f30342b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a05053d1-892b-43c0-830b-68adae550f06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2055304-1f8d-46b1-9fb9-9c44ab926ef4",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8cb2619-93d1-4d8d-8072-35ac38735a55",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7be5a38d-ee99-414b-85f7-b07404e14d82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae2260b2-5817-4e92-b86f-f39d4b623fdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33cde96b-800c-4305-8340-57e8f7e0d8e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "043598f7-9f2c-4603-a931-f428c997e562",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "803a3a55-7280-4f42-84c7-3090029747d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "543a529a-4713-4e78-bd61-c52d8c9b7c4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1155566a-81a1-4508-8903-941111c4fb11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e617872-dfef-4480-83b2-1c50c3c45e8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30861da1-c26f-44ba-a538-29ae6ee3b321",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b31e402-e01d-493c-ab11-1c4de38055fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a45bcac0-17aa-4ba7-a34c-14cfd62b671a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64d4ae79-2b97-46a5-b474-335f208e49c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64d2a865-aa73-44d7-a42e-459ad8e25962"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3220e3f7-e4f6-41de-8da7-e63c7c9d2e40",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "945bb14c-d469-476e-b392-05f015e9388b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e031c4f7-25a3-4221-bfe0-8c6d73be7539"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f946d352-1656-4f54-a260-4d9e47911a80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ca29ad4-4659-44d0-bc8e-65aaa8bb3e4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de8d47bc-d560-4796-bcd4-877d3b15ccd4",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff1ba170-c27c-4290-bdd3-418efdb8c7b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "451aba87-0d49-4d4e-8be4-cf30d4229a1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4a94fa6-4a5b-44c7-ac4c-edebdb124ebf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbbfd5a4-b063-4f27-9c49-581673ad0801"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efd9d412-1697-4675-b03c-9b070ec12b8f",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa5fb4ca-09e8-4d25-b967-6c90a50434b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e466bc2-5237-4169-9d85-7e08b21fdd7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2c4914e-e39d-45a4-a79f-881969761320",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d70c454-4936-4083-94d3-556ba4de3cdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf84c409-fdac-4c49-88bb-41430f26479f",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1db9cc50-e177-4b7b-a61d-731ea07b5074",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c625f072-63c9-431a-ad0f-c6288b770208"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cedcddc-a315-465f-af57-da6bc680325a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f1c85fc-55f1-40e3-bf81-d810168a5f8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52603d98-4c2e-4766-91eb-afec630e7896",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31fbe3ea-f8d9-4443-9643-14ebfb3ba3f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2907b659-1ea8-46e2-be50-1c233b556151"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33d71d2a-de0a-4cff-8a3b-bc190319fa99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e80cc16f-791c-43f6-8216-4cd98c132114"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62cec448-c318-4a17-bbab-e44b29534683",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54bccef8-212b-492d-b4b7-a97267649268",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6153a775-a9a0-4fac-bb6a-2c9ca292a7eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "588e4f2a-f69a-4396-869a-e8de809a479e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0935bc73-741f-4a4c-be2f-6e67fef56a86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12b3d441-8588-43d4-90cd-ac73f8440a1d",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78f192c9-dd8d-4321-88ee-c74dd07d8368",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd657463-07b2-4779-87bf-5a351d0254eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2c63efc-4034-4a34-b1c9-23b22de52c52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "281668d8-8f53-42cd-ba91-07eed40de643"
                        }
                      }
                    ]
                  },
                  {
                    "id": "461e1029-6542-4f99-b4c2-c99d5f072833",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c57916b4-52a2-4025-a124-f9e495bb4b9e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af25f00d-c284-431a-872b-3c181fcbb60c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bed716f-03e0-4847-b64d-78c6a699b53e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba7d709d-aaa5-4427-832a-e2d18519a919"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da4ed9bf-55e0-4d3b-abd2-05ea7b083f82",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3797c557-f08b-4651-a0c8-ca5a82ae5288",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4063eded-4044-4843-b261-d444e858840f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef641143-5a3c-427d-b79e-eae9a41605a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27f772f0-38e3-4bc4-ba9a-da7068e54c44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2da447a8-5dfd-4cc2-b24a-924b879b2054",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3294e455-beb7-4fec-83de-2f01587769ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f9632dc-1736-424e-89d0-53ca43014d6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67f624ed-43a9-486e-a15e-afb2cf6638a8",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff54a105-3d59-41d7-bbfd-f57d0baef0c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "182d749b-8210-468e-a961-3d7d0c54e7a3",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "548ab70e-7822-4c63-94eb-0bc12332a5e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22f97c04-d448-4053-89bd-899f17dbe49c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0198e29-87b0-4bda-94aa-8c938a436df4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae83a124-7321-40b0-a539-5ad449e8338f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "269a43a7-2b6b-4baf-bda1-9319bbfda1f7",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73a0c0a9-4adb-4e01-8cd5-9df86559a305",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd67f01c-2f0e-4371-a526-bad7120a7c7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e71c8f7f-2dba-4270-885f-8774196f586d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6adb0ee0-53a0-4317-8aae-0c2eae06975a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63df02c7-6065-4180-bc80-fc7b04cabadd",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acea28d3-6f8d-44cf-8df3-752af702fd58",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d81164c-03ec-4566-bbb7-7063858a69cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "233c8db7-12d6-4c79-a149-5351fedf8cd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d83e7f4c-0323-4464-8d8f-9848c2d52e3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13573394-3862-4af9-accc-9a2c43423750",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab20d921-66f1-4ffb-99ef-148f458ffebd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8feee9f-3738-4a06-b765-cc9a0103d20b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d52870db-a4c6-4ae1-96d2-74f6c0aeb0a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50c17a46-5fb0-42b8-af16-b9c77be6b89a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6c8a4fb-45f8-4473-8c0b-6daa1330c5b4",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0086ef6-9c13-4230-8807-de591c70b30a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4fc72d6-a354-4b22-938d-eed16abc33fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f783e68f-c6db-48da-a80b-5c8627658f57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd658fa2-09cf-45b9-9006-46f5d6d1107b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85186c50-f80b-48c3-aadd-7fad2cc98ad3",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d68616a6-09da-4044-aa6c-f3df13e9eb25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7941a270-5987-4691-b26b-5593e878496b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e358c9b7-8be2-4291-8a76-0733ef652166",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9baaa6ea-2f67-4c04-8448-68c8a1bb3e70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8277aa06-a139-4bdc-beab-0f3fa345705e",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "421a234e-cac2-460c-b94b-d60cf6a3e0ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3528b22b-a2b8-412f-9ac5-af304d9aae7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d40f3617-5c60-427a-ae65-558cb0b48aaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7269a4c5-00d7-45d0-be1c-42e456880f61"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c35df564-2cee-41b5-846d-62abbb1e9d76",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4785b4e6-02e6-432a-99b3-08f14f5db195"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4cc7b811-9116-4a3b-b90c-712088bef9c0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d97ef2d2-4bc5-4ca6-8d93-4a9e2eb3c1ab"
                    }
                  }
                ]
              },
              {
                "id": "2f83e4b6-ac01-43a7-8a74-218f0d8c6363",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0799e3d9-7290-4668-a3b2-fb2c5f7a47bb",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f437a588-f1ea-4b0f-a1c7-940b4990505b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "3a4ab3ac-7147-4eec-ac5c-0f34d5ab230e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76fc686b-6383-4bc7-9486-222f5777416c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0f499b6c-6b73-437f-8963-5b5776d7a32d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7c78fdde-3c64-4bed-a87c-626e3a362a85",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f8e16243-320a-41ae-b3b5-c07eb2d465f6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3582a441-331c-4e1e-abf5-65aa96cd4763",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e71669e1-0acc-4ea8-80ba-8258acbb254f"
                    }
                  }
                ]
              },
              {
                "id": "299cfa9e-518a-4e44-9e68-166ee5378eb7",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "70aee530-6376-4fac-a38b-ee42e414a906",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe1df1e4-e9c3-45e5-bda2-222bfabcbf4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "a5d5d0c9-f97c-4f4d-867b-77bc9365adac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b0802a9-3a03-466b-bbb0-547b0c3214c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8095df9d-a21a-4dcc-a5bd-04ce1e91ea90"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "0c208d21-db9f-4cf4-9512-2930e78c8f03",
            "name": "Positive Testing",
            "item": [
              {
                "id": "68645140-06eb-4044-9131-71f6baac4ddc",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "db5293b2-a49a-4e41-ab3d-f56953d7493d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "d5cf8ef2-b427-4777-9087-09c87561eb17"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "997c4800-dec5-4cbd-a2ae-5921dac260df",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b04a378d-287e-459a-9ac7-6f86de01d234"
                    }
                  }
                ]
              },
              {
                "id": "d33b4957-06e8-46ef-80da-25b8a647ef3a",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a25128f3-2618-4041-80d4-c82eff29f81f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "e169b26c-363c-44f3-8283-e4c790b2ade7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7d23c654-145f-4060-8cc3-0987bffe8083",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e4a6de9f-e935-4e49-8b11-4dc2be4a64c3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bce2050d-c676-4def-adda-4ff8156bd193",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "1e393407-becc-4f95-b94b-7db2d63b5ff0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a1e880cf-792e-40b6-aaa2-0e4b63f67490",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "97f0a02f-a543-4373-9cb0-7dd0ede95640"
            }
          }
        ]
      },
      {
        "id": "4eb9cac3-c6a8-4617-b82b-9bd3f7d03970",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "bbb7bb25-1ae7-4399-b759-ec5f8cc8854b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "63b8e85d-2ba0-4ded-9fd4-05b128fb3611",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "38d750de-32d1-4c90-8197-eb66600e51b6",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "032b7238-1a88-48f1-ad27-c6e5f4553bc1",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "0c5cdc49-4651-4842-8788-9726c78ef8b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bc84452-f7f7-46b5-bb1d-66761c287a39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f957d888-348d-4b60-b7ee-975f846883b6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9dfeb45a-ea17-4377-a127-50408765c54b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "833c038e-3b08-44f6-974b-80e3426f9e51"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2ee4dc3e-7535-42dc-91cd-b95b8da3e5ad",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "440f35eb-0ff8-485f-a029-e3707de97b95"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2773f2e1-beef-4b5e-a76d-1d05e2af38fa",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "ab6b1888-a69d-4c0d-9513-7cb8f5aba6d7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "91107a28-1f06-429c-a0ab-443a644761fa",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "37e607b3-7543-4a5f-aba1-0702f69d2160"
            }
          }
        ]
      },
      {
        "id": "640aa0b4-4d86-4bf0-aa00-e7ac24202600",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "0a2e2652-4030-4586-bd05-2677cd40df93",
            "name": "Negative Testing",
            "item": [
              {
                "id": "95163639-22ae-466f-966f-e5a142b0c997",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ed415b58-bb8f-4b35-8d5c-e7b64b63ffc2",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4329e01b-9129-4a81-a58f-b16add94815a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a5df5bc2-69be-469d-a644-0bb5965ccdb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff3b1c84-17f9-40e6-8655-65476799b34e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9c660ef7-1ae0-401f-9110-7b2dfbb6200c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "47d30976-40b1-4713-93ce-165659fb6251",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bc1826a9-af06-4724-8ba3-0116fa865caa"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "44b9f7ce-cbc7-4762-82f5-177714785ec0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f7bf744e-8774-4576-adb3-9db6c35ce05c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "15f6d2f8-7242-4503-b0d7-9e95ef8cba8c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "143c3db0-96a2-4487-adc1-4071bfcc5b17"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "160ef790-ce59-4e9a-8138-4d991dca504a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d552094e-ad81-44d1-9238-641553b99c29"
            }
          }
        ]
      },
      {
        "id": "e3ec4f68-9243-434f-bb99-9424708e5f6b",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "37b97ab5-3730-402a-9cf2-a168e22cdf8a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8d8b0092-57cb-4dfb-a9a4-7e59de20196a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1c885458-0eec-463b-8ac6-53414c3285c3",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09a4adb4-fb06-428d-8029-3ee01692e112",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a74249f1-4f54-4a3c-b25f-9aac0bea8801"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc9eb038-f777-47a9-929d-af96057ecef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b78b7cce-992f-44db-b76f-b78d96d3755b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "abff52c7-4efa-48c4-9d50-c621422b71c4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "856e3e81-8994-4b2b-acde-1a66ea91c229"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a88456c4-d8df-4204-8b70-e18caf925082",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4698f54b-46f4-4e15-855f-afb242c3adf7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "387a24fd-87ba-4dd6-814a-98dea71904e7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f7f4e09e-2999-4ec5-9b7e-94b4c02f7a35"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d5d431b9-cef5-4971-8661-e9aebb77354c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "65b45bab-8e3e-4398-9823-39c5ac699161"
            }
          }
        ]
      },
      {
        "id": "5fb185ab-11cc-4e8e-bec0-7f784d3e2868",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fbf80b25-c714-4ff2-a7c4-c02cdcf948f3",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "59cd3ada-b5cc-4db1-852d-b52f849454c8",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "d1391925-3225-49e3-a5f1-777623b601c3",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "93858dd2-f8d9-4e1b-a031-a5f867b13f56",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5ee31703-feff-491d-83c0-639113d510e7",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 24
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 207.07746478873213,
      "responseMin": 8,
      "responseMax": 6203,
      "responseSd": 682.8550675619106,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1690591095685,
      "completed": 1690591166354
    },
    "executions": [
      {
        "id": "a6386b54-9ee6-4449-a921-0e39e6023c61",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "aa3563be-3956-4fbd-80d8-b117bf484875",
          "httpRequestId": "a7abce8e-0aed-493e-af75-97e40a70ec5c"
        },
        "item": {
          "id": "a6386b54-9ee6-4449-a921-0e39e6023c61",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "050216a5-bb6e-4406-9d05-40c9019eab7f",
          "status": "OK",
          "code": 200,
          "responseTime": 55,
          "responseSize": 0
        }
      },
      {
        "id": "1a63c342-b41d-4d77-9dcb-454414625920",
        "cursor": {
          "ref": "2e963443-10cc-48bc-931f-9284567e3cac",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "ab486147-661b-4855-8509-75ac04430099"
        },
        "item": {
          "id": "1a63c342-b41d-4d77-9dcb-454414625920",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "384007c9-4441-4e87-9f9f-c7cf66e56804",
          "status": "OK",
          "code": 200,
          "responseTime": 8,
          "responseSize": 0
        }
      },
      {
        "id": "2cf2fab0-5013-42a0-aa40-12d6a86e249a",
        "cursor": {
          "ref": "78e6ab1f-7ac1-459c-9046-f9cf4f037740",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "79a7aeed-3c11-4421-940e-e0b5f913e864"
        },
        "item": {
          "id": "2cf2fab0-5013-42a0-aa40-12d6a86e249a",
          "name": "did_json"
        },
        "response": {
          "id": "10bfdfa0-bd5e-4fdc-9311-56d8f59962a3",
          "status": "OK",
          "code": 200,
          "responseTime": 464,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e32c824-b930-4009-b396-8a21ad426cbe",
        "cursor": {
          "ref": "aa582bb7-e52a-4ed4-bad6-dca3ccc7ac71",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "171849d9-3b54-4341-b59c-184738c10112"
        },
        "item": {
          "id": "2e32c824-b930-4009-b396-8a21ad426cbe",
          "name": "did:invalid"
        },
        "response": {
          "id": "9df2896f-c026-421d-8970-fc1d2135d4d4",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1015,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e32c824-b930-4009-b396-8a21ad426cbe",
        "cursor": {
          "ref": "aa582bb7-e52a-4ed4-bad6-dca3ccc7ac71",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "171849d9-3b54-4341-b59c-184738c10112"
        },
        "item": {
          "id": "2e32c824-b930-4009-b396-8a21ad426cbe",
          "name": "did:invalid"
        },
        "response": {
          "id": "9df2896f-c026-421d-8970-fc1d2135d4d4",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1015,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b2df031-7394-400f-a0a4-a9d816c495f7",
        "cursor": {
          "ref": "0ab9ae26-5e3c-459b-b640-ffb569d98211",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "4de7afc8-0beb-4d28-aa3f-16d079d02073"
        },
        "item": {
          "id": "1b2df031-7394-400f-a0a4-a9d816c495f7",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "5cc68068-7970-4b79-afef-fc2f128a473e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 32,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fc701ab-5274-4da8-af1d-4ca6bcd381c0",
        "cursor": {
          "ref": "236117b4-ae31-4948-ab95-ce3c2443ec43",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "25354fab-90cb-447e-ac0a-9b275737fd07"
        },
        "item": {
          "id": "7fc701ab-5274-4da8-af1d-4ca6bcd381c0",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "dda7ea23-c968-4a36-b52a-fcc4994cab1b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 33,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4efec2ed-f7c3-40cb-9690-b40374fdab33",
        "cursor": {
          "ref": "4766826b-e248-46f5-ad7a-7858cef0d346",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "9cf6862e-b2ce-480c-9752-280b5f92bb41"
        },
        "item": {
          "id": "4efec2ed-f7c3-40cb-9690-b40374fdab33",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "ec786ae6-180b-45ed-a60b-e268802f041e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57029b3c-0b11-44bd-88fc-753d44da041c",
        "cursor": {
          "ref": "bf3333fc-b4d4-4450-8b81-2abbe44e6feb",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "4efc0452-9371-4b4e-9e00-c1882d1b09fc"
        },
        "item": {
          "id": "57029b3c-0b11-44bd-88fc-753d44da041c",
          "name": "identifiers"
        },
        "response": {
          "id": "7d800566-4dd8-4099-8652-8c5388c7078d",
          "status": "OK",
          "code": 200,
          "responseTime": 46,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad4e7ceb-433f-4788-aa2c-50faae3645f5",
        "cursor": {
          "ref": "fb2cbea7-3d36-4018-a229-bc73be33b741",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "08cb9aa4-33a8-4f60-842f-fab1d79fedd4"
        },
        "item": {
          "id": "ad4e7ceb-433f-4788-aa2c-50faae3645f5",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "038bf6ab-f286-4bcc-ae6b-5e430b6f2bf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 156,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36f61dd8-390e-42c9-8e5b-42c975b14ed3",
        "cursor": {
          "ref": "77b65dc9-b833-41b9-acc3-0c2a21eea404",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "5e31288b-8d22-42f3-b46f-bf5b0e59bc96"
        },
        "item": {
          "id": "36f61dd8-390e-42c9-8e5b-42c975b14ed3",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "ef91d65a-8786-4625-8d18-c9acd88c29f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88d4b441-7a2f-45b2-b733-dddec8e79518",
        "cursor": {
          "ref": "eb5502d6-52ae-4a9e-9d41-c76fc6bbb3d2",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "6e0b951d-3bd5-4461-9d0f-7a6537335fb6"
        },
        "item": {
          "id": "88d4b441-7a2f-45b2-b733-dddec8e79518",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "d5bc6ee6-87fd-47dc-986d-37ab1a87fb35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55fd00c2-243d-48f1-96f4-c7fdb471ee89",
        "cursor": {
          "ref": "ca401f50-0580-427f-8120-6481f7cbe1e3",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "a760ec8a-b015-4182-96c3-aa7e023863d9"
        },
        "item": {
          "id": "55fd00c2-243d-48f1-96f4-c7fdb471ee89",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "5555b61b-eee0-4422-b5b2-b7778760a210",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aed4005-4748-494b-8f4d-aeca25d55847",
        "cursor": {
          "ref": "2f9790e2-3320-47af-8f2e-42e90e883bd7",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "cc687fdc-338e-4320-82db-f64b2ab5f360"
        },
        "item": {
          "id": "6aed4005-4748-494b-8f4d-aeca25d55847",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "1b2687ec-759b-40b1-a099-c856b44d57ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1e70327-e7b4-45f9-90dd-0a3766922651",
        "cursor": {
          "ref": "00f450db-fa78-4dcd-b75c-12761290b697",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "1a0708cf-8f47-4c3b-8716-d7e1d7da69b5"
        },
        "item": {
          "id": "d1e70327-e7b4-45f9-90dd-0a3766922651",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "0e6cd2a1-46d9-4f64-8c81-efd58e3259e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "864d4039-21e6-4492-a22d-797cfcb0e560",
        "cursor": {
          "ref": "0f5f861a-1ef3-4513-b433-63eb1c03beeb",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "e3b8c35a-5361-4b0c-be29-510f12d79f85"
        },
        "item": {
          "id": "864d4039-21e6-4492-a22d-797cfcb0e560",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "19fd1958-d5d0-4797-9a51-c285a098444a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01bd6e17-cf69-4c27-99ca-7f4606649f52",
        "cursor": {
          "ref": "a9115b07-b7b1-44c7-864d-3a35c039287d",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "3bfff780-b239-4ad6-b5a5-71f9ea65b3e4"
        },
        "item": {
          "id": "01bd6e17-cf69-4c27-99ca-7f4606649f52",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "948c6961-668b-406b-91e4-37d091c13472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aada9853-d695-4e3c-b2ad-9132dfc9968c",
        "cursor": {
          "ref": "f35d3acd-309a-4bf5-8d7a-1f6a4743e9a3",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "921ad1c3-74a0-4c7c-8953-b59ba1acdc4d"
        },
        "item": {
          "id": "aada9853-d695-4e3c-b2ad-9132dfc9968c",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "0a5e4d41-c71d-430b-b7b3-b1ed002cb284",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a160f70b-d038-4294-abd3-e381518ea46f",
        "cursor": {
          "ref": "5623922e-e5b5-4bd2-b566-e09d129ab9ba",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "736c7383-95e6-48cc-8a62-406c264cb42b"
        },
        "item": {
          "id": "a160f70b-d038-4294-abd3-e381518ea46f",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "7ca4a546-759d-462f-ba6b-fd4e97dd3625",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce3ee5fb-bd08-4c12-b61e-8afd00b8ddc3",
        "cursor": {
          "ref": "bc702429-cdfc-42f8-9548-4250c10d1ca4",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "3256d528-cf1d-49c1-a2fa-82b973a4fc50"
        },
        "item": {
          "id": "ce3ee5fb-bd08-4c12-b61e-8afd00b8ddc3",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "ec2dce33-e501-421b-b85b-0d9d5f92c432",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63aad50f-2e25-44fe-b408-35fa0ae1ff6e",
        "cursor": {
          "ref": "97b47c61-ff3e-4390-9420-28c97bd159a9",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "e93918fb-c469-40c0-beef-a626c33b2986"
        },
        "item": {
          "id": "63aad50f-2e25-44fe-b408-35fa0ae1ff6e",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "534f1648-dfc4-4c08-84ed-9cbdc1db5e3f",
          "status": "Created",
          "code": 201,
          "responseTime": 767,
          "responseSize": 982
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:20)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:20)"
            }
          }
        ]
      },
      {
        "id": "f3c862f8-7de8-4f72-9b36-93d180d41893",
        "cursor": {
          "ref": "680c0a8a-9d71-4fd9-9dc4-4eb1c258dd9c",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "51f38c84-4278-48ad-9434-666055b8141e"
        },
        "item": {
          "id": "f3c862f8-7de8-4f72-9b36-93d180d41893",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "bbe35454-0478-40de-9bf8-1bd3bded7464",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a1e706c-c86e-4d7b-a10c-ee746c0217d8",
        "cursor": {
          "ref": "12040731-c794-4b5a-988a-e530954cda37",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "87314baa-4f05-42c1-9495-bfd339a63a2a"
        },
        "item": {
          "id": "7a1e706c-c86e-4d7b-a10c-ee746c0217d8",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "ab34f519-b6d9-41cc-b347-db5c74cf1200",
          "status": "Created",
          "code": 201,
          "responseTime": 6203,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:22)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:22)"
            }
          }
        ]
      },
      {
        "id": "45e6d775-44dd-45e5-8cdf-70124da2eb63",
        "cursor": {
          "ref": "3baf4f48-741f-4ed6-a30a-21d4f1609dfb",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "e1f73d3a-c78f-4c2f-867f-08054d8ef4a2"
        },
        "item": {
          "id": "45e6d775-44dd-45e5-8cdf-70124da2eb63",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "df1b57c4-c962-4ff2-ab14-9532518fc75c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0023a41e-e71e-412d-82d5-3369c3e2e601",
        "cursor": {
          "ref": "452dcee9-f989-49c8-ad1b-d9a24656d069",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "212fd7ce-b390-4719-86df-47ee3a12ca4d"
        },
        "item": {
          "id": "0023a41e-e71e-412d-82d5-3369c3e2e601",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "f94bd7ad-50be-48b2-bf59-3ffd9a410ad0",
          "status": "Created",
          "code": 201,
          "responseTime": 3413,
          "responseSize": 970
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:24)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:24)"
            }
          }
        ]
      },
      {
        "id": "085aa822-dafb-417d-bf25-464b77aa8c2d",
        "cursor": {
          "ref": "6a27e14c-73b8-4336-ad42-d4c890bf97fd",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "3fcdda2b-28a3-4f02-9f7f-4193bb5fc3b2"
        },
        "item": {
          "id": "085aa822-dafb-417d-bf25-464b77aa8c2d",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "e8d177a7-683a-4b63-8779-b6031d4fa319",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "603d22a0-ec48-406c-a555-575b8c1ddb0d",
        "cursor": {
          "ref": "88b97aee-1d37-49a7-8bcb-afd27a8733e4",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "bc74a377-d71f-4a6f-978f-7d649023eb70"
        },
        "item": {
          "id": "603d22a0-ec48-406c-a555-575b8c1ddb0d",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "0cdc9c09-1e66-41ac-b62b-aa0cc38d18d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c1242cc-1ba1-46c0-b2b2-31a594ab8135",
        "cursor": {
          "ref": "beabfe08-e7ec-49b7-92f0-297d21ab2598",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "27697a02-5a39-4488-9a0f-af26c81e3f53"
        },
        "item": {
          "id": "0c1242cc-1ba1-46c0-b2b2-31a594ab8135",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "2f79a55c-c769-4b88-b195-319c9bb93583",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc677ab4-2506-460c-8a61-d33147fea357",
        "cursor": {
          "ref": "4558ff0a-9f5b-4000-bbe0-a6c7fa62f65b",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "c0dfb936-c602-4f89-ad23-67fbc8323110"
        },
        "item": {
          "id": "dc677ab4-2506-460c-8a61-d33147fea357",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "47141a7f-207e-43f3-afe6-20fe99aedcbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d12f0c18-7dbf-4067-9e45-af9f6a3557cd",
        "cursor": {
          "ref": "1d886cff-d546-42ec-a106-7f2e424a4eb5",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "a7c678c8-3a03-4b68-9b78-1cc6e8b80cbb"
        },
        "item": {
          "id": "d12f0c18-7dbf-4067-9e45-af9f6a3557cd",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "12ba706c-ffbf-4204-953d-bde4f1916db2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22e078bf-3e66-4f19-8350-cefc5c36c8cd",
        "cursor": {
          "ref": "66933f38-e143-4d47-bc80-fe568c6d24bb",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "3e6724a0-61d3-4775-8c3f-647f29cb8f44"
        },
        "item": {
          "id": "22e078bf-3e66-4f19-8350-cefc5c36c8cd",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "7b1906b7-c45f-4d80-b411-66aaaf9a3cad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efd6d5d6-e3e2-45d2-ac30-cf2c33160714",
        "cursor": {
          "ref": "c05d6062-1887-4969-9284-4f30c5b046ec",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "e57daa7c-c386-4b01-adb2-e80aab1f8d2a"
        },
        "item": {
          "id": "efd6d5d6-e3e2-45d2-ac30-cf2c33160714",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "94dd8fce-0750-4336-81c7-183e6bde871c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f47a0a4-ea45-4acf-b1f5-aed7d8f12083",
        "cursor": {
          "ref": "4856a119-7977-495c-9080-f35d6f2397a3",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "658ee8f8-835a-442b-b105-ff1d2ea35db6"
        },
        "item": {
          "id": "0f47a0a4-ea45-4acf-b1f5-aed7d8f12083",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "68868100-dd6c-4bf5-a635-6fea70c5bf88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bc06a60-7f03-4fae-91a0-2462601481d4",
        "cursor": {
          "ref": "11c6be6c-570b-4b76-a009-88015b7e0223",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "567c6901-070c-4b58-be7b-e370a7334b98"
        },
        "item": {
          "id": "6bc06a60-7f03-4fae-91a0-2462601481d4",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "d5a9612e-d500-4b7d-9168-65799c70f6da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fb6e610-0786-4bba-8ae9-89dfdb46123f",
        "cursor": {
          "ref": "26ed2604-2516-41a1-b7c0-cf2f0b12cbec",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "c374c5f1-efa8-4c25-bfe8-7e4d9536231e"
        },
        "item": {
          "id": "1fb6e610-0786-4bba-8ae9-89dfdb46123f",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "6598f428-afdd-4551-b311-10802a423bd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7b164aa-61b2-42e1-a547-5eee2d715f0f",
        "cursor": {
          "ref": "26667328-8e6a-48cd-a610-000334dc2b94",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "23d4a830-bbc0-45b1-862a-afdc3d431db2"
        },
        "item": {
          "id": "f7b164aa-61b2-42e1-a547-5eee2d715f0f",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "f65c5a58-cae5-42aa-baac-3cbf062a1f3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eaa8cd6-6a18-4779-b3b1-6a1b7fccc95f",
        "cursor": {
          "ref": "2515ef9b-3ea9-45bd-884d-cccf17865d4f",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "d3ebd1e0-6afe-410e-adc9-abfbd24989e0"
        },
        "item": {
          "id": "3eaa8cd6-6a18-4779-b3b1-6a1b7fccc95f",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "f67b2ce7-0fcb-4dbd-bbf3-95fe8bb1b9d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4563ca3e-9ccf-4f88-8a95-cfcfa84e21d1",
        "cursor": {
          "ref": "f1de4661-9446-47cb-89eb-886b9e9c8f3e",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "8345a9f0-26ee-45c4-bbcb-e9180ada7677"
        },
        "item": {
          "id": "4563ca3e-9ccf-4f88-8a95-cfcfa84e21d1",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "d3aa50b6-d6f4-4c02-8473-ac7a7529ba66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4f934df-e08e-403d-b3ec-ab8ca79cef10",
        "cursor": {
          "ref": "7da4a9b0-5cdb-4339-a2f0-9aae7f2c3863",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "d97b5c9e-848b-4a77-8de9-aa97f69c32c2"
        },
        "item": {
          "id": "c4f934df-e08e-403d-b3ec-ab8ca79cef10",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "60a1a117-8abc-46ba-8cf5-564da16949fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97a17572-dc13-466d-913e-b05db034bf0f",
        "cursor": {
          "ref": "104dd230-bb79-4efb-b0fb-ece8718abf36",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "c99fbb5a-8584-4c05-94fd-d9fcb01b70fe"
        },
        "item": {
          "id": "97a17572-dc13-466d-913e-b05db034bf0f",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "ae58e28b-ade6-4ba6-92da-48ac24f98150",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a50e81e7-5b6c-4796-91a5-ecb9eb13a21e",
        "cursor": {
          "ref": "c1db8efb-2c4b-450c-8f8c-322160f4dc87",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "12b1499a-010c-4b83-8635-b4a52816c8aa"
        },
        "item": {
          "id": "a50e81e7-5b6c-4796-91a5-ecb9eb13a21e",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "cb858964-4c46-4bbb-8219-a807b1df3223",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86c99a78-3bb8-468f-a420-0dc1f1679315",
        "cursor": {
          "ref": "bb7830c4-472d-4178-9ac3-d967bdfb686c",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "eb20bdff-98c1-47c0-985e-57958e38f90d"
        },
        "item": {
          "id": "86c99a78-3bb8-468f-a420-0dc1f1679315",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "90f016b5-335a-4ece-a6d9-537601a0048f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d8d6f04-bf03-4b3c-8c2b-8961b5ce3fff",
        "cursor": {
          "ref": "fe346bf8-b6c6-4eb4-b8b4-4866b7e4e5f4",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "23e5f6c9-7351-4443-a647-13a4809da2d6"
        },
        "item": {
          "id": "0d8d6f04-bf03-4b3c-8c2b-8961b5ce3fff",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "79d23d85-052e-4d97-8efe-8256efd7310f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fd46202-1eee-44ae-a992-3269ea4cbce8",
        "cursor": {
          "ref": "0b16cf1d-8513-4a7b-b2b1-d18623110ced",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "c64468a7-9d5e-4669-8e68-8d56a633f21d"
        },
        "item": {
          "id": "0fd46202-1eee-44ae-a992-3269ea4cbce8",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "4472b597-a3d8-4f1c-b2d1-767a5d412000",
          "status": "Created",
          "code": 201,
          "responseTime": 2636,
          "responseSize": 969
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:43)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:43)"
            }
          }
        ]
      },
      {
        "id": "f65cc2d1-09a2-40fa-8f86-ee343a3e5e72",
        "cursor": {
          "ref": "065b3bb6-bdfd-4bec-aa83-d5ef7ae26c36",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "c9de7c33-f121-4889-98f3-2a3b7b5fa780"
        },
        "item": {
          "id": "f65cc2d1-09a2-40fa-8f86-ee343a3e5e72",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "f90aa494-ad86-4a64-812a-a84151abc2f5",
          "status": "Created",
          "code": 201,
          "responseTime": 2787,
          "responseSize": 969
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 201",
              "stack": "AssertionError: expected response to have status code 422 but got 201\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:44)"
            }
          }
        ]
      },
      {
        "id": "bff7a957-7506-40b3-bf54-b987db453b63",
        "cursor": {
          "ref": "1afdc5fa-af4e-4477-9c9f-6e69ce9e6f03",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "5995a3b6-76b8-49ca-92d9-5bd8ce9c8f51"
        },
        "item": {
          "id": "bff7a957-7506-40b3-bf54-b987db453b63",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "16148ee8-5269-4740-991f-31ce39dc7e34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6119fe63-2ec4-4360-a92c-2c04f6e9e85d",
        "cursor": {
          "ref": "2ed76cb8-c959-42ac-b309-999ecdd99ece",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "e1353e7b-1ea4-4e11-b679-5bc6cb25c321"
        },
        "item": {
          "id": "6119fe63-2ec4-4360-a92c-2c04f6e9e85d",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "8fd6764f-b360-4dd7-b8ee-97279c973b97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff18ceac-a755-40cc-8a61-cd0c2427e38c",
        "cursor": {
          "ref": "088b7449-2a26-44cc-a8b6-3382a9527910",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "696fb829-4ff5-4c94-9b1c-f3835076508e"
        },
        "item": {
          "id": "ff18ceac-a755-40cc-8a61-cd0c2427e38c",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "75832fba-70cb-4779-a232-bed52848571b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cba85f6-df3d-40c2-801a-4d91f020fa16",
        "cursor": {
          "ref": "e8ac2d7c-167c-4ad6-a0c4-0b47337c27a0",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "6c523fad-f018-422b-b0bc-06a6bb8249c5"
        },
        "item": {
          "id": "1cba85f6-df3d-40c2-801a-4d91f020fa16",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "64317111-f214-44fa-b231-baa77ff90899",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "875e9077-bab4-4dd1-884c-a146e842ee22",
        "cursor": {
          "ref": "0e9cb5b7-9415-4ce5-acfd-d6afb868ff96",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "1efcb32c-3736-4a1d-8a44-013b8f5ad3dc"
        },
        "item": {
          "id": "875e9077-bab4-4dd1-884c-a146e842ee22",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "3bf85dba-aa51-451f-a895-7a5eb72f8723",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0f5976e-2dff-42ec-96db-995893a6758c",
        "cursor": {
          "ref": "c38bfb96-52f2-4822-9da9-94103ef6968a",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "b4841624-fabf-4a0f-a56d-1495717d5f24"
        },
        "item": {
          "id": "d0f5976e-2dff-42ec-96db-995893a6758c",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "208c3472-d7b0-44df-927b-6d49dcdefe84",
          "status": "Created",
          "code": 201,
          "responseTime": 3108,
          "responseSize": 969
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:50)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:50)"
            }
          }
        ]
      },
      {
        "id": "01444dfd-9160-43ff-9f6c-e7fb706bf74c",
        "cursor": {
          "ref": "456a2229-d339-4be4-bf5d-9afc92476219",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "54fee2c8-a3f4-4b56-88a8-7fa491a8c556"
        },
        "item": {
          "id": "01444dfd-9160-43ff-9f6c-e7fb706bf74c",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "063313e9-e102-4d88-b924-6a2cbe4765f0",
          "status": "Created",
          "code": 201,
          "responseTime": 2668,
          "responseSize": 970
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 201",
              "stack": "AssertionError: expected response to have status code 422 but got 201\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:51)"
            }
          }
        ]
      },
      {
        "id": "865f57ca-bf50-4fe3-925b-4aba892e4baf",
        "cursor": {
          "ref": "eb2cd557-1533-4aad-8556-1dc60d2eaed0",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "b50b45ec-1093-47c8-8d33-944dffeb9972"
        },
        "item": {
          "id": "865f57ca-bf50-4fe3-925b-4aba892e4baf",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "bfb3e03d-7f2b-4763-8ea8-c473c2cda801",
          "status": "Created",
          "code": 201,
          "responseTime": 2689,
          "responseSize": 969
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:52)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:52)"
            }
          }
        ]
      },
      {
        "id": "3bc39aec-9778-4f92-8439-aff5dbc3ae6c",
        "cursor": {
          "ref": "42a345c2-d503-42d2-bfb2-8590ff9913d0",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "b3938035-ebac-4425-9601-806cfa5098cb"
        },
        "item": {
          "id": "3bc39aec-9778-4f92-8439-aff5dbc3ae6c",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "38de9d72-b39d-49fc-ac8f-931eb3f0b05b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba617fe9-09ea-4f3f-a2fe-a1b082b12f4e",
        "cursor": {
          "ref": "c3183561-89bc-4f2d-a084-4c4bf12c0979",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "03ba8a55-f70c-4e29-a0a7-5d243b37da5e"
        },
        "item": {
          "id": "ba617fe9-09ea-4f3f-a2fe-a1b082b12f4e",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "c6b8e2a9-e308-4340-a2f3-95f81c4661be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93498369-4426-4821-95c1-1c124992c638",
        "cursor": {
          "ref": "239fb08a-81d8-4a56-8f58-cd76e13861e3",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "d728e836-1f68-4979-bc01-89fcdad8c1dc"
        },
        "item": {
          "id": "93498369-4426-4821-95c1-1c124992c638",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "68b105da-2af7-409f-8b13-24c4b5a9d2f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e910557a-e6b3-4c4c-94b2-3338bdf36310",
        "cursor": {
          "ref": "b0d63de7-6ab9-4fb0-a6c3-5ec8be96379a",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "e60156ac-b55d-4d46-bb81-24122c01d559"
        },
        "item": {
          "id": "e910557a-e6b3-4c4c-94b2-3338bdf36310",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "f69b3e6a-c159-4fd0-9bd3-6a1e3fe2ea82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "583dbef7-da9b-4ae9-b154-39f702311d24",
        "cursor": {
          "ref": "abd36970-8eff-4c2d-b506-c9e04dc4608a",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "b55f5b01-7001-4bf6-8bc3-fab0234e0258"
        },
        "item": {
          "id": "583dbef7-da9b-4ae9-b154-39f702311d24",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "a3633cb0-70c4-49a2-be36-6966a01d4914",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81964d7c-46ba-40da-8e21-9d80a4eb2110",
        "cursor": {
          "ref": "a18144f1-e9a1-4448-b39f-19dd697e8b54",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "3eecd2f8-736d-4b2c-9a32-84a77c9a5553"
        },
        "item": {
          "id": "81964d7c-46ba-40da-8e21-9d80a4eb2110",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "07d0211b-b5d0-4c13-ab05-e3694811519d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 820,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a5b5539-4426-4bc7-a093-0b4fe8d355df",
        "cursor": {
          "ref": "7ec045e0-b509-4c4a-9f65-4b0b1e47a4ee",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "64769c01-b865-4f2a-a99d-61138c8e1268"
        },
        "item": {
          "id": "8a5b5539-4426-4bc7-a093-0b4fe8d355df",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "549cc25b-3cde-4e27-bb4b-a6525d5177ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89f11612-9146-4deb-90d7-0318ff358eee",
        "cursor": {
          "ref": "e582cb35-58d3-49a2-8e27-8e23c781aa09",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "c64ec51e-efde-4a6e-9b33-3e3ed49c1f38"
        },
        "item": {
          "id": "89f11612-9146-4deb-90d7-0318ff358eee",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "b4843db5-eaad-4d23-ae13-ca11ed5ba73c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53216a8e-9e13-4f45-b9b6-554803f654ff",
        "cursor": {
          "ref": "d7e18d7a-a750-4ef0-9d7f-52456c8ae713",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "cab3cb8c-3fea-4f0a-b0f3-14ad4490c12b"
        },
        "item": {
          "id": "53216a8e-9e13-4f45-b9b6-554803f654ff",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "56748c5f-8aa9-4318-814e-68b054234107",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f40f1630-1c37-4c95-8d64-b96f300e9fa3",
        "cursor": {
          "ref": "4d22d6f5-399c-4e9d-a750-779d248c71c6",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "df0a2cf7-0e29-41c4-b872-8ca3fa65da65"
        },
        "item": {
          "id": "f40f1630-1c37-4c95-8d64-b96f300e9fa3",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "5f8effa4-fa03-415d-aaf7-be52986f929f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f65f4463-b116-45e8-a47b-16eafecde3e7",
        "cursor": {
          "ref": "c76e021b-6b59-47aa-9230-454cbf31041d",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "9ad1e362-5131-401d-a219-f814f56bda50"
        },
        "item": {
          "id": "f65f4463-b116-45e8-a47b-16eafecde3e7",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "3cb82062-24b7-4b38-a9fc-0839697cb8af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "638d678d-5272-43f8-8b70-30fa96dd7d11",
        "cursor": {
          "ref": "4546068a-e78a-43cb-b635-5a6264e0073b",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "3d526509-9aea-4643-9666-ed864b72bee7"
        },
        "item": {
          "id": "638d678d-5272-43f8-8b70-30fa96dd7d11",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "e3beb796-3f09-487e-9a59-c3db4406f63f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30f6e6e6-62b7-48f9-9942-1e0f34207c50",
        "cursor": {
          "ref": "6503b9fc-9bb7-4b79-a61b-92ffe3ccc958",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "36627df8-86db-4545-b714-1c31d6eb2d82"
        },
        "item": {
          "id": "30f6e6e6-62b7-48f9-9942-1e0f34207c50",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "4c0d1b80-65c1-4221-99d4-2bbeda8675a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09cd7268-ac27-4964-bce2-c5c9da46fd1b",
        "cursor": {
          "ref": "c7f78ab6-a57e-4d89-982d-e88afd23c230",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "e1b6a4be-0e7e-4ad4-ad46-38ba476b044e"
        },
        "item": {
          "id": "09cd7268-ac27-4964-bce2-c5c9da46fd1b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "95cccf71-a519-4bbb-b0a4-aa27c485eee3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b3daf56-459c-488f-9188-d579b40b919d",
        "cursor": {
          "ref": "699463aa-fefc-49f8-a296-5b7f7c393423",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "0f5f4dc9-22bc-43f0-a836-8e9d426b9bb2"
        },
        "item": {
          "id": "8b3daf56-459c-488f-9188-d579b40b919d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "5527d1ea-473c-4107-82a4-c143244a39e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7890ac94-1173-4d31-9502-949e8b70029e",
        "cursor": {
          "ref": "c6b035c7-0d64-4dfe-8cdb-a7a352ee61d1",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "8db6eefb-709c-4a13-b1d8-ec87842829d5"
        },
        "item": {
          "id": "7890ac94-1173-4d31-9502-949e8b70029e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "2cd2371b-779b-49bb-9c94-b106b5c1b7a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e125bddc-9508-436b-adb7-143bd3517cf4",
        "cursor": {
          "ref": "18874c0f-46aa-4bcc-9112-56b7a3970ff2",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "3332c60e-e2a7-470a-b924-3aa82efd6586"
        },
        "item": {
          "id": "e125bddc-9508-436b-adb7-143bd3517cf4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "e5a759bf-534f-4256-95a6-dac983ecb86d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd19c585-fcf7-4d3a-be8f-942af74edaed",
        "cursor": {
          "ref": "d1f5f031-9384-4885-a4d6-5a3c1989e3ab",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "9a295233-f8ab-4490-980d-f1a9952a1e18"
        },
        "item": {
          "id": "cd19c585-fcf7-4d3a-be8f-942af74edaed",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "7978e193-4aaa-46f4-9ec4-29a234a7894f",
          "status": "Created",
          "code": 201,
          "responseTime": 2444,
          "responseSize": 978
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:70)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:70)"
            }
          }
        ]
      },
      {
        "id": "bf21fbf2-9ef6-4237-ab85-bab2678496eb",
        "cursor": {
          "ref": "1ef25208-d3ba-4db6-8b72-4dc79a9bee32",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "32e3b26e-cc2d-482a-badf-ba436bac0920"
        },
        "item": {
          "id": "bf21fbf2-9ef6-4237-ab85-bab2678496eb",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "28b5ad55-d8b0-46b1-9506-6bfa5c11e262",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b38a951-c116-4fc4-b162-af1b0cca93d7",
        "cursor": {
          "ref": "87568ff9-e833-4a09-a5c2-46a354ef61e6",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "e6b45b67-9271-4be1-9e4d-2092767faedd"
        },
        "item": {
          "id": "2b38a951-c116-4fc4-b162-af1b0cca93d7",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "30f469cd-09f0-4042-83a5-3598c86c84f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "444bfde1-e94a-443f-b004-cb30c3976724",
        "cursor": {
          "ref": "589d85d1-a280-4b14-8b43-8dd29e2014c0",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "aa95b82a-cd1f-456b-9970-30cebcf52d7d"
        },
        "item": {
          "id": "444bfde1-e94a-443f-b004-cb30c3976724",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "95842dc9-c632-44e5-91f1-6a542221ba5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fca15f49-4759-4b4e-b33a-772ec2c785d7",
        "cursor": {
          "ref": "bd6f11cd-c97b-4c25-8460-3202c3141bcc",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "9e9ef9dd-92c3-4eed-8f41-25b2254c3b51"
        },
        "item": {
          "id": "fca15f49-4759-4b4e-b33a-772ec2c785d7",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "e5bc0631-deb5-4861-b8d2-d4d93db8a549",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce214d4b-756e-4978-ac88-3e597d76adcf",
        "cursor": {
          "ref": "f8796d9c-52a5-4be2-ab58-d0adfa57cd4e",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "ffbccfdb-75b7-442a-859d-6cd7683135dc"
        },
        "item": {
          "id": "ce214d4b-756e-4978-ac88-3e597d76adcf",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "80ae1d53-4c8f-41a1-946d-4cb8929ebe67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53e5ceca-b142-452c-b429-7c6cfe6cca15",
        "cursor": {
          "ref": "a3d52e8e-1a9f-4317-9229-66bbe7593285",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "b03aaa79-01b1-40ef-977a-8f4c42fb1e82"
        },
        "item": {
          "id": "53e5ceca-b142-452c-b429-7c6cfe6cca15",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "b2add924-b10a-4a55-ad88-51fd6e7c6dad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85915982-4d40-4e2e-8072-443dcc148645",
        "cursor": {
          "ref": "109503d1-31c0-4bae-a829-c215a568b1d8",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "8c7c0e54-84e5-47c4-aecd-2466d3458b9b"
        },
        "item": {
          "id": "85915982-4d40-4e2e-8072-443dcc148645",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "1154aaf9-f09d-450b-9ee5-4f3fcf9d5092",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16b78109-1bb3-44ed-8ebe-f973bf116259",
        "cursor": {
          "ref": "569cb551-7ae6-4fb3-97d4-1404631d15e1",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "133b67b7-60bb-426b-8eaf-02e32e67bbeb"
        },
        "item": {
          "id": "16b78109-1bb3-44ed-8ebe-f973bf116259",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "804a997a-2273-410e-a120-e7e237ca7b5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa13ea06-a4a1-4836-807a-76b538a15995",
        "cursor": {
          "ref": "5c42e3b1-c6de-40cc-960d-dd0dc773489d",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "16f4c419-e136-404b-a426-2e727e3b8e0d"
        },
        "item": {
          "id": "fa13ea06-a4a1-4836-807a-76b538a15995",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "770f5753-a639-4641-b511-6d5cf02d7192",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5f309f1-9c6f-44b2-b5d3-35d37f33e27b",
        "cursor": {
          "ref": "bb88d230-6acb-4a70-9083-aa4779928d38",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "aa91cdce-fe96-44d7-bbb9-01a47be630e4"
        },
        "item": {
          "id": "f5f309f1-9c6f-44b2-b5d3-35d37f33e27b",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "25a696ac-3403-4567-9c3e-e03e89e60218",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "656a1d8c-091e-4e2c-a142-830a020f08cb",
        "cursor": {
          "ref": "cf9784d6-ed73-4388-9734-a55186250d53",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "f4cca700-723f-4caa-bc0f-11bf3fe0f56a"
        },
        "item": {
          "id": "656a1d8c-091e-4e2c-a142-830a020f08cb",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "d7b5438e-145b-41c0-85c3-ebd14fc2042a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ced24e1a-c25e-4702-9aed-2a8a333dbd7b",
        "cursor": {
          "ref": "ce545dff-5752-4433-a1c8-f0d711411e68",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "d51b31ae-7dbf-494e-a416-862d088c3e69"
        },
        "item": {
          "id": "ced24e1a-c25e-4702-9aed-2a8a333dbd7b",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "c9c18c62-54ae-4684-9bea-79dcce34d127",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3163b897-d333-4c47-8603-c712d625a5d6",
        "cursor": {
          "ref": "173de024-18e2-4321-80f0-fad39b388dee",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "0ac1b457-b4f1-458d-8f1c-532b4a17d6fc"
        },
        "item": {
          "id": "3163b897-d333-4c47-8603-c712d625a5d6",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "a2d0d285-e12e-44e3-91fe-c9a7aad36033",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a84ceb4e-e20d-49da-b66b-8a1a7b0deb0c",
        "cursor": {
          "ref": "f8a13f32-71c9-4682-aab7-9c00721b08f3",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "69839521-6053-49fc-a2c7-2ad5637b9c1d"
        },
        "item": {
          "id": "a84ceb4e-e20d-49da-b66b-8a1a7b0deb0c",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "e293d4fc-2078-452b-b05d-f24addfe0cf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1dc8d7f-f927-40a4-9164-69d24cb31941",
        "cursor": {
          "ref": "c495d64f-7a72-4676-a054-6a560735ffc2",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "81bd0c31-a40c-479a-9f62-700c86786dba"
        },
        "item": {
          "id": "b1dc8d7f-f927-40a4-9164-69d24cb31941",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "1000745e-7556-4efb-98eb-9de14e872346",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "820ca13b-b143-476b-b2d8-4dd7f5048185",
        "cursor": {
          "ref": "835f898d-b98d-4776-81b7-fc0f93988e97",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "b7291a0d-3212-428e-a6de-7594f1b44567"
        },
        "item": {
          "id": "820ca13b-b143-476b-b2d8-4dd7f5048185",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "17c51336-c5dc-41cd-8bd9-d0ff9aa41333",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2dd8d0e-45a1-4811-9de1-ea2621681eae",
        "cursor": {
          "ref": "54206d14-2182-4e38-8e1e-63013739e880",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "beb893e4-2c62-4d04-a128-9b58ef759fc3"
        },
        "item": {
          "id": "c2dd8d0e-45a1-4811-9de1-ea2621681eae",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "2f63d377-64fd-4f63-9992-23df3c8938cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dad34a28-e854-4673-86fd-e5f81f8f4384",
        "cursor": {
          "ref": "124933e9-41d6-4113-8bbf-08aa2e04c111",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "b00ac77f-6613-40f1-bc15-91e16cd51170"
        },
        "item": {
          "id": "dad34a28-e854-4673-86fd-e5f81f8f4384",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "0cba920b-66f4-46fd-8a96-39ea64194b1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68fadc76-f8f4-4c79-8d01-af6a770c884d",
        "cursor": {
          "ref": "05624fa9-9798-4616-95ae-bb0e4068b590",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "74025bfc-d2c2-4981-a07e-fcc85b348618"
        },
        "item": {
          "id": "68fadc76-f8f4-4c79-8d01-af6a770c884d",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "9b6f4921-a45f-486e-9065-e8daec198fef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf93eded-2e06-4a7f-a0d1-db64f26d7dcb",
        "cursor": {
          "ref": "4a6318d1-f2f5-4595-8565-36c2b098ee35",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "4e3e698f-1007-468c-886e-3865b4662f01"
        },
        "item": {
          "id": "cf93eded-2e06-4a7f-a0d1-db64f26d7dcb",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "68a023a9-84f0-41e4-b9d1-736bdb8044ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f46e6381-8bc6-45d1-b7e1-b6cdb183edd9",
        "cursor": {
          "ref": "34c24629-e5fb-44c3-9c7b-aaee21b39a24",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "13b400d7-f580-4672-9c27-e99a67c93128"
        },
        "item": {
          "id": "f46e6381-8bc6-45d1-b7e1-b6cdb183edd9",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "5c1ae2a3-1529-4449-b4d4-ffe61ab40fad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9224cc0e-8c0a-4502-a43a-f29ccd6af2a7",
        "cursor": {
          "ref": "5fcc3061-04b3-47e8-93e4-469c5a559b17",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "322983bf-579a-4aaf-9b8f-fdff847cde79"
        },
        "item": {
          "id": "9224cc0e-8c0a-4502-a43a-f29ccd6af2a7",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "d7b64bd7-e805-407a-9dfa-fa838c3d281b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd4aa063-2b5e-40ef-9554-0afdd6babbe1",
        "cursor": {
          "ref": "e37a8858-11aa-42be-8530-d41fc6ab7799",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "7178e365-a36b-407a-ad72-2d0ddcdf4a69"
        },
        "item": {
          "id": "bd4aa063-2b5e-40ef-9554-0afdd6babbe1",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "2c973188-a179-4aad-886d-e8e18662f97e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5afe94a8-d06e-4bf1-8755-deaec67b0559",
        "cursor": {
          "ref": "2125231d-b042-47c8-a019-1a4463728eb7",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "9c3b7a65-4509-4f5a-8de4-83bea1751bc9"
        },
        "item": {
          "id": "5afe94a8-d06e-4bf1-8755-deaec67b0559",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "6b6d50d2-9302-4008-97b7-43f4fe8c1cc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b687b202-1be4-4a52-8297-423822318b09",
        "cursor": {
          "ref": "de2b4c5b-1544-4e6d-bb3c-a456f1b1da5e",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "c44d0111-5095-48f5-93a4-61c88b64a6b5"
        },
        "item": {
          "id": "b687b202-1be4-4a52-8297-423822318b09",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "d4309199-34d2-4f46-b128-c6fbf071d48d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd461bb2-c274-4665-a389-bd449740aafe",
        "cursor": {
          "ref": "e7001abd-2c2a-4f02-bf31-cf69ceea6f19",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "d4cfc49e-8d41-4bea-b9a2-04b2aa23de86"
        },
        "item": {
          "id": "bd461bb2-c274-4665-a389-bd449740aafe",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "81da2f24-7c76-4cc4-a35f-a6b8a3fa05e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14befafc-82a3-4e3b-97a8-b513e7b6c307",
        "cursor": {
          "ref": "bfcece32-3ec9-45fa-8c63-8dde59788fff",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "96b4a2ad-6cea-460b-b9b5-d2ff98664e5e"
        },
        "item": {
          "id": "14befafc-82a3-4e3b-97a8-b513e7b6c307",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "7752a3f7-c627-4a6e-8761-9904e1490d82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9f9564c-46c0-49b6-851f-5b79ccc5c4d6",
        "cursor": {
          "ref": "ff9c9e79-020f-4223-9d91-80c98496325b",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "e08a5394-f9bb-4b39-8ead-b5b3d0fd13e9"
        },
        "item": {
          "id": "d9f9564c-46c0-49b6-851f-5b79ccc5c4d6",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "5f10711d-4656-4583-b27a-428418827ba4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85545a5b-2f80-42f9-aa59-27de979cf58f",
        "cursor": {
          "ref": "a7ab854b-f9a7-4ca3-bf19-612e02ed565b",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "f3c5f60f-bdca-49c5-9bf1-a9399b28a23f"
        },
        "item": {
          "id": "85545a5b-2f80-42f9-aa59-27de979cf58f",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "efbecb29-f71f-426c-a984-bab8141530e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a42ed9b9-93ce-476a-828c-162b5977a3f0",
        "cursor": {
          "ref": "30fc58fc-7579-44e6-a086-edc6d0b7056a",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "1bb7351e-3fa0-436a-96fd-65985c25dfb8"
        },
        "item": {
          "id": "a42ed9b9-93ce-476a-828c-162b5977a3f0",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "b710746b-f3e0-4ac9-a0be-2cdcfa37d739",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3894507f-27b2-4b46-b9da-20706e913430",
        "cursor": {
          "ref": "917a2bee-f23b-4e5e-a307-fd0f0699aaa2",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "c898f5b0-2234-4b30-9797-12447f3ebe7f"
        },
        "item": {
          "id": "3894507f-27b2-4b46-b9da-20706e913430",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "f6a15d39-1690-41ae-8896-02c61906d561",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 21,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2522d2c1-383d-4d9f-9b44-ba0fc8d0c6d7",
        "cursor": {
          "ref": "01d27f59-94d2-4ae4-86cb-2b67e1c6ac42",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "1440224a-01c2-4199-9488-020204c0a036"
        },
        "item": {
          "id": "2522d2c1-383d-4d9f-9b44-ba0fc8d0c6d7",
          "name": "credentials_issue"
        },
        "response": {
          "id": "fd722cdf-3634-42ad-b697-2557e9b6f20e",
          "status": "Created",
          "code": 201,
          "responseTime": 2421,
          "responseSize": 970
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bcfb32e-17d9-442b-b9cf-6907ca135bad",
        "cursor": {
          "ref": "f0da8d55-1a34-426f-94da-4e5a5e019c2a",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "15d1d808-3e51-40ed-aaa6-556e960c62cc"
        },
        "item": {
          "id": "2bcfb32e-17d9-442b-b9cf-6907ca135bad",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "7bbbc16f-cd0a-41a4-91f1-429eefc5e184",
          "status": "Created",
          "code": 201,
          "responseTime": 2607,
          "responseSize": 985
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "50e3cdc6-10c8-49f5-9efd-9da3db611fec",
        "cursor": {
          "ref": "938adc60-e159-4e90-947c-0e8c5cbc529a",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "19a59173-bd20-4982-9cba-8456337b6d81"
        },
        "item": {
          "id": "50e3cdc6-10c8-49f5-9efd-9da3db611fec",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "2da6207f-3b46-4d32-96ca-ecbdf5873e28",
          "status": "Created",
          "code": 201,
          "responseTime": 2613,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "113c5d91-1626-45a5-909d-2aee3f61abd4",
        "cursor": {
          "ref": "fb4517bf-02ac-46ee-9f11-2c31ae212743",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "7ef786d2-6adf-4ca7-8944-9ce35bcd304a"
        },
        "item": {
          "id": "113c5d91-1626-45a5-909d-2aee3f61abd4",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "6e864439-c44d-4a3a-9b0b-8eb4c5f5588e",
          "status": "Created",
          "code": 201,
          "responseTime": 2493,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "53ae2c4b-23c2-4f71-8b81-06292e7e9fc6",
        "cursor": {
          "ref": "683418af-4bad-4d51-af03-ddcd0420b139",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "bf838e4c-c4ae-4452-9a38-397e03a8babb"
        },
        "item": {
          "id": "53ae2c4b-23c2-4f71-8b81-06292e7e9fc6",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "7b45c1a6-25d7-40a0-b29d-68a0332462eb",
          "status": "Created",
          "code": 201,
          "responseTime": 2831,
          "responseSize": 970
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2023-07-29T00:39:05Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2023-07-29T00:39:05Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "49ba7e24-6dee-44b7-867e-b6004eccaa14",
        "cursor": {
          "ref": "6a544eb0-6084-4b49-a57e-996d29a0798e",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "f969be6b-74e6-49a6-ae50-505976d859ce"
        },
        "item": {
          "id": "49ba7e24-6dee-44b7-867e-b6004eccaa14",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "a8d8b260-e37c-435e-8900-4587fe79e4ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "0985f25e-30c7-465b-9d78-a22e3d71ea09",
        "cursor": {
          "ref": "df8c2b71-203c-4327-8730-dfd70cf7cfb1",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "34ea76ac-c0c3-4073-87eb-7561a4b28190"
        },
        "item": {
          "id": "0985f25e-30c7-465b-9d78-a22e3d71ea09",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "c8511a1f-20ed-4f22-8622-14df7400c165",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 142,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2320a91-27c2-422b-9a8f-b16a597205ba",
        "cursor": {
          "ref": "412d3f20-dd42-4b32-8dc2-eb281a7e92fb",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "9818dff6-c5ab-46c3-aae4-3da55cd3f063"
        },
        "item": {
          "id": "c2320a91-27c2-422b-9a8f-b16a597205ba",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "a126ba3d-caff-4537-a692-639c5ca24a86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77f5f93a-7964-4b76-a9a8-e54e3bbb560f",
        "cursor": {
          "ref": "c88ce18f-13b7-4e42-b904-dc7de52fcf5d",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "b9840752-b6d4-4af1-a340-90c717f2511b"
        },
        "item": {
          "id": "77f5f93a-7964-4b76-a9a8-e54e3bbb560f",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "c58d893c-114a-40fc-b509-64c6bb026a8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 154,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "298b3aa2-654a-45bb-a25d-a405f4a39bfe",
        "cursor": {
          "ref": "1fcc99bf-e349-4b21-901e-fa108676ffd5",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "295e06ec-1428-4645-b269-fbe81dd0cb1a"
        },
        "item": {
          "id": "298b3aa2-654a-45bb-a25d-a405f4a39bfe",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "827d5b4b-162d-4f95-b06e-4d40b4f02e3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 195,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02666f65-7a9c-4218-9605-f1e5a4a4c53c",
        "cursor": {
          "ref": "a95924f0-9f47-4e19-9705-70d005bb160e",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "11719c6f-ae64-4b9b-98e6-1a53d66e64eb"
        },
        "item": {
          "id": "02666f65-7a9c-4218-9605-f1e5a4a4c53c",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "0793d053-5ea9-4c03-8407-3e167964af95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 150,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10ed7bc9-f13e-467a-a830-364f7bd30fe9",
        "cursor": {
          "ref": "e740bcda-c334-45ab-a64b-7cf2d457ba10",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "8d84e9bd-eafa-4058-a1d3-02d3815c12bb"
        },
        "item": {
          "id": "10ed7bc9-f13e-467a-a830-364f7bd30fe9",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "1c46bdc3-8888-4955-a6b1-21aead3ed3cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb9090e8-e3e7-4f80-aef6-476a04ab1301",
        "cursor": {
          "ref": "b63774fb-32d5-452a-9a76-f580d620a7e0",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "3c1de642-e572-4559-9b3e-2b2e86cb343c"
        },
        "item": {
          "id": "fb9090e8-e3e7-4f80-aef6-476a04ab1301",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "ab7138c2-ca3c-48c9-81a1-2086f94d43f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4baaaaca-52c3-4e03-a173-27bff67cf076",
        "cursor": {
          "ref": "3bbd7a95-6ecc-41a5-820c-04ffeea94bc1",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "d6dbb66c-d086-41bf-8087-ea44dd38d5f5"
        },
        "item": {
          "id": "4baaaaca-52c3-4e03-a173-27bff67cf076",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "9b8354c9-fa03-4c1d-b6fe-8b404f778e00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52b91cca-2898-4224-af83-5d4b8c7f7233",
        "cursor": {
          "ref": "9818c47e-2ed3-48a2-8d04-e772f477b653",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "b54783d7-1d25-4c14-84f9-86aca8454173"
        },
        "item": {
          "id": "52b91cca-2898-4224-af83-5d4b8c7f7233",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "0e92b23d-633a-4a4d-bd2f-2931f8d323b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8b1c8b9-6754-4890-885e-a8d3254db077",
        "cursor": {
          "ref": "a73089ff-75a9-4aec-a563-4b1ad0abd81c",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "06c07dfa-d62b-48c1-a272-c9677da9cf24"
        },
        "item": {
          "id": "f8b1c8b9-6754-4890-885e-a8d3254db077",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "e53ec402-6bdd-4aa0-b935-071fcc62ce5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44e5c483-1e34-45e0-8cbe-cffe555925df",
        "cursor": {
          "ref": "c963d46d-1fd4-4285-b29d-7c61e5760fcc",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "6897439a-14cb-4d49-a626-98d1e2cb3343"
        },
        "item": {
          "id": "44e5c483-1e34-45e0-8cbe-cffe555925df",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "cff8cb19-6338-4e28-89e6-d76fd3bc206f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc121a98-2836-44d3-b922-587ac685cff6",
        "cursor": {
          "ref": "40f38128-b6d4-4974-9637-c391a2da79cf",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "75987306-d613-416a-b0f0-9c7b37496046"
        },
        "item": {
          "id": "dc121a98-2836-44d3-b922-587ac685cff6",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "66803d29-b8dd-4ac0-9e0e-faaf4a0a5a6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bc8acb4-e8c5-434e-bdf6-194671209572",
        "cursor": {
          "ref": "6190cd27-b691-4f5c-a695-decc56729746",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "7f19aff5-acc1-4e9a-81ce-fe2663d6d640"
        },
        "item": {
          "id": "9bc8acb4-e8c5-434e-bdf6-194671209572",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "66065d9e-f497-4325-9d44-a5836aa9df24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dd9d988-6f49-46b7-96e0-6e903b992910",
        "cursor": {
          "ref": "6910c61b-deff-48b6-b9d1-7ec4dc6154f3",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "f19b7f5f-5eeb-47ee-ad68-273fffde3e57"
        },
        "item": {
          "id": "2dd9d988-6f49-46b7-96e0-6e903b992910",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "ec43de0b-18a4-4bce-8731-c0aa9f4593df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "276be937-4f9b-45ea-9b28-de523647d27a",
        "cursor": {
          "ref": "f9264b5c-a184-4c85-b45a-2d2e945c27ae",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "a3e91277-ab0d-4476-bebc-97b7aafe88ba"
        },
        "item": {
          "id": "276be937-4f9b-45ea-9b28-de523647d27a",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "7d0f3c44-aa5a-4d2d-b8f1-997f6005ca53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fce7f545-a8dc-4563-934a-ef115a25beac",
        "cursor": {
          "ref": "c15df586-4208-4ee2-a43c-776865aa95b9",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "6ec697f7-5df6-4c5b-af09-c8ae2589c772"
        },
        "item": {
          "id": "fce7f545-a8dc-4563-934a-ef115a25beac",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "2e06bb95-b4b8-4266-91a0-6b9ad33c0876",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53cf03f3-c801-41aa-abce-3ad97651001d",
        "cursor": {
          "ref": "9a69a0e9-fdb1-4e7b-9a87-6d8493eeecdc",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "1a7cf970-dd17-438a-b07f-d44b09266b46"
        },
        "item": {
          "id": "53cf03f3-c801-41aa-abce-3ad97651001d",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "5f40def2-95c2-4a71-b3a0-e39071c16d33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c50a38a-f9de-4b57-801d-115834e3096d",
        "cursor": {
          "ref": "d54d2adc-aa13-4eaa-a1bb-6ac12068a171",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "20393fb0-05a9-47bc-b3df-b34e8af66871"
        },
        "item": {
          "id": "0c50a38a-f9de-4b57-801d-115834e3096d",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "07d260cf-acd1-4a84-921f-58017a94d3e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08b8f114-f102-4838-840e-194651fef1cf",
        "cursor": {
          "ref": "f01794bb-3ee5-4989-b96e-15d69fb5a109",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "00e2ff93-ab5e-4c14-9b2c-0e3bf8cce060"
        },
        "item": {
          "id": "08b8f114-f102-4838-840e-194651fef1cf",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "d60abed0-948d-4d94-a2be-6bb3386be49b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2316da1f-e3b6-4104-97ab-93acf64dccae",
        "cursor": {
          "ref": "1f9c0ba8-cd9b-47d9-9715-2d7d99c662ff",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "b6e71262-7b8f-4aaa-b1d5-e9600bd0b902"
        },
        "item": {
          "id": "2316da1f-e3b6-4104-97ab-93acf64dccae",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "e2152a34-4ef2-4b0e-a51b-9a800857eccd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dd3837a-60fb-4b57-a704-3d624c44c1c2",
        "cursor": {
          "ref": "d315e877-20f0-48bc-ae53-070af0b99f16",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "03ec296f-95e7-47f6-a27c-26867c5e9f87"
        },
        "item": {
          "id": "9dd3837a-60fb-4b57-a704-3d624c44c1c2",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "268c1a8c-42c5-401c-b0d4-08feb5ec0c3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44a97183-c985-4e92-98fe-6f8532a5ac3d",
        "cursor": {
          "ref": "53b51ead-0f7f-429f-a7ab-2e27712f3296",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "65d8c44b-bbdd-42c4-845f-c2830ac56617"
        },
        "item": {
          "id": "44a97183-c985-4e92-98fe-6f8532a5ac3d",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "8bc1fe21-e5e2-4bb5-82e3-2cda901fb7b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a88614e-2430-4ce5-a2cb-310a294411df",
        "cursor": {
          "ref": "aa5eafc5-4929-4a1d-883c-828cf727f952",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "26cb10c6-a260-40a5-ba10-4a6bbc3ab7fa"
        },
        "item": {
          "id": "6a88614e-2430-4ce5-a2cb-310a294411df",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "5c5f7903-a040-4b9b-98c6-e5800d1e0dd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbfa112d-1e45-4045-8a27-2425205fd0a2",
        "cursor": {
          "ref": "b453b732-a659-452f-969f-48387c117566",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "00a8c126-1923-4267-b46a-574f456f7b9a"
        },
        "item": {
          "id": "fbfa112d-1e45-4045-8a27-2425205fd0a2",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "eaf7318c-fab2-4923-95c9-c10ba1b94b3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b34f9b0d-9d48-4011-bdcc-61624d6ce356",
        "cursor": {
          "ref": "59fbb347-e989-4612-9bd7-ea64cfc8c176",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "d2fd4d7d-2088-4c8f-8155-ed40f89b1948"
        },
        "item": {
          "id": "b34f9b0d-9d48-4011-bdcc-61624d6ce356",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "0fdc046b-7904-45af-85b7-42427d1181aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bff0467-e5bc-4976-920c-1a78af930a47",
        "cursor": {
          "ref": "43f7714b-dfb2-46be-b18b-81239c92d675",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "f6c9c9e7-f4a2-4285-9b9f-3e253738e1c9"
        },
        "item": {
          "id": "5bff0467-e5bc-4976-920c-1a78af930a47",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "6f72b87d-931c-44e9-a35f-b4af00feb1ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6300f022-bdc5-4b4a-9a31-806dfa432dc6",
        "cursor": {
          "ref": "b9af209c-216a-424c-a43d-169e994cdaed",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "e6b79c97-8057-43f5-bc49-6c90a1263fb2"
        },
        "item": {
          "id": "6300f022-bdc5-4b4a-9a31-806dfa432dc6",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "e8009680-e979-4183-857c-f0b1b1e7db1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aa2a9a4-025e-4e59-b0fc-147decb3b597",
        "cursor": {
          "ref": "1f3510cb-d1a3-41ba-92a9-1962dc02cb5c",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "15cc1cab-d46a-4d42-b18b-3a059490253b"
        },
        "item": {
          "id": "2aa2a9a4-025e-4e59-b0fc-147decb3b597",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "f9788bb7-d729-449b-8e7e-caf47a9b81a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b86f74c-06a3-43d5-96ae-e5027cc0b17f",
        "cursor": {
          "ref": "6bfe0320-091a-45d7-abfe-f1a1089a8eca",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "5d9e57ef-cc64-4f91-9318-09515209545b"
        },
        "item": {
          "id": "0b86f74c-06a3-43d5-96ae-e5027cc0b17f",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "187b69d0-ad37-41c7-8ed1-e1c14ba6612f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7781c07-641b-46ad-b2fa-7c77a46addbc",
        "cursor": {
          "ref": "0dc35c4e-51fd-4237-8b1e-4d9fa1c572f7",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "534bc182-bc06-4170-8613-e0a9dc690278"
        },
        "item": {
          "id": "d7781c07-641b-46ad-b2fa-7c77a46addbc",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "bb649d9a-554a-46f4-a6c1-78f34282b7bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8641e58-6c58-43d7-9095-5715e84ffc51",
        "cursor": {
          "ref": "4a17ae01-403e-4a2a-9aa7-eee0e57f1740",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "8b02c25c-5a3f-49b5-a4bb-0f4d82c555e7"
        },
        "item": {
          "id": "d8641e58-6c58-43d7-9095-5715e84ffc51",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "1cd0a92f-0562-4a57-ab83-ca5cfbe195f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92db992f-6ef9-4ef4-beec-b3e049c1cdb5",
        "cursor": {
          "ref": "fb0ada5d-baec-4476-a051-6e09a1f61329",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "a316f605-9c95-45eb-9b37-4d33d58599ad"
        },
        "item": {
          "id": "92db992f-6ef9-4ef4-beec-b3e049c1cdb5",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "276bc07a-791e-427e-a8c6-d2973b59976b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91cc855a-9d99-4481-bcd9-0671fb5835f0",
        "cursor": {
          "ref": "2d83c16b-6531-4dda-83d3-150155ede6c7",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "9255e9bf-a9f6-4e15-8c24-7fc11c51810d"
        },
        "item": {
          "id": "91cc855a-9d99-4481-bcd9-0671fb5835f0",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "d22b1276-fe66-44c2-ac93-5cfc5de2dd89",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 20,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d4bcfb0-bd6b-4160-9721-93113dc4ffaf",
        "cursor": {
          "ref": "ad1d2bab-d193-429a-903a-ed295c9fbceb",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "2eeeed66-0267-4dce-ba43-f30f4ec23f71"
        },
        "item": {
          "id": "5d4bcfb0-bd6b-4160-9721-93113dc4ffaf",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "5a25869f-26a1-4c15-bf7d-690437526834",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40cb8956-dc9d-4a2f-a9b4-abd76e5d39ab",
        "cursor": {
          "ref": "afce56d1-3a3f-4975-8aa8-a4f45f1ce42c",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "a593a879-9bdd-482a-a9c6-3c520e6e7835"
        },
        "item": {
          "id": "40cb8956-dc9d-4a2f-a9b4-abd76e5d39ab",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "4b1ec0ed-5195-4913-8a44-a5a16390abfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50f27a90-5334-4d3d-b3e5-a7e345782d13",
        "cursor": {
          "ref": "79518b36-cb22-4434-a996-cb12daf0d833",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "4a457b80-cb0e-4ef6-9ca2-f205340d23a9"
        },
        "item": {
          "id": "50f27a90-5334-4d3d-b3e5-a7e345782d13",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "840d052c-4857-404e-a621-c5ce30464ca3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cadf559-5998-436a-a1cd-f5f58249ec44",
        "cursor": {
          "ref": "1238ad05-1b45-41ca-8593-8d066fad791d",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "f9381e51-6bb8-4b6e-9754-7ef99c49de12"
        },
        "item": {
          "id": "0cadf559-5998-436a-a1cd-f5f58249ec44",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "2bb47935-92c5-4858-a3e6-62a165bf9a50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2330372-4273-4d1f-b922-ac476af19243",
        "cursor": {
          "ref": "df7f3602-611e-4e87-9304-29cab907a555",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "ecd41ab5-1b4b-4c8f-9b10-b4aff3d80abf"
        },
        "item": {
          "id": "e2330372-4273-4d1f-b922-ac476af19243",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "330cf435-917f-4569-b725-7e2f5258ed18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5e167c1-a754-44e5-8237-3d4a32a95f7d",
        "cursor": {
          "ref": "506de58b-0650-4e2a-8190-191afa4349ab",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "9192ba20-6813-4c5a-9ceb-ad445eae5de7"
        },
        "item": {
          "id": "b5e167c1-a754-44e5-8237-3d4a32a95f7d",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "ae975749-ea40-4d6b-93c8-1acb25058a49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2924da5f-9506-4334-8e4e-9efd84e49ee4",
        "cursor": {
          "ref": "3835813a-6521-4210-9838-469a6a21e9e3",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "c82930be-a76f-45e3-b23f-2cdc0529e397"
        },
        "item": {
          "id": "2924da5f-9506-4334-8e4e-9efd84e49ee4",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "79b442bf-cb40-49ac-9d9d-5e1c278a926d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc8af084-380d-4599-bd87-72dcb41128ad",
        "cursor": {
          "ref": "0f1274a3-afef-4d7e-92d8-d97ac0ee5528",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "fe155a81-d6ea-4aa1-afe3-eeb65ec771c2"
        },
        "item": {
          "id": "dc8af084-380d-4599-bd87-72dcb41128ad",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "01cc624b-a162-492f-81ce-e7eb69dcc26a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6e3121b-6d58-4432-ad55-56f84e13f5b4",
        "cursor": {
          "ref": "174845e5-58d0-46d2-bcd4-419a3ea9ef37",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "2e7522de-61e5-4ab9-8ccb-a17a20eb1c72"
        },
        "item": {
          "id": "a6e3121b-6d58-4432-ad55-56f84e13f5b4",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "85a014a7-74ad-4b8f-a5c2-94268531378d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85f17634-4779-4745-919e-8fa6faf427bf",
        "cursor": {
          "ref": "b8af256b-b029-4abd-9547-58d1c88f073c",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "157cd7df-b778-4eb5-aa2e-340fd4234dee"
        },
        "item": {
          "id": "85f17634-4779-4745-919e-8fa6faf427bf",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "cc768b2c-1172-4369-af1c-192e3deebe58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcd276e1-43c3-45a8-ab59-b410738aa297",
        "cursor": {
          "ref": "5b15d7d8-a2b2-4ccf-b4e3-bec7b4620811",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "02c17119-c2f1-45d4-8440-098edf6858db"
        },
        "item": {
          "id": "bcd276e1-43c3-45a8-ab59-b410738aa297",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "35d1ca27-3c0c-4c72-8f09-641b67de877f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e197d6eb-624e-4e55-811b-6795d2b9b7cb",
        "cursor": {
          "ref": "e907bb2f-199e-499a-9916-fa5512fb9bb1",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "a2030279-9468-4662-983c-7a942a00cc42"
        },
        "item": {
          "id": "e197d6eb-624e-4e55-811b-6795d2b9b7cb",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "f57a3bcd-4be0-4218-95f2-6976605e8bc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05612589-1f2e-4e9e-b4b3-e3c3651354d4",
        "cursor": {
          "ref": "7ad47fd9-5e09-42c5-9562-ff34896122b6",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "75efeed1-c66d-4a7d-aa56-495c02089359"
        },
        "item": {
          "id": "05612589-1f2e-4e9e-b4b3-e3c3651354d4",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "66543df5-3952-4ffd-8850-fefcca24936c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b287bbbf-06c1-4d1e-96f0-9b9b256a5ec1",
        "cursor": {
          "ref": "f8d3a3b2-100a-4ec3-9250-6c3ddc2bfe1a",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "d5d3f151-f3c7-47e9-b72b-b50e46ed3bcf"
        },
        "item": {
          "id": "b287bbbf-06c1-4d1e-96f0-9b9b256a5ec1",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "bcf0e675-5a38-4d93-8228-1cb2afd9f673",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30ca714d-3ff9-47fd-aa44-e99ee780f94a",
        "cursor": {
          "ref": "a171901f-fe74-49b6-a9f4-d823b1c65c57",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "d1c10b7c-1890-4b65-8b9d-8fd8a197f721"
        },
        "item": {
          "id": "30ca714d-3ff9-47fd-aa44-e99ee780f94a",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "6d28683c-c3d4-457d-b932-86c4addf4cff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfd3175e-b417-4e83-919f-c927896bb8df",
        "cursor": {
          "ref": "24abff92-21f4-4cf6-8b9d-8dedfb084105",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "feccdbee-b2b5-4a82-ada9-4857a091c0e3"
        },
        "item": {
          "id": "cfd3175e-b417-4e83-919f-c927896bb8df",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "19f87603-1d63-426e-9817-3040a95d822c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c676f19-397b-4dda-8f03-ef068e4b9f51",
        "cursor": {
          "ref": "5c43dce1-e38a-4adf-bf6c-e6e1fbc2b8a8",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "fe6718f6-9d4a-4254-96d8-c7448cbc8df8"
        },
        "item": {
          "id": "0c676f19-397b-4dda-8f03-ef068e4b9f51",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "12c645c6-e30b-4d87-8e24-e74414eaf5f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be2d2584-1f70-4c07-8c28-63ba6307235c",
        "cursor": {
          "ref": "8a64263b-bb7a-42e2-b1a1-fbf1d7256828",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "9119b3b7-7014-4ba5-b1e1-da813a60baa6"
        },
        "item": {
          "id": "be2d2584-1f70-4c07-8c28-63ba6307235c",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "1bb0698b-dcf9-4e33-8653-0f50363a4595",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af672eeb-6392-45d0-94e8-4b94f4d1446f",
        "cursor": {
          "ref": "f51e5723-3a65-44b0-acb4-10fadae77d4a",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "e1d5c9b3-b0de-4d89-8547-b530f9a8ed25"
        },
        "item": {
          "id": "af672eeb-6392-45d0-94e8-4b94f4d1446f",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "da389375-fdae-444d-aa2d-a516a5334b84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99c98ebd-07df-4ff0-b927-439450e59922",
        "cursor": {
          "ref": "544a10fe-fda8-4328-96b4-c8bae936e5f7",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "c3462eef-3a52-4b35-8d9d-f776511a9d25"
        },
        "item": {
          "id": "99c98ebd-07df-4ff0-b927-439450e59922",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "862dc17e-c53f-4ed7-9917-98a7dbb66085",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a5502aa-97f0-4f46-8909-384e9ab097fe",
        "cursor": {
          "ref": "8c863365-4028-4f91-9a04-8da47b6312a3",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "40775dd5-be1f-4fb5-8d24-cbaf85b6f672"
        },
        "item": {
          "id": "3a5502aa-97f0-4f46-8909-384e9ab097fe",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "45d1ce25-3f23-416f-b139-8f003b9e992b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "246f0318-88a6-49ba-ad34-68eec9db4205",
        "cursor": {
          "ref": "181ff595-0185-44fd-8c3c-b31d2a47b072",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "10903a1c-6a9f-43e0-a06e-649535ad6df7"
        },
        "item": {
          "id": "246f0318-88a6-49ba-ad34-68eec9db4205",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "b05ac1ff-eb4d-4335-944d-7c80d764fb17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0deb6ab-0550-4f47-86a1-ae33bbfb8118",
        "cursor": {
          "ref": "916f2c10-5d26-4f9a-ba05-f56402e105a1",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "ee20f632-ed6f-4053-be76-f2abc42c90d7"
        },
        "item": {
          "id": "f0deb6ab-0550-4f47-86a1-ae33bbfb8118",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "c1a01d47-ec7e-4330-bcf9-1f7e291190b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b6f4e8f-ed80-4676-8bc1-9a5380b791c1",
        "cursor": {
          "ref": "d6f3cfdb-2b7d-46c7-b529-3f6c740348aa",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "4323cf6c-5336-4c13-b599-d900f3f8378e"
        },
        "item": {
          "id": "6b6f4e8f-ed80-4676-8bc1-9a5380b791c1",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "c6d87662-0e99-4f83-b16a-74e1a8fad01d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ffb60cd-b9c8-46bf-9f28-4aaadae43fbf",
        "cursor": {
          "ref": "d8ba25ee-23af-4540-908a-fd55a379227a",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "c644b200-921e-4a4f-9d8b-d700dd7b3e1f"
        },
        "item": {
          "id": "3ffb60cd-b9c8-46bf-9f28-4aaadae43fbf",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "6bf1c7e0-0618-4cb2-a3b4-fa59eee96e2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ee7a303-c0b1-4fc2-a4d1-82908495b87f",
        "cursor": {
          "ref": "d91245ef-5d8f-422e-b83d-61907f409dae",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "d86bd482-e451-4811-9d9a-96e4cc778405"
        },
        "item": {
          "id": "2ee7a303-c0b1-4fc2-a4d1-82908495b87f",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "f09216ec-b36f-4d84-ac67-e037acc9652a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2a4d01f-f1b8-48d0-bcf2-97bb34631b55",
        "cursor": {
          "ref": "2ba838d6-5296-4a92-b87d-2d867e7393fb",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "a8d31920-9f67-4e06-b83e-74a1435a9a39"
        },
        "item": {
          "id": "f2a4d01f-f1b8-48d0-bcf2-97bb34631b55",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "43ef0a16-ad36-4bcd-8822-315e2fb36637",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2477e75-ea8b-42bd-b536-fcfa0464f0f8",
        "cursor": {
          "ref": "1cf9d246-4105-414d-a195-5ac2046b6973",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "130c087d-6f58-4862-a82e-dfea0cd28142"
        },
        "item": {
          "id": "e2477e75-ea8b-42bd-b536-fcfa0464f0f8",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "c3f157f8-30e6-4fd1-814e-10a70009135c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cc3138a-c88f-42d5-8bab-b34aa0fa5c51",
        "cursor": {
          "ref": "aaccb09b-b5f1-4bab-9a36-731766adb9e3",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "6a181ebb-ce8b-406d-adc9-5f84790ba01f"
        },
        "item": {
          "id": "8cc3138a-c88f-42d5-8bab-b34aa0fa5c51",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "e2be7312-cb38-47d8-96d8-1bb029cf3f2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8304c491-cff9-4891-9bea-1acb4e862a83",
        "cursor": {
          "ref": "92c23bab-9142-48f2-b0bb-4a530e51573e",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "460eb708-4a18-4365-af67-f6b251599511"
        },
        "item": {
          "id": "8304c491-cff9-4891-9bea-1acb4e862a83",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "504fbfdb-cc92-4bdd-b959-17c1b8fd0be4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89b2f401-32ca-4364-9e01-301bb24387be",
        "cursor": {
          "ref": "129b6db4-02de-4c29-b519-a4da9fa50bc7",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "67b78ebc-68f7-404c-8bd7-a6d99c4e41b6"
        },
        "item": {
          "id": "89b2f401-32ca-4364-9e01-301bb24387be",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "91e1f56a-aa41-4eb6-bed0-92779ebb56f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "539f5089-ff88-4ab6-a003-820f75ad2219",
        "cursor": {
          "ref": "7b1f5c32-40fe-4c2e-9ab5-cfdc20974931",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "e20d0b4e-0f22-448a-8346-7b81c83079d0"
        },
        "item": {
          "id": "539f5089-ff88-4ab6-a003-820f75ad2219",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "57900cc6-dc30-4819-a148-b15975cc8faf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6f29635-5c24-4413-a583-bba01f3b4c40",
        "cursor": {
          "ref": "d10c5dcb-6c29-49d2-99c3-588911180bef",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "a3b3a45e-e3d6-4ca7-8279-31c1c8d9c00b"
        },
        "item": {
          "id": "b6f29635-5c24-4413-a583-bba01f3b4c40",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "c8495984-c862-4c65-b2bb-8a1636ac6fcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc0dd813-5e41-4dce-923b-724e06b8dc7e",
        "cursor": {
          "ref": "e8082b93-677f-4e78-81cd-6f6426ff88a3",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "643ea9cf-5c3f-437b-a72c-1a4ea1d56f51"
        },
        "item": {
          "id": "cc0dd813-5e41-4dce-923b-724e06b8dc7e",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "f3a4385a-dd28-4962-85c6-5ca8140bb088",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7336843b-4e29-4378-8614-b45633699aac",
        "cursor": {
          "ref": "787cd634-2d99-49bb-8cbc-da636c36d410",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "bdcd66ea-9d73-4b3d-90af-7befffca5b4b"
        },
        "item": {
          "id": "7336843b-4e29-4378-8614-b45633699aac",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "81d16789-2315-4586-be8e-49ba5a023a5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7592198c-cebf-425d-b6e8-336ef6cb07d4",
        "cursor": {
          "ref": "4d41359a-a62a-4779-babb-284a166f664e",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "b6f17bcf-0516-41c3-a50f-a82e7c7eba6f"
        },
        "item": {
          "id": "7592198c-cebf-425d-b6e8-336ef6cb07d4",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "791c7806-fdfd-4850-a9f8-1f5c43e30f7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40df8a9b-d997-4db9-ad8c-817d40b71b30",
        "cursor": {
          "ref": "98ec4bcc-b959-4f5a-830d-32d7c1327838",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "23855027-5934-4edf-99ad-c84e11914ab3"
        },
        "item": {
          "id": "40df8a9b-d997-4db9-ad8c-817d40b71b30",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "1f0cba3d-faee-4281-ac4e-8c6f846984ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe58433a-65f1-4e71-9cfb-aef101293382",
        "cursor": {
          "ref": "c5f99219-4f4a-4b1e-a603-964cbe57e940",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "2f306039-d7af-4854-9278-18774c0197aa"
        },
        "item": {
          "id": "fe58433a-65f1-4e71-9cfb-aef101293382",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "9b2ae604-6a81-4717-97a4-41b60786ca73",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 20,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baca19eb-b8ac-4b6c-8c2a-5164f0ced463",
        "cursor": {
          "ref": "16cb06d9-4e27-44f3-8bb3-c4b31ea70bcc",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "ce13d63b-7171-44e6-b6c3-6724163d85b3"
        },
        "item": {
          "id": "baca19eb-b8ac-4b6c-8c2a-5164f0ced463",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "2c989a44-7fc5-41ae-ba59-2dee106bad38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c3cb8e5-4310-420a-94a6-038aacfe1c98",
        "cursor": {
          "ref": "175e417a-d145-4f86-91b4-f5fbf703c887",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "26408402-650b-4084-a3b5-5c185aaa09bc"
        },
        "item": {
          "id": "7c3cb8e5-4310-420a-94a6-038aacfe1c98",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "d84ae816-1903-4dff-901c-686aee89879a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67630b37-906d-4b00-90e2-da4328d25cd1",
        "cursor": {
          "ref": "c78a6aaa-e840-4f7d-8b68-e760276e8340",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "1b1488f0-8999-4b5c-b74c-af8531f3fb6d"
        },
        "item": {
          "id": "67630b37-906d-4b00-90e2-da4328d25cd1",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "451dbe32-9dbd-44e4-8924-f00d26f4628f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3befe486-1d8e-448e-b5e4-341a787a413e",
        "cursor": {
          "ref": "2aff75c0-0ddb-4217-8800-c85d2250394e",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "3027398d-7c95-4553-abc3-606c3c8b9e8c"
        },
        "item": {
          "id": "3befe486-1d8e-448e-b5e4-341a787a413e",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "2a30e54e-8480-4f8b-a631-5ca05147a811",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96237628-7b3b-4161-a610-2822a0e379be",
        "cursor": {
          "ref": "2e736c8b-e534-4b2f-8ce8-3a5c9daf4162",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "956d5f0f-3d94-4d1b-8d08-3edfcafe354c"
        },
        "item": {
          "id": "96237628-7b3b-4161-a610-2822a0e379be",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "8ecc35fc-513f-403d-bfe4-3275ad774c6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bfbca96-d971-4d9a-81bc-298b743d5ba2",
        "cursor": {
          "ref": "209eaf95-85df-44ed-a941-437e557f2be3",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "7203dcff-8bdc-43e2-b720-d68a6cbfa3fe"
        },
        "item": {
          "id": "8bfbca96-d971-4d9a-81bc-298b743d5ba2",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "40e7ffae-1d4d-489a-8e0e-0aa355cc6cfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24ef7253-37e8-49ec-8e90-65d86e95a416",
        "cursor": {
          "ref": "3fe89d92-f10d-4f5e-a4a3-218ac655dbb6",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "3b55f2d5-be8f-4aaf-bc28-916e151441f4"
        },
        "item": {
          "id": "24ef7253-37e8-49ec-8e90-65d86e95a416",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "ccbbc26e-04a8-49bf-a953-379733b6e7bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62fd2c41-53a3-497b-8770-370d196f1189",
        "cursor": {
          "ref": "cde50b16-cdc7-48e9-97e9-ae0c3d099fbd",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "44a25b8d-a4bf-48da-8e09-adb801b70f1a"
        },
        "item": {
          "id": "62fd2c41-53a3-497b-8770-370d196f1189",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "7cf1f2db-8be7-43b0-b349-df08f77d6b0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c739f44-f3b7-4e5b-af6f-1b389f18f50e",
        "cursor": {
          "ref": "aa1d789a-43f1-40ab-a200-03788ae65951",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "6157a1d8-9fdd-4dec-8807-0c6731fbaedc"
        },
        "item": {
          "id": "0c739f44-f3b7-4e5b-af6f-1b389f18f50e",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "183d8f05-ca98-43c2-92b3-f42b2530f936",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e9d2c9b-77ac-4ab2-93a9-7411fd3555fc",
        "cursor": {
          "ref": "3c72fe64-544b-43f2-9e47-d43452b5ccad",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "81a10db4-c0b6-4ef4-b446-8d92929c012d"
        },
        "item": {
          "id": "2e9d2c9b-77ac-4ab2-93a9-7411fd3555fc",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "175b9221-facc-4931-a563-0e3bc86153c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d9ee9fe-e8ce-474e-9ca5-ca0ccd03e014",
        "cursor": {
          "ref": "ae4d2d4d-7ff6-4ae1-8956-e361cd01533c",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "e2b7986a-2d5e-4abf-8deb-1c75f8d2ffac"
        },
        "item": {
          "id": "1d9ee9fe-e8ce-474e-9ca5-ca0ccd03e014",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "100f2dc5-f0ad-49ee-bc1d-88a1d26a859f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b61f278-59ee-42df-bd4b-b6e9fa17da17",
        "cursor": {
          "ref": "0b26954e-13d6-476a-a5e1-7a8001402bc4",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "7b7b955b-65cd-4695-ba1e-9af2060fdaa0"
        },
        "item": {
          "id": "2b61f278-59ee-42df-bd4b-b6e9fa17da17",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "d0a7f954-5817-4dd1-a0cb-9a9a2eefb6ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e927825-516e-4da0-9e77-21ebc6480716",
        "cursor": {
          "ref": "3bc91725-cf30-4f7a-9366-7f47eea81434",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "9e904c6a-ccee-403e-82bc-ab6ce91e4416"
        },
        "item": {
          "id": "4e927825-516e-4da0-9e77-21ebc6480716",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "7f9ea7c8-b485-48fe-811e-02a85542fab6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ee03cee-14ac-446b-b426-816a8058c9f4",
        "cursor": {
          "ref": "f65a3446-488b-422e-abfe-2b0952bc2258",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "4c6e822e-d797-418f-90f3-66e1fb43d0ba"
        },
        "item": {
          "id": "5ee03cee-14ac-446b-b426-816a8058c9f4",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "1ef8a04c-56e5-4885-ad0b-e30c9b6e5843",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e27abdb9-0e52-42f8-ac51-b9ee8c12cd15",
        "cursor": {
          "ref": "5e9efd6f-7002-4720-982b-b69efef36bd8",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "f48f1a11-e687-4eb1-a3d9-7b4fc3e143de"
        },
        "item": {
          "id": "e27abdb9-0e52-42f8-ac51-b9ee8c12cd15",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "e105e4c2-043a-4bc6-b193-64fb36ef1c44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee74d3a3-d7ba-45f3-bf35-ff5c3e5cc107",
        "cursor": {
          "ref": "8c329303-2b68-420b-af1c-e8a2d64056fe",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "0a14e366-f1f4-4ddc-b18d-989c14c39995"
        },
        "item": {
          "id": "ee74d3a3-d7ba-45f3-bf35-ff5c3e5cc107",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "014c4d82-5dd1-45c3-a925-390011c7f588",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14a8ccd0-f5ad-4953-9a7e-4fd91f0c8c7f",
        "cursor": {
          "ref": "281d84f4-2c10-493f-aa18-baeca882f7e0",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "5cda5868-d38d-4eac-b170-42e18f208507"
        },
        "item": {
          "id": "14a8ccd0-f5ad-4953-9a7e-4fd91f0c8c7f",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "09c23ae5-19d5-4fa5-9465-143fe860629e",
          "status": "OK",
          "code": 200,
          "responseTime": 266,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:195)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:195)"
            }
          }
        ]
      },
      {
        "id": "9d95c6ec-0964-4a1a-adfb-2c7cd7d3d158",
        "cursor": {
          "ref": "a89cbe01-cf94-43a9-85fa-e5a7ec1fe431",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "67c82d2e-e2de-4876-9ee3-55aeaff816b4"
        },
        "item": {
          "id": "9d95c6ec-0964-4a1a-adfb-2c7cd7d3d158",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "1527b651-ab55-4255-918f-7eb12d1e5f82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c22350c1-e9a3-424d-bf6d-b9da17758220",
        "cursor": {
          "ref": "d11a0599-7b37-412c-a73d-30dbfe7fad5c",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "29efb70e-71cb-466a-bd39-0c49050d3f61"
        },
        "item": {
          "id": "c22350c1-e9a3-424d-bf6d-b9da17758220",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "1d85e37d-4c2c-4f60-a5fb-655e17445f4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "846b455b-879b-4f36-8bd4-7b9e35d7bf88",
        "cursor": {
          "ref": "524b4c2b-0023-43d2-ac68-d11a96446d60",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "53ac1e41-6495-4e65-a962-b5b97ea49e77"
        },
        "item": {
          "id": "846b455b-879b-4f36-8bd4-7b9e35d7bf88",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "63848e99-17be-4b90-a3a7-8b3e08ae6cd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00cdb9f5-c6f5-4fe2-a76a-5f0a8c81c5b8",
        "cursor": {
          "ref": "a8538e0c-5fc4-417d-a96c-0769217688e2",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "3e018125-e88d-49b3-bd6a-ca8196e69216"
        },
        "item": {
          "id": "00cdb9f5-c6f5-4fe2-a76a-5f0a8c81c5b8",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "4eb4dff0-bcea-456a-822c-81a8e0438e5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97f945c8-3075-4379-bf40-4fa12d8f3209",
        "cursor": {
          "ref": "4cf4f0b5-a9ba-47f3-aeff-1722859fa7da",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "99065510-2014-425c-b4ed-861f2d6039a1"
        },
        "item": {
          "id": "97f945c8-3075-4379-bf40-4fa12d8f3209",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "99b87c42-8757-4486-8d1d-2e4b8aee9009",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b34a6df6-8002-4c1a-9f0a-e7bf3c6aecc4",
        "cursor": {
          "ref": "a3ad209b-c8ca-4cc6-ad3d-557a49d48e02",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "70708678-8008-412d-ad66-a7dd0088d1a0"
        },
        "item": {
          "id": "b34a6df6-8002-4c1a-9f0a-e7bf3c6aecc4",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "4ae0b1a3-3f15-4514-ad4f-01f99cc9e97e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5a0a8a2-290f-44ad-a406-3c629a64205f",
        "cursor": {
          "ref": "6aae6a19-db70-44b7-8724-58d1c4f0a783",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "c520b2c2-c941-46bf-af10-36ecc82e7748"
        },
        "item": {
          "id": "f5a0a8a2-290f-44ad-a406-3c629a64205f",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "c1f7bf8f-09a9-422f-bf92-cc3168a9d269",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8747dc6c-3606-47b8-ba25-2bb998523e13",
        "cursor": {
          "ref": "2278a2bb-a15b-45b4-a137-6e29d1c4dd19",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "5f9e3249-98f5-4000-862a-cee4ad9d421d"
        },
        "item": {
          "id": "8747dc6c-3606-47b8-ba25-2bb998523e13",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "ac220c6d-6069-40de-aed7-48058581b727",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73dc0a7c-3d95-4253-b95a-1b36fd3a0c2f",
        "cursor": {
          "ref": "b9c4d1a0-4983-4290-b0af-bc3ffbe1d3d2",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "36131342-fc67-4067-a5e7-5b45684ea651"
        },
        "item": {
          "id": "73dc0a7c-3d95-4253-b95a-1b36fd3a0c2f",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "be1929ac-c710-4bb6-bd26-d1eb3b02ce41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdefd966-0531-463e-9890-93c69abd7033",
        "cursor": {
          "ref": "b567df44-659c-430d-94ea-10e79a3dba62",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "13833b62-7099-4211-a541-defe495b80fd"
        },
        "item": {
          "id": "cdefd966-0531-463e-9890-93c69abd7033",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "acd189ca-4b65-47dc-a099-6c9874ac09e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52e1e12d-db66-4539-80ed-ddc939fc2b98",
        "cursor": {
          "ref": "57356052-13af-4da6-aea0-80536693f84c",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "a4cec24e-e2a4-4e7d-96a4-29a1339c81bb"
        },
        "item": {
          "id": "52e1e12d-db66-4539-80ed-ddc939fc2b98",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "07abfb95-9560-43da-9bdf-082b75dbec25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb0158e6-9701-41d0-b2e8-6fbfc6457800",
        "cursor": {
          "ref": "b5cd65e1-f116-4fe8-ab1a-e58c971aa1a9",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "de1ee78a-41fb-4072-9743-0052363d6462"
        },
        "item": {
          "id": "bb0158e6-9701-41d0-b2e8-6fbfc6457800",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "294f6eaf-8790-4e56-bc90-5bcd0cc0d85d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6325b1bd-5662-424f-8dcf-b2de5c00969f",
        "cursor": {
          "ref": "f1b34768-083d-4935-b261-21a77e3de27a",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "d29f8df3-923a-4771-af20-1f31c075a0fa"
        },
        "item": {
          "id": "6325b1bd-5662-424f-8dcf-b2de5c00969f",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "7a987b8c-8e2a-479f-be83-4ef6a5cf44a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a047d737-3847-4ae9-9e84-cd67afbf1c9c",
        "cursor": {
          "ref": "32ec200b-87c6-4c84-993b-9574962e74a4",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "bc64ca67-2c07-4496-ba14-12b4828aa383"
        },
        "item": {
          "id": "a047d737-3847-4ae9-9e84-cd67afbf1c9c",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "d2d6ec2e-13e2-48b1-a63c-401a4ed6822e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a600e45-d4a9-459d-bbb3-d5997a538295",
        "cursor": {
          "ref": "9366793e-1317-4abd-ae5c-b91dc4c57998",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "f4293749-aa3b-44f6-bbda-fb72728bb696"
        },
        "item": {
          "id": "5a600e45-d4a9-459d-bbb3-d5997a538295",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "03498007-94cc-4ebd-af10-f5e30046e90b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02ab161a-9e7c-472c-9372-8a7029553f0c",
        "cursor": {
          "ref": "f4532706-b099-46c2-bf28-3d2605f07395",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "bdc8e059-ecf9-43c3-a6d1-7a470008623c"
        },
        "item": {
          "id": "02ab161a-9e7c-472c-9372-8a7029553f0c",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "fd81bcee-740d-4856-adb9-c906ba763932",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c210bbba-dec9-4ef0-9419-3f4daef8be29",
        "cursor": {
          "ref": "5bf6fc1c-e88a-4885-bd33-8dd6ce971274",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "36ca213d-673a-417a-854a-9e2ec941956c"
        },
        "item": {
          "id": "c210bbba-dec9-4ef0-9419-3f4daef8be29",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "70fa7439-d48b-45ff-8263-c402883eb372",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0d0a15d-e1eb-4e50-b154-09c3a95634bc",
        "cursor": {
          "ref": "ad077862-6dea-44c0-af77-ca257dc2ea84",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "8dd4401e-06ab-41c6-8170-3a51a14894a4"
        },
        "item": {
          "id": "c0d0a15d-e1eb-4e50-b154-09c3a95634bc",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "f5e24c14-d9ba-41cc-8761-2c2efe2ed454",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dca7e312-d5f6-405a-8f69-58f8bdc24682",
        "cursor": {
          "ref": "81c71afc-70b5-4bd7-937d-9575acaf3325",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "aec9ed0d-a2b3-4728-b27c-46986efe878a"
        },
        "item": {
          "id": "dca7e312-d5f6-405a-8f69-58f8bdc24682",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "b3b2693a-89a6-484d-9d87-74902f19ddca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a6a7a6a-60f9-45ca-b33e-b5370f5e79f5",
        "cursor": {
          "ref": "2b45a858-c602-4e63-ada3-0f85d793aa5c",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "87ce3cfb-2e4d-40ed-9265-25b522cd4c2e"
        },
        "item": {
          "id": "9a6a7a6a-60f9-45ca-b33e-b5370f5e79f5",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "19b0a31a-4c0a-4dd2-90b0-1c94618fbf59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d72d6642-3633-4992-a2fa-525104d3b2e5",
        "cursor": {
          "ref": "94cf2b09-839d-4f2f-8c3a-85b400deb955",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "1553483c-09b6-43f6-923e-a986e5d9c0f1"
        },
        "item": {
          "id": "d72d6642-3633-4992-a2fa-525104d3b2e5",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "9471f940-3e96-4963-b97e-a834d211129f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1de614a-b6aa-448b-b64e-13e01f1db201",
        "cursor": {
          "ref": "7baa2df6-c5db-4115-be6b-6a27e5f1a9b1",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "f098cabd-6b67-4f04-8da0-f592ca45fa88"
        },
        "item": {
          "id": "b1de614a-b6aa-448b-b64e-13e01f1db201",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "149a400d-569a-45af-a2b0-0f6abb06b4f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c14e391b-527c-4083-afb2-be03cfa08d12",
        "cursor": {
          "ref": "6fd1e6c9-832c-4223-9803-6b6db7205fca",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "3ec8e81b-2099-4a9a-9fce-78d2aa2c334a"
        },
        "item": {
          "id": "c14e391b-527c-4083-afb2-be03cfa08d12",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "321775e1-5513-4617-80b1-d21708211eca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf7c77a3-71ac-4302-aa9f-d866fae4c0f4",
        "cursor": {
          "ref": "06094c78-4258-4cc0-9744-fb647ed28c91",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "9e0a2775-1668-42be-9d82-1a04db10f077"
        },
        "item": {
          "id": "cf7c77a3-71ac-4302-aa9f-d866fae4c0f4",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "4acdd67e-0ea1-4944-a6f1-7d930804f9bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1289e96-20eb-4eca-bedd-ed61239c7042",
        "cursor": {
          "ref": "981c1675-d7fc-4917-a5fc-4465c710c5e2",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "cbe94dd2-b1a7-496f-bece-c8b36ebf65e7"
        },
        "item": {
          "id": "d1289e96-20eb-4eca-bedd-ed61239c7042",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "9743feaf-3e72-4d44-bc61-49b26a5828cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "802cb64a-41d6-480c-a44b-f71f383fcec0",
        "cursor": {
          "ref": "c47f8679-dff5-41ea-b4c2-91d5bcc5b573",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "c6b3c721-8403-4628-a9e5-c8ac209cf2fa"
        },
        "item": {
          "id": "802cb64a-41d6-480c-a44b-f71f383fcec0",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "5f23658d-401e-47ac-9b9e-8eb647ae4dfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "def7f184-664b-4954-8c69-39144eabe48b",
        "cursor": {
          "ref": "7e25deaf-f3c5-486c-b329-61f6af1a6ba7",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "d13547e7-479d-48aa-820d-f0bfe2276025"
        },
        "item": {
          "id": "def7f184-664b-4954-8c69-39144eabe48b",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "6c73b042-fc4c-4032-9d20-965f1f296b93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b32b809-7cc7-4076-bb4c-c84ba0c4e264",
        "cursor": {
          "ref": "7514b50f-b51c-4142-b081-456fa531c4e9",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "0ae95879-a412-402c-bd97-5cb24dbe6c44"
        },
        "item": {
          "id": "7b32b809-7cc7-4076-bb4c-c84ba0c4e264",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "32038a12-ea9d-41a4-bf5d-cfa13ed220cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d38a7b13-77a4-43c0-8d13-9b6501c85a21",
        "cursor": {
          "ref": "11ed5b9a-e2f1-4580-9961-2b84d112c797",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "bea50363-36e0-4d58-9da9-a2660b71e14b"
        },
        "item": {
          "id": "d38a7b13-77a4-43c0-8d13-9b6501c85a21",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "0a4b378f-9502-4405-9115-aef4afc3c7c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5c78d54-6112-4b16-8e96-a94a911fe890",
        "cursor": {
          "ref": "9473324a-da24-4274-9c0b-ea8c4c40f84d",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "a8bac986-354b-45f0-a65f-97f7b3a820c8"
        },
        "item": {
          "id": "b5c78d54-6112-4b16-8e96-a94a911fe890",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "56d1d018-2968-4a10-8a1c-e7ecda5d804c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1527734-c206-4889-be8c-7df7ae621c39",
        "cursor": {
          "ref": "1a1ee519-5687-4703-b3e2-054095144587",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "22132646-5c03-47f3-bcc4-1de6c09be5b9"
        },
        "item": {
          "id": "f1527734-c206-4889-be8c-7df7ae621c39",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "c2615105-af47-4eb6-807d-0756f737855d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef178ae3-3116-42e1-b36d-ef50b4b30a9a",
        "cursor": {
          "ref": "c67d5d65-6437-4cc6-be9a-ba27c8ec3cb3",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "e453d435-95c6-4254-b9cf-3c4452579213"
        },
        "item": {
          "id": "ef178ae3-3116-42e1-b36d-ef50b4b30a9a",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "55d5391c-ad90-418f-bef4-ac9a122275b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9366a48f-4201-4e86-874f-35b3adbf6164",
        "cursor": {
          "ref": "ce9e510c-473d-4d2f-8573-12a472d8d9d4",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "3c89c00f-6b10-4dd5-97d2-96cde249c563"
        },
        "item": {
          "id": "9366a48f-4201-4e86-874f-35b3adbf6164",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "af5ab695-ed8c-40ff-ac97-a842ef1f1eea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc249e4c-6a4c-40c6-baef-c39ceb5188cc",
        "cursor": {
          "ref": "6a111a2b-9182-4819-abf9-e0b236b7ce12",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "fafbb73b-75d0-42c5-9bad-78fdf1e3cbb5"
        },
        "item": {
          "id": "dc249e4c-6a4c-40c6-baef-c39ceb5188cc",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "bbd51e6e-144f-4f05-8f85-471abd546cbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2c00e49-f99a-44e4-9b72-03f851366669",
        "cursor": {
          "ref": "63e6d7a6-ae56-4106-a87e-8f716b8c788f",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "356a80da-12cc-4c3f-bcbd-e0bdb65577f3"
        },
        "item": {
          "id": "c2c00e49-f99a-44e4-9b72-03f851366669",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "42fea364-b7b0-4719-ac32-aef603fe4df4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "386e610a-1139-4807-8712-cee6802f157d",
        "cursor": {
          "ref": "7d483e6b-f652-442f-826a-5dbf8099d437",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "2f544582-ab0d-4913-b7d0-529a78cd693c"
        },
        "item": {
          "id": "386e610a-1139-4807-8712-cee6802f157d",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "c646e13a-8b52-4bb2-8d1b-1b76d076f39b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faad042c-63bb-4577-9c92-0f1708c772b1",
        "cursor": {
          "ref": "1df496bb-e6b7-41e8-b5b8-30415b640165",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "ee57b790-ad0e-444b-a6a4-67a9b5b78927"
        },
        "item": {
          "id": "faad042c-63bb-4577-9c92-0f1708c772b1",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "24bc3dbe-2d19-40c2-bcd1-074a33f77d26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80f3d980-547c-4d52-837a-6405537a1d2d",
        "cursor": {
          "ref": "c23b271d-ad45-4697-bc1e-729e0f11046d",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "59be4455-3238-4764-8865-239f7cdd90be"
        },
        "item": {
          "id": "80f3d980-547c-4d52-837a-6405537a1d2d",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "cc3a08b4-b1a2-4960-a7b5-c29199e58820",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e46bc5a-3fce-4ea1-a5cc-bfa26bd0f52a",
        "cursor": {
          "ref": "ac6b60c2-0a6d-4b2b-a28c-990095e6fedd",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "7d629640-d5de-4c11-824d-035e890ddb6d"
        },
        "item": {
          "id": "3e46bc5a-3fce-4ea1-a5cc-bfa26bd0f52a",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "b20f8af7-c33f-4899-bb86-da06c2ea2038",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9346377-affc-4d6a-8cdd-5a1cb977d8ea",
        "cursor": {
          "ref": "eab50103-6e70-46f7-90b1-f35ff5e723ff",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "e60f0fbc-7143-42e0-915a-c57712f5a460"
        },
        "item": {
          "id": "b9346377-affc-4d6a-8cdd-5a1cb977d8ea",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "5e0e2f8f-7ef9-4b6a-9a82-53b666ae7bde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ea09a0d-7312-42c3-900e-cc5150dafb2d",
        "cursor": {
          "ref": "d4d2feb4-3c71-413d-83e0-3b2628aa8999",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "6ca808c7-7455-4025-a2a3-c879768eed15"
        },
        "item": {
          "id": "6ea09a0d-7312-42c3-900e-cc5150dafb2d",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "b2f8ab05-450b-4999-9609-1a088f511f6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "453c1e8e-e1df-4d1d-b0fd-f6da50c2dd25",
        "cursor": {
          "ref": "379b5196-a5b2-4c77-8fbb-0897b8105b39",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "70ccd12a-201b-4cf4-9d7b-56be5edbde84"
        },
        "item": {
          "id": "453c1e8e-e1df-4d1d-b0fd-f6da50c2dd25",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "7c3bb040-3fe5-44cc-9614-d75308d2fb13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c2fde7c-a025-40b9-8df3-57415312e012",
        "cursor": {
          "ref": "6c7f4ed3-bf5b-4577-8e08-32c6f4b45b48",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "2720ad70-a664-4cf1-987c-912d71595098"
        },
        "item": {
          "id": "7c2fde7c-a025-40b9-8df3-57415312e012",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "94ada398-8eae-498e-8f96-5820aee7b8a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4296bcd6-9edf-4273-8364-b941523b9c9f",
        "cursor": {
          "ref": "048289b1-d438-4ee2-b174-dabdf935bded",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "335dc94c-08ad-4ae6-90ea-05c3ddcc87a6"
        },
        "item": {
          "id": "4296bcd6-9edf-4273-8364-b941523b9c9f",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "f300b8ba-2962-4c0c-a0ef-9bd903ff2728",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "519182e5-6ec5-49f2-a440-0f0db9a3a4ab",
        "cursor": {
          "ref": "924e953a-0822-4877-b9e7-e21b40a7ab04",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "a74bf06a-7cef-4340-a2c0-bb6bcb4d988a"
        },
        "item": {
          "id": "519182e5-6ec5-49f2-a440-0f0db9a3a4ab",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "efa65096-0e04-4349-88dd-26449ce42bb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0a97ccf-fc9a-4250-9263-faf88d55e71d",
        "cursor": {
          "ref": "40fb97fe-93f8-44db-997b-88a66371dde6",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "5bd1a1a5-9d15-4242-b9c9-18600ff64a38"
        },
        "item": {
          "id": "f0a97ccf-fc9a-4250-9263-faf88d55e71d",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "bd13dc76-2325-4a98-9fc2-67dbbf427a59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac01255b-84d5-4707-af37-bc0e288fa821",
        "cursor": {
          "ref": "ad93f318-1c50-482e-863a-61a2cda32a32",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "32703466-1ef8-45fb-93ff-e773a13cf781"
        },
        "item": {
          "id": "ac01255b-84d5-4707-af37-bc0e288fa821",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "f57f3209-cec5-4680-ad6a-615029538dc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46102270-ab6b-4f8d-9ed6-f8922d91969a",
        "cursor": {
          "ref": "63cf5c8b-b4e5-47da-a4ae-bb2943fc1c1d",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "5b9838cf-4333-4be5-961f-62aa09f110d9"
        },
        "item": {
          "id": "46102270-ab6b-4f8d-9ed6-f8922d91969a",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "9d4c0c8f-8fe9-493b-ac39-b67613156aed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2201af27-4511-4433-916f-c0b4c34e9fc2",
        "cursor": {
          "ref": "5beb07f5-3ce5-4aed-932d-3285c40a045b",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "d013f9bc-f5a9-48fc-85f0-9e7385c95de9"
        },
        "item": {
          "id": "2201af27-4511-4433-916f-c0b4c34e9fc2",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "db0e1106-2f20-4637-9931-cac7cd3938a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d1183b6-de5c-488e-861b-dfd556163c3e",
        "cursor": {
          "ref": "d88a2b6e-287a-4838-ba07-c4ef573fbf07",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "ba84b4f8-e239-4be8-899c-1aa96bff78d3"
        },
        "item": {
          "id": "6d1183b6-de5c-488e-861b-dfd556163c3e",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "70768293-bc95-46f7-b02c-ed6e6d4d846c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ecb033f-212c-43a1-b640-95fdb1cfbf2c",
        "cursor": {
          "ref": "e56774c7-ee04-4477-987f-fb9349aa9ce1",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "66f2139c-efa8-47b8-936d-c71bf2fb4685"
        },
        "item": {
          "id": "9ecb033f-212c-43a1-b640-95fdb1cfbf2c",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "ba9f509f-bfad-4ca1-b595-088717e456d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55bcac44-61c9-4418-b4dc-b3145c46e983",
        "cursor": {
          "ref": "28239bd4-1a41-4080-b2e8-0194242ee3ac",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "31fe0e09-d3c9-4979-b2df-be392498436c"
        },
        "item": {
          "id": "55bcac44-61c9-4418-b4dc-b3145c46e983",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "4f5eae50-387a-42d3-8c07-ef30c087d240",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d205e03-bb60-413e-9b2a-42e66b2f80d0",
        "cursor": {
          "ref": "912b4b3f-ee29-4292-a6dd-d1c8c96db9f3",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "2faac495-3ffd-475f-87f8-ff3dcd4c1a48"
        },
        "item": {
          "id": "3d205e03-bb60-413e-9b2a-42e66b2f80d0",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "db129079-6505-4d23-b80b-3ff2d77cc449",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5581695d-23e3-4678-a7d3-20fcf54a274d",
        "cursor": {
          "ref": "65362335-d245-4375-8eaf-6466a78f1390",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "3747f31a-2484-4e36-b387-26c5e63239c0"
        },
        "item": {
          "id": "5581695d-23e3-4678-a7d3-20fcf54a274d",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "9283810f-ace3-4049-8f51-54774450a19a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15c9b3f9-3175-4c49-adc3-e1a8769b9448",
        "cursor": {
          "ref": "6e3cc8df-b3d8-4d2b-9ed2-950fc5844839",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "8ecc538c-d874-40e1-b34f-6de5a5339a70"
        },
        "item": {
          "id": "15c9b3f9-3175-4c49-adc3-e1a8769b9448",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "07e4df93-8bc5-4243-a6d9-aa022d1b620f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2581790-5022-40db-824c-bd39b4f45a0e",
        "cursor": {
          "ref": "774155f8-5916-4b79-81be-7d1c761ab2f2",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "4d9e3974-7152-4f7e-90ed-48bb44bbb249"
        },
        "item": {
          "id": "a2581790-5022-40db-824c-bd39b4f45a0e",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "b784a0d7-0260-4a5d-9a82-7ceac991edc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fe5f600-137b-44ed-a5e6-6cd175d17ac8",
        "cursor": {
          "ref": "69385dc5-ad8b-48cd-a7e7-d730a086c7b4",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "9505fed3-efa8-41b8-8725-ef5cbb9a9ef0"
        },
        "item": {
          "id": "3fe5f600-137b-44ed-a5e6-6cd175d17ac8",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "b7ca5a0b-92b4-4a7d-931c-2a4b90258353",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3e4c6b0-da79-46c7-8de2-ca44780939f2",
        "cursor": {
          "ref": "d50c36f7-d6f6-461b-8c10-0db1c04a509b",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "fb9f331f-1f71-41f4-ac82-0f56d943e5a0"
        },
        "item": {
          "id": "b3e4c6b0-da79-46c7-8de2-ca44780939f2",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "fe248848-e3d8-4692-971f-be1a68a6f4bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23fbf068-a39c-4bd1-b13b-cab56ab4f02b",
        "cursor": {
          "ref": "cb5eaadb-a0ab-44b2-8695-049d2d44c5e5",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "3aa0ee1c-24c4-41ee-bd36-af60879cc339"
        },
        "item": {
          "id": "23fbf068-a39c-4bd1-b13b-cab56ab4f02b",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "05d37954-18c4-43c2-a189-edf092b98c0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c5d82b6-7b27-4f5c-b72a-30092e3b6bcc",
        "cursor": {
          "ref": "6354adb1-9d7b-43ca-824c-e199895433d1",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "4aa3078c-055b-41dc-99a4-133439627ae4"
        },
        "item": {
          "id": "6c5d82b6-7b27-4f5c-b72a-30092e3b6bcc",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "2220d44e-b397-4a0d-8e2a-c911e18585d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2055304-1f8d-46b1-9fb9-9c44ab926ef4",
        "cursor": {
          "ref": "b7cbe57f-b4f5-46c8-9981-bdd58d6dc0d3",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "5275c4e3-e4df-4a0c-942d-00d9849d3caa"
        },
        "item": {
          "id": "c2055304-1f8d-46b1-9fb9-9c44ab926ef4",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "aa85c30e-c720-44f1-a87a-5ca6450a2c38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "043598f7-9f2c-4603-a931-f428c997e562",
        "cursor": {
          "ref": "11f1d21b-0eae-49a3-8952-26b97f3a02bd",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "61e55f22-e473-4f94-9293-be04701d7d51"
        },
        "item": {
          "id": "043598f7-9f2c-4603-a931-f428c997e562",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "b18bd009-2d40-431b-8322-9caf56e32947",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30861da1-c26f-44ba-a538-29ae6ee3b321",
        "cursor": {
          "ref": "78736f47-95fc-4a57-92c6-43ee9639b6e9",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "11cc8114-e25e-4fc5-9975-e4a5df242fd5"
        },
        "item": {
          "id": "30861da1-c26f-44ba-a538-29ae6ee3b321",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "a5decf42-d6b6-41cd-820a-f85bc7224aa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3220e3f7-e4f6-41de-8da7-e63c7c9d2e40",
        "cursor": {
          "ref": "47b16684-8598-496b-bd81-18499fe2ddff",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "863ce270-3403-4c6a-81e4-b3409c0e735e"
        },
        "item": {
          "id": "3220e3f7-e4f6-41de-8da7-e63c7c9d2e40",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "12917bff-793c-4f21-a422-63d4c1dbf7d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de8d47bc-d560-4796-bcd4-877d3b15ccd4",
        "cursor": {
          "ref": "7de010ce-3e2d-41f3-90f4-822e06dee391",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "d2bbb4d9-0aa3-4257-bdeb-119d48ed9302"
        },
        "item": {
          "id": "de8d47bc-d560-4796-bcd4-877d3b15ccd4",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "e70e35db-6b63-4add-b320-162b099dc0cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efd9d412-1697-4675-b03c-9b070ec12b8f",
        "cursor": {
          "ref": "4e9470dc-a03b-4488-82c4-2034cf0ca311",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "e65c4184-ae23-42da-88cb-3d9790f5b631"
        },
        "item": {
          "id": "efd9d412-1697-4675-b03c-9b070ec12b8f",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "6aad6298-b7b7-4b1b-b837-cff9f4cd166e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf84c409-fdac-4c49-88bb-41430f26479f",
        "cursor": {
          "ref": "f8835a15-b8a1-4fed-8ae3-a088b1b1dbf7",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "6d1ce50c-728f-4404-8e89-f8a7df15df43"
        },
        "item": {
          "id": "bf84c409-fdac-4c49-88bb-41430f26479f",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "d251fdf4-d590-4d19-8853-81a67fedc7bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52603d98-4c2e-4766-91eb-afec630e7896",
        "cursor": {
          "ref": "ba46af58-a11d-4e32-85a0-07b1ae8203fd",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "fb5315cb-6575-4d73-81dc-4debb25e8149"
        },
        "item": {
          "id": "52603d98-4c2e-4766-91eb-afec630e7896",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "d703dbca-5215-45ed-afb6-3477d9c05690",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62cec448-c318-4a17-bbab-e44b29534683",
        "cursor": {
          "ref": "6c924f1e-3d65-445d-a946-9ee361893f1f",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "e52fbb50-4152-4341-8f55-2c9dadde78f8"
        },
        "item": {
          "id": "62cec448-c318-4a17-bbab-e44b29534683",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "1c8fe5d7-ed4a-4781-9fb3-cf88c231419b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12b3d441-8588-43d4-90cd-ac73f8440a1d",
        "cursor": {
          "ref": "0ba4a3c5-b9c7-45d5-8d6d-e91c678d5485",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "6f930eb0-b2d8-4bc6-8ab7-7a078a89c7bc"
        },
        "item": {
          "id": "12b3d441-8588-43d4-90cd-ac73f8440a1d",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "52e0a4f8-91d3-47f4-9d51-4a48bbdd9ccc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "461e1029-6542-4f99-b4c2-c99d5f072833",
        "cursor": {
          "ref": "52ecaa29-870a-41f8-a854-c1e128c35edb",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "10f63524-2962-4d8a-ab5f-93c709ac0345"
        },
        "item": {
          "id": "461e1029-6542-4f99-b4c2-c99d5f072833",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "effc8ac7-8f78-4c11-9363-5a75b5316dd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da4ed9bf-55e0-4d3b-abd2-05ea7b083f82",
        "cursor": {
          "ref": "9064c490-ffd2-4e8d-ba33-4e679ba380a0",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "3a39222c-b86d-4ad9-81f4-5e02243b43f7"
        },
        "item": {
          "id": "da4ed9bf-55e0-4d3b-abd2-05ea7b083f82",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "492d859d-3383-46f8-9cd0-e2fb3e79cacb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2da447a8-5dfd-4cc2-b24a-924b879b2054",
        "cursor": {
          "ref": "a7ef0a0a-3779-482c-90e5-de7165c902bf",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "ae6f5b87-58c9-4fa1-b1f0-0d389105c61c"
        },
        "item": {
          "id": "2da447a8-5dfd-4cc2-b24a-924b879b2054",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "3dd48c81-016a-495d-8475-acdfade9e6a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "182d749b-8210-468e-a961-3d7d0c54e7a3",
        "cursor": {
          "ref": "11f0c95a-bbe6-4cb6-a930-d54900637143",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "d8453676-8afe-40f7-ab3f-07d4847adb99"
        },
        "item": {
          "id": "182d749b-8210-468e-a961-3d7d0c54e7a3",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "e1febbd0-5598-437f-8fa1-553f7adb1a6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "269a43a7-2b6b-4baf-bda1-9319bbfda1f7",
        "cursor": {
          "ref": "3f9c619b-5160-46e3-9fee-14497856e874",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "23bfc29d-802c-41a3-a515-36f0f48e5be9"
        },
        "item": {
          "id": "269a43a7-2b6b-4baf-bda1-9319bbfda1f7",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "e1d49a4b-b8b6-4bc4-bfeb-4765e2dc25b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63df02c7-6065-4180-bc80-fc7b04cabadd",
        "cursor": {
          "ref": "cf888b65-7a80-4455-bd2f-00789004c864",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "5ded30aa-4394-4e34-96f0-318d78cccca3"
        },
        "item": {
          "id": "63df02c7-6065-4180-bc80-fc7b04cabadd",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "e7e029e2-81da-42e4-8782-9c7906437942",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13573394-3862-4af9-accc-9a2c43423750",
        "cursor": {
          "ref": "2dc3431a-5b06-4a6d-98c8-9b6f05f2db11",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "15f59043-9974-4591-97a0-b1ed54dec88f"
        },
        "item": {
          "id": "13573394-3862-4af9-accc-9a2c43423750",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "c5b57650-c006-4f7b-9adb-a504649eb48e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6c8a4fb-45f8-4473-8c0b-6daa1330c5b4",
        "cursor": {
          "ref": "ef8b4d28-8ced-48aa-abbb-815b558f2834",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "bcb9052d-611a-4e5b-98f7-97dea41669a2"
        },
        "item": {
          "id": "c6c8a4fb-45f8-4473-8c0b-6daa1330c5b4",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "23b93e20-c94a-4ee1-9fe1-1de7e64098e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85186c50-f80b-48c3-aadd-7fad2cc98ad3",
        "cursor": {
          "ref": "45495a2a-a00f-49e7-a245-639d93e93247",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "25e5a68f-33a1-477f-b843-2320bea9dfdc"
        },
        "item": {
          "id": "85186c50-f80b-48c3-aadd-7fad2cc98ad3",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "0acabc92-b538-47ff-9e67-417c34567176",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8277aa06-a139-4bdc-beab-0f3fa345705e",
        "cursor": {
          "ref": "03d29306-6014-4061-8c6a-a6bbd1d15ced",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "9bbfa3f6-0866-419a-8468-bf7d75c63b65"
        },
        "item": {
          "id": "8277aa06-a139-4bdc-beab-0f3fa345705e",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "52b3d0d0-0375-4b0f-884c-b63a73d7f2af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0799e3d9-7290-4668-a3b2-fb2c5f7a47bb",
        "cursor": {
          "ref": "81440a37-7b3b-4b26-9691-6579be608732",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "22273ce9-19a3-4ec8-a622-6db0f4061732"
        },
        "item": {
          "id": "0799e3d9-7290-4668-a3b2-fb2c5f7a47bb",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "7867ea59-e2a3-4557-8f6d-d4ed62f8a15e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 21,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70aee530-6376-4fac-a38b-ee42e414a906",
        "cursor": {
          "ref": "e25a1dfc-a6c6-46a7-8a78-417f8eb26d57",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "27eee616-7946-45a0-8432-262b2fe678b8"
        },
        "item": {
          "id": "70aee530-6376-4fac-a38b-ee42e414a906",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "21f0b41d-cc84-4e63-a254-007c9cf7f8f6",
          "status": "OK",
          "code": 200,
          "responseTime": 167,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "68645140-06eb-4044-9131-71f6baac4ddc",
        "cursor": {
          "ref": "4b025816-d26a-441a-9326-4a1bbafcd54a",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "5222bbe6-7286-4aa3-83e0-f9c9d3949f69"
        },
        "item": {
          "id": "68645140-06eb-4044-9131-71f6baac4ddc",
          "name": "credentials_verify"
        },
        "response": {
          "id": "dcd690d6-6cff-44ed-a98c-2df959041120",
          "status": "OK",
          "code": 200,
          "responseTime": 2153,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "d33b4957-06e8-46ef-80da-25b8a647ef3a",
        "cursor": {
          "ref": "d28dd8c8-aa6d-4909-a0dc-745d867c39c6",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "afc4f32b-19f3-4c46-83a4-268a3970195c"
        },
        "item": {
          "id": "d33b4957-06e8-46ef-80da-25b8a647ef3a",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "d2726c2b-f9d5-40d6-a457-f05d03cd2676",
          "status": "OK",
          "code": 200,
          "responseTime": 2622,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "38d750de-32d1-4c90-8197-eb66600e51b6",
        "cursor": {
          "ref": "1ce3d97f-ea67-4d7b-8a72-3ad25e6d1571",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "1a04c3c9-1291-4fb5-a579-c242aaf96034"
        },
        "item": {
          "id": "38d750de-32d1-4c90-8197-eb66600e51b6",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "899fe9d9-eae1-46da-bfa8-d8401cb4272f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 21,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38d750de-32d1-4c90-8197-eb66600e51b6",
        "cursor": {
          "ref": "1ce3d97f-ea67-4d7b-8a72-3ad25e6d1571",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "1a04c3c9-1291-4fb5-a579-c242aaf96034"
        },
        "item": {
          "id": "38d750de-32d1-4c90-8197-eb66600e51b6",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "899fe9d9-eae1-46da-bfa8-d8401cb4272f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 21,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed415b58-bb8f-4b35-8d5c-e7b64b63ffc2",
        "cursor": {
          "ref": "8299640f-b87f-44ed-ba9f-c83760ab0378",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "a135f76d-a6b4-448e-8b92-b2a6bae53244"
        },
        "item": {
          "id": "ed415b58-bb8f-4b35-8d5c-e7b64b63ffc2",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "d68f0f97-6d3e-4577-905f-c37ecca29f97",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 21,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c885458-0eec-463b-8ac6-53414c3285c3",
        "cursor": {
          "ref": "c131f403-b94c-4d8b-a557-a69166d5888e",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "99119808-039a-40e2-8326-0978a2ff01a5"
        },
        "item": {
          "id": "1c885458-0eec-463b-8ac6-53414c3285c3",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "44a50c4a-84e5-4b5b-8c5a-2329a47acd9f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}