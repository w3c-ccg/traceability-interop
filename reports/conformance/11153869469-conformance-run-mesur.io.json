{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "3b30c2f5-f665-45e3-bc2e-8fe2e15ff9ae",
        "name": "Clear Cache",
        "item": [
          {
            "id": "939f6d07-cca1-40c0-bd0d-772d1bdee781",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "66f5dacb-d2eb-42f0-b639-7742235b1650",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "19c545cf-93f5-43a8-a0b0-b7abe644fa4d"
                }
              }
            ]
          },
          {
            "id": "3f0d7731-3d98-4dc9-80c6-a2a91c19722f",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9a9f22cc-1a1a-4690-a161-f4bd3b79e5e7",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "31636ad2-e072-4300-857f-9e7223f862ef"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "384d082a-2924-4673-b9b8-cf47a5777c54",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "045e4e5d-da4a-46aa-b309-545bd0707b4b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "62e64744-5fa2-443e-80ea-395f3b05a5c2",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5afc9da4-a173-40ce-ba45-98fd59ffba49",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4e690cfd-5784-452a-9e0b-c3f6cf6427d6"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ae7101fe-e1b0-4018-9bc5-03011516cf20",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1412b900-1124-40df-afbe-d86c570dbbe1"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a5e448e3-ea22-4c17-9123-e8185705d565",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7226d37b-7db1-40e0-aa9c-f6255168f683"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f1438bc8-da9b-481f-ae58-7df14ece01f8",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "7b491a6f-8df7-4e30-b07d-faf8f1f7a0c1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d6b9b7b1-0fc2-4e2c-bee7-629ad6adf034",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a3947750-1c10-422d-a0c6-b3916bbc432b"
            }
          }
        ]
      },
      {
        "id": "d6e1e18a-67e2-4602-8c86-3d5f343bc381",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "6461536d-d13e-4865-b0f5-f7b04378f667",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bee7eb53-4a7e-497e-b73d-9e703bc0a65d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e7acc3a7-dc2e-4685-83c5-7055a15738cd",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e995c7e-2091-4fee-b2d9-43366550a4ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1c4f4a6e-2e3c-447a-bd67-27ece5a021c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c128ba23-5478-4d17-9715-2c4716011688",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6af80b74-798a-41a0-aa13-500dec655939",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f5cd1514-b09c-47a6-aa98-5d31029f1030"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e374a5d-a958-457c-aab7-1e2c120e51b0",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4628dbd5-ae4f-480e-960c-ef23d34be8a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a3f2ee3c-dbc6-495c-b13d-f136385c84f4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a9e38e6b-d851-47ef-93af-eb84cb5d10f6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8d5cda5d-7370-4171-84a5-7b1f393871b9",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b960e974-3511-4027-b946-ba29857dc2e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e0bba2de-66e2-40d2-8507-c68efa7e992a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f96f824-ce6b-4cb8-b5c6-07d030e0eb85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ef41510-ea93-4f5d-be28-8bed972dd941"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "d0e05f4e-d20c-4772-a99b-a759c3732ec3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "960de2ee-ee94-4d3f-917f-bf9f1ee3b161",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9efd94d1-eb6c-44c9-bbef-8a30c33b715a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "e808d1b9-a69c-4a62-a625-2ec53a04c005"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "461748e8-8837-45ac-9162-d58a3e3da29c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "a2496919-756b-4107-9480-620dd52523e9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "26a18b1d-0ce0-46f3-9bb4-7371a4a1d491",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "eb71d2e4-8e6f-46eb-b055-90cbdf4fed11"
            }
          }
        ]
      },
      {
        "id": "d4d174f4-bad7-45b0-990d-c220840adacb",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "90f5b169-e2b7-4b2b-8dc1-0f93ceb2e243",
            "name": "Negative Testing",
            "item": [
              {
                "id": "350dbd56-d160-405f-abf9-c84403761493",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "b7235057-997c-40a7-bb27-7e34d116f06b",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b43ba812-de86-468a-9352-4e9e3449387f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cd8eaef-14cc-464a-aee4-da075e713265"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcb85081-ac19-4aae-a071-f87d3c7b75fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9b997e97-7c38-4b6d-82a4-d76da81d5b93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db1b77aa-5a87-4a8e-a018-599f63ac4bc4",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8c3d16c-ee0f-4851-b3ea-eeda5a9e5d17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dd45be3-67ba-4e4b-870b-e8be5f5524c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d029ea48-f798-4a7d-91b9-c8c0eb6ece3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6fec9180-bae7-4ae0-8e3d-5eb1f0e4e4ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "650cc3de-ffe7-4e48-a9fb-315e72032eff",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf69c915-b782-4577-9dca-825b863e331b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4041bcda-376a-40c5-973e-f3bf86196377"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6908b9c4-c361-44ef-99a8-30bad3bff76a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a2d4fa28-9903-474c-b714-cb610cfb1105"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae6c588e-14db-42d7-a822-9afd123c5fd8",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ae82e77-9aad-40fc-be40-8355151fc931",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9daa931b-3645-4041-ae66-4876cea39aa2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0816abe4-f138-431c-8b58-2e6a364e00ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "49a44b0d-e9c5-40e3-a9d1-11cd65c83905"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f914da7-2cbb-4898-9563-4918dbdd4c50",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35bccfb1-ea76-4e51-b84f-d2d2cb3d30dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "537c97a5-1cf4-40dd-9050-ec655f817a32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60ba28a0-c109-4cbe-9839-5a5b39649930",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c616c1d2-7886-42a2-87f6-df94fcf28351"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c3207c3-1d37-4f59-b364-d5efae5de59c",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca59f731-86bf-4a00-bb4e-ff3886134f96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ecdfbe4-3c0c-4a42-adf7-0f02d562ebd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14c44381-fe27-4bdc-80bc-854234ef7fee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4c8f7be6-d169-40e7-9c28-5d084633abe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "547c2d8f-2139-4cd6-9854-ecddaaa3de46",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66ded904-e778-4d8d-a01a-035ced4bf17a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1e7ca7a-f571-4f93-89aa-392ccd259bbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "056fdd90-6bf1-4adf-b7b3-9a77e327d4b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "82f6a388-374e-4281-b459-de75890521eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "899a9601-5265-4d20-a831-efb571dc10f1",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4d0637d-36a3-43fd-9ee1-2d211ab6f416",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7b15006-10e1-4f24-ac4d-7526b59c2a6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "970e0dbb-c7e2-4f51-b6f3-6126ace4568c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bbfe1b20-b0af-436f-a2bd-c61ef95338df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dedc920-6678-4841-a88b-389f7f682c23",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "411d898d-7694-490e-aa09-7921cb6f4a66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "758b4be7-ae27-4389-8bbd-010af96cca92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65ff95c8-3fa5-4ec9-a275-80f206cd5f42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aa12e156-4556-4dfd-b906-cf8fcfd6a0e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4513518-96a0-44dd-8fc6-065669c3e797",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66d7e363-3ab2-4295-8cac-83bc30666033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3583ff69-17eb-451e-8d71-22ffc9bc4b7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1230f7e3-23c7-43e7-9adc-3f376719ebb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3a474ca5-7fcd-4227-a601-299fcd83bcf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dee7064-b233-4a91-af28-fcf81821acc1",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "618bb3d9-9124-4c70-8678-0eb76aaf76a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2716930b-8d33-4495-98e8-3e8cf51380c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76f424d8-9baf-4e31-a026-39127d8936e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6e4b995c-69c1-41cd-9eab-b041b271f45d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36d9e5e1-6fd6-461b-bfcd-678e23a84c62",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3261ddae-134b-4165-a6a9-1866d3df5571",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a556d263-78e3-499d-bde1-fb718f65e654"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6d6aeae-2fa1-420c-910c-17c16ff35dd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "33af40c6-debc-4e4b-bc42-ea1debb1561e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fa4b90f-1746-45a3-988f-0d8f02a55333",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eca76b39-09ab-4835-a8bf-0e511543af23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ca2a04a-6d11-4e14-b546-865182702efd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a042b4d5-e352-4090-b008-7f106903c08b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6c42ed0c-81cb-482e-93f3-933d73d5a639"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d275c799-1bb2-4c74-b61d-563e1e17e29b",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e0f95c8-912b-42b3-9c85-554cc221a4d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "caecda51-da82-4028-86b6-b389f8f4d354"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8221e94-d317-4f43-9e92-05bd997bafc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5adda008-caad-4ea5-b6e8-bdac077f088e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be3a9dc8-ece6-4b04-a2f1-e5bfc0ed0698",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c32d9b2c-1699-4e72-807c-a4574a918d27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f7cf229-f81f-43ed-beac-13b0842bff11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75f44054-ccc5-4e51-97d7-5846d92bd616",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9050de3e-0276-47bd-a0c5-f8f4c3ba905a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37cea098-2875-42c3-b6ce-0a7205578a70",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d77b74f8-c67f-4b4a-bcef-eb276a14e2bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dd74bc0-5167-445b-b6a5-acae1d087c61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d12aeb71-006a-4c9e-88a1-1e9518c0644d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8af96ffb-cb34-4c86-85e8-2d91725b4b5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad4b76ed-20a6-4ef4-abd4-77a1efba81a7",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dd943dc-7d2f-4ed4-9d57-39514a0a9c3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df4977d2-55ce-4510-b873-ae1371e2c725"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e96c4f0c-470d-4586-b4e6-de8bdf1bca2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6a744b52-870b-4ee4-ab59-a9da03b4500f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a231659c-28d6-4ea4-81b1-b0ae7e80802e",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0a00f9f-acbb-47d6-822a-4b6c647df51a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd744d84-9d2b-4a70-beb6-42dbf91f5fb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "801e8dd0-a71d-49d4-b9f8-71e6b3561ab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e7909e7-28de-4774-a637-d93a116c6736"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afe6ac96-79f1-4b93-b460-9189998b72a3",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bcff12b-e6f4-4793-91e1-8c2795938e83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d1aa662-5f84-4ea2-8f0c-61fa1c878f0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "283c3688-eb06-4ac6-b5a2-ad04039e94cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b05203a-725d-44e7-9a91-23f33f458e99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73def4c0-7ee4-42e0-b752-8e07f06c42dd",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd54a14e-bc52-4f93-954e-e1735c62fff9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c3da153-dd34-45bf-94ef-dbd29a8d727c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08bc0a12-dcbd-45d7-b015-41fb5016be32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7770f90-6ce6-4f06-b8f2-9d953cc63224"
                        }
                      }
                    ]
                  },
                  {
                    "id": "317e2ec5-52fd-4cd6-a00a-755e3a849a3b",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ee183ec-281f-4812-98c0-3e49409e6983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43a29021-066e-404c-b762-d3cdc548273d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6c26ba6-9a1b-485a-9c9d-8435e880b124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6bc750d8-5ca9-4c3d-9142-0a969acecb5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e04852d-faf0-4b62-81a4-37c308f3dacd",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cde3929e-2af7-435e-b323-8c964c17f332",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2668d88f-bdf0-4fdf-97fc-ebebbf4e9fc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "680d3f3a-216d-41d1-b719-26d93fb810a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f6dac685-faf6-4231-956f-e18368ee5e9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d99efee2-95c0-4199-acac-288fb902e547",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff6b6824-123d-4b5f-9092-ea122f22f178",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71364284-ff08-4999-9fe8-684912d4f9c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa1ee4fb-ceb2-4718-8c6d-5741480c1def",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "38a7a7a6-3b49-49fc-adfd-ff01a686035c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fd86ee6-9412-4925-a106-25210b82a7d2",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1c2ea6f-36c9-4c5a-8028-eb2ca733bead",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f76780c0-da36-4cc2-ba3b-32f35a35ad13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4d8e7ef-6ca7-487a-81ef-72cb495bae88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e17e5ab3-f499-450a-9053-7c6c9ff4e8f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92cf019c-b1ba-43e9-9730-b5718af91865",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc3b4dee-80aa-4069-aa4c-4c757a9399cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "874fa590-42b2-4c4c-8e36-8a4afa0f72a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc539d6f-36b3-43f8-afa0-43d555833675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b287f869-b7fa-4547-b393-90464ee0a61a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1357acd-514e-4710-a915-76d491c13cc7",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc391aea-8415-4ced-9603-38dea040abda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "602b3c2e-a040-432a-93f1-6c3bb88b88cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fceed41d-7033-427f-b41e-e683691b96ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7dce8362-bdc0-498d-a69d-b7c6eb1579e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9be0896-e6ee-4acb-86a5-db11fe7bb20c",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "205def6d-6c9a-4a04-aef9-55d8fab77beb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48606e82-2df9-4a8f-ad5d-ca9692a1bee1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3773be8-a3a4-4599-b1dc-ba5f7e0cc2e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5992d948-46c1-4af6-a257-507c9adc6d52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "561861df-e73d-4db3-ad0d-afc464a008ef",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b17a409d-ff6f-4471-ab70-1f886b477428",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31b2783d-78f4-41ac-94e8-258edb9b18a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a773326c-cee2-4aad-9f2b-de0fefc9215a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8f84377-0c1a-47ca-8cb1-9606f1eecdf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52aec8ed-9d63-4bb6-b0d3-eab8d139f892",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "892daaff-707e-44b0-9460-5f71fa1e6c93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8cbd88e-ba0d-4b64-b86d-60483ab4ae70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48f91717-f6f1-46ea-a16e-c8ee322f2e40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "03f88c84-89db-4556-98c0-933915aabefc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e3dae77-93ad-448d-b5b0-f1a3804cab41",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eaf0039-6c1a-41c3-8211-d7f034dd9cef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c181538e-2d5a-4522-8b7b-69dcef05160a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aaeec49-dfc7-46d7-9268-3158979fb632",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "4988b01d-409b-48a9-91fb-8e61b5cc47a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "970d0484-62be-49d8-84b7-4bf2e90a2331",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18aaf07e-a94a-408c-b674-7c16ed89a7ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b948318f-9a3f-4130-a945-844e81138d72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec59db3d-45eb-4ccf-8280-263cde30859c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8adb082e-6651-4dbd-b635-a2ebded7017a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd2ca927-08c9-4090-9a35-af3a77f12f65",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17dc0a86-5d66-47fc-8346-23126f9b1890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a9a65df-0702-4882-939c-468a8ecff6a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b56432a4-9703-41b1-a367-e77eb383980e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "81568afd-279f-4c73-a508-8b87f14e0d4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f21667c-9f30-4418-bd20-f92f18f464d0",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b7d0c46-3af2-448c-8850-27573cb3e49d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4969c0e9-cda0-44e8-acda-f59054183407"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "456cf452-0563-49aa-8a73-7670d1302f25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce911636-3770-4124-b51b-bf82c6fec6e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e060c314-abbe-4c7c-80cb-4713a6a48335",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c46005c0-0ee2-4153-bfcf-275e7884273e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "582c8916-fc83-4cfa-a7d7-0dd64f46c061"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "856b2419-aa20-41c6-add9-809a5e7db512",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dbbfcceb-0f3c-4c6c-a27d-c2d7b00160c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeee3a43-b983-4c45-bd27-4a182d6adc21",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eed5f045-2931-4823-9d6e-5fd091e942e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a99d37d-9260-4c94-8e8f-4edc9183514c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db80594b-bbd0-4974-83e7-4cb4f3adfaba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "0ae872f5-83af-4586-955d-3530729daf89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea556570-5068-4dc9-8f79-99c1c69e924a",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc925fca-cc38-423e-8c23-8dd2acb97a8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "53ca0489-8f04-4d8c-b758-bde534dd92aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a167da9a-3409-46e3-b85d-5303cdc2daf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "37000f51-608a-496f-a59f-217fbf45cc24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b89a454-b60a-4784-abb6-4ef9918daf25",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8d49127-2507-45e2-bed5-93074bee185b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea8857f0-656b-4219-bc61-35d843a6d0c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "942efb8f-e70c-4e61-b4ac-248ac7884ba2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4cfa828f-6f9d-4fc3-ba3d-f1e41cf0cc46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b97f604-9833-4b52-8c6c-8e1d8d34f02b",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "038eaf17-9316-4074-8778-05341a3119f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35210419-1b8f-4fbf-8884-d78bbe667015"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10d6af40-13d5-483e-a192-2f939dd83808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "791166cf-f8c8-48c4-808d-1291d768fe00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83c7661a-5583-4710-9648-66875f2148a9",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d97c0edc-8a31-4456-b824-0b4a2dfa0688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed20d2ba-4d1f-4356-9049-1284b7baacf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b814722-7bdc-49fd-ba77-21311b279642",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "51dfd1a2-52a9-40b8-8b67-9e1f43b54bfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b114d559-e053-49f2-98ff-233bc246baf4",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48ae5f7b-283d-4178-888c-d8f86aab5f38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94dde1cd-1d65-4c5c-a6bb-b9a05c04068c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d303e520-6147-4dee-97c6-8d652cbcbd93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "28058d06-8422-411f-b897-c00e0b4a4a29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6969be95-5fac-480d-b8fc-39a642fd48d7",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f30488a-0817-4829-8c55-ffb10c04ac56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9abab96b-5041-49ce-9bd1-396bae948306"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed65a70c-189b-4d09-ba2d-86f2b49454e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3be6554e-b870-4b4e-8419-123440aa4421"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30320c73-1250-4aac-8b7f-46e92ef0e333",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c8321d2-de6b-44ee-9efe-25218741d26a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e9495cb-617f-4ce7-9f28-be7a5f339937"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "073f65c5-a0d6-42b7-83e3-fbcfe7d36aa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "86942fad-61c9-4006-bc00-91409da4e2de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e50cfad-ca41-4616-a0fd-4c4b114a1332",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43318496-5cc6-4d1a-925d-43fc3f2316c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "983e5de9-1dd3-44e6-9fc1-4ea88fa45e47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd4fc6b3-707f-4a55-a69b-d2124278c960",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "73b887fa-d2b3-4cd3-ab39-2548a18f965e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86011de6-2e4f-4379-9dea-2b094f59e2c3",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42ebcb5e-5f78-437c-81f1-b1ebdb593bc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99193d26-3826-42cd-ae89-f73ae93b1772"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f3d8a0e-8c18-408f-be5a-b6d3d1ce90c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "fcdc3533-8b4b-4753-b337-e83169532b11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2695e4c4-663e-4488-8454-136c084a4921",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff283314-30be-45aa-b2f5-45c77ba7e426",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "534cf5bb-88ce-445d-97a8-862ed1f202ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afd491c1-7445-4d45-9be6-2fb2f04079b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b8df198-4d79-4cf1-92fd-9ed274e49bd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "661ca09e-e04a-4846-b1e7-92965b765c33",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7f7fc64-642f-4464-9bc5-24597b639da3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f317292-f26b-4c3c-a642-4f10e356aa19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "808eeb78-cb98-4e44-bb28-1506c1db185a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "24de61e9-021f-4c90-bcc9-6d61a1bf6260"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4ff486a-a79a-4777-92f5-4001ba8c3301",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02f63bbb-98a1-4c26-8705-04ffdda20a06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52bdb4d1-9718-4eb4-ab0a-101e3f355b9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "950a45e1-f0fb-4c75-8cc1-d6846b18479f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0f819da-0ee7-4f15-b35c-2cdb28185706"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6df9bd4f-c66d-4850-83c7-4f2744966a50",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6241103f-15e0-4402-9e23-88f4bb73d7cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ded521ab-1fb4-4a10-8b0b-9870d8912290"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65f66cb8-f99d-494c-8bc1-dbc96a054bed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ab0edc6-0c32-4ebb-b2ff-2210edd8a43d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddc0e286-628d-4f57-a4ab-5fd6582edfa3",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fd8f519-9b75-4046-b67e-25d7ac1a6c40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21b6f262-063a-4c6e-97ed-36b1023016ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08d06e52-f84a-4d8d-84dd-6573c3cc2aed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1f061399-1683-4efb-9918-6b3cd592309e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2927ac14-776f-49ca-b48e-e959ff28447d",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7236104-6c28-4177-a239-b0aa1e7f27f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2245fb11-a0e7-4355-9964-b26648d30ef2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d53a2ced-cf8a-40e3-8289-e038dca8dd19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ea6516c1-c2f5-4c4c-a4cf-0cd1660385b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65fa902f-61aa-47ab-9866-d726e4a7632d",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeeb130b-3ad5-48ed-8aac-0f544956ad11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fec35a49-e350-45c3-ba18-305c047f6eaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "616ac00d-1acc-4f30-89e8-420d9731763a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "c29f59ac-d42a-4c1d-9f34-f4c7c367593c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a75d0ee-ab7f-4c45-9ec3-9400b54affbf",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5405bda-2d5d-4014-9b91-efb3a4c6ea6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c89843a3-e30a-462d-a102-264fc9e0504b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a931fab-027b-4679-9b95-71722fbdf100",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "31fa343a-6c7b-44fa-a972-13f594f59ca4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a449d5d-1223-4b22-8b92-b196398e726a",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2324b6c-ce25-462e-a524-931d8d833576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d0d0241-d2f4-4661-8296-d29fde96c8b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62de0a9a-1eae-439a-9e3b-9f8355069579",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed27f652-33bc-477f-becf-57779432364a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b36cadb6-b026-4efa-95dd-655403fc12dd",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ef4481c-9c29-4469-9655-672d4b1ac443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef522f84-564f-4b98-9429-32578ffdeecd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a1f80bf-ab9f-40cc-a411-f9a7c9ee707e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1eb5d09a-19c0-44f2-8d16-0c9569f55fd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78af94be-d0b2-404f-bcf4-f4d74cab8957",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae25a0ef-e0b3-4b3d-8df8-e153d2ba1e6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c79472a1-a0c1-4130-a90e-086dfb44159c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6f6c0ad-2182-4891-b163-9b0d1119d951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "787e576e-bc2a-42d7-99e2-8979d7173fbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de093531-b392-4b1f-a84a-de04d21423fc",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0919e9b3-9772-45f1-99b8-dfd0d82c9062",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88afe49e-d62d-4375-969a-cbaef92733b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53d5da37-348b-455f-928c-d4c75ff75a08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "3ee9ca0b-6721-4fb3-9ff5-ae93da2c014f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27648dd5-b857-4ff7-901f-ee9894e28b82",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53671405-9285-4678-912c-a405282b0cd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd4de69c-5976-4137-8001-26e35a4961de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ade30d4e-e2cb-43a1-81bf-242b40f7745c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "30980232-a256-48d8-9a84-8dd7e5ee89cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2763b518-c8b2-40d9-a465-ccbb1b2df1fb",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f833f09-193b-426e-a9d3-a9e4f21a2f31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c4eac06-1500-451c-958e-895f5f489d5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3760c0e3-d74c-4ffb-b813-f6ecf6b46fa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "48749cc7-c3c3-41ce-b73a-2b1a265f9da4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "521c9159-9cd3-4da9-8e22-24be7f330a69",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4edf70c7-adac-4486-978e-ec779c505c79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15aa5717-7c1b-4124-8643-e29ea92709e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a073f057-6ee8-4199-85a5-0225939deb5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6e259d8e-7ee8-4e28-8db5-64e4b9cbc090"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78629efe-d1fc-4b46-b0af-2f52d95deae2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c631169-50bc-465c-9081-4ac6aee89d9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ad351e8-027f-4556-bf47-8ad798276712"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a05163fb-434d-47bc-aadf-159df01a990f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "42ada548-03b1-4716-a5db-79fcfff8cb97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3617eff8-66db-4d41-b022-3ddf2838c592",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b1ed372-05c9-45f1-a417-8b339c1282f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24936805-7ae6-463b-b733-cfed3e21ba82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e6f7058-f800-4d87-a906-7cf1bc7227db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "1f1f5f5e-8c99-4ef3-b649-bd2eb6497a19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1e5556f-f365-40a1-87b9-9d5b6db3ed9a",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4114e793-48a4-4d89-8c61-f5506d5e3f5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1ee497d-c2f7-46ad-adec-5b5b8c49dfe6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daabaa6f-1caa-4ae9-80d2-f8d0aa7b96b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "74b45372-5bf3-4f19-b92d-75b504a78833"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0985dce-6552-42d9-a866-d8cf9649a4ac",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c804522b-8606-40eb-af93-f0569f2e8ef4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "530368cb-b941-4233-865e-212d0dff433f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f91fd9c5-8ffb-4cb2-a359-c6b62efee950",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d146502-eb12-426a-9e34-e0a2692b1d63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a62d51c3-e5b7-45e1-9eb6-18dc22521472",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05711bbc-a91b-4e09-b5b1-9445d6168fed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59480f4d-ee0d-49f0-a29c-e06fdc7654e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "745b6175-0aa3-4747-928b-35b0604de75c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "83afac75-e747-46d5-8a4e-60010ead1626"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7da9f3e-b43e-413c-baa5-f3717e84412d",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9e502da-2619-4369-b003-e316c50dae6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca3d4cf6-de98-4fe2-991a-546e7db1e1df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3615ed4-206c-466b-9753-583443f6252e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4747697e-b648-4519-b98c-ed3e0b6cf802"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed254372-5953-4769-a280-9a47519a2d4b",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b0d5b7a-a683-4602-9236-9eeed7ab83af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44f37a94-511f-44a2-ac13-5bca5b34f686"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5f36907-9953-43c4-8b48-a10efec5833e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "135ca1c2-5450-43d0-aa07-91b64e6f220b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24459119-e5cf-4ee3-b47c-26a71cf63ceb",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c28cdec-ed1f-4d59-b679-c97b6ad94a45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12352235-307f-4a15-8c68-edc243ae99fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd1b6c31-062b-488e-9f00-952aa0f4fe19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "27d8fec3-70f1-4384-ac8e-cb4144e758c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4981ead9-76bc-4e54-8dae-a945179ff761",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afe64042-8fe7-4e91-bd15-bc4cf2dffb19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dce9e6c-f749-4060-b560-c36cf67f0faf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "357acce3-6035-484f-a79e-a13732d4be58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "54c113ea-cde0-4e35-b314-87a04ff566ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6cf21be-4ecb-4142-8474-19b420d4a73d",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0bec128-8ccb-431c-9b0d-0a390fab748e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8277a94a-e996-4c54-82aa-c746960ea17c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a154345-24aa-400a-8744-9305743eff6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1988f759-e715-4586-b617-975699f6bd5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2afd9933-6e8b-49ca-94a1-d7ae807c02fe",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bcde764-05b3-425a-9d69-050ca91d9351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57c27ead-9006-48f3-b34d-9f77fb090d7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdd677be-3e6f-483b-80a3-0e87f39d7c53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc55f3ed-f706-4e58-8d8c-2ac7ea39da80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8734ac29-79f6-49ff-9f54-c9475b4cb259",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25e5a597-3837-4822-8888-c48f33f6077b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "357198fb-56cc-4a91-abcd-7b3dc8407f8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98f3e3e7-a4ce-4909-809b-791f00678b05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad49e3f9-2e0d-4d00-858f-c9dde0ee4017"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb22686a-8ed3-4e7e-b820-901dad954167",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c03ad23-f648-4ddf-b9e3-d7f7912e010c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fb7632d-35f0-40f5-8a0b-5ec7d62cca1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7ce9243-9c48-4d98-94ff-75d3db642668",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "51cfdb41-c8e2-4cb4-a1fa-7639fb4d9fc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bc5e48e-8b83-40e6-8a19-acc69ab42b50",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5f588f5-c1b1-402a-8a30-cb8642d6f42f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1beed64-f539-4457-9564-cf76dadc9015"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e52b4d17-2222-441d-a4f1-cc3eaa0bdab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6f03544f-9d36-46fb-9528-0242853041c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d4a2932-6c4a-45ee-96fb-6b5f47471ce6",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc1ebe88-dd47-4f90-b3ad-f72f4d8bcdf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52bc9294-dcfa-4ab1-8b5a-09b5bfe9f0de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d37d8f7d-6278-45fb-bd5e-3b649db9b976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6991bc67-f4ba-494d-aa6c-f92a70afb750"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc9e8afb-c2bd-42e0-9438-2486f2337496",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "431f72c1-42b1-4bec-b7e0-cf4a68248689",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7380fe0-6255-4dc6-9f26-b484f9e0ace5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "656ba5ea-aa3a-453f-b01c-6e64402a8b48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "673ff27e-6dd4-4e7a-a145-969dfd4b9bee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d54acc8d-827f-4bce-a62d-451abb468c07",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be415719-f04e-4520-a64e-ad14b33afd42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36b0fe16-5fbb-4f37-9bfb-b6a7dd0e3049"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48dd777e-d1be-4ba8-bf8b-b7c63df966fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d07210df-caed-4711-bb1f-8868f0e290da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df51064b-d51f-4632-8f1e-7e9a98d73ab8",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d95fa987-aba5-464a-8173-427c4bd0095e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4acfd15d-ef3e-4ee0-9741-53983c199a9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42fb06af-c116-4a4d-9cb8-f0d618f5b42d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d34d232b-4db4-4d8d-98ef-4ef1023ef242"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43680f28-1560-4586-ae05-b5861876ad57",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b35fbfbd-a8a5-4aa9-b311-aae55042c686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc2bc6e5-0a23-4173-94d8-ec1694c2d283"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8db8b43f-b477-4e82-814a-559c03fea257",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b410510-8e35-43a7-85f5-ea17898ac636"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd1c4c9b-96cc-4ae0-a2b5-f7843a9459cc",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb4f3ffa-7a4c-40ec-932f-b5efc4d258fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a12cb4e1-62a0-4008-86fd-465de1c7e4e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66cecded-d4a5-471a-8956-064653c19ebb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c5e2d167-16f8-4419-9901-28ea261168d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "462a8eb7-3a1e-4510-a7da-4c6d0672afdc",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efa9390f-c2cf-4cf7-9c0e-e9588bdcd2cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f0abe52-f04c-4262-bfae-8bbe94552221"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b420d17-f966-4f2a-9e6c-c5c8c84edbb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "11517ac5-e23a-4ae1-a926-c0d85c5b0a01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22e29744-91b5-4e49-9dba-a801b4575305",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f63dfcc4-6be5-4ee5-bb71-fe99ab495f2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7181ff42-4e64-4138-b9c9-86ad9ddf44d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9983d6a6-b11b-42e9-b065-9a993ed56b0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "da78990f-a442-4505-b7b1-3c27344768f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd5a70c0-012e-4641-8042-f9eb2e07dc1f",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e5f8b70-5686-4b74-bc85-d98a3ad5c840",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13e98620-4f95-48ba-b3d7-024f2b75852e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48fa6beb-ad9a-4c6b-89a3-efbc870ce564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "582d8d5d-207f-4f5b-92e4-02020265995b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de82218b-e3cf-400f-ae5a-5b07c888c4bf",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "659b188e-f42f-4f6f-8c87-f94b2e271b18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f9316bf-21b1-4f50-9617-d304d0529b85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3de7bde1-9d60-4516-b936-aebf35b0aba8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6680067-9a1d-4584-9d06-5658d370f0b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea4919dd-4fb9-4950-a8cf-d1bf4f82f433",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f17b6c63-0c9c-4bd6-9777-7b7c23b264c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9ca8b8d-f906-4f64-8aed-34a175ef62c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10b91e8c-449c-4432-ad70-38438613d94d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "994fa466-31c3-4c76-97a1-20b6db57c638"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cca880e-83dc-41df-b0db-ec36658d701c",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7520966-c26a-4d3b-8028-87b17bece383",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73d0c185-dc6c-4a09-8eb7-5c919fc3caba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c4de46d-4c2f-43da-9b14-d49af4e78f00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b9d73ad1-d669-4e4d-953c-bae83fcddd58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3da38ff-a754-4ef4-bf85-95914a7a6c12",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "362dcf31-115f-4a8c-9a94-30ca605575be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9067fec-19cb-4183-8b98-13fc794f9e51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b1180f1-04a7-4e37-b354-da57e8f355f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c81e9bf1-46ce-4887-9df3-6566abbcdd18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e2f4e65-4bd3-4e87-a13b-477496c592ca",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "939289aa-fddd-4cc9-aebb-e0a23a479f28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "929789e9-f684-4f75-9bbe-b7faf8d8a587"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3311a4e-3633-475f-af80-c95a644b7868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8bd413d4-b1c2-49df-848d-162b4e7609d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e14da632-3b57-4eaf-bf76-5b5beab5af0e",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cc82081-02b2-4598-8b8a-077ffbd8caf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79694ec9-d4a5-42e4-983d-e642eeea1fb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e43c00ed-595f-4c0e-8647-6e7b3057ebf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "64e90e7b-858d-4404-952a-e4cdc6d9ef06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c8b3d0a-6ec0-49d9-be36-ecc1469ab316",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16e91b02-72e5-4c47-b84f-4bae5230c8eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16975e14-2019-4d81-8737-afd2de09ef19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fb99493-e679-4f78-8bb7-bc9bc6b1515e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1df97e0b-d7a5-458c-ba8c-c0abf20d452c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab94a576-302a-4a52-aa5e-164935fcb34f",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87105caf-4405-445c-bb6c-3898b99656cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2276399f-62cd-48c6-a244-e903fa68ceec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34f753df-2477-4330-aa56-004fc17ee547",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d475faf5-0456-40ea-881b-5aee69fa8061"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cf81a17-89ba-42bf-b080-16586e3f479e",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2598f6c-fd0b-4b84-bd04-725ee39aeed3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "590149a8-2d87-47ea-86b0-dd679dbe6212"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2318075-1b7c-4ed1-a28c-3183d9a25b57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3275d49a-5007-4f75-b46b-ee787e619b6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cac6773-17eb-40c4-ada1-3f31ed586af4",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f008f26c-ed78-429b-982e-d3245639fd6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "d47d6383-ae21-44bd-be37-8436853d19c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aa532f7-cb2f-410b-8fca-25e0604c0886",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "1b335d6c-5b59-4fa4-9693-f5e1c4cd6fbc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d1e7bdb8-4289-4462-8bd5-c2d7b7b13d88",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9c5d408a-843a-4319-8598-c59a4b7a0841",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5141a868-00cd-45ed-b750-c6ab3efe3429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "abcb7bfd-f5d2-4ddd-912d-96b2ba84f43b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00dd8215-e092-4327-8742-2d4ac5b80124",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9fc13770-51b4-47ce-8ee6-79334e6f64bf"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fb233cd4-b70d-4eb0-b64a-34261d89e53a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dbb66e77-6a0a-4c74-9d8a-2f6a6264f98d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0005ccf8-478a-4dbd-8088-1c0b2c0b0dd5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ea877e6d-520d-40fb-ad5f-dfb8f6ff1643"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e110dca1-3b1e-4fce-bf35-c7248b38a3c1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fb2aae87-9fd4-408f-a4ec-d8c94d367b77"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "94c653b2-26ee-4cb6-aa68-a60f121843aa",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "19db1c81-0f35-45f1-b09a-f62c31855da9"
                }
              }
            ]
          },
          {
            "id": "6ab42659-926b-43b5-85dd-c32919d6ef72",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1000bbd1-5800-40a9-b330-7d77b99c4699",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "6267159e-6ba8-438b-83da-208cf6168312",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea99112f-7c0a-43a1-9663-dee9a28dce04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "5e634eb8-7dae-496b-a698-582e81b26fd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f043f665-214a-4748-9c75-71d39ea7ba97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00f9d2b1-b5f9-4e95-964f-70e70d6db73d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c0e8ed95-220f-45a9-8459-6b2598c519a0",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "559f50cc-12e3-4cb3-ad8e-aa60d030a614",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e62803df-a586-49c9-ac87-32c3b4bae41c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bdf49c7c-27e8-47cd-9abb-e75948221f03",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c1d37c9e-2512-4f48-b6e8-52a9904b768b"
                    }
                  }
                ]
              },
              {
                "id": "a16014af-04a2-4c9d-ae8c-9b98e0d5f051",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ebcffb55-222c-4b53-a61f-889be16f1716",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5bf3e7cf-4d97-4864-bb58-91be17cc2a9c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "465b1a29-a910-42aa-a372-196ca2fdd584",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "42b48248-621a-4128-9579-5d0373503bc6"
                    }
                  }
                ]
              },
              {
                "id": "2d26d0b2-2679-4cf8-813f-2f39fae66f1c",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e17ebe59-85e0-463d-a1e0-64af5212af57",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5c3ed7cf-953c-466d-98f2-b9f91b0d49aa"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "657679fa-7266-4554-8a16-f9f9a83c5e97",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7b61800b-d080-4fe0-a4f2-bbdc27fc2cd3"
                    }
                  }
                ]
              },
              {
                "id": "de46573e-cf50-4c5b-b742-22eb4453db72",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "be6ff94e-4f65-4bab-ae76-dab557fee3cb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "54df6c1b-1559-4d08-a3de-d42527e9ac86"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2df214fe-3cda-4381-be7b-368494e4ff03",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "17a2b307-cb60-4267-99c0-4ea4e6a05f2b"
                    }
                  }
                ]
              },
              {
                "id": "095ef0d2-3c8d-45a7-9c7c-b9467db10f27",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "58571dcc-83bc-4ed4-855d-c52ea4847599",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9bd3d02b-032e-44d3-8a90-14979df7999a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d69900c7-c835-46c3-aaac-3fea086a79da",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "33b826be-0854-49af-b5c6-c33fe8e82b7d"
                    }
                  }
                ]
              },
              {
                "id": "58f76ddf-9ad5-470f-ac5a-f343c4fcb197",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0b1873ce-0c6e-43e4-8458-6b56d54d0d95",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "08e70362-daae-4784-b056-29974bb8b45e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "75b435df-8f35-4f01-aed0-ff92c18400e3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "26e754fb-15b7-4ec4-b5d4-16bfbb770709"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "af852309-3ec9-490c-93a2-41a1e425fe31",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "aeedf80d-9503-49b7-ac71-cd0870f574e8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "934a8d76-80e2-4fb3-9466-b9f68d4c6f41",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1e9239c4-7bba-43d7-bd17-740584817756"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5d9d8088-9841-4bb7-8468-c3aa6bb8639d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "008d2901-8a1b-4f5d-97ab-dd8022d32945"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "06144c37-b149-4c93-8675-908714e3aa01",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dfe82723-09a3-4118-8a6c-8778515b4a36"
            }
          }
        ]
      },
      {
        "id": "81e53045-681f-4b90-aa3c-820978c591bf",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "7669fc5b-6c05-4405-a599-5c2cc4dd9ab7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9fc3d376-7868-4395-84f7-ce2cc03f961d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "73ac018f-9344-4abf-a2be-e79817413926",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7248c1e6-dd76-413c-8830-c78525514652",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca5a9bcd-526c-44cb-bb7a-b14e16ac57b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d30faba0-89b8-4a82-bf56-ba80e16988bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "c9712379-eae3-4998-86f7-8a17eefa51b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf8c8ed4-5e7e-41d0-8e9a-e672aa56d25a",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e891264-bf58-42e0-9356-87cd281be9bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36ae1f58-b7d3-4b16-b3d5-9c2859bcecc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3f0a989-fd8a-4c2d-af20-c7c77ad54888",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8280ea9a-71a3-428f-9a0e-24d039b8f1aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffb66da9-a6c9-4c4c-afa6-d93b6295a20a",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30ac626b-6f05-4103-96f3-73555f516f4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4e2f028-c4c4-4662-94c7-ed4302a9bcf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22ac6ace-1f46-4fa9-a37f-8ab68d1b6614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "be0ecc94-9e46-4fc0-87e8-cf892e3b8529"
                        }
                      }
                    ]
                  },
                  {
                    "id": "132d7038-8c88-44dc-b296-95e85baa2e24",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36717c2a-906d-4266-8b9f-14a3f22c1712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b30d01b-37d4-4001-b836-8805ba8f3ba2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b43a00a-86ce-46b1-a3fc-3277b71a4fdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9beab344-15b4-4588-9564-b08d14f856a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6161b8c1-41c4-49c0-b087-d09e7f4d0564",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b39741b-8e4c-4a30-b018-42a99c241f9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e33b1b8-1e53-4b6e-97d0-4f4f98469e09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a0448d5-aa7f-47a1-ac8e-f23170b1c86c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6bd230d9-1887-4569-8cf3-1825e8c2b1ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "260a20a1-519b-406d-9afa-b20c63649e4a",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65bd9da6-9479-4402-91b0-568fd09943ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "978fbb04-9643-46a0-861d-9bb51cb889d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0619b969-5f9d-4912-82e3-2869cc72050a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6c720d0d-fbbc-4d6e-acfe-b84f6abbc32d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29ef98bc-07ee-4d79-b7dd-aab903e7f1c3",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "609f1417-b069-48b2-b6f4-ee2e3264775f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d14be8b-0a20-4d98-abef-db14c276f94a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a2131b8-3256-4b71-9a41-b1e3947fcf29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "927796fc-4aa8-4b94-ad11-15f9101d68b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f3cfb4c-f086-4785-922a-8547d0219c54",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de2f5ff1-369b-4b22-ab20-2bd72cc5fb84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a9ee56f-3960-41e3-9d50-717064b45f57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2103cbb0-6de8-4613-b66e-068395c9c804",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f06b759-f37b-4fb7-bdc6-96ce0296e06c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aafdc4da-ab79-4e2b-8f82-46d362799f00",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f2c9966-54f4-4fd5-bff5-caedfcd5aa71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b997bb9-22a4-4a82-8ed9-aede97d30a7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "009b0896-4aea-46e6-aab8-84c5de76a946",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4251d4cf-ad12-4b6e-b7e0-4d721fcaeff5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "941f4f0a-5ac4-4346-8a0f-225cc2ede6d2",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5846a9f7-6574-4ec1-bee8-f76c06e61ba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13e18d75-df60-4a9e-b625-2e75b036a65b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfdea3bc-0b91-45c0-b289-f50145b80610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b2fbbbe-01b7-4c52-a6e1-6c6232523f62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01bff694-12fa-4f72-a39e-2f471d6d85e3",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac4308b3-5a55-412f-b6ce-83d2da42958d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d431f102-f1d1-4e69-b343-59c808475373"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e2e5a09-1c4d-4fac-b347-4613b2d0bada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "38576b08-c9f5-4540-9a01-b67442d8cbe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2be8fb1b-23c6-4d15-8a20-1d3cd508db26",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c786c50-24db-4944-b133-3f57c738ba51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e501be3c-cec2-4598-9204-83f298294f5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fbe39f0-7adf-4daf-9617-9c64af4c4b7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "30f83191-3780-435b-9a4e-91caace043b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7727b03-656c-4021-a4d0-daae87d9fb19",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e255279-45a3-4d24-9c9c-5fca20745939",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d23d1180-58b1-4a6a-bc9f-ce28c11a47f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd0684f4-d0b0-44ca-b9ec-d839c1a12275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e15af0fc-d4d3-44e5-97c6-b6f7b149268b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e492104-131d-443f-9be3-445762786952",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25c300d8-10aa-4e9a-b46f-c29185955ada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0573233c-3c86-48c7-8735-e1852bcefa66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ac0ae3c-978a-4e43-b0ab-c06be7c07727",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe2d3393-5d86-4de9-aec9-b56ad3d320a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d6d79dc-1d2a-48f7-ba5f-70fd761d9088",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07bcf146-8c1e-4c48-a5b4-2d81dcb7831e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e5f25e3-8ce5-46d1-8ce5-b68ed76d48fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e266d964-7454-41e8-9125-e05cdb90f108",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d0e32e8-dcdf-4e22-8adc-72c60a7e8174"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78e02011-6fc2-4487-8d93-de265499b1ad",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01b33a52-b260-4dcd-8f7b-cd3aa87c0b5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a44f1df2-65c3-4b85-9676-3737661aa238"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a6a0b8f-ee64-4cf2-adb0-0c3deac8b444",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "b77dcd2f-6e12-4075-9e2a-821bc39b50e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afba45c4-c3db-4a2b-a0bb-6f696e77e0eb",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fac155b0-0e45-4c99-b0d3-ec0acd5fd402",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "939a3648-79ab-4ac4-86fc-de6ad2ddd052"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fcf0d35-b7bf-425f-88ec-d64f1f551f4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4fd9427-ec8e-4a5c-bc06-50972d188da5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "053f4d53-1038-495f-a3e8-64db4696e5ca",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cb6739a-a4f9-4245-beba-6d42edffd8fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f4fa7d2-e477-43d5-bd2d-3a4e315dbd23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c6d2fda-7d4f-4ffa-b6b1-1856a37068d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5beb2158-34ad-48a6-bbb7-68d2614be344"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1c4dcc0-4ad9-47ec-a365-1606f4fc8862",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00005c5c-f672-471c-a499-cc21dc2f2a12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef7c68f8-e889-42a4-bf7d-eb208d47da98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5adb149-3aed-4efb-8f57-18e74196c3a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e189895-f077-4495-8169-095af1b6ed7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f039418-5cd5-41ac-8975-db2e16ea79db",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d5af884-66c5-4616-93db-9d52c042b016",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "522fd886-c8e3-4d73-ae76-506bcacdb7f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "248ca809-244d-47f9-a1ce-30a370ad1a85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "275b6737-5202-4f19-b899-ea7bc38d5360"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1684bf48-e638-4801-b600-04e20cb33d6e",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29b9f794-b188-40db-9a59-9c33818bc899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4736345c-15a1-4b47-a4de-49112453bb0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e83f74f-0c8d-408e-b800-c88ebaeab1d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1eefb388-a0ac-4c35-80bf-e5bd203ebe58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f489e68c-c76f-417c-a399-243e12394beb",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35a21f1c-ce43-4a67-9d19-5d4a2dabb003",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bab3c3c-1b14-4b36-a554-5994a9414525"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef990725-986a-4145-a35f-b0797e0bdf94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "693bd5d1-5e87-46bf-afaf-74ddfb91dc2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f233e2e9-31f4-4d30-ab34-44401989da4f",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55b24364-8d7d-472d-9a7a-5c0ebae844b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5311a44c-8f91-4290-8c80-58f7d98c210a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "318b1316-4e90-4b7a-b18e-adf0d8f6e75b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0db3b65-dd00-4d45-b4b3-16557b516117"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdc18941-c15c-46bb-a9bb-63d7819d29f0",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58c1ac3c-c80b-434f-ad26-84e7e8889bb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f905e26-9b48-438f-9116-990eddba9f14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b0ffc46-fe55-4857-a0de-3c36f081a726",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "86273c19-a976-4ffc-bfcb-b7af8f6f6acc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1573e8d0-602e-42c0-b0c6-ce0a72f1bbab",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1081529e-7cb3-4393-914f-62daebfa0348",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30952eb6-1793-4468-8a17-c758244ad462"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7416a3b0-e86e-41ee-a16b-23a86a812994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7483e532-5b85-4940-823b-810a7f0e26a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "230de8e9-6654-4672-b103-b622e9982c16",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7300a394-4703-46c2-afac-d654fa3a958a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb58482b-b814-4f96-937a-54002020a8bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec81cd6d-de4e-4893-bec5-2a43f5f78b74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "90a71d0d-eace-418e-b078-cbf6ace015d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c4e385c-9c5c-49b6-95b0-bb7973aaa600",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8b82e3c-c70e-4448-97b1-7daa65ed8579",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7203d0da-c6bd-41b1-8ead-5fa1027f2627"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2b0ccb0-6902-47eb-8ea3-a9f6559e6080",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4933c4f1-ce3c-47cd-8847-64201ca5d64f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29ea03cb-6f5f-4b43-aca7-45288b63b8da",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef52fa86-c6da-405d-a3d6-07341691ed0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c46d1354-d735-4bbc-8665-76d2c7564b98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48b5c289-257f-49c3-91e3-f0c74fab2d75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f156c75a-0ea0-45ba-8234-f3908036edcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c031a478-e4e5-47a7-a4d4-3296f5408323",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8aabe4e-ffd5-4353-87cc-9c91aad49c7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "854b5b00-dda4-4eb0-852c-8b9ad53761a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67455886-91c0-4228-93b9-4f511908a88f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0336915c-29d9-40bc-a413-23994391c237"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ce2a664-d737-4a18-9e0d-1f5b10f8511e",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b659d80-68ff-4fa4-9919-3ba422788c5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f43bd24-f8b2-4461-8f7b-81962fd17d79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40ef5dfc-4399-496b-b9c9-38a85ae35798",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a2425c2-64e2-4cfd-9fc8-d8125d41290d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71e00bff-97bf-4c64-83c1-f20c1adc094d",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32dc76af-d06b-4aa5-be54-dc4c18fb9b44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56200f1c-dbc7-47ef-b673-8b391370f892"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de467aad-e171-409c-97b0-ff4351836139",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "518138e0-d1b4-4e9e-b431-45fb069dbb08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a083ef1-3f6c-4d77-af3d-b405cb480c87",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db966f26-fd79-42c4-b736-402151e0e103",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc012522-d920-4118-bd30-d2afb0e155dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1da44ef1-da72-44dc-b306-95fdef7ebd8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f5fa1bd-0b92-4625-8de8-bfcb9c88d0c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7af718ff-edef-4b7f-bd27-3e6094477875",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7038e7bf-ba60-4a56-bfbd-95d57a8b1eba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "247c5456-d701-484d-83bc-ea54f7ff2413"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d375ff4-0374-4c0b-bd65-f4c0b133d0c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c3cfba1-155b-4a67-847c-8d1366a11a99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29d56887-e8c6-49c3-9a99-67396dd16af1",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6700a2a9-fac3-44ec-8413-7ad81289d70b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ff4443c-9dfa-4309-a4df-44a86178ac04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0279e52f-b2bb-46ad-8c40-497d6fcbbb7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f86af12c-8eb9-440b-8c9f-e2ec5ebb290a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15bbc6ee-3670-41d0-bc87-01c0ead55d4e",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16205489-88f2-43ee-873f-108eaac346c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7ed64d2-6ad9-478d-9024-ad69b7272334"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb526c17-062f-4790-bad3-86dfd70c9c28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "916d28ab-38c0-4504-ab90-8eb0624d8c92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffa37e39-178a-41d3-b96a-14a8811ab5a8",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28b52ef6-c314-4dc7-b182-fc4c170229c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00da5ea0-4d6b-4ee9-9fa0-10dbe3f8cb2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dc311cb-d27e-4608-b346-4ddcd8e0eabd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2bc3e676-0868-40ed-8d10-2a14654cc448"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a2fd363-d871-4fb2-ad4f-21e1f84d8712",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da92b353-e1b1-497e-9334-cdeabc14563a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3be589d-8459-4d4e-9514-2ab0bfa37f84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76b9c069-5d5a-4a2f-8f5e-d3623c2b2494",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6b5967c-bce5-4688-b06f-7deb7b550962"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fae76541-3f8d-40f2-afba-e034aa2f9617",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "319dbdc0-8740-4395-91a4-b84508effb00",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c10edc60-e3e9-4548-844e-4b858d658e74",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "1b0274b6-4cbe-4b87-bf92-0ddda3b3b372"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9cf087c-1438-40dd-8684-c969437784ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9bee6539-ef3f-4042-83f9-900f684ce212"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "450f5ea1-872d-40b0-94f3-5c9f70037e02",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "74429879-aa7d-4951-aed8-76dd6924b5c4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dc850763-ad3b-4c37-b043-c78727a60884",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "79d7957c-1894-4e13-9951-0ffb7d586ef4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8c44d1bb-26da-49c9-afdb-cbfceb02832e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0b7f4869-9eb4-4684-9e49-d82aec6a6580"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0ae365c0-a742-492e-b05d-cd18bd43ba32",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "df97ae32-0b26-41ed-88cc-2762c5347350"
            }
          }
        ]
      },
      {
        "id": "e3a4ad0a-32ac-44f1-acf9-448ad81343de",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "a68a0da0-0520-44c4-92ce-1973377b2404",
            "name": "Negative Testing",
            "item": [
              {
                "id": "52b2b188-bb25-4701-9cc0-3b9f27a4aa9b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8e420021-967a-43cc-893b-44ad2d554783",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a3e48b1-ea74-4ac6-bdbf-9dd7a806153c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "402ef079-1a67-436a-91cf-8b5ad1962fac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a23b6016-5391-49c3-8859-c577b25ce4b4",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40912717-ca69-4c96-82d1-7d5313489015",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "440d218f-b550-4c60-b5fa-ceceba0ade56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f76d504-c66c-492b-aa1b-88a88538b9ff",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f37b78ca-458e-4cd2-9bca-e0353c3b25e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f72d957f-1813-4cd7-ba9c-6a5f5ffce5e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f803512-bdab-4972-994d-6334487850ad",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3545b557-a8eb-4db7-8473-3e41dc424da9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e97f853b-7a31-494b-8f05-5f31003a3b98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d4e42c8-3fc1-458b-ac70-7cb4bb9301fd",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca3bded9-4170-4161-8833-976f2c6287bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f7ff1fe-53be-4f33-9e89-36c1cb0b7858"
                        }
                      }
                    ]
                  },
                  {
                    "id": "113dc01f-1d73-453c-b96c-948ebc59970b",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a45db47-7929-4165-9272-92a41cb821f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f99a9bab-27d3-4342-b056-7b61a2e19cb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52eb2026-4809-4315-8e28-3a4214be768b",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9a643ce-5722-48eb-b9b6-5974418e382f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18ff8b21-106b-4ff3-ace2-45e7ad066e50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4438f864-0880-4e2e-bd8c-dcb8be854c4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e38ee7d-12f8-49f4-8e4d-f2bf16950b71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23f079ff-02ee-4817-b8c6-71ae0c220ac7",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c48dba1a-7890-4fce-a0ed-1e65a018d0a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9d4efd7-7858-4ed8-92cb-f361daf07961"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d1ac861-6087-48f9-a4e6-8902188f3cb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9005a17d-4f9a-47f8-ad3d-9f3e79edbe1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a1dac1d-4917-4647-9fb1-be45863a2123",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e712bdc-d6cd-4353-9367-91f839dc0059",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e88a0c1-bf08-4e03-b81f-0f6f87397b4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c42b910-f254-4863-9814-b7d7a58cd6a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdb6fee6-735c-4706-a84e-6b51c0f380a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "182b8f01-31c0-43cf-8a8a-6bb5e6a264b2",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "496ecf79-3857-4b5c-bda6-06e990e3ae0b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e82c287-71d0-40db-b5eb-bcf5d1cec66f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84cefe84-edd5-45ba-b8c8-fa65b7ebf76f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cdb4b54-0b83-428f-bf33-11baf23d1da7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baf76873-c8e8-4c13-a5fd-70a6ebbacf49",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ec64d42-7257-47d9-853c-299a2e619547",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05221837-5ac4-495d-9fa4-d150c10d3105"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "633606a4-6bee-4d92-862a-94d38e27e678",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d839569-0376-478e-849d-a016ac3c3685"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b914cea5-fc9a-467c-80a3-5e8d71e0fe09",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "223d566f-40cf-46e2-80f9-bc77042ddfd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b06d602a-fc01-47c5-b790-2201e996fce1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7e52a8c-27f2-44a9-bc33-d1ecacae1c2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e887c45-19ab-4626-a83c-1ea366769b7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e038d65a-f7c0-4d73-a0b3-95953ebdabec",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "415221e4-b8e4-4f88-b9e0-decc4ac2a874",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a7df004-2b15-4b49-a0aa-8df589250c9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc0cb770-ad0c-4940-b266-d041dfaa02e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd575243-1139-4245-808a-8932f11b5b5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ce40bd1-446b-4c6a-a56f-8856d1654516",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8cd41fe-9925-45e1-949d-4ef8ea7d2434",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca4804c3-cdae-43f7-b23f-3151b6d7169a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "482f2940-cbe1-4c44-a3c2-76138b1636ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "026f540c-b2fd-4922-b0c4-4cadaec4fc35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ae462b2-4b82-4078-8186-92466f120845",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0640b14c-36eb-4e85-949c-66331c493ac8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20546f79-70c7-4a7b-ab05-b414d72fc330"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80a82cbb-c37a-47f7-88cb-377601d83de3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9890999d-d25f-4e50-916f-ae6ebb426459"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9b4679b-dce1-47a0-bf8a-201fd180fc41",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f783e57-4800-4e01-a6ce-a77575ce6357",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e01540ef-9395-428c-881d-9e0d17c2ba2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a8feb9c-6ea2-412c-ad84-a2247038c03e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55f29d7d-886b-463d-95f5-6a90997f19ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dce71eb-76c8-4ae8-b644-91cc6a90a0d9",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "561519ed-9acc-4b09-b27c-2a13194292e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2aeeee73-7bb2-4070-9d1b-23867e0ec480"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39165128-2541-44ac-bad9-e4cfa9a39a8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4365e8dc-1f42-4e08-b933-16ea75dc81a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9bb72aa-aa50-4e4b-84df-4d686fb9cca0",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c517b4ec-33d0-48c4-a588-1f05d7c827b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52c04741-e55c-4ef8-8301-24b3210e1c58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "542fc21a-c425-4ff5-919c-e16c7bc14492",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eef71f44-0638-4ce9-9d5a-f25fa75a5b0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26c9ceee-a294-4172-8836-2eb3dacd78bc",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "047f93eb-884d-4b42-9051-d8188746464e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36cbff89-3a22-4ef8-9967-abc35085d515"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f9b361a-8bd8-4ca3-ad9f-6d9395a21fdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9b4aafe-ec5f-4824-97c8-1ea218e09de3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5af25cc2-817f-4b66-83e3-8be194cc4cf1",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c32897ee-1041-4130-9fd8-da0f88182b1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d2144ab-e32c-46dc-a8d2-c48641886b69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6836e423-eb7f-4d30-bc95-dc9a53d45270",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33579596-0533-41c2-b893-ffa0596cd379"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f629157-ed55-4bbf-95ac-b410580a58c1",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40dfdd3a-9c74-4492-b6a4-78da9fa3e143",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c6c7d79-f8b5-454e-9c83-43b651bfafe1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1759f7c-370a-49c7-b6a9-f2540e78d563",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d399d344-cb48-4cd3-be35-a57ca8943f6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8eeb634-0dc6-4d9d-b9a3-232635faa213",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "900a2a90-b36e-4bf7-b54e-dfba9ca9e138",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "393b8837-4ccc-4a69-9081-978ba7b33f11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa9a1b75-dd4a-4151-98d6-771317c75b16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33f070b7-9a08-4901-a5cb-209600e9b2cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06815ba8-46b8-41e7-b9db-30dc0f8d8814",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da94228e-7298-4958-b644-3b611887b0a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "238a82f9-4405-441a-8370-224a57f38adb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed1d2898-be75-486c-9826-6ae95df125c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "580f0d5f-1031-4fff-82be-07b8ee2e2c0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63c8eb4b-6056-471a-ba01-5cb60b959608",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14869d6b-36a7-42c2-b7cc-ee2b904a2877",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0380efb1-ec18-4507-9027-70845b63fe9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b3d313c-df2e-450a-9365-2cc2ee079952",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06aa2ab4-2c69-4f0e-a854-2d32aef954ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e25f66ec-7df7-4d55-b6f9-626c1287a557",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "459ed5b9-1605-4c8b-a2e7-85ae29166d4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df4c1e21-0d4a-477e-9430-d019f2970f38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a0748de-5828-41de-adff-24d023d6810e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63f6b095-6ffd-48a3-86e2-b9bc97509c24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11525ced-e0c4-4c89-87c8-fb63e749f220",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caf680ea-3d8e-44e9-8699-60185283e476",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "327b06ab-00ce-409e-a793-cdc903a863a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a041d03c-39da-4ee8-a297-28ba844d1a74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9624cd70-f898-410a-a425-9896286c0e9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35a11d9b-ae32-426d-a589-788779b36cf7",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7283a562-bb4f-47f0-8346-dd67e3e58337",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98afeabd-4499-4422-be31-572dd2fa3876"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b598e3c-a45e-4e98-9cd6-5d6424268528",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99aa8618-c9c8-4e28-b92d-598c23b56898"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e7c0365-55da-4d8b-a01c-acbe1d268fc2",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d44cc84c-7fa6-4dac-b6b8-09041673073c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c6930e8-8a0c-427e-96d7-e75f9467482d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a288b330-396a-4106-bacd-9db3454295fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd55ff88-c902-47dc-9846-fb710c94fd8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbb188f9-a831-4ed2-afcf-0c1259889590",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92f3b23d-9994-4799-ad1e-55ee902f50f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b8bf4b2-d9ea-4c9c-89d5-ae4ddcbe495a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96ff6f57-d59c-4692-9e35-fef3d0a8b958",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16d3bbdc-6014-4f2a-a583-cab05252e834"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd4474b4-4c8e-47ef-b279-4e45f8664576",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c220799-1a52-43b3-9b36-2f4e32e02c94",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a09e7962-c40b-484a-b6e1-5287c8c5d59a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b4b14d9-378c-4e5b-8564-51ed9a87ffd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afab5366-57bb-4427-8b23-a9d7a71761f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dd90308-c5f8-4dda-90e9-1b1575895553",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c7c1008-c7e5-42b6-afb2-f30f71533228",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6f6571a-ceeb-4b11-b41b-82be49119a9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16e2e504-dcbe-44c0-9ced-5b46bf353ba2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8bb13cf-93ae-4cd4-8cdb-e832179deb6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99e8cfe3-c703-42b0-ae96-e6a36dd615bb",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08ce009e-07bd-42b5-80af-821154a399e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f920da4a-f997-4f2f-aa7f-47b5b7079dbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06c603dd-8eb9-43f7-9be2-a898fae8374a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f9bcf77-b638-4858-8ed5-bf909220e90f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21e491e6-3da8-48bb-a9d1-24ebc54bb225",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a338da1a-29b3-4b31-9853-aa0672e6d0f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18f6af9b-fc2d-400b-a8ec-c726b3cd5f6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d23cb5c2-7bf1-43aa-abdd-ab40baf9bbce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5618dad-6694-455c-a35f-0de551cf0713"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11c2f453-3502-446b-9ff5-39f6061682b0",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be1abeab-0e02-4c9a-a3a7-99690a755c92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "daba0038-c982-4bca-b7cf-ce1892888cc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "682228b0-ef98-4e47-84f3-97bf0fc57d54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2f25ca3-2a01-4cee-860a-32cf7e6cc568"
                        }
                      }
                    ]
                  },
                  {
                    "id": "314c1b84-3c35-44ca-8f41-f7f4cd5bc6b3",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d1681f9-4e7d-4f15-b73b-16d7cbdf88b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7bf23b1-25b2-45ac-9749-fe11170c2884"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d1aec50-a026-419b-943b-d8426ea76f82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bfc0cef-c51e-4cad-9e49-bd1263bed3e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42faf602-14b3-4f6d-9152-db2c2179779d",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88521226-0c16-43d4-8110-51d65df52a91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5285378a-9ce4-4433-a46a-a07efc8ffffe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55c96d00-c72f-425b-9a4a-4e0f5d19e091",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e561f65-6aa7-4828-afeb-1e7de9778584"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6631f0a1-5cc1-4cad-9fbd-7c56e5c9aba8",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e848e4d0-30a3-450e-9aa0-a18cf1d330bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "948f0739-4d5a-4c35-91a2-84fadec32012"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d283c42-7ecf-41a1-bd64-b792106c4a00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34d0743d-f04c-45c4-9c9f-b3a7db161285"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3c99abc-324d-4c4b-881b-99ac3828ca0f",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67ebfe89-7891-4c3b-a01d-af8ad0e9c6a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e3fe47c-316b-4ccd-8550-9e1a534bdb8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "026f55b5-1a45-4174-8778-be0d072afaf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d736ad5e-f3d3-4cc0-a5b5-83ebd1eaaea7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06ce38c5-fbad-40f5-93cf-ddcfa056160d",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "321a5779-f4b8-48bc-8790-3333e470c800",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1645a23e-16bf-4be4-82b8-2b8db1817032"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a40668e3-e798-4f21-a045-6729c8346d60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ba4620c-8968-4be7-a10c-c9f1f7954ecd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1a5f1a1-7d70-407e-9a7f-202bc1da8f7d",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "922b4696-67be-4eb3-a205-93e7b8c105c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce3c38ff-1d1f-4609-889a-ca4be8766bca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49233211-2982-4b46-ab2a-8198cd0683a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ace94ef-199e-40b9-9a6f-17674856cd5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c71d69c5-d10a-46fb-b4aa-4e56d7af8e3c",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f345efe2-3f3c-4a45-8f81-68bf6d8fa4c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbeb4e57-d44d-469d-8623-24d6ad5fc3bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8da7aad-f1eb-448e-a9c4-e2fec2955279",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ac3c24d-0a1c-4640-b84f-5509be395109"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd37cc1e-e8b6-49ad-b63b-c2fec0701584",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2392053d-22ce-4869-a63e-5c26b89545f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18a57f8a-e9f0-4ef4-94c1-ba55a4254e7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22b20738-70d4-4de6-ad58-9860524a0914",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4656b950-6f79-4788-969a-3798634f145f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d85d9a2e-969d-432b-9a11-127c7c434ade",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b87e0e5b-bfdc-48dd-8c37-0bdce343e82d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e4b6834-1a06-4fa0-b0fc-cfa1b275af4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ec37503-8942-4e82-9535-9c15a1aefe9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5763d2ae-0123-4298-85f0-febdee614984"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aad44d9-bbc4-417f-b429-35352e19e1ad",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6c27e52-5479-40de-bc11-972163d78154",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6152ae85-0840-4c10-9cbe-7445700ac465"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6abb159-59bc-4bed-81de-e64073a9b8b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2769c85d-6b9f-4704-8bd7-c0da9f60710d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f990ebd3-bbde-4475-86a9-8ca6b5ac3a41",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69c37e71-7f7c-4da5-9eb7-4583e309c719",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aec254d0-021a-4c79-a6e0-027794b4dbba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f3e37f9-5355-4456-8e29-259f10ee96f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4485d4e-5b81-441e-9f67-326428473272"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe7a9b7f-6824-4a8b-b1e4-54f5d219f4ca",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdd189f1-9808-4106-bcf9-e143d741a475",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9063b0b-f613-4899-b6ad-6a2abe4434a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78b5b7cc-9020-4fba-8444-f145443a142b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54eefe3f-89c3-4019-8ed7-2516a494c3fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f836431f-599d-4eb8-9e19-446ffd244fd9",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90863d69-3231-4768-a72b-aa636bbbafb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1e6af5d-c9df-4603-91cd-34b31473b9c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a52063b-8378-4d2f-b484-50fded75eec3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b849c94-8e36-4ca6-ac15-bbd583133dff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e222e9f-d747-4ad6-87d0-42252e152738",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "499a9418-5254-43ac-b399-5bd8c7dc595b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a807dfd2-2e5f-423a-991e-459491dd2299"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1eac0c8-1f1e-4b71-9b9f-10442d971590",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a8d6850-a86c-4e74-9bfa-bc7a0c113ea5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "006fe994-0236-48d7-b81c-327eb2a56479",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4996ac19-6fe2-40ce-ad64-f5cefc5f31ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d477128-d9b0-40c1-9130-bc409e45177d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8afe493-ce98-4922-ba79-888c2d399be0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c2c132d-4460-4c7c-8cba-a4fc6c235f2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4aeedff-eda9-40ff-84b8-613ca50137aa",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cf0dfd8-9c4d-4349-90c4-48d6892dcb6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b534b84-e1f1-4ab1-a5a4-67bc78cfb685"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56c62d6a-40b5-4d63-b3a7-dcef3c59dd9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9d9c289-eb91-48a0-a03e-c1dbfed8204a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e49c8711-32b5-49bc-a31b-8a138df0e413",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71a3c20b-0670-4c02-83d0-0476d86914d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b642ae7d-dae6-4c1f-a326-ae5d05f70241"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb1d91a3-0684-4e3a-92fd-3a202d0386aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c71934d-7f1e-47c0-9ac6-d4752b2777e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e539201b-ffad-44bc-bae1-1edf901a7b19",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7686c27f-c9ec-4cd9-8508-2e87fdf8d99e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd2ea5e9-df82-4a0b-b63d-62917c5ab2d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fc63cd4-7a9d-4878-a276-758d34273844",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75fc9709-04a6-4de6-8adf-804889ddad89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3322700-1ccf-4d78-9457-7c945d4b916c",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "059feffe-7035-4960-8b15-4e4a31ef6b1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c13d3ed-af48-4ee3-9587-df23c28cd6d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8196a2d1-d5d6-4bde-8db2-8fa502ea9ed0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcb1ee01-3736-4779-a304-080fa505dae9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4969a591-238d-43a0-a8ed-b696f9f715b1",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bc29a20-adb4-469e-b2e4-7d2e32ed54e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c73dcda-7c86-4833-95f6-472cae6aaf8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f307aa2-659b-461f-871f-c397933d7349",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3aff900-445c-4a80-bcad-ebb7b484a3d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0531bfed-e874-4e62-b97c-f61a78f153b5",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f72cea6-5c73-4749-a8af-64103681257b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27d2e8c5-f3b1-4405-b0ab-f0287b7c018f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f942bd36-087e-471a-a6c5-8b96af7480ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1037b1ff-9458-451d-9af0-ac1bdcb7d14a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afbc0315-2fd6-40ba-971a-1f154d6c35a7",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eeab424-8cf9-4a2c-9bd9-2c9fdd999667",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a90dcc3c-f4c2-49e4-914c-dc4713003333"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67e4281f-e99e-4640-bc46-618da3191838",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "540899fc-f592-4313-ba36-677be093a0f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9dd29aa-ac61-4f96-9e35-a339da896da3",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28456969-ff6f-45c8-9a28-82f084356d7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cef63f06-d2e1-4989-a793-de039b0cd124"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84f16ee5-db4c-4cc0-8020-7b3fd994ceff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81083c64-546b-4b4c-a84a-f50567c406c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "052ea5fe-bc5d-4619-8b37-9f1d33969ac4",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7bc1d96-12ba-4856-913f-5c19282dba9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd84c4d2-2828-4162-9cd9-00906d8c588d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3b4d511-4c20-4861-bbf3-e6d8022405ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63782d53-46a1-49d1-a0cc-8ca3c76ea8d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e095b48d-980f-4aed-90f5-ad174e0a6b0b",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eec98ec-793d-4862-a1cc-e79e11c0e7bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5223f5b5-93b9-4565-ab8a-87f2ddb90e7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed6ccc25-8af8-4d12-ac3e-63f89c8deded",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63c0aaaa-e919-4ea7-a287-fd39a898578b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a9e4cab-c71a-4e43-bd2f-0b42678801d9",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "176da42a-da41-4870-84a9-2ddb4357fd4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98f2f865-77e8-4f79-b7a9-896fed767fb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fabc9b3c-c6d1-4ea9-96ec-2b2e8297a089",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ada3f109-7a41-4de7-bce5-fccd0d94256e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e02b594d-419b-4fc7-8dd5-b87bedf8c568",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "278f13f3-05ba-4e69-8cd3-08e695ec6ab7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0717ec3-d0dc-4b16-9e78-4ae6dc67ff63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3f3233e-ef76-4398-906b-f9898faf246f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d068f2c7-5a20-430f-982d-3a1267d12930"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c030ff6c-4fef-49fe-85a6-db4327e8ce54",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9451e5e9-a5f2-4b56-a185-6873fb0636d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e3cd04c-98c6-4a3e-84b8-5f5650751327"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55019f80-37f6-47a4-823c-256916082a23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d02ce0c6-58ec-4eb8-b22f-578f19753b3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55f71397-a51d-470d-9359-ef299b71e37c",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "705c2b74-3345-48a4-b5a2-4dad8eed9187",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5977094d-e94f-4cdc-8eaa-938e4e52e529"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e8e724a-382f-4397-b344-1bbcf4944586",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d52ab4bc-d8f5-466e-b23e-57b846170134"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42a3883c-b4ec-4ab1-b2c3-d37c5aa18b01",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21ad6d10-06a2-403e-930b-26c5fd6a2f08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c1e3808-3cde-4273-a5b3-5660bb6a1ab5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0be43cab-9404-45cb-ab14-1b7d2438417c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "615b4ca9-838c-4377-a960-c7a122adc6d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea99fde8-4e9d-4bad-959e-1f44c78f935a",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5813cff2-cf62-4969-9f1f-3204a117a5bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ed127be-d0da-4d63-9e1c-bb1f51d90984"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab8be9bf-b314-4bed-ae99-4308fdc32f18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecd83e03-8ad7-48fa-bc43-51f064626235"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e168df2b-d310-48ec-a3ca-02e9b7c5e56a",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3559d7ad-3f03-4347-af71-5360bfb73015",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1f4ac0f-9c8b-4a1c-9ae7-f636c1dfe422"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9964d1f7-e5a3-4605-9c1c-9b9f784edbc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8892bca-278b-4e64-84a2-2e11603f4d07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ab539b1-bbea-4155-a570-6cf00feff751",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71078a5a-f8c8-4475-a35f-4e8cf8c71011",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d58b7e91-9eb6-42f1-a815-e7201ef9d0bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35ae462a-1903-4139-9d59-a1bfab568ff7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7aa19175-d341-4549-8362-86b4b8b0b496"
                        }
                      }
                    ]
                  },
                  {
                    "id": "902b60b7-d9fe-4ef4-9644-9dee7b415d06",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9c1165c-19f5-4bbc-8eba-f2aa4cfa23c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "850dc2fc-5f7f-4a39-9927-d7a3579fef82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb10f4fb-47e2-4a94-82e1-d7a447706fe8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d65f3c5d-3a21-4cfb-822b-01147957d1ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b9d0307-e12f-4876-b9f1-9318d9c519e7",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df776099-5043-43a2-ab52-756b049943b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f6f4df0-ed4d-4da5-8c91-76f3a649dc91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "034baf3d-6eda-4f48-9260-abe976bdf8a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb2630f2-8c56-44e6-b932-d33972a9cfd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c1a3f4f-9e9f-428d-82df-798dd8f4096c",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f79ab074-aa2c-4cc5-b989-52da1f0fc00f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35619949-e0da-4eed-87fb-a3a1f8e3302d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "674bdf96-d344-4dea-982b-82d1847bf425",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69116833-91aa-4e14-8366-9165acebce0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6ac9992-5cc2-4814-b256-33a763428ad5",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c86bbc98-b9dd-480e-b004-df21b29f40e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "727ef8da-40cd-4296-bf29-a0f7322cf6d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "153925d7-8744-4bce-b3e6-72a212ead3ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f688e80-f7c7-4d66-bf77-f6339e46d949"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53ac67c2-9960-4736-88f8-31b2f39401ef",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11887270-8010-424b-80e1-772c26f9611f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "793fb4a8-b264-4932-bfa3-b4f80dcfb280"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d45ee406-f340-4ffa-bb3b-f8b50193ca23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cad19e8a-5995-4109-a087-10188e65e1ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f195d45-57c8-4028-8c29-28046f7bf92b",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd504e44-e864-4d2f-8d28-3e67e20d1484",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "affc58dc-623d-4f16-b73c-e82f03c75901"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "684cbeef-080f-41a1-8a48-4949d46d5e1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c32d2019-78e3-4e66-b980-105aec78e798"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39042721-af79-4005-aa02-90c296f6e152",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "089b4c0c-0105-4ec3-be0d-81d8d4498de3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61faaf61-8d88-4df5-8c51-2e260f732181"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "064bf4a8-d167-46d8-8996-cddbdb25b93a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98e7cf8a-06ad-44c1-8400-c9271b742328"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31131616-e142-4a72-8ec4-2c455b36e27a",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c25f9535-db9e-4f40-a0c6-52c84bca6392",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f047336-a28d-4f6b-9e44-4a9fc84c718b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ae02bb1-323d-4482-8cb6-7abba2b1d849",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb1396fc-c6f3-4cb5-bf52-a08541320bed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94a1df79-3e2f-4e57-bb83-d90e2286bc92",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeafbca7-0910-46d7-b7f3-e1b9c12c9d1a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46f72021-b4f0-4a92-82f9-7d95cf078210"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e23ef830-37dc-4400-8b22-889dfe19496a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05915254-f0f7-4f4c-aa54-bf27819590d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69aad1f7-3449-4c6c-ac23-00982de2c5dd",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dcdd571-f72f-4168-b907-fc806ecdc552",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ab538da-d5eb-4c1f-9897-b20c8185f164"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "932ffc60-52ca-45ee-add4-2a8b85800301",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec971b56-c9ce-4257-ac7f-aa9bc87c44ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebff023c-d61d-480a-b85f-5cbd80fb2dd7",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6327a5a1-dbb1-491b-a8af-48a4b63dd72e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9dd8084-364b-4fd4-9bc1-a85ec5692e23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de554c71-f088-47d6-af36-5b351798dd3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44b220ab-8137-47dd-8679-999df2b7d7d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40695c43-896f-498b-aa03-ae59e658331a",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1a6d216-8a87-4957-af46-c4e46ddafb35",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c07e1cbc-f844-434c-8643-afc91bcfba87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e177e27-f235-46b0-a73b-782847527fa5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a401b9cc-4348-43fd-9039-d829c518dc23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c20172c0-ae88-4c77-97f9-9edc6dbb4b15",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d95355a9-5f2d-4e04-9f57-0a18d79112cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab445e5a-dbc5-4914-bae4-63180a391eb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2651d5f9-6daf-401d-a1d4-198ab19a4782",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cf395d6-307b-4b4a-a5e8-02d5ef4fc94d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a747eb9d-cf43-4f27-936c-8db3e39be9cf",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b0d083c-2ec7-4e22-8f1f-971263eff183",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3feda647-8be7-4b27-b866-b1e48437f6f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fa06f7c-df5a-4f90-9c3c-cf23cdc4a82c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46ea82f0-fb20-4d26-b13b-e3ca16bf4693"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fba37c79-8253-445f-97a7-bea18a995499",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9094aabd-77dd-4ad5-8c4a-48d092ba96b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37836e54-11ec-4659-b72c-5a1265d8f34f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfa2584f-25af-4572-bdc4-6778820873e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "051ee7cc-516e-40fc-bf85-aa503ff00d93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "859616b8-40d6-46b0-88e6-df091d56e360",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d0c4338-847c-4e13-b48e-7695b69cadff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7126c4ca-5084-48e2-bda4-b4099aa4fe63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cf72f34-9547-4805-be52-2d644e280f1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dfe9fd1-df17-4639-ab4b-91229ae5034b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c89b49b-7330-44df-8661-504537f0b991",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "882cd5bd-9333-41a9-a114-b8d53deee54e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32e83ad7-4bc8-4cac-96e1-a2ad7323417d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96df7c2a-06ac-42b7-893b-6b6ee711fe01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0342a01f-8c03-49d1-9cc5-c9017fcefa6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe1c692f-91d7-47fa-8288-cea5c695e081",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "162c8611-d507-4d9e-b923-67fe6a9fe4b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7cc23489-2c1b-4819-a03b-bd49332ccd94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bca5bd2c-c70a-452a-9e93-b4cff33cb173",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8f807d6-973b-47c5-9fe6-43646d4f0b6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17fa8ab3-5387-459c-8b62-d900bb2558f3",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd22e56a-0a5c-424b-ac6e-de1a1addb05f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98621bd6-4d7f-4135-a9c9-ce7020d535f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ff12e08-12e4-4c37-b29b-a3965074f2d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc3695f8-c470-4e5d-b3d2-3b62cc8d1c84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ef68a0e-56a3-459a-97b6-ed5b448dadce",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83f74347-0c39-40bd-a057-d5b662a31856",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0bba72a7-6bdc-43c8-9125-6d4c565e30e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "807a8ad7-18d8-47dd-885e-b44b1c5cb725",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28510748-3636-499d-957a-9654b71347b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84e58086-f44f-405b-b48c-67c32b58002d",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3564cfd-7ca4-4056-a63c-189fd16528ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a01400c2-3431-4a1c-926b-200b240ce94a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0120a32f-705a-48e7-a754-52ff2c75493e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13d44097-e3ac-4740-be38-231623096c10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29384b66-12ab-425e-96a4-54be0f7e8a25",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a2c1625-d061-46bb-8c1d-15784e677480",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04431b40-60d5-46b4-9464-54fe60db7272"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18581549-3114-4f2a-8972-be4277779f04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87af03c5-aeb5-45fd-9bbe-67f9f7be0d78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17885936-f6c8-479c-9339-cfa43a37b756",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a9972af-4250-4b6a-9f60-1892eae238bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fff9d7f8-0164-439e-aa6b-b333eb3fe864"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffc525dc-88c7-4d9e-a42b-82b6f0f5f378",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35ba319e-23b3-4b50-8608-f139be69b220"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7b7c2f6-6a93-4af0-9f2f-3bd9dd5fe890",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19955677-ee16-4d8b-8f1c-87c3553ee8c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49f12642-b739-4933-83a4-768f6191b5c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22c65d87-cb05-4c2f-a46d-6666f8f199af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75a710e0-99d5-491c-90a3-4fb0a0b01286"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a64ecad3-a7ac-4784-b15b-248678b1d31a",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82c52b17-3e46-45e1-b808-fad57c929158",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0abddec-5546-42c9-a2f2-d4c40cd047a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1fba718-5d43-4b2f-8c41-b28fbabc8d44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e065263-4454-4a7e-9f93-a7b8ee5ef2f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d6549de-bc0f-4ff0-ba86-c5d4c030a64b",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70f2c63e-c381-4937-85f2-dc0cbd665e82",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e8185de-a8ea-4705-9757-eb86a8089861"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4d60877-8e20-4b58-bb8f-9739f86b37d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4797e0c5-37bc-4ac1-b600-20204a6024e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8d42325-046b-46a8-9e8c-dc5b8ec9396f",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a20b5ec-c71b-4d0a-b3cd-4d39469ccbfe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "304b84c8-c4af-46f0-9502-df04bb899d8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74c2a304-b91e-48a2-847d-b448230cb430",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a801640e-ceb1-4f26-a54b-014b2961fcb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2d3858f-1369-4b75-b6c3-8ec9c98f50db",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "951ae3c2-5f40-4c36-b0a6-268a4534bcd2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b29d6c5-be74-4e6a-8e24-76d120fe279d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99b0b493-716a-4699-aff8-3d2c4006f67e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5d00379-7db3-472d-8d67-431591bcc70a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28eb8b69-967b-4d3b-ba23-5018587e1295",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7adcdfb-f50a-4490-8d20-1e8ad6655638",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91d5e0bb-1a9c-4e53-ae55-f21f7dd078df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "643c9f9b-f5b7-471e-b82e-0e3c21dfcc1a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e63216d3-a61f-4764-918e-6f984ebc8ef0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e38b0e9-d800-4989-abbb-cd887c0adea4",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "569e557e-fa23-4314-a2d7-b8ae33d3d041",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dfb72d29-c820-4e13-b58a-2e2b8329f9f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ca9985c-b6d0-4a07-90f4-ddfb02906d26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dddabb0-4ac5-4e2f-88c9-796429858161"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "835beba9-f6b9-4146-8819-f0d8215f50f6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a6a59052-680d-4c7e-9d8c-6d8da55ba086"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "18a8a5a2-6143-404b-a368-02afcf12c264",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "30d355cb-800f-4182-9133-9b396356f527"
                    }
                  }
                ]
              },
              {
                "id": "73c447e9-0c83-4b76-a4f5-bfeecf73f91a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "361ccb22-0707-4b77-826d-df0bc52a412c",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0b0116b-18d2-4992-8013-ed2da924b9b4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "e248b4a1-feb2-4938-a2e3-5967dc8a7a81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57deaab7-0d65-4e46-83c0-71fabec50af7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7c280089-1200-4ba9-bff6-9849ab92cd15"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6cf11f04-9e8c-4b7e-b589-c24585c4f880",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "00037b9c-f1ac-470a-a25c-48ab030fb9dc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8eeac44e-bd02-4243-abff-9d500931043b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1295eaa2-53ca-4b20-b8b9-1e513482837a"
                    }
                  }
                ]
              },
              {
                "id": "5b009154-3b2b-4f76-8ef6-14b346d95db7",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "ed7864d7-57a4-421c-ba31-054afb52ed66",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6a914c8-4553-4535-ac5f-e27fd7ffe653",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "24063d2c-89ed-401a-a805-168fb6e0fcbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "001b5c00-2ca0-4e4d-ab3b-e83f08580468",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8737c07-6bd4-4f8b-88ab-4f7de09ae903"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "16bd834f-3436-48bf-9daa-13d3ba79f1bd",
            "name": "Positive Testing",
            "item": [
              {
                "id": "db39aabe-a208-47e0-b4ce-e33cc1c4f06b",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8bce8f6a-387e-41b4-bb21-dcaf5a4611e9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "6ec167b0-7549-42cf-8371-f5b143266334"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bca406ce-7c65-4ffc-88fc-113bdb3ec5ca",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2fb69f31-7355-4d18-a301-9a1e22c8263c"
                    }
                  }
                ]
              },
              {
                "id": "517c4c89-f80b-460c-a249-e789d509ea9c",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "69f9779b-0ecf-4655-bbca-ff9c93288b6f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "cf4ae34a-d178-484e-a182-5a115c71a618"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1c2e2f35-c586-4ec1-8ad2-42d154fab6bc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8f6c948a-d202-4d59-ab86-08a83ecce580"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "381e9a61-cd06-486c-86a1-6f3bf4d6e9dc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "edb91616-cd3b-4065-953e-59f54ed16d23"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5b0b1556-0f88-4a37-af3a-8aaf8e927b01",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "741bbbc3-dd7e-4911-8c78-6f6e78f44ae0"
            }
          }
        ]
      },
      {
        "id": "13fc1daa-6217-45ab-8b3e-b2771b2a0097",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "cc6d7b63-073a-423f-bc4d-69089175efa7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "511e849d-39cf-4dae-a50a-fe53bd66de01",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c5c619dc-f699-40b7-811f-fa84cb692b2f",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2a022df-d61d-4cf1-a9cd-a13bf694296e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "305a38ac-a149-42fa-9fef-434d38105b21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad1a5a71-ad12-4b52-a6bd-4df170497d00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f7f595e9-996d-4d37-826f-4eea61e76a79"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8c8706f7-a872-4e8f-8ba9-68f733fb4e42",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8b40fff5-29c9-47f4-bd89-a8c95f9c167f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "48eed2ec-6d85-4c7d-97be-6b9d96517e50",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2250ef6d-1f6d-45cf-9ce0-bfd05500495e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "af6e4871-99c7-4416-846f-b79f0f209c6a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "3ae901ed-3e53-4885-9ba4-88d5bc7feb8d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "da8d1c78-c10d-459c-b4a8-5557c1e4b705",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6d5a177b-eca2-4101-a681-9cb18aa23c72"
            }
          }
        ]
      },
      {
        "id": "bc0296e7-cf26-424e-a983-e8654653cf7d",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "9c0c151e-4a23-4291-a1da-749a7b303542",
            "name": "Negative Testing",
            "item": [
              {
                "id": "796ca3b6-7768-4222-a4f0-c1638efa0a77",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "745c82ac-06a3-4ed6-ae9d-a64ff80b3800",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6dd55ba-718e-4f36-9df8-807c5a730a36",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5828b5d3-17b9-4b7d-9996-11e9bebaf432"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09e70e38-7b65-4077-a7b5-aed38b89bd9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cf172d4d-022a-4894-867d-e9c76f68e44e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c322bed3-23b5-42ee-b441-0862fa6c3685",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f79b5073-2150-4905-8860-a5c7013cabad"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cd494eef-7d9f-4b06-922d-5432d9e53461",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dd2c181a-9ed5-439c-a95d-3562fa6ca72b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d47c9573-a277-4e98-b361-e50db0edac1d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "070054a2-2805-4ec9-8562-2ee268e75d40"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1e476f3c-a343-4a78-bc6a-31c724d99aa1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e6d979ad-5ee2-4fdd-b762-ad095d33b770"
            }
          }
        ]
      },
      {
        "id": "e83bd5c7-21f7-4262-9dfb-d7803e199672",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "328f095f-9a7c-4683-bf7a-2b5f7de8f00d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d482b81a-e12e-4c3d-820f-c4430829eb99",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3906bc0c-f4d8-42fa-aab6-806978755528",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87cedf75-b36d-412f-9bb7-8a35ffdb24a6",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a2bc6b82-52ad-4bfb-93b2-0515d961eb63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35efbd0a-f6ca-4b06-9857-3b3763c6a9bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8bc7dbc9-5990-449d-a016-b0b7c6d9a5ab"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "964763a8-acc3-4cf1-9f41-e75bc142fb67",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ab2d7926-e966-403d-8794-5527938178c5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5a111bc2-c2a3-46f5-b90c-01464056ad0d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "debba2aa-8fc8-4eca-b778-6800185995ae"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "afb3c1b8-e001-4c06-bba5-af18004e1f88",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8f6f8c33-531d-481c-abb3-1c957f42a451"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cd7a11b1-3b43-4590-a17d-aa17377d2b03",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "20961700-ce6f-4757-b522-232d3b53d06e"
            }
          }
        ]
      },
      {
        "id": "5339ae9e-2c67-4d82-87a3-55d5b0c8a74d",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cbff6695-9f34-48cd-af9b-00ce5a8302bb",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cc6be44d-8ba6-4cfa-888c-86d0d83eb8b2",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "cebba694-b6fc-45dc-a2df-291440db1252",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1d35ede7-29d0-4ff4-b356-dfa74c0dc300",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7e7991cd-6d32-4eb8-8f86-b8cab7b136f8",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 37
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 29.603174603174597,
      "responseMin": 6,
      "responseMax": 602,
      "responseSd": 39.17888955480093,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1727916308375,
      "completed": 1727916323563
    },
    "executions": [
      {
        "id": "939f6d07-cca1-40c0-bd0d-772d1bdee781",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "d6f28780-f108-45f3-aee0-5350bdbbb99c",
          "httpRequestId": "2aa404bb-615e-4eef-842e-f9af864d8acd"
        },
        "item": {
          "id": "939f6d07-cca1-40c0-bd0d-772d1bdee781",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "47b591dd-f9dc-4620-86a0-c8381838189e",
          "status": "OK",
          "code": 200,
          "responseTime": 61,
          "responseSize": 0
        }
      },
      {
        "id": "3f0d7731-3d98-4dc9-80c6-a2a91c19722f",
        "cursor": {
          "ref": "3d6f6ce9-d1ad-4299-b488-a2dcc437db8c",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "fe2b32ed-28b7-4fe4-9ce6-951966fdc65d"
        },
        "item": {
          "id": "3f0d7731-3d98-4dc9-80c6-a2a91c19722f",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "16d05b77-a7be-41ed-abe5-234046bcfb23",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "62e64744-5fa2-443e-80ea-395f3b05a5c2",
        "cursor": {
          "ref": "7928b02b-9cac-4661-92e2-26f2c83c9400",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "89fa1690-eae4-4553-8eaa-f773b7d1263a"
        },
        "item": {
          "id": "62e64744-5fa2-443e-80ea-395f3b05a5c2",
          "name": "did_json"
        },
        "response": {
          "id": "fffbb752-5a3b-4d6c-a1dc-cebab2655804",
          "status": "OK",
          "code": 200,
          "responseTime": 248,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7acc3a7-dc2e-4685-83c5-7055a15738cd",
        "cursor": {
          "ref": "f92f7063-da11-4443-918b-9c9a243550b6",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e08f9811-bff7-483c-af6e-3a4f85d03cc6"
        },
        "item": {
          "id": "e7acc3a7-dc2e-4685-83c5-7055a15738cd",
          "name": "did:invalid"
        },
        "response": {
          "id": "25a829b8-8b1a-41ab-8d90-a0c3c2ca1c7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7acc3a7-dc2e-4685-83c5-7055a15738cd",
        "cursor": {
          "ref": "f92f7063-da11-4443-918b-9c9a243550b6",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e08f9811-bff7-483c-af6e-3a4f85d03cc6"
        },
        "item": {
          "id": "e7acc3a7-dc2e-4685-83c5-7055a15738cd",
          "name": "did:invalid"
        },
        "response": {
          "id": "25a829b8-8b1a-41ab-8d90-a0c3c2ca1c7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c128ba23-5478-4d17-9715-2c4716011688",
        "cursor": {
          "ref": "cd41c4dd-8176-4f50-84dd-123e095ab332",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "856b45b1-b524-4dad-8d66-37c54e1751ef"
        },
        "item": {
          "id": "c128ba23-5478-4d17-9715-2c4716011688",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "55db8585-d79b-48e8-8d19-1d19468858d5",
          "status": "Not Found",
          "code": 404,
          "responseTime": 80,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e374a5d-a958-457c-aab7-1e2c120e51b0",
        "cursor": {
          "ref": "b9bbaac2-f7ec-4b75-848f-bdc45dd41b73",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "c5774626-07b2-470f-ba2f-4a1b61cb2da5"
        },
        "item": {
          "id": "8e374a5d-a958-457c-aab7-1e2c120e51b0",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "2431e4f4-71d2-4e65-898d-d4f2d4716128",
          "status": "Not Found",
          "code": 404,
          "responseTime": 25,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d5cda5d-7370-4171-84a5-7b1f393871b9",
        "cursor": {
          "ref": "affa5649-f478-4be3-8299-2ed834e2bae7",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "ad89ee37-9059-49ec-affd-52d0c8fed553"
        },
        "item": {
          "id": "8d5cda5d-7370-4171-84a5-7b1f393871b9",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "f770521f-6a7b-4b42-be83-fc557d7aad75",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "960de2ee-ee94-4d3f-917f-bf9f1ee3b161",
        "cursor": {
          "ref": "fbd73f28-3e5b-4893-9204-0cd5dc552a2d",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "0dc987aa-4371-474e-a603-b2def43930ea"
        },
        "item": {
          "id": "960de2ee-ee94-4d3f-917f-bf9f1ee3b161",
          "name": "identifiers"
        },
        "response": {
          "id": "60438bdd-4f61-4f31-a0bf-f0ef4c139f2a",
          "status": "OK",
          "code": 200,
          "responseTime": 81,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7235057-997c-40a7-bb27-7e34d116f06b",
        "cursor": {
          "ref": "bb92d768-b3a8-48c5-981b-a91b4f831138",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "a8e97754-6ba2-4991-a4f7-17ccd33ece4b"
        },
        "item": {
          "id": "b7235057-997c-40a7-bb27-7e34d116f06b",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "229659fa-997a-4a08-a4f3-329f54bc0583",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db1b77aa-5a87-4a8e-a018-599f63ac4bc4",
        "cursor": {
          "ref": "8f3c7221-77a5-49da-bae4-3ada94dd4a2f",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "d9d15851-4010-425b-9c48-0be592156c50"
        },
        "item": {
          "id": "db1b77aa-5a87-4a8e-a018-599f63ac4bc4",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "a434d921-5307-47c7-a037-056db5121870",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "650cc3de-ffe7-4e48-a9fb-315e72032eff",
        "cursor": {
          "ref": "30f00be8-d03f-4f2d-be2d-2926bd5cc195",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "79d8ad08-9330-429f-be87-27254bbd9b34"
        },
        "item": {
          "id": "650cc3de-ffe7-4e48-a9fb-315e72032eff",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "47e49a91-8f14-46ea-b065-21a04aeccbe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae6c588e-14db-42d7-a822-9afd123c5fd8",
        "cursor": {
          "ref": "34366131-1642-4966-bb66-eba7e792c7f1",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "cd78c0e4-8384-4cc7-b09c-cb8fe9e3d227"
        },
        "item": {
          "id": "ae6c588e-14db-42d7-a822-9afd123c5fd8",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "434b131c-ecb4-4891-b8d8-fe3713944a93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f914da7-2cbb-4898-9563-4918dbdd4c50",
        "cursor": {
          "ref": "8ffbd5f5-a745-43f6-a954-df186b7a3148",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "39aa6712-b233-4fcd-89b6-93a6f1e744fb"
        },
        "item": {
          "id": "0f914da7-2cbb-4898-9563-4918dbdd4c50",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "748c2aa6-2bb3-49e1-873c-fe5a88801faa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c3207c3-1d37-4f59-b364-d5efae5de59c",
        "cursor": {
          "ref": "e8ebaff9-50df-4b0d-8db6-e1227958d64d",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "972f0f7b-03f2-4d4e-b26c-501c3406b437"
        },
        "item": {
          "id": "3c3207c3-1d37-4f59-b364-d5efae5de59c",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "9de19cf0-58c5-4163-ad6e-1ad8f6f7bd87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "547c2d8f-2139-4cd6-9854-ecddaaa3de46",
        "cursor": {
          "ref": "95792dd0-4293-4e8c-b599-7182c25a743e",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "a0a225d2-1199-4a2b-9bb9-3d4627ce05d2"
        },
        "item": {
          "id": "547c2d8f-2139-4cd6-9854-ecddaaa3de46",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "b9bcd224-e146-4800-80bf-5d056c5ec7b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "899a9601-5265-4d20-a831-efb571dc10f1",
        "cursor": {
          "ref": "ee826fec-bc4a-4eb6-9aaf-2f90d9305c76",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "27abb1bc-cd83-42f1-af3d-8030e0574571"
        },
        "item": {
          "id": "899a9601-5265-4d20-a831-efb571dc10f1",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "8c9ea401-43d7-40a9-9d59-b4d9d76c8331",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dedc920-6678-4841-a88b-389f7f682c23",
        "cursor": {
          "ref": "3d579693-abfe-46ce-a9e5-eb48adf63950",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "404f14f7-84cb-4d67-a95f-a40d0c67c216"
        },
        "item": {
          "id": "8dedc920-6678-4841-a88b-389f7f682c23",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "145dc090-23cb-4c37-b3cb-1af01f9d9d09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4513518-96a0-44dd-8fc6-065669c3e797",
        "cursor": {
          "ref": "6e426135-523c-40f0-9f57-bda1e27795bc",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "4dc3cd8f-e215-4c64-b008-ab2bed4cce96"
        },
        "item": {
          "id": "f4513518-96a0-44dd-8fc6-065669c3e797",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "54f9d274-4ae7-406f-a257-7ad0eef9ad4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dee7064-b233-4a91-af28-fcf81821acc1",
        "cursor": {
          "ref": "6ebff4fd-299d-424e-a138-534e9c8ca4dd",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "1d452cf2-8b65-4409-89c1-2a52cd808946"
        },
        "item": {
          "id": "3dee7064-b233-4a91-af28-fcf81821acc1",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "7ce3b825-cd40-420c-8024-1a435b07f89a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36d9e5e1-6fd6-461b-bfcd-678e23a84c62",
        "cursor": {
          "ref": "443e1041-159d-4451-9514-5809856704ba",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "f6b6b332-99bc-4747-b775-34c9c116916d"
        },
        "item": {
          "id": "36d9e5e1-6fd6-461b-bfcd-678e23a84c62",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "9d4f5cfd-2e32-4819-af84-6bd2e7c663bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fa4b90f-1746-45a3-988f-0d8f02a55333",
        "cursor": {
          "ref": "565150de-b8db-47ce-8330-8176c686cc1d",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "3c877581-2c93-4a70-acea-18979e3de285"
        },
        "item": {
          "id": "9fa4b90f-1746-45a3-988f-0d8f02a55333",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "6709557c-a22a-4eb5-9c1c-a52ad03332ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d275c799-1bb2-4c74-b61d-563e1e17e29b",
        "cursor": {
          "ref": "d6019400-8a20-4394-91f3-ea320affc946",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "bae94519-96a8-468d-8153-aff3d5733334"
        },
        "item": {
          "id": "d275c799-1bb2-4c74-b61d-563e1e17e29b",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "0bd4a20d-9413-4970-99ab-eca17daaa223",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be3a9dc8-ece6-4b04-a2f1-e5bfc0ed0698",
        "cursor": {
          "ref": "1d1e1fac-1ce9-4231-8646-57daf1f37019",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "e962b25d-32ac-481c-9b08-e70c9dfe4a70"
        },
        "item": {
          "id": "be3a9dc8-ece6-4b04-a2f1-e5bfc0ed0698",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "b6ca4c82-2d8e-49f7-9ac8-8d41fb739c8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37cea098-2875-42c3-b6ce-0a7205578a70",
        "cursor": {
          "ref": "b869294a-bfc1-4df1-8f5f-79584eb9da36",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "543c008d-b812-410c-8612-09981f0d949a"
        },
        "item": {
          "id": "37cea098-2875-42c3-b6ce-0a7205578a70",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "e032061d-effc-496a-ae85-4c606e89f828",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad4b76ed-20a6-4ef4-abd4-77a1efba81a7",
        "cursor": {
          "ref": "7dcfc9c8-d840-4de1-a9b0-5680cbd8c2df",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "86dd6b40-ebca-436e-b3ae-68f15c978e79"
        },
        "item": {
          "id": "ad4b76ed-20a6-4ef4-abd4-77a1efba81a7",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "06595c6d-ea43-42b7-b95c-a47ed0198e1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a231659c-28d6-4ea4-81b1-b0ae7e80802e",
        "cursor": {
          "ref": "110c1205-60b6-474a-8695-accb8bd4cc92",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "84c73c66-cef9-40b9-a99c-9e589bb9f966"
        },
        "item": {
          "id": "a231659c-28d6-4ea4-81b1-b0ae7e80802e",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "2b2b6800-07cd-4620-acb3-bc8f0abbcf0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afe6ac96-79f1-4b93-b460-9189998b72a3",
        "cursor": {
          "ref": "892f2325-766d-4ca0-9813-16a1dd7c0a45",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "5573926d-db9c-4f18-9329-72f54d5612e7"
        },
        "item": {
          "id": "afe6ac96-79f1-4b93-b460-9189998b72a3",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "78e5557e-8289-4991-8443-1d6a68610f62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73def4c0-7ee4-42e0-b752-8e07f06c42dd",
        "cursor": {
          "ref": "6bbf0d3b-f123-4cb7-bab9-8882d1f96751",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "52948e80-650c-410b-af0a-8a7ab3acddf5"
        },
        "item": {
          "id": "73def4c0-7ee4-42e0-b752-8e07f06c42dd",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "6fbcbe28-5079-4e4f-a4ca-663c0b5fc7de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "317e2ec5-52fd-4cd6-a00a-755e3a849a3b",
        "cursor": {
          "ref": "3a3c1bfa-6ae9-4577-afb3-a58166ecd43e",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "54a2c1c4-ea67-4d23-aae7-9cc420909e21"
        },
        "item": {
          "id": "317e2ec5-52fd-4cd6-a00a-755e3a849a3b",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "7565304a-5392-4518-ba74-44425c1b180e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e04852d-faf0-4b62-81a4-37c308f3dacd",
        "cursor": {
          "ref": "a8ed861e-885a-43d5-9ed1-3120adc933f6",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "a8f0c973-c275-4db2-894a-bb0dcded5a39"
        },
        "item": {
          "id": "1e04852d-faf0-4b62-81a4-37c308f3dacd",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "d224c390-3fb9-4d6c-96e8-cc963faf1721",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d99efee2-95c0-4199-acac-288fb902e547",
        "cursor": {
          "ref": "d4d533c5-ba06-4807-867d-2953a6a1fd83",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "9a66cce9-0ea5-4df0-91fe-bcdda0cc2a96"
        },
        "item": {
          "id": "d99efee2-95c0-4199-acac-288fb902e547",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "c9ec86d2-79fe-4ede-b12c-e127f70c818f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fd86ee6-9412-4925-a106-25210b82a7d2",
        "cursor": {
          "ref": "eea603e4-0120-4518-b866-e768eb6c827c",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "557e63f3-8b5c-4bb9-8953-efaa7de3c4df"
        },
        "item": {
          "id": "4fd86ee6-9412-4925-a106-25210b82a7d2",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "7dbd67a6-e59f-451b-8bef-9e520dec290f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92cf019c-b1ba-43e9-9730-b5718af91865",
        "cursor": {
          "ref": "2328b0b0-2fda-4f9a-9431-f263ded37663",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "d0757a66-ba98-441e-a897-d25dcc3840b8"
        },
        "item": {
          "id": "92cf019c-b1ba-43e9-9730-b5718af91865",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "84c89163-f3fc-403c-8729-fcf48bc24411",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1357acd-514e-4710-a915-76d491c13cc7",
        "cursor": {
          "ref": "86e7cac1-a07e-4e5d-8728-7edac9793b1c",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "c38c2dfb-d948-4037-8246-2c9c4e36e6d0"
        },
        "item": {
          "id": "b1357acd-514e-4710-a915-76d491c13cc7",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "04918a48-3e64-42b9-bb6e-37ba6ef7062f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9be0896-e6ee-4acb-86a5-db11fe7bb20c",
        "cursor": {
          "ref": "9a792803-77e4-47d1-81ca-c7dcaabcde53",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "1d9c26d2-5044-4789-8ad5-f9969217f542"
        },
        "item": {
          "id": "a9be0896-e6ee-4acb-86a5-db11fe7bb20c",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "6caf066c-aeb3-4b2f-9a9a-8d91e2012508",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "561861df-e73d-4db3-ad0d-afc464a008ef",
        "cursor": {
          "ref": "0706e7e6-54d5-4f97-8d06-81205ef005fc",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "44a62f17-ce12-4664-8026-81fd06e085eb"
        },
        "item": {
          "id": "561861df-e73d-4db3-ad0d-afc464a008ef",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "ab0f5da6-99a1-480f-abde-8c4ebd83cf99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52aec8ed-9d63-4bb6-b0d3-eab8d139f892",
        "cursor": {
          "ref": "fbbea937-82ef-4e18-b41a-be692c8885ea",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "64da5dc6-7e86-4a28-aca9-b9654dea7d0b"
        },
        "item": {
          "id": "52aec8ed-9d63-4bb6-b0d3-eab8d139f892",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "2caa9518-4c5c-447c-97d4-32535a8c7bd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e3dae77-93ad-448d-b5b0-f1a3804cab41",
        "cursor": {
          "ref": "709346a5-5f9d-446b-85ec-62f7e926514f",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "61ae2cbb-0c92-4823-ace3-0df10a218962"
        },
        "item": {
          "id": "7e3dae77-93ad-448d-b5b0-f1a3804cab41",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "405f5b00-4729-41ef-bc0b-7c16b3969dfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "970d0484-62be-49d8-84b7-4bf2e90a2331",
        "cursor": {
          "ref": "7236d0f4-6327-4eb2-81fa-bbde8bfc7fd7",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "f4c4a5ae-5532-48c2-8e27-1d7499501a30"
        },
        "item": {
          "id": "970d0484-62be-49d8-84b7-4bf2e90a2331",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "e2341d8f-a5c9-439d-b958-dff11d75269c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd2ca927-08c9-4090-9a35-af3a77f12f65",
        "cursor": {
          "ref": "882841d0-a2d2-4d4d-aaf6-35ca29434394",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "bf1d0996-4778-4c84-804b-a13f39c2f65c"
        },
        "item": {
          "id": "fd2ca927-08c9-4090-9a35-af3a77f12f65",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "b8eb6678-304d-4a31-8d1b-8f1a6b416852",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f21667c-9f30-4418-bd20-f92f18f464d0",
        "cursor": {
          "ref": "017132c0-23b9-43b0-9042-52e80afe0d45",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "fe222f29-4f19-401e-ba84-5dd2953d0321"
        },
        "item": {
          "id": "0f21667c-9f30-4418-bd20-f92f18f464d0",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "3a858a7c-63e2-4018-bacc-8c0126b9d2f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e060c314-abbe-4c7c-80cb-4713a6a48335",
        "cursor": {
          "ref": "89bb1440-03be-4fa0-b680-cebe609980a2",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "16c844f1-0877-44fd-8b22-9d5acb47f827"
        },
        "item": {
          "id": "e060c314-abbe-4c7c-80cb-4713a6a48335",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "ef7f62a9-b718-4240-8f0c-a727e27d0939",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeee3a43-b983-4c45-bd27-4a182d6adc21",
        "cursor": {
          "ref": "0c4629c7-83d6-4eaa-bda8-c9612e8f26e9",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "cf339fda-0a0a-4a0c-bb6c-9c8660517192"
        },
        "item": {
          "id": "aeee3a43-b983-4c45-bd27-4a182d6adc21",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "562a6220-fecb-4e87-87df-9d7f7994b73f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea556570-5068-4dc9-8f79-99c1c69e924a",
        "cursor": {
          "ref": "39ccef87-e336-429f-b53b-42ec68da072d",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "e6190dc4-2f47-48be-a35e-af834fb15cc8"
        },
        "item": {
          "id": "ea556570-5068-4dc9-8f79-99c1c69e924a",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "c25f5658-4cb3-49c3-87af-d17a94d8ca95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b89a454-b60a-4784-abb6-4ef9918daf25",
        "cursor": {
          "ref": "a90b9499-3a39-42ae-aa04-df76d3559363",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "3bf63439-c153-4c45-802d-1f15e005384b"
        },
        "item": {
          "id": "7b89a454-b60a-4784-abb6-4ef9918daf25",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "6143af28-0f4e-4adb-ab3a-ad6c52296da5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b97f604-9833-4b52-8c6c-8e1d8d34f02b",
        "cursor": {
          "ref": "e1b520f3-df4f-4cfc-b49d-c1c0fa4799b8",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "8757328e-86ed-4b87-9f84-7bc7a777ae6d"
        },
        "item": {
          "id": "1b97f604-9833-4b52-8c6c-8e1d8d34f02b",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "eb04517f-776c-4cb8-829b-d30c7a45192d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83c7661a-5583-4710-9648-66875f2148a9",
        "cursor": {
          "ref": "9519bc98-4053-49a9-86a2-4a067c2eadd2",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "54089d35-a7d6-4910-b13b-1703429fffa2"
        },
        "item": {
          "id": "83c7661a-5583-4710-9648-66875f2148a9",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "53f1cb5c-550f-487a-961d-aec6576fef6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b114d559-e053-49f2-98ff-233bc246baf4",
        "cursor": {
          "ref": "e7b15be6-3974-42b1-9f4e-ab585147f777",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "c6fea690-9bf6-4dc1-a5fe-cbff619f45c0"
        },
        "item": {
          "id": "b114d559-e053-49f2-98ff-233bc246baf4",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "6e7d1492-0546-4aad-9ad1-78fcb806b180",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6969be95-5fac-480d-b8fc-39a642fd48d7",
        "cursor": {
          "ref": "eeb8bac0-2652-41db-adf7-3924ca733a46",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "c886260f-332c-44aa-9437-61ee87805abe"
        },
        "item": {
          "id": "6969be95-5fac-480d-b8fc-39a642fd48d7",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "b9fb8cb2-b6d9-47f8-9b52-2f01618b22e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30320c73-1250-4aac-8b7f-46e92ef0e333",
        "cursor": {
          "ref": "696ffc08-f34a-4682-bc1f-69f23c2c5ec2",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "d6f31e29-c1e4-4f12-bef6-5aad7f9e1712"
        },
        "item": {
          "id": "30320c73-1250-4aac-8b7f-46e92ef0e333",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "6c342c2a-9129-4291-b4bd-91d8edcf894c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e50cfad-ca41-4616-a0fd-4c4b114a1332",
        "cursor": {
          "ref": "d7ea097e-f9f1-4bd9-9788-827b31cb0244",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "60b5c86c-7380-4d69-be5e-dd15ba672f60"
        },
        "item": {
          "id": "0e50cfad-ca41-4616-a0fd-4c4b114a1332",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "0135df1d-4e1f-4bd1-a6f6-74d3e7d18835",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86011de6-2e4f-4379-9dea-2b094f59e2c3",
        "cursor": {
          "ref": "7662dcc2-c72a-42d4-8584-a4a5a3df4737",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "85fa308d-c057-4180-882c-24b702faf2bc"
        },
        "item": {
          "id": "86011de6-2e4f-4379-9dea-2b094f59e2c3",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "18fb1340-001d-41c0-a6d3-861edbc38354",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2695e4c4-663e-4488-8454-136c084a4921",
        "cursor": {
          "ref": "99a0e5c6-3dfd-48e6-b6ef-a90e63bab462",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "ffcd25aa-6862-4959-8ebf-736e711ee509"
        },
        "item": {
          "id": "2695e4c4-663e-4488-8454-136c084a4921",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "ca362d2f-74cf-4928-b96b-4fe2dc9efcc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "661ca09e-e04a-4846-b1e7-92965b765c33",
        "cursor": {
          "ref": "7517f7cc-4b88-4373-9268-a38c45c1eb0c",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "295271c2-869d-455d-8875-d258cfc70644"
        },
        "item": {
          "id": "661ca09e-e04a-4846-b1e7-92965b765c33",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "509572a0-cb60-43c0-9bca-5c0560e07cdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4ff486a-a79a-4777-92f5-4001ba8c3301",
        "cursor": {
          "ref": "1fa5ecee-ea00-48f2-91ad-ca6d98effa35",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "30748042-9108-4023-931a-5f1a1d509c4c"
        },
        "item": {
          "id": "a4ff486a-a79a-4777-92f5-4001ba8c3301",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "b8e41d34-e586-4667-834b-fc738b64b062",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6df9bd4f-c66d-4850-83c7-4f2744966a50",
        "cursor": {
          "ref": "4623752c-5fc5-4c32-9e6c-a2cf69e033e4",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "31e63d8a-9c47-485e-9757-d2278ef5d9ac"
        },
        "item": {
          "id": "6df9bd4f-c66d-4850-83c7-4f2744966a50",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "bf911f29-b25d-4971-9c98-c644b71e6fe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddc0e286-628d-4f57-a4ab-5fd6582edfa3",
        "cursor": {
          "ref": "8a16ac6a-3ad6-4e84-88d0-93674b82b692",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "c0f88041-6e68-4fad-9f93-8ae9ae314ac6"
        },
        "item": {
          "id": "ddc0e286-628d-4f57-a4ab-5fd6582edfa3",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "0072055b-9389-413a-844f-f143e9c68d4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2927ac14-776f-49ca-b48e-e959ff28447d",
        "cursor": {
          "ref": "e4dcc921-91e0-405e-a9ce-b4a7e38084f3",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "1185e36c-ae29-4260-af01-5854d01e61a7"
        },
        "item": {
          "id": "2927ac14-776f-49ca-b48e-e959ff28447d",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "5a14e868-5148-40a2-bfa3-58a57dffb660",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65fa902f-61aa-47ab-9866-d726e4a7632d",
        "cursor": {
          "ref": "01549dd1-149d-42eb-896c-7f7c79e19627",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "7f739a6a-6b38-431b-b9ed-dcc34a62dfed"
        },
        "item": {
          "id": "65fa902f-61aa-47ab-9866-d726e4a7632d",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "ef372816-ab31-4c83-9295-2430babb37fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a75d0ee-ab7f-4c45-9ec3-9400b54affbf",
        "cursor": {
          "ref": "886f6430-f4a0-4add-8503-2c97b8c791cc",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "741514e0-6894-4834-8ad0-c7740fd69c2b"
        },
        "item": {
          "id": "4a75d0ee-ab7f-4c45-9ec3-9400b54affbf",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "38a0453c-1317-45e2-bad2-8b3bbd00a1ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a449d5d-1223-4b22-8b92-b196398e726a",
        "cursor": {
          "ref": "5988159b-b206-43e9-8b52-d043dfef3649",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "6ba57b50-e427-4c97-9055-3f15b81d59e0"
        },
        "item": {
          "id": "7a449d5d-1223-4b22-8b92-b196398e726a",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "fa9edddb-6732-486b-82c6-7f65eede8074",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b36cadb6-b026-4efa-95dd-655403fc12dd",
        "cursor": {
          "ref": "5295ead5-9702-4c7d-a091-458b24a99132",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "fb5c8ede-385f-4446-a27c-1984b5505be7"
        },
        "item": {
          "id": "b36cadb6-b026-4efa-95dd-655403fc12dd",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "696b6d8b-8dda-4f56-bcb7-7f456fcfc7f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78af94be-d0b2-404f-bcf4-f4d74cab8957",
        "cursor": {
          "ref": "d20b4041-52f8-451f-8550-5435260b108c",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "8a8ac836-ea50-4b97-8c68-85f31399d51e"
        },
        "item": {
          "id": "78af94be-d0b2-404f-bcf4-f4d74cab8957",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "0fabb637-b6cc-49f6-acd9-63fe3a2dc6a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de093531-b392-4b1f-a84a-de04d21423fc",
        "cursor": {
          "ref": "57626285-daa0-4f4a-a698-33b336832a2b",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "1469f5f0-888e-4be8-8172-86ee298afd62"
        },
        "item": {
          "id": "de093531-b392-4b1f-a84a-de04d21423fc",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "fec26e52-6314-4d6f-8216-b9a4ac3ef584",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27648dd5-b857-4ff7-901f-ee9894e28b82",
        "cursor": {
          "ref": "73fcce94-8f22-43df-b972-131ccad4f3a9",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "947b8a63-88ad-427a-b00d-1dd145e0599f"
        },
        "item": {
          "id": "27648dd5-b857-4ff7-901f-ee9894e28b82",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "937ae112-1912-4847-8049-475ae3db97ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2763b518-c8b2-40d9-a465-ccbb1b2df1fb",
        "cursor": {
          "ref": "0b1262c4-bb4b-4db7-a599-d9d8017fd422",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "b2bb41f5-ae66-4210-80eb-7ea1de87b7a4"
        },
        "item": {
          "id": "2763b518-c8b2-40d9-a465-ccbb1b2df1fb",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "ae99e2d1-dff1-4cec-aee9-ee3df6c222ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "521c9159-9cd3-4da9-8e22-24be7f330a69",
        "cursor": {
          "ref": "c8cdd9ed-0202-42da-861f-fb35fd250e88",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "175851ec-be42-497a-b1a8-9f633399151c"
        },
        "item": {
          "id": "521c9159-9cd3-4da9-8e22-24be7f330a69",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "2036823a-8fcb-4113-aece-2e308935f289",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78629efe-d1fc-4b46-b0af-2f52d95deae2",
        "cursor": {
          "ref": "0eac5873-a96a-4a93-b03e-ca1cc368f339",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "1e376696-eab6-447b-84ac-3c217b0d1cc3"
        },
        "item": {
          "id": "78629efe-d1fc-4b46-b0af-2f52d95deae2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "60020721-d7f2-4a00-8fc3-e01a222ec76d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3617eff8-66db-4d41-b022-3ddf2838c592",
        "cursor": {
          "ref": "b64b78f8-ace8-4e1b-a067-4c86153376e7",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "d7912e70-68f7-4f26-9a4e-9c90ffb28b1c"
        },
        "item": {
          "id": "3617eff8-66db-4d41-b022-3ddf2838c592",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "b45cd117-5c4c-415f-a083-959aa36688cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1e5556f-f365-40a1-87b9-9d5b6db3ed9a",
        "cursor": {
          "ref": "ba31dd7b-9731-4ce7-b15a-f4a5ed5881b1",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "9247f364-d53e-4f6f-a1fd-defaa85e6c9d"
        },
        "item": {
          "id": "b1e5556f-f365-40a1-87b9-9d5b6db3ed9a",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "639db358-16ce-4afe-9a7f-9adac509980d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0985dce-6552-42d9-a866-d8cf9649a4ac",
        "cursor": {
          "ref": "7a2afe29-8333-420b-a29e-352a43620e31",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "65c71561-4d0d-4deb-b9b0-d1ad69a0ef3c"
        },
        "item": {
          "id": "f0985dce-6552-42d9-a866-d8cf9649a4ac",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "4fd811e1-69b4-4e6a-bbb9-efe5dc256488",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a62d51c3-e5b7-45e1-9eb6-18dc22521472",
        "cursor": {
          "ref": "9c44e774-5868-4955-8739-c2e789e3a06a",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "591bdd61-76df-418f-b5c3-634c5157af4b"
        },
        "item": {
          "id": "a62d51c3-e5b7-45e1-9eb6-18dc22521472",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "31470b4f-67a2-42da-b97d-20d57b2f6c5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7da9f3e-b43e-413c-baa5-f3717e84412d",
        "cursor": {
          "ref": "3cbe07c2-2e3b-474c-847d-03c8542edd6e",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "0851a031-9295-4f38-aca1-c6028b2241cd"
        },
        "item": {
          "id": "f7da9f3e-b43e-413c-baa5-f3717e84412d",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "3477fc04-fd55-492c-9d57-ef9a12322d49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed254372-5953-4769-a280-9a47519a2d4b",
        "cursor": {
          "ref": "4200834e-7bd3-4b11-82d3-5c9907998214",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "8007accb-965a-486c-a594-eb6560f6ce76"
        },
        "item": {
          "id": "ed254372-5953-4769-a280-9a47519a2d4b",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "6c7f8488-621b-42e6-baa1-2f35c81c4a32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24459119-e5cf-4ee3-b47c-26a71cf63ceb",
        "cursor": {
          "ref": "93a28335-66f8-43d0-bc57-f82b8705e381",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "fa2a4318-22eb-4d53-be77-9cc4a9be5fd6"
        },
        "item": {
          "id": "24459119-e5cf-4ee3-b47c-26a71cf63ceb",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "34efd4df-2e45-475c-8509-663b017c1e16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4981ead9-76bc-4e54-8dae-a945179ff761",
        "cursor": {
          "ref": "6dcb9410-da50-48f1-9620-2c463a91cb29",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "fc48d25e-48e8-4544-a8e7-bcba4dd7f03f"
        },
        "item": {
          "id": "4981ead9-76bc-4e54-8dae-a945179ff761",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "10a033a7-41ff-4d94-a086-0cb59a448a93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6cf21be-4ecb-4142-8474-19b420d4a73d",
        "cursor": {
          "ref": "a9ef925e-1f49-466b-bd08-d66eeeb50dd3",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "be536b20-4b27-4503-9ddd-df6f3d94854f"
        },
        "item": {
          "id": "a6cf21be-4ecb-4142-8474-19b420d4a73d",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "a4187ecf-8273-47db-b0cb-5435a6413c20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2afd9933-6e8b-49ca-94a1-d7ae807c02fe",
        "cursor": {
          "ref": "d5122729-bcba-4fbc-ad0f-b8f169aab1dd",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "d2b8f963-3a40-40a6-b2b3-1f3444924e7f"
        },
        "item": {
          "id": "2afd9933-6e8b-49ca-94a1-d7ae807c02fe",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "c72ee779-be1f-421c-9600-8e5a411eb255",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8734ac29-79f6-49ff-9f54-c9475b4cb259",
        "cursor": {
          "ref": "42460590-4b87-448f-8468-aa00c3b82769",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "364279bc-6e34-4d88-ba75-a08dac19ffae"
        },
        "item": {
          "id": "8734ac29-79f6-49ff-9f54-c9475b4cb259",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "18a6b448-d8f9-4730-a784-76a803db5c69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb22686a-8ed3-4e7e-b820-901dad954167",
        "cursor": {
          "ref": "a91292e5-319f-4afd-ae4e-899b51270759",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "1ceb4495-d2a9-4e65-9a3a-5084bcb2bea3"
        },
        "item": {
          "id": "fb22686a-8ed3-4e7e-b820-901dad954167",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "7d291e1a-b5e3-4b9b-9c2f-d17095a7e677",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bc5e48e-8b83-40e6-8a19-acc69ab42b50",
        "cursor": {
          "ref": "85b293b7-a598-4abc-a1df-41008e1142dd",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "e23f536d-62ae-404c-96d1-2d9733b723a7"
        },
        "item": {
          "id": "6bc5e48e-8b83-40e6-8a19-acc69ab42b50",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "8cbc8674-c85a-4839-a11f-268a4590bf0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d4a2932-6c4a-45ee-96fb-6b5f47471ce6",
        "cursor": {
          "ref": "785faabc-5c71-481e-9256-4b62b7bea110",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "c1f27cfb-3d7e-472b-b849-7a46546b5869"
        },
        "item": {
          "id": "2d4a2932-6c4a-45ee-96fb-6b5f47471ce6",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "2f325ee2-55e6-4dbe-8f3b-b4e62318ce4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc9e8afb-c2bd-42e0-9438-2486f2337496",
        "cursor": {
          "ref": "4e6b141e-8072-4271-a063-1a5a50528876",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "74c693bc-f5d1-4185-9ee1-084710b9c69b"
        },
        "item": {
          "id": "fc9e8afb-c2bd-42e0-9438-2486f2337496",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "d5c0509b-3f0e-46b5-ad95-e41b210d06b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d54acc8d-827f-4bce-a62d-451abb468c07",
        "cursor": {
          "ref": "ca202a2c-aa17-49b1-ad3c-2989aa28b940",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "4fdef87c-297e-4b46-a578-20ec528d3442"
        },
        "item": {
          "id": "d54acc8d-827f-4bce-a62d-451abb468c07",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "dfb0020e-4b21-49d0-8f83-694f3d5686c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df51064b-d51f-4632-8f1e-7e9a98d73ab8",
        "cursor": {
          "ref": "a5dc5296-72b0-4150-81e2-c502b8c48c1a",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "3033f24e-5735-40f3-82c2-17bfeb4ad048"
        },
        "item": {
          "id": "df51064b-d51f-4632-8f1e-7e9a98d73ab8",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "b371020c-aeff-45a4-b894-c91ead6793ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43680f28-1560-4586-ae05-b5861876ad57",
        "cursor": {
          "ref": "aba9a416-a3cf-4687-8bc6-990a750e6265",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "fdb3a1af-f0eb-4f8f-8180-3322e9bb9f22"
        },
        "item": {
          "id": "43680f28-1560-4586-ae05-b5861876ad57",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "2df4101e-844a-4db5-953e-03fc2288f929",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd1c4c9b-96cc-4ae0-a2b5-f7843a9459cc",
        "cursor": {
          "ref": "b925e041-f706-45c5-8c36-ca30cc1432f1",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "4e82a1ad-e0e5-4083-a38d-68edfc63686a"
        },
        "item": {
          "id": "dd1c4c9b-96cc-4ae0-a2b5-f7843a9459cc",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "41722d97-1c39-460d-b0b3-b38b3a4f60c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "462a8eb7-3a1e-4510-a7da-4c6d0672afdc",
        "cursor": {
          "ref": "df1cbe2d-538b-4caf-b3cd-5d5bceb59d34",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "4f8606cf-0d4a-44f2-a969-f660ab0a46bd"
        },
        "item": {
          "id": "462a8eb7-3a1e-4510-a7da-4c6d0672afdc",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "c0fd3f4b-dea4-45f9-8eaa-0d678269d7d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22e29744-91b5-4e49-9dba-a801b4575305",
        "cursor": {
          "ref": "cc38f072-7669-4531-b103-49806078854d",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "dd9880f2-eb24-4d24-bbde-875735b47e47"
        },
        "item": {
          "id": "22e29744-91b5-4e49-9dba-a801b4575305",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "be76d56c-a07e-49e7-bd6f-0e68458db041",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd5a70c0-012e-4641-8042-f9eb2e07dc1f",
        "cursor": {
          "ref": "691183d1-53d8-43ff-bb4c-89fe8583601f",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "df69193b-12a6-4a95-8123-a34637a1e90b"
        },
        "item": {
          "id": "dd5a70c0-012e-4641-8042-f9eb2e07dc1f",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "5b380283-1227-41d0-8918-5b250cafa654",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de82218b-e3cf-400f-ae5a-5b07c888c4bf",
        "cursor": {
          "ref": "c060aebf-f9ad-4612-a689-6d15562752c2",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "74c69c37-8344-4a08-ac27-62c389f68ea7"
        },
        "item": {
          "id": "de82218b-e3cf-400f-ae5a-5b07c888c4bf",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "578f5449-60a7-4343-907f-00f7055db468",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea4919dd-4fb9-4950-a8cf-d1bf4f82f433",
        "cursor": {
          "ref": "fdcb2766-cdf8-49fb-a8fb-101991f90a3b",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "702d76aa-f9f4-4a86-8044-44cdede389a8"
        },
        "item": {
          "id": "ea4919dd-4fb9-4950-a8cf-d1bf4f82f433",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "2df06b55-9a26-4c24-b81e-15a18257f38a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cca880e-83dc-41df-b0db-ec36658d701c",
        "cursor": {
          "ref": "4f0da3b4-7415-4f64-af14-f3518c94b5e6",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "5c198a04-4d16-4f05-a354-f1a1e61e47f0"
        },
        "item": {
          "id": "7cca880e-83dc-41df-b0db-ec36658d701c",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "002dc245-889d-483e-9d97-f71b48875e61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3da38ff-a754-4ef4-bf85-95914a7a6c12",
        "cursor": {
          "ref": "0345ae7c-fb83-4c35-a685-cadb7f4b5892",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "dc3026c8-0c98-4de1-bfb8-058b0c43a1c6"
        },
        "item": {
          "id": "d3da38ff-a754-4ef4-bf85-95914a7a6c12",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "3be67e0f-5ea3-46c5-b016-b0ed99708f4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e2f4e65-4bd3-4e87-a13b-477496c592ca",
        "cursor": {
          "ref": "e1be3bdd-d6c4-4924-8a03-42a7c0ae5c58",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "6859c1a9-6955-4223-b468-916a204c3851"
        },
        "item": {
          "id": "8e2f4e65-4bd3-4e87-a13b-477496c592ca",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "a8142b1b-c9f4-4c9e-b1d5-5527304d521f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e14da632-3b57-4eaf-bf76-5b5beab5af0e",
        "cursor": {
          "ref": "a12b7a36-b4b4-4153-a818-76f05255d7c2",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "8482af7d-1dcb-41af-b463-5c02d0ba90fb"
        },
        "item": {
          "id": "e14da632-3b57-4eaf-bf76-5b5beab5af0e",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "6757c2cf-6b1a-41df-9552-a3cbe9e0fa09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c8b3d0a-6ec0-49d9-be36-ecc1469ab316",
        "cursor": {
          "ref": "02945554-af79-4326-a31b-2ddcfc1347b1",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "c17c9245-6865-4503-b4a2-c7f2694b2cf0"
        },
        "item": {
          "id": "1c8b3d0a-6ec0-49d9-be36-ecc1469ab316",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "c1f3e525-e412-4d32-b95a-929907e8c80f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab94a576-302a-4a52-aa5e-164935fcb34f",
        "cursor": {
          "ref": "d7a9a6c1-8303-4347-a488-990fd85405b4",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "dc5444f5-a350-4677-8e75-c0d7f40d3004"
        },
        "item": {
          "id": "ab94a576-302a-4a52-aa5e-164935fcb34f",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "6a3a6586-2b09-43a7-b4ed-2b3728c46cd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cf81a17-89ba-42bf-b080-16586e3f479e",
        "cursor": {
          "ref": "baec5e70-2e7b-4878-b064-79ef31ab02ae",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "a88e5639-efeb-46dd-b178-c3341201d54d"
        },
        "item": {
          "id": "1cf81a17-89ba-42bf-b080-16586e3f479e",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "13f668de-a819-4ec2-9490-d032fc525039",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cac6773-17eb-40c4-ada1-3f31ed586af4",
        "cursor": {
          "ref": "4db66a69-3a4f-4af1-a894-063c522b6eb6",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "b4fc83fe-c3c7-444b-9c8c-74c3c440c821"
        },
        "item": {
          "id": "3cac6773-17eb-40c4-ada1-3f31ed586af4",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "cf269e09-f015-4a24-b348-6b39fe9e8404",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c5d408a-843a-4319-8598-c59a4b7a0841",
        "cursor": {
          "ref": "3ad5cfaf-6e72-403a-ad65-b27fb85dc2e8",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "bfefad9e-6a3b-4348-9d0a-a9de0826ffe3"
        },
        "item": {
          "id": "9c5d408a-843a-4319-8598-c59a4b7a0841",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "dea50420-72a1-4b2b-a272-29fea4dc2640",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:101)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6267159e-6ba8-438b-83da-208cf6168312",
        "cursor": {
          "ref": "59037286-9cf8-44fe-aec5-36ec6e83e425",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "2cd03d40-4b71-4c47-8abe-bfab6e7f6ca9"
        },
        "item": {
          "id": "6267159e-6ba8-438b-83da-208cf6168312",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "e7a881a8-82b7-4dea-b8e8-b9e333708720",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "c0e8ed95-220f-45a9-8459-6b2598c519a0",
        "cursor": {
          "ref": "a09ccdcf-f72b-4ae4-a490-b6aa3ea9884d",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "102d9576-9f15-459e-8ec1-3fa02b3ca7a6"
        },
        "item": {
          "id": "c0e8ed95-220f-45a9-8459-6b2598c519a0",
          "name": "credentials_issue"
        },
        "response": {
          "id": "5d64c716-cf43-4422-a8ad-0b9322021959",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "a16014af-04a2-4c9d-ae8c-9b98e0d5f051",
        "cursor": {
          "ref": "1c6bf8b0-a0ca-4c88-9829-a51a158cdb50",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "5732749c-deb0-438e-8db7-f9676e8560c7"
        },
        "item": {
          "id": "a16014af-04a2-4c9d-ae8c-9b98e0d5f051",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "8f0a9e9b-2f7a-4f00-923a-b68c46ce4f5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "2d26d0b2-2679-4cf8-813f-2f39fae66f1c",
        "cursor": {
          "ref": "aefe6d9c-2d08-45cf-9f34-da0316c58783",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "13d5d458-1b7d-48dc-8303-a8c026847ee8"
        },
        "item": {
          "id": "2d26d0b2-2679-4cf8-813f-2f39fae66f1c",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "f3f93c71-a371-44d2-a77d-ed020f7b017c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "de46573e-cf50-4c5b-b742-22eb4453db72",
        "cursor": {
          "ref": "6039813b-5c51-4404-87aa-05b55600c7e6",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "149cad39-c6d3-4595-891d-400c4865610e"
        },
        "item": {
          "id": "de46573e-cf50-4c5b-b742-22eb4453db72",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "81e5454c-0d7f-40f5-966c-35db69c64b29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "095ef0d2-3c8d-45a7-9c7c-b9467db10f27",
        "cursor": {
          "ref": "3b3c558b-c83e-4431-8417-c6b24cc042b3",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "c6787bc0-65ff-4584-bc74-8e0d1081513e"
        },
        "item": {
          "id": "095ef0d2-3c8d-45a7-9c7c-b9467db10f27",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "c37e064d-57df-497a-a604-fe267663e4e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "58f76ddf-9ad5-470f-ac5a-f343c4fcb197",
        "cursor": {
          "ref": "9bb5c374-ae2d-4b4e-ad31-4ec5a1675642",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "023ffaef-ad8e-4e83-a52f-db08679ddbf9"
        },
        "item": {
          "id": "58f76ddf-9ad5-470f-ac5a-f343c4fcb197",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "7a7b4267-91b8-4d5f-b146-52dbab8b388a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "73ac018f-9344-4abf-a2be-e79817413926",
        "cursor": {
          "ref": "aacf6d20-58bd-40ae-8a75-70f9b4ff1210",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "523a1a57-35d6-4540-bd6c-75a1677d8c2f"
        },
        "item": {
          "id": "73ac018f-9344-4abf-a2be-e79817413926",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "00a6e104-b0e7-4caf-a49b-d2e2f0004f86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf8c8ed4-5e7e-41d0-8e9a-e672aa56d25a",
        "cursor": {
          "ref": "d91b86be-0d6a-4120-9879-f024745cd995",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "1cd6631f-5e68-4df9-b2ec-cef061908cf4"
        },
        "item": {
          "id": "bf8c8ed4-5e7e-41d0-8e9a-e672aa56d25a",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "132f5ac4-d468-4c38-b74d-5439cf44f700",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffb66da9-a6c9-4c4c-afa6-d93b6295a20a",
        "cursor": {
          "ref": "a8a3c4ab-fc71-430c-9ab8-e9494d645a8f",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "b31207bc-584d-4690-9843-16c841137c59"
        },
        "item": {
          "id": "ffb66da9-a6c9-4c4c-afa6-d93b6295a20a",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "2884e998-bf5b-4c9d-b6f7-6bfd28ace67e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "132d7038-8c88-44dc-b296-95e85baa2e24",
        "cursor": {
          "ref": "6cd9f756-c061-4514-ae51-5f4fe4901f3e",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "19980b40-1d6b-474e-a4f0-1f1186d9a265"
        },
        "item": {
          "id": "132d7038-8c88-44dc-b296-95e85baa2e24",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "48db8dd2-16b8-4f2a-bcd6-103d515ef277",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6161b8c1-41c4-49c0-b087-d09e7f4d0564",
        "cursor": {
          "ref": "84bd948c-95c6-4e63-9f32-b1b7380edce5",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "9c46f848-2761-4e81-aac4-bcdd288abf79"
        },
        "item": {
          "id": "6161b8c1-41c4-49c0-b087-d09e7f4d0564",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "9b1dafcf-0140-402f-b5fa-5d1b540aaca5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "260a20a1-519b-406d-9afa-b20c63649e4a",
        "cursor": {
          "ref": "09454a1c-60bf-4429-9798-afcb2cc7e607",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "91379bca-1c5e-4f81-8262-e96615e7343d"
        },
        "item": {
          "id": "260a20a1-519b-406d-9afa-b20c63649e4a",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "d057f267-a15a-434d-bc89-b2ffaa33cc01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29ef98bc-07ee-4d79-b7dd-aab903e7f1c3",
        "cursor": {
          "ref": "183a0ed1-a426-4be1-b20d-b6c6c8a77dca",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "b1091e4f-8953-435a-8d3e-951f132931ad"
        },
        "item": {
          "id": "29ef98bc-07ee-4d79-b7dd-aab903e7f1c3",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "d546b8a5-8856-4fb9-9a7a-0b32187cb3fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f3cfb4c-f086-4785-922a-8547d0219c54",
        "cursor": {
          "ref": "93cf2875-f3c0-4901-9890-8d2e45f566f4",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "49dbbc4c-395f-45e8-9796-4774fd21e3ba"
        },
        "item": {
          "id": "8f3cfb4c-f086-4785-922a-8547d0219c54",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "ec373918-0573-4138-b615-1584f0e7b9bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aafdc4da-ab79-4e2b-8f82-46d362799f00",
        "cursor": {
          "ref": "4c2a4de3-a781-4ac5-80d4-73bc8444157c",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "fd0b80c3-87e9-409a-b9e9-13f634741217"
        },
        "item": {
          "id": "aafdc4da-ab79-4e2b-8f82-46d362799f00",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "e64009b6-29aa-4519-a8ad-abe73daef519",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "941f4f0a-5ac4-4346-8a0f-225cc2ede6d2",
        "cursor": {
          "ref": "48271dc2-f5f8-434b-828a-f7b9aedcc167",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "8a8b500b-b105-46c9-96fe-55d8479c4006"
        },
        "item": {
          "id": "941f4f0a-5ac4-4346-8a0f-225cc2ede6d2",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "8d1f06d4-a6e8-4501-97da-210ea33357b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01bff694-12fa-4f72-a39e-2f471d6d85e3",
        "cursor": {
          "ref": "9e6d3d0e-f7a3-4138-8d23-22d773163bd3",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "1a0ebd43-18ac-40a7-81bb-092230c5100c"
        },
        "item": {
          "id": "01bff694-12fa-4f72-a39e-2f471d6d85e3",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "ce2d678e-a639-4f51-972c-a44605d0aef8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2be8fb1b-23c6-4d15-8a20-1d3cd508db26",
        "cursor": {
          "ref": "754c6f70-76a7-4f81-aedb-8d098a8fcba4",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "58dea6d8-bd75-477d-8572-2bbbcc5f15aa"
        },
        "item": {
          "id": "2be8fb1b-23c6-4d15-8a20-1d3cd508db26",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "23f4ff4a-9ce4-4f3c-aa56-958d2106f9b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7727b03-656c-4021-a4d0-daae87d9fb19",
        "cursor": {
          "ref": "69c4f1e5-c061-4a25-a398-570aec01920c",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "0fd0c74f-156a-43a9-ac1f-7bdc8591c880"
        },
        "item": {
          "id": "d7727b03-656c-4021-a4d0-daae87d9fb19",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "25c9e641-4a9b-4c63-8e74-2745d3f994e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e492104-131d-443f-9be3-445762786952",
        "cursor": {
          "ref": "1948659f-5005-4c80-a125-7342a70aaf26",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "c12c5cb3-e35f-4075-9d29-04ab7301a59d"
        },
        "item": {
          "id": "9e492104-131d-443f-9be3-445762786952",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "78539ece-0d12-443f-8d65-72ab5d618e32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d6d79dc-1d2a-48f7-ba5f-70fd761d9088",
        "cursor": {
          "ref": "4d26d14a-031e-4a81-b889-2a7721eb2ada",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "68ae07aa-0c11-4c5e-9395-4d0361e283f5"
        },
        "item": {
          "id": "3d6d79dc-1d2a-48f7-ba5f-70fd761d9088",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "11f02e0d-513b-4fa1-9a25-a602c66dfd21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78e02011-6fc2-4487-8d93-de265499b1ad",
        "cursor": {
          "ref": "b21244e9-425b-4f34-bc9d-370daa6410cb",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "77b8d305-7006-43e9-9739-3f1f11db9b8a"
        },
        "item": {
          "id": "78e02011-6fc2-4487-8d93-de265499b1ad",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "1c7589bd-43a5-4d15-9eec-aa5f961c1e87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afba45c4-c3db-4a2b-a0bb-6f696e77e0eb",
        "cursor": {
          "ref": "22e36075-8d94-4c23-aa3d-58a10f002500",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "a31fc2f6-9a91-42d4-8bd8-97e1ae18d766"
        },
        "item": {
          "id": "afba45c4-c3db-4a2b-a0bb-6f696e77e0eb",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "857187c1-eddf-492a-a98f-bc4c6aa5a5aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "053f4d53-1038-495f-a3e8-64db4696e5ca",
        "cursor": {
          "ref": "a034a299-9d1a-4732-b706-7fbc7c1a521a",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "dccc820a-f87c-4449-b69c-3f78804a06ed"
        },
        "item": {
          "id": "053f4d53-1038-495f-a3e8-64db4696e5ca",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "c23e38cf-be42-4864-a742-ab505545a503",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1c4dcc0-4ad9-47ec-a365-1606f4fc8862",
        "cursor": {
          "ref": "6c67bf25-e5d7-4855-b164-098f5fe1e9ef",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "60e3c2b4-68f7-4b2b-91b9-60387e957c37"
        },
        "item": {
          "id": "d1c4dcc0-4ad9-47ec-a365-1606f4fc8862",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "b76e7e95-38b7-4267-aa13-10bdea76eec2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f039418-5cd5-41ac-8975-db2e16ea79db",
        "cursor": {
          "ref": "00f38187-4f18-4fed-8581-ca253c8dee3e",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "43a1d583-fa61-4c71-8224-3c2f7d58d7dd"
        },
        "item": {
          "id": "1f039418-5cd5-41ac-8975-db2e16ea79db",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "8beb10ba-3fc0-4ce3-b729-74103e2ce7e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1684bf48-e638-4801-b600-04e20cb33d6e",
        "cursor": {
          "ref": "96903943-3a57-4e8a-9340-164cc863744d",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "cadd48b0-da54-4685-bc7d-621f66c7b0db"
        },
        "item": {
          "id": "1684bf48-e638-4801-b600-04e20cb33d6e",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "fd1ac4cc-2eb7-41ea-adca-f2ea824c08ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f489e68c-c76f-417c-a399-243e12394beb",
        "cursor": {
          "ref": "ac2f123f-0ec0-4e02-b7ca-bddbc79d7c2b",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "a392c984-9618-4abb-9457-a0aa72204d28"
        },
        "item": {
          "id": "f489e68c-c76f-417c-a399-243e12394beb",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "edae2d81-b713-45ef-848d-f009baafb20c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f233e2e9-31f4-4d30-ab34-44401989da4f",
        "cursor": {
          "ref": "b77b1b64-2cc3-498a-90cf-4cc8aaaeec10",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "aa4b4083-965d-459b-a4a8-42606692d454"
        },
        "item": {
          "id": "f233e2e9-31f4-4d30-ab34-44401989da4f",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "150bb10b-baa5-483d-982a-6c43a4b765cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdc18941-c15c-46bb-a9bb-63d7819d29f0",
        "cursor": {
          "ref": "0991ca61-c78b-4a42-94e3-d06c52355416",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "4f40f4d5-0625-4d75-9a5a-a76c988e515e"
        },
        "item": {
          "id": "cdc18941-c15c-46bb-a9bb-63d7819d29f0",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "6352db2c-f53f-45f8-9b58-dbd69fc1e6b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1573e8d0-602e-42c0-b0c6-ce0a72f1bbab",
        "cursor": {
          "ref": "3f36cd35-9af1-4cca-a105-ab605d8c08ef",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "39746968-6f60-435c-b15d-fa3ebc3dc4f5"
        },
        "item": {
          "id": "1573e8d0-602e-42c0-b0c6-ce0a72f1bbab",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "4ad4ec76-6dd6-4c0d-9171-14989d2f952d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "230de8e9-6654-4672-b103-b622e9982c16",
        "cursor": {
          "ref": "74ecda7e-804a-49d9-97bf-cc2e9e411ffd",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "83dd26b1-f0f6-4362-8171-39964c5642f0"
        },
        "item": {
          "id": "230de8e9-6654-4672-b103-b622e9982c16",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "a024add9-d1ac-427a-9b8c-02ffe9acdc88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c4e385c-9c5c-49b6-95b0-bb7973aaa600",
        "cursor": {
          "ref": "0ab408f5-837f-4a5f-8df5-ea272b3ebc5b",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "490bfe5d-d8c9-4a26-81ca-5aba620c9572"
        },
        "item": {
          "id": "7c4e385c-9c5c-49b6-95b0-bb7973aaa600",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "b8da6ae4-203f-4876-8379-14ac0f240f2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29ea03cb-6f5f-4b43-aca7-45288b63b8da",
        "cursor": {
          "ref": "7b1e5c08-1f8d-4f5c-869d-9560b6be8d70",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "d81baa28-df44-4886-a954-a0e123d1796d"
        },
        "item": {
          "id": "29ea03cb-6f5f-4b43-aca7-45288b63b8da",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "0142d007-bfc9-4bdf-b576-b2e81e263688",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c031a478-e4e5-47a7-a4d4-3296f5408323",
        "cursor": {
          "ref": "6514dec8-2baa-4cc5-9a2a-da21dba7e414",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "f42ea592-b215-43e4-a7d8-db73aa717336"
        },
        "item": {
          "id": "c031a478-e4e5-47a7-a4d4-3296f5408323",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "b60db773-046c-49e0-abc3-bec1566c1a43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ce2a664-d737-4a18-9e0d-1f5b10f8511e",
        "cursor": {
          "ref": "5c81c9cb-9984-41c3-9bc1-8510fc9c9d7a",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "bacfcfaa-adec-4f45-8206-538665994b8d"
        },
        "item": {
          "id": "5ce2a664-d737-4a18-9e0d-1f5b10f8511e",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "63955713-f49d-48eb-91e5-0039387e2de8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71e00bff-97bf-4c64-83c1-f20c1adc094d",
        "cursor": {
          "ref": "fdbab353-876a-489f-92f4-10d4217e6bf9",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "0798725b-6579-4fa1-9d9d-79a22b450080"
        },
        "item": {
          "id": "71e00bff-97bf-4c64-83c1-f20c1adc094d",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "49fd51a9-3baf-48ed-b765-c123713e0751",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a083ef1-3f6c-4d77-af3d-b405cb480c87",
        "cursor": {
          "ref": "57e9e725-0b8b-4f79-a415-8a51add4d6e4",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "1c44f09a-63b1-4e36-b145-41498143bac8"
        },
        "item": {
          "id": "0a083ef1-3f6c-4d77-af3d-b405cb480c87",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "fbf91dba-c26e-4c20-bde8-8e813e202176",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7af718ff-edef-4b7f-bd27-3e6094477875",
        "cursor": {
          "ref": "8bdd86eb-77b4-4b14-9bdb-08a4a8b64fc3",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "8b47dcef-737c-486e-b094-a4552d3721ba"
        },
        "item": {
          "id": "7af718ff-edef-4b7f-bd27-3e6094477875",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "2958d4f9-8bef-4eca-bf25-245919e1a053",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29d56887-e8c6-49c3-9a99-67396dd16af1",
        "cursor": {
          "ref": "8761fef3-5dbd-484a-9413-3b69a8b32177",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "010737c0-542b-4d29-94c9-bc8912514190"
        },
        "item": {
          "id": "29d56887-e8c6-49c3-9a99-67396dd16af1",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "03ab49c4-54e1-40ee-96d0-9890b7f97b66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15bbc6ee-3670-41d0-bc87-01c0ead55d4e",
        "cursor": {
          "ref": "932071b4-6c25-42f5-8aa6-52609b039e7c",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "e7fae03d-13fc-4a4d-b2d9-5fff09c98061"
        },
        "item": {
          "id": "15bbc6ee-3670-41d0-bc87-01c0ead55d4e",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "192c29a4-f4f5-4535-9f7b-1b25e2e005c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffa37e39-178a-41d3-b96a-14a8811ab5a8",
        "cursor": {
          "ref": "8fc9fee3-d5e8-4a73-aa76-5e6c846e2701",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "fc92140b-3de6-44d4-9dd0-18bfdafe4675"
        },
        "item": {
          "id": "ffa37e39-178a-41d3-b96a-14a8811ab5a8",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "6ba7bf1e-d7f4-4c23-b640-6861acd9af68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a2fd363-d871-4fb2-ad4f-21e1f84d8712",
        "cursor": {
          "ref": "4e7efed3-f3ff-4155-bd81-c0923161ecb4",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "a1b1bd36-cae9-4929-992b-504f32adffdd"
        },
        "item": {
          "id": "7a2fd363-d871-4fb2-ad4f-21e1f84d8712",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "9b7dda02-e152-407a-8b2f-07d2959db02c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "319dbdc0-8740-4395-91a4-b84508effb00",
        "cursor": {
          "ref": "4f5d72a2-5075-4e29-9702-fbe99c966871",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "2d7e594e-26dc-4d9f-98e9-4a9abbafa27e"
        },
        "item": {
          "id": "319dbdc0-8740-4395-91a4-b84508effb00",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "1907485f-2c50-4e58-bd3f-4cdc17cbc92c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e420021-967a-43cc-893b-44ad2d554783",
        "cursor": {
          "ref": "3f1245d1-eb8a-4881-953d-b2e8afcf00d6",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "96c8b02b-be2e-4075-a672-26ba367f89c6"
        },
        "item": {
          "id": "8e420021-967a-43cc-893b-44ad2d554783",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "7edd3f63-5615-4145-a3e0-6e7de6e90d66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a23b6016-5391-49c3-8859-c577b25ce4b4",
        "cursor": {
          "ref": "33060b3c-179f-405c-b2d2-57549507a33f",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "be7dc9c4-72d7-4f33-aa50-d392de4a9068"
        },
        "item": {
          "id": "a23b6016-5391-49c3-8859-c577b25ce4b4",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "16942d46-a93d-497c-91ca-1870654e25d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f76d504-c66c-492b-aa1b-88a88538b9ff",
        "cursor": {
          "ref": "ead18bdf-27ec-44de-be63-101e3d60fc25",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "b7913491-9a0a-426e-b17a-1cf10551943a"
        },
        "item": {
          "id": "6f76d504-c66c-492b-aa1b-88a88538b9ff",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "e8085cf0-9549-4d5a-ac22-cd915c41fb11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f803512-bdab-4972-994d-6334487850ad",
        "cursor": {
          "ref": "e641b8fd-5259-48d6-b984-796152b81327",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "f213b05c-5340-42c2-bf8b-faa82c269762"
        },
        "item": {
          "id": "4f803512-bdab-4972-994d-6334487850ad",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "5dd17a84-1481-47b2-88ad-36ce73377b1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d4e42c8-3fc1-458b-ac70-7cb4bb9301fd",
        "cursor": {
          "ref": "e0114af9-0769-474c-88c0-2b85f0d24ff8",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "8af46b1b-9e65-40c2-bfe1-b94335647a21"
        },
        "item": {
          "id": "6d4e42c8-3fc1-458b-ac70-7cb4bb9301fd",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "cc6a5df3-16fe-4728-a12d-8c57ae4d925a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "113dc01f-1d73-453c-b96c-948ebc59970b",
        "cursor": {
          "ref": "1e86dfae-5af8-44f2-982b-b36687ec0cb6",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "a5e9b599-7a3c-4016-87b1-001ff42b343c"
        },
        "item": {
          "id": "113dc01f-1d73-453c-b96c-948ebc59970b",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "bbad6e61-8041-4ac3-b3b7-282d6050bb23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52eb2026-4809-4315-8e28-3a4214be768b",
        "cursor": {
          "ref": "18cd70ed-2f98-49a9-9663-0841a5318e06",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "e223d741-a9a4-4ec6-b371-4ddc5b1ef242"
        },
        "item": {
          "id": "52eb2026-4809-4315-8e28-3a4214be768b",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "3419c6c9-8382-498d-9fe7-657b9eab9fbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23f079ff-02ee-4817-b8c6-71ae0c220ac7",
        "cursor": {
          "ref": "4100ede9-8ff5-4899-a544-19a29df5cb44",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "a3048704-8f69-4b44-803c-7f309fd3f035"
        },
        "item": {
          "id": "23f079ff-02ee-4817-b8c6-71ae0c220ac7",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "9eb9a3bf-48da-4d77-b63f-b6218edde56d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a1dac1d-4917-4647-9fb1-be45863a2123",
        "cursor": {
          "ref": "2450a97a-6bc2-454f-b6b7-04473b9ef60b",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "1fb86f00-5eac-4e11-9e4e-29a3ab116d23"
        },
        "item": {
          "id": "0a1dac1d-4917-4647-9fb1-be45863a2123",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "62fb6689-824a-414f-9671-d8a2ebe093d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "182b8f01-31c0-43cf-8a8a-6bb5e6a264b2",
        "cursor": {
          "ref": "7cf98927-4aed-45e2-9ce8-0ef52544290d",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "3e894c45-b09b-4dcf-9255-b04336517702"
        },
        "item": {
          "id": "182b8f01-31c0-43cf-8a8a-6bb5e6a264b2",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "998689b0-c6eb-4478-a6a3-eb1384619366",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baf76873-c8e8-4c13-a5fd-70a6ebbacf49",
        "cursor": {
          "ref": "a8126574-48c2-49ac-8430-bedd775e0815",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "3781a798-559d-4b13-9cb7-87d27eeb5060"
        },
        "item": {
          "id": "baf76873-c8e8-4c13-a5fd-70a6ebbacf49",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "bb310dd7-2e60-4b97-a2c9-62be444831a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b914cea5-fc9a-467c-80a3-5e8d71e0fe09",
        "cursor": {
          "ref": "ce59e0bb-06f9-4dc4-9084-e41a281b218a",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "3d294f4b-243a-454d-aaff-900a695be914"
        },
        "item": {
          "id": "b914cea5-fc9a-467c-80a3-5e8d71e0fe09",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "cd2f802b-9a78-4da7-a69b-e9c4ef5626f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e038d65a-f7c0-4d73-a0b3-95953ebdabec",
        "cursor": {
          "ref": "9b32ece7-d746-4f4c-9a88-c4568a672be2",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "b7fb2a3f-42ce-42ae-84fa-6aa380078a26"
        },
        "item": {
          "id": "e038d65a-f7c0-4d73-a0b3-95953ebdabec",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "6abbbceb-f960-4529-a298-493b5630c67d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ce40bd1-446b-4c6a-a56f-8856d1654516",
        "cursor": {
          "ref": "b12ad999-fdcc-4546-98e9-ce7c912fa7fc",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "88f7fd2f-9d7e-4762-a6b0-1214295b7d51"
        },
        "item": {
          "id": "9ce40bd1-446b-4c6a-a56f-8856d1654516",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "72fc56f8-ca0d-4431-b1c4-48340fa0de02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ae462b2-4b82-4078-8186-92466f120845",
        "cursor": {
          "ref": "ee374ca4-0950-4754-a32f-f53f695f6f56",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "6e26de1d-2451-46d5-bf0d-223baed89860"
        },
        "item": {
          "id": "8ae462b2-4b82-4078-8186-92466f120845",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "fadd76d2-8288-4bf4-92f5-f76a81b3680a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9b4679b-dce1-47a0-bf8a-201fd180fc41",
        "cursor": {
          "ref": "abe79699-0438-4684-9e37-de0947d3f8f8",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "1389fb62-6c57-4477-81a8-2a38000eaa89"
        },
        "item": {
          "id": "a9b4679b-dce1-47a0-bf8a-201fd180fc41",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "07a940cc-e8e0-421f-bdbc-6247a41cd00a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dce71eb-76c8-4ae8-b644-91cc6a90a0d9",
        "cursor": {
          "ref": "56facc2e-0358-4856-9361-442f6e02bd39",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "5c7b90fe-ffaf-42f5-bbc2-00420d38b02e"
        },
        "item": {
          "id": "2dce71eb-76c8-4ae8-b644-91cc6a90a0d9",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "69b7476c-ca33-4497-a783-6e992af78bd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9bb72aa-aa50-4e4b-84df-4d686fb9cca0",
        "cursor": {
          "ref": "315e9989-9044-4e17-a5a5-d79b2a79200a",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "11891e8a-8ba5-4f2b-a1cb-5b23f6ca182b"
        },
        "item": {
          "id": "c9bb72aa-aa50-4e4b-84df-4d686fb9cca0",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "380af32d-9e96-4a1c-86d9-def24366a151",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26c9ceee-a294-4172-8836-2eb3dacd78bc",
        "cursor": {
          "ref": "74ba304b-229f-40e2-a46e-c1d59bd428f4",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "ded41bb6-b82d-43ee-8686-87b09be91104"
        },
        "item": {
          "id": "26c9ceee-a294-4172-8836-2eb3dacd78bc",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "162bb5ea-57f1-430a-9c17-e185ac2ac1b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5af25cc2-817f-4b66-83e3-8be194cc4cf1",
        "cursor": {
          "ref": "df96ad84-86fa-4163-a10e-5591885051bf",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "22100583-18c9-4ce6-abe6-3fde8f7522e5"
        },
        "item": {
          "id": "5af25cc2-817f-4b66-83e3-8be194cc4cf1",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "3c6b47db-c3f6-4250-ac50-0dbaa69dfaa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f629157-ed55-4bbf-95ac-b410580a58c1",
        "cursor": {
          "ref": "2ee6971d-9616-4778-a40a-07e4ae4a54d9",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "63081d06-91de-4b5c-a80c-e53186483cc4"
        },
        "item": {
          "id": "2f629157-ed55-4bbf-95ac-b410580a58c1",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "b7ab20b4-e6ee-4872-bff5-bfb4bd7ed146",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8eeb634-0dc6-4d9d-b9a3-232635faa213",
        "cursor": {
          "ref": "3322c03c-aa3f-4285-b9e1-fab8ec104a4b",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "e2dd96b2-0d81-498d-a35d-530bbb3256e0"
        },
        "item": {
          "id": "d8eeb634-0dc6-4d9d-b9a3-232635faa213",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "c5bb84c6-02f8-4a45-9882-4840af930c8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06815ba8-46b8-41e7-b9db-30dc0f8d8814",
        "cursor": {
          "ref": "9339693b-2206-4ab7-b51a-c17f20c9eb23",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "4ed47503-b3e7-4cb7-807a-48288a4a6a9a"
        },
        "item": {
          "id": "06815ba8-46b8-41e7-b9db-30dc0f8d8814",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "28506de8-5a5c-4ce0-a9ff-4d3ee2ca109e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63c8eb4b-6056-471a-ba01-5cb60b959608",
        "cursor": {
          "ref": "c8b166b1-9750-445c-a7b9-dcc84043379c",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "caef214f-f71a-4165-b14b-42c651f323ba"
        },
        "item": {
          "id": "63c8eb4b-6056-471a-ba01-5cb60b959608",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "53496729-7c7e-488e-b814-6c823caa44ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e25f66ec-7df7-4d55-b6f9-626c1287a557",
        "cursor": {
          "ref": "7b6a527f-ac14-43a8-8375-943547e99156",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "1941e054-0820-4f1e-bbac-d201adb09d1a"
        },
        "item": {
          "id": "e25f66ec-7df7-4d55-b6f9-626c1287a557",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "8933da2b-7ba3-411e-a120-4dbd181234c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11525ced-e0c4-4c89-87c8-fb63e749f220",
        "cursor": {
          "ref": "125b5b75-7514-437e-aab2-8c9cf6d47b96",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "4f054265-80c1-4267-b987-d8d82a46e6cf"
        },
        "item": {
          "id": "11525ced-e0c4-4c89-87c8-fb63e749f220",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "4317e81e-3411-45ad-8b9f-d9d36568101b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35a11d9b-ae32-426d-a589-788779b36cf7",
        "cursor": {
          "ref": "c72da4d5-1942-413f-824e-447409e15c64",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "0f43df3f-09da-416b-8821-a2bb6efae691"
        },
        "item": {
          "id": "35a11d9b-ae32-426d-a589-788779b36cf7",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "8415a6ff-706b-4aa5-a44f-78e511813939",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e7c0365-55da-4d8b-a01c-acbe1d268fc2",
        "cursor": {
          "ref": "be1a0c8a-0eff-47cd-8415-76e6b9ddf5f3",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "35ff52c1-799e-4ee2-9325-958a09a3fa1d"
        },
        "item": {
          "id": "2e7c0365-55da-4d8b-a01c-acbe1d268fc2",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "ccca045e-c786-4f28-9d02-46cf76927ec0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbb188f9-a831-4ed2-afcf-0c1259889590",
        "cursor": {
          "ref": "bcd7a5c8-3219-4392-bfa2-89f41c1dbcd8",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "1082206b-a262-42eb-99f5-7437da0755e5"
        },
        "item": {
          "id": "bbb188f9-a831-4ed2-afcf-0c1259889590",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "f442962c-f902-4ea6-a389-6871c24c7aa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd4474b4-4c8e-47ef-b279-4e45f8664576",
        "cursor": {
          "ref": "d202c19e-06f9-4b4c-8556-28519a26ad29",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "397bb5de-8041-4eb3-8118-2cb4fc68e07c"
        },
        "item": {
          "id": "cd4474b4-4c8e-47ef-b279-4e45f8664576",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "f22590b3-f042-4961-a421-8b55d7b59c0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dd90308-c5f8-4dda-90e9-1b1575895553",
        "cursor": {
          "ref": "5f67b2d1-4943-435c-a0e9-d4bd6e554e7b",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "1ad5c02d-cc8d-4067-ba77-bed2e80b8f69"
        },
        "item": {
          "id": "6dd90308-c5f8-4dda-90e9-1b1575895553",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "1c2f13e2-2d67-4a4f-b45c-da38646c8430",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99e8cfe3-c703-42b0-ae96-e6a36dd615bb",
        "cursor": {
          "ref": "c28f22b6-2a6a-44fd-893b-8199585761cb",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "3ac1a557-8f9b-45a7-880f-b97959f64d14"
        },
        "item": {
          "id": "99e8cfe3-c703-42b0-ae96-e6a36dd615bb",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "774c549b-1863-4675-8106-af8959c278de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21e491e6-3da8-48bb-a9d1-24ebc54bb225",
        "cursor": {
          "ref": "8cc16a58-56ed-4cd7-8ac0-c64ba71ece8c",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "b3f978cc-4939-4776-8f7d-8358a6859612"
        },
        "item": {
          "id": "21e491e6-3da8-48bb-a9d1-24ebc54bb225",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "709e5792-b796-436b-a1c6-f8fdf3d32365",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11c2f453-3502-446b-9ff5-39f6061682b0",
        "cursor": {
          "ref": "c3328157-5502-4998-a691-3fd66034f712",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "5b08404b-70dd-4025-ab1b-6f8abb2bd234"
        },
        "item": {
          "id": "11c2f453-3502-446b-9ff5-39f6061682b0",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "f9fb06ea-636c-418e-a8e5-be7dcc769fcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "314c1b84-3c35-44ca-8f41-f7f4cd5bc6b3",
        "cursor": {
          "ref": "9475b6ae-d779-489b-8a28-8c104be85f81",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "0c894d14-f435-4dba-83d1-e873c8a01beb"
        },
        "item": {
          "id": "314c1b84-3c35-44ca-8f41-f7f4cd5bc6b3",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "fa0b6325-b48f-43a1-af31-efc71a6f1da2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42faf602-14b3-4f6d-9152-db2c2179779d",
        "cursor": {
          "ref": "18e74607-b656-42c3-a307-1e4e67426000",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "f6f63d58-a469-4ce1-95e7-cf69b60e5c91"
        },
        "item": {
          "id": "42faf602-14b3-4f6d-9152-db2c2179779d",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "6a28ed1a-e47d-4fc6-99e8-d909d8b0b75f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6631f0a1-5cc1-4cad-9fbd-7c56e5c9aba8",
        "cursor": {
          "ref": "3d3ec3b2-0ae9-4ef2-960d-78c6606d6bec",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "6d8b50c4-a2d8-4fe7-88de-ef290763b821"
        },
        "item": {
          "id": "6631f0a1-5cc1-4cad-9fbd-7c56e5c9aba8",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "38e302fc-c941-48e1-b481-e2fbb6ea5808",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3c99abc-324d-4c4b-881b-99ac3828ca0f",
        "cursor": {
          "ref": "33767d70-61db-4304-9762-d10e2c38b62f",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "ba359320-1a59-42b3-9ddd-38dba8464379"
        },
        "item": {
          "id": "c3c99abc-324d-4c4b-881b-99ac3828ca0f",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "ebbdc0fc-e0cb-4196-96f5-9400383e185c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06ce38c5-fbad-40f5-93cf-ddcfa056160d",
        "cursor": {
          "ref": "de31367c-a731-4ef4-a358-809a99a8937c",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "92201fad-b654-43be-9452-a7ad0b9bf7af"
        },
        "item": {
          "id": "06ce38c5-fbad-40f5-93cf-ddcfa056160d",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "de90e026-8712-4357-9708-0a5f2a91a131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1a5f1a1-7d70-407e-9a7f-202bc1da8f7d",
        "cursor": {
          "ref": "217f81a6-d1da-4a5d-b5cd-6c8e1c5adf63",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "208a6236-488d-4459-87c9-ed57351d7952"
        },
        "item": {
          "id": "b1a5f1a1-7d70-407e-9a7f-202bc1da8f7d",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "67814df0-1fd9-46ad-8892-26a1fa3bb853",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c71d69c5-d10a-46fb-b4aa-4e56d7af8e3c",
        "cursor": {
          "ref": "be6c30aa-3b8a-4a7e-97a6-7ac6b1f72a23",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "95f817d7-2a2d-47e2-945b-053b564f9be9"
        },
        "item": {
          "id": "c71d69c5-d10a-46fb-b4aa-4e56d7af8e3c",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "bb3ac855-219b-4093-96e4-c8c1f6b59cc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd37cc1e-e8b6-49ad-b63b-c2fec0701584",
        "cursor": {
          "ref": "afbe7a33-9cc8-4dda-aed2-ff9edd88f7f1",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "876aac6b-0bd8-4cb6-9ab0-211e9d360bf5"
        },
        "item": {
          "id": "dd37cc1e-e8b6-49ad-b63b-c2fec0701584",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "d61422c1-359d-464c-8de1-c7f30f5954ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d85d9a2e-969d-432b-9a11-127c7c434ade",
        "cursor": {
          "ref": "d6a1552b-68a9-44a9-ae6e-e046bc421140",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "257bab0a-378b-4be0-bd71-eb26ffcde1bd"
        },
        "item": {
          "id": "d85d9a2e-969d-432b-9a11-127c7c434ade",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "7b1360a6-d449-4303-9e33-2ec99fa04225",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aad44d9-bbc4-417f-b429-35352e19e1ad",
        "cursor": {
          "ref": "b3c14846-dfa0-4ce9-aec3-6b1dab00091f",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "700f91e2-5925-461c-b313-3d1011a1f761"
        },
        "item": {
          "id": "4aad44d9-bbc4-417f-b429-35352e19e1ad",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "253cd080-a570-47dd-bbdb-3a76a5beb35a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f990ebd3-bbde-4475-86a9-8ca6b5ac3a41",
        "cursor": {
          "ref": "58561d85-3e60-4106-a88c-d6cf54765483",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "c160f74e-9f11-4788-9258-9993c7600192"
        },
        "item": {
          "id": "f990ebd3-bbde-4475-86a9-8ca6b5ac3a41",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "52b483d6-c7b8-4f88-be4b-92380d02e47d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe7a9b7f-6824-4a8b-b1e4-54f5d219f4ca",
        "cursor": {
          "ref": "3fb2bc19-6d16-4d4c-aebf-1f0d9da76dfd",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "bf1c6512-152e-4a6d-a46e-41b6a9cfd240"
        },
        "item": {
          "id": "fe7a9b7f-6824-4a8b-b1e4-54f5d219f4ca",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "c4da0afb-3d3b-4ec1-9530-743fed11b7aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f836431f-599d-4eb8-9e19-446ffd244fd9",
        "cursor": {
          "ref": "b3f9f46d-5b8e-4595-9636-2fdccd5d1273",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "4b9297db-69b5-4021-b2ea-a927e76da000"
        },
        "item": {
          "id": "f836431f-599d-4eb8-9e19-446ffd244fd9",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "c052142a-7d67-4a6c-bdb4-719834147ddf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e222e9f-d747-4ad6-87d0-42252e152738",
        "cursor": {
          "ref": "bcca6669-5f1e-4649-84d5-dba6458f4a78",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "f2ecd83a-dd43-4f87-8012-3f840306339b"
        },
        "item": {
          "id": "3e222e9f-d747-4ad6-87d0-42252e152738",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "e08db0e8-3f64-4e88-a649-5150b420c8c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "006fe994-0236-48d7-b81c-327eb2a56479",
        "cursor": {
          "ref": "df1556e1-9374-45e5-b478-08bdda710ef8",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "fd040731-8a75-4512-b361-8c4e20a46f3b"
        },
        "item": {
          "id": "006fe994-0236-48d7-b81c-327eb2a56479",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "e70c63c3-7e1d-4ab6-ba02-c23db60f5bbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4aeedff-eda9-40ff-84b8-613ca50137aa",
        "cursor": {
          "ref": "5735b6f8-f4b3-4379-83d1-13c2479c8ca6",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "a188e13c-af8e-4986-a3a8-0e2f338ab415"
        },
        "item": {
          "id": "d4aeedff-eda9-40ff-84b8-613ca50137aa",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "cff945ad-0507-42e9-9485-bd5d005d4378",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e49c8711-32b5-49bc-a31b-8a138df0e413",
        "cursor": {
          "ref": "862ab726-3443-40f8-be77-bcf126b6d743",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "0ff0937f-a0a3-416f-be87-c8ed2747a101"
        },
        "item": {
          "id": "e49c8711-32b5-49bc-a31b-8a138df0e413",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "66d61166-efb5-446c-80fc-f5d0a2d1c1a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e539201b-ffad-44bc-bae1-1edf901a7b19",
        "cursor": {
          "ref": "6bc50e37-a604-4968-8b44-0e185003c252",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "e700abc9-0d42-4ead-9552-e809faed06df"
        },
        "item": {
          "id": "e539201b-ffad-44bc-bae1-1edf901a7b19",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "b997cdbc-c12f-46d4-8594-1c51b5e08c5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3322700-1ccf-4d78-9457-7c945d4b916c",
        "cursor": {
          "ref": "cef93c31-a06e-434f-a2f1-47329de012a7",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "2d2bd390-e745-4485-a954-11a9cef326c1"
        },
        "item": {
          "id": "f3322700-1ccf-4d78-9457-7c945d4b916c",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "3e1c8978-a82f-4d11-ac2e-70ce9fb324aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4969a591-238d-43a0-a8ed-b696f9f715b1",
        "cursor": {
          "ref": "937025af-a369-4099-b06d-023ad40bc1f1",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "be9fe791-04ba-49d1-9a94-140d1724918b"
        },
        "item": {
          "id": "4969a591-238d-43a0-a8ed-b696f9f715b1",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "a81b18f8-facf-46d0-85b5-2ba8371ec9f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0531bfed-e874-4e62-b97c-f61a78f153b5",
        "cursor": {
          "ref": "04f7bf7e-bd86-4012-80c6-5aa69296a866",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "f5a3c811-46c1-472b-82fb-a94370a34613"
        },
        "item": {
          "id": "0531bfed-e874-4e62-b97c-f61a78f153b5",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "0e2fa7cf-a892-47d8-a92b-25597630914b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afbc0315-2fd6-40ba-971a-1f154d6c35a7",
        "cursor": {
          "ref": "23359880-1d36-4578-b25e-b78ae33bfe57",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "8da98a3b-4220-48ce-b2b2-39c15b26ffa8"
        },
        "item": {
          "id": "afbc0315-2fd6-40ba-971a-1f154d6c35a7",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "488deef0-d843-4883-a61f-f25bc506b18a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9dd29aa-ac61-4f96-9e35-a339da896da3",
        "cursor": {
          "ref": "9c4dc6d3-5691-4fbe-b17e-a91396e9df7e",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "cde6a07c-2b21-480e-80a3-9c39209ee831"
        },
        "item": {
          "id": "a9dd29aa-ac61-4f96-9e35-a339da896da3",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "82f24ae3-d28d-415e-a508-9667fda29a7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "052ea5fe-bc5d-4619-8b37-9f1d33969ac4",
        "cursor": {
          "ref": "b89374a1-9148-4def-8121-98e899cdde38",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "13f634c4-9a8c-4bab-b9b6-f130703a2283"
        },
        "item": {
          "id": "052ea5fe-bc5d-4619-8b37-9f1d33969ac4",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "d1b2d8a7-44ff-4b99-9ae2-accbf6c63100",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e095b48d-980f-4aed-90f5-ad174e0a6b0b",
        "cursor": {
          "ref": "c9fb786f-f1e3-4a6c-a15e-706759d022b5",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "7c501592-2fe9-4fbe-8f3d-3a1695240c93"
        },
        "item": {
          "id": "e095b48d-980f-4aed-90f5-ad174e0a6b0b",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "332c4675-0b47-4de1-90d4-b92129030c83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a9e4cab-c71a-4e43-bd2f-0b42678801d9",
        "cursor": {
          "ref": "bc15f45a-0ce1-4fa6-9acb-ba994362ace9",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "0fdd35e2-2ff7-4f1d-ab57-5633ef98368e"
        },
        "item": {
          "id": "8a9e4cab-c71a-4e43-bd2f-0b42678801d9",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "5fd2233f-1cbd-4ba6-afa5-f8ce6adbb22c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e02b594d-419b-4fc7-8dd5-b87bedf8c568",
        "cursor": {
          "ref": "c420ebbf-e3a4-48f2-99b8-095bbfa033ca",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "5658fc88-916a-4a7c-815b-fd51d04162ac"
        },
        "item": {
          "id": "e02b594d-419b-4fc7-8dd5-b87bedf8c568",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "8896cd66-1bc0-4582-9319-30db9d5f1662",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c030ff6c-4fef-49fe-85a6-db4327e8ce54",
        "cursor": {
          "ref": "d2341fca-5482-42ac-a6de-b6024c1744be",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "39ecedb6-03fe-41c4-bee7-e39a42de2ea8"
        },
        "item": {
          "id": "c030ff6c-4fef-49fe-85a6-db4327e8ce54",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "3cdc8d17-e47a-4959-b78f-85ea9731aefc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55f71397-a51d-470d-9359-ef299b71e37c",
        "cursor": {
          "ref": "55c6aa01-6973-47de-acbd-936539c33e47",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "efddb253-701a-4801-b061-ec5cd896bcbb"
        },
        "item": {
          "id": "55f71397-a51d-470d-9359-ef299b71e37c",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "36fd864e-efff-4366-a8bf-3fa197afb474",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42a3883c-b4ec-4ab1-b2c3-d37c5aa18b01",
        "cursor": {
          "ref": "e0b9706a-f94c-49ca-b2e8-bc2b40f15eea",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "d7aa1218-9b04-4aa8-8762-3f677835eaa7"
        },
        "item": {
          "id": "42a3883c-b4ec-4ab1-b2c3-d37c5aa18b01",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "26edc671-5912-41e4-a90b-f8e2e48a3f25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea99fde8-4e9d-4bad-959e-1f44c78f935a",
        "cursor": {
          "ref": "0af97d69-8527-47fd-8b97-e2a243292b95",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "35ca4b0f-87f7-471f-8125-5e8398de07d1"
        },
        "item": {
          "id": "ea99fde8-4e9d-4bad-959e-1f44c78f935a",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "60c54747-c35a-4e46-aa03-70fc920f6978",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e168df2b-d310-48ec-a3ca-02e9b7c5e56a",
        "cursor": {
          "ref": "442b2199-4376-4b19-a10d-5db8536b2916",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "4c7402ed-5ce4-48a9-99f2-73aff1f62873"
        },
        "item": {
          "id": "e168df2b-d310-48ec-a3ca-02e9b7c5e56a",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "fd60da11-318f-46a7-a00c-7bbba08d6f5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ab539b1-bbea-4155-a570-6cf00feff751",
        "cursor": {
          "ref": "236a5471-d8c1-4e01-91d0-9dfdb724bc0f",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "36fe5d08-add9-407f-b9cb-90d1a67c8370"
        },
        "item": {
          "id": "4ab539b1-bbea-4155-a570-6cf00feff751",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "0d7f55eb-3ea6-4484-b7c3-f5d0f72eb942",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "902b60b7-d9fe-4ef4-9644-9dee7b415d06",
        "cursor": {
          "ref": "e00695c8-84af-45be-bcf5-775212661696",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "a0142fff-04a0-4629-a03f-3f88fb41183a"
        },
        "item": {
          "id": "902b60b7-d9fe-4ef4-9644-9dee7b415d06",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "4cd4c289-d580-438b-974d-2969a8bf5698",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b9d0307-e12f-4876-b9f1-9318d9c519e7",
        "cursor": {
          "ref": "83064ce5-f88e-496e-8644-626c765f4e3f",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "467e641a-4a61-4cc2-b38d-e8fa41d8e896"
        },
        "item": {
          "id": "9b9d0307-e12f-4876-b9f1-9318d9c519e7",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "0571d1ed-ff7b-4e74-93a5-401820c8e92b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c1a3f4f-9e9f-428d-82df-798dd8f4096c",
        "cursor": {
          "ref": "bb7dc264-17a2-4e4a-aabf-fc61253d768d",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "431ea779-b7fe-4d9b-acdf-76d2c6f75b3e"
        },
        "item": {
          "id": "6c1a3f4f-9e9f-428d-82df-798dd8f4096c",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "ea070291-0e6e-451a-9b36-374f4c78a3a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6ac9992-5cc2-4814-b256-33a763428ad5",
        "cursor": {
          "ref": "e7fbf79b-7add-4774-a788-824a0cd1ae4f",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "ac6305c4-0903-4f58-af80-4bcbc301fb8c"
        },
        "item": {
          "id": "a6ac9992-5cc2-4814-b256-33a763428ad5",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "3947d903-2730-46c9-ad62-1a96e9cd0918",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53ac67c2-9960-4736-88f8-31b2f39401ef",
        "cursor": {
          "ref": "13127ed1-0e7a-439e-ae20-2c00d091551d",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "ec41431d-5b08-4f47-9a18-2efa604016f9"
        },
        "item": {
          "id": "53ac67c2-9960-4736-88f8-31b2f39401ef",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "6eccf189-9107-4fcb-8dbd-a81841ba4973",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f195d45-57c8-4028-8c29-28046f7bf92b",
        "cursor": {
          "ref": "822c8b56-4f8d-408c-bd63-5bc7d2bede53",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "12a7c5c1-c290-46ae-83c9-acf69b84a5c5"
        },
        "item": {
          "id": "9f195d45-57c8-4028-8c29-28046f7bf92b",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "2a57457b-bea0-445d-97ad-1bd1b83da6e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39042721-af79-4005-aa02-90c296f6e152",
        "cursor": {
          "ref": "19e871dc-99cf-4c6c-8f28-87aafcc27e0b",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "63f98f75-e518-4f77-8797-5c1434a1b1c8"
        },
        "item": {
          "id": "39042721-af79-4005-aa02-90c296f6e152",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "da966f3b-5625-4e83-a7cf-8e72824109b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31131616-e142-4a72-8ec4-2c455b36e27a",
        "cursor": {
          "ref": "89272439-c827-4863-8aad-c0d9803a2e99",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "243ee792-3c11-4a55-a3e5-cf0dfa8af395"
        },
        "item": {
          "id": "31131616-e142-4a72-8ec4-2c455b36e27a",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "ac9f466f-6a58-4d1c-95db-c42616c28b36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94a1df79-3e2f-4e57-bb83-d90e2286bc92",
        "cursor": {
          "ref": "7de72035-1572-4232-a73d-53c2f10250c1",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "29db102a-9dcc-4d0a-ac9a-9557cd1874cf"
        },
        "item": {
          "id": "94a1df79-3e2f-4e57-bb83-d90e2286bc92",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "fc4c4bd4-144e-4221-8f1f-280850b79b2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69aad1f7-3449-4c6c-ac23-00982de2c5dd",
        "cursor": {
          "ref": "66728c7a-26a3-4d07-9248-f911ce99cf1c",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "0b9b698b-8d81-4238-bbee-d30feb8556b6"
        },
        "item": {
          "id": "69aad1f7-3449-4c6c-ac23-00982de2c5dd",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "e14b973c-6e66-424f-8834-6e34eb02cb8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebff023c-d61d-480a-b85f-5cbd80fb2dd7",
        "cursor": {
          "ref": "e8d5485a-3a4a-4331-8a97-60d5133af22a",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "ff324826-5633-4446-a462-39a7909152c4"
        },
        "item": {
          "id": "ebff023c-d61d-480a-b85f-5cbd80fb2dd7",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "1e7726f2-f8ea-44fb-af5a-60511b324343",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40695c43-896f-498b-aa03-ae59e658331a",
        "cursor": {
          "ref": "0409da4a-7411-4de8-a6d2-f686adf66e2c",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "c666e9ef-cd4f-4093-abfb-19a5f2aaed61"
        },
        "item": {
          "id": "40695c43-896f-498b-aa03-ae59e658331a",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "e242708a-5590-48b7-87ca-16555c467faf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c20172c0-ae88-4c77-97f9-9edc6dbb4b15",
        "cursor": {
          "ref": "6b8f2ff4-f803-4c53-b7ab-b9f474d07cf3",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "ea9c72e6-947f-4e32-a448-5ca48c4ebeac"
        },
        "item": {
          "id": "c20172c0-ae88-4c77-97f9-9edc6dbb4b15",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "fafbe45a-ba45-49a2-b2a4-c45904a106a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a747eb9d-cf43-4f27-936c-8db3e39be9cf",
        "cursor": {
          "ref": "14e5d150-1abc-4406-a6af-42b2e8b7f090",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "e381208e-f9fe-4088-97bb-7746d48c203e"
        },
        "item": {
          "id": "a747eb9d-cf43-4f27-936c-8db3e39be9cf",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "6a70c497-92ea-4d59-966d-5247bc58c2d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fba37c79-8253-445f-97a7-bea18a995499",
        "cursor": {
          "ref": "9f9c0c10-95b9-49b5-8f95-962d4a14218a",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "640568d5-1194-483f-9f02-da5bb7d3c2cc"
        },
        "item": {
          "id": "fba37c79-8253-445f-97a7-bea18a995499",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "02a3352b-cf4d-4f5f-9898-81f1b84557b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "859616b8-40d6-46b0-88e6-df091d56e360",
        "cursor": {
          "ref": "f42f4e09-4e45-4a23-a551-bd096620281b",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "e7f21c32-8c91-48b2-8404-d34a9d23cf89"
        },
        "item": {
          "id": "859616b8-40d6-46b0-88e6-df091d56e360",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "3d39f53a-2d2d-41e1-b83a-3a818ab424bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c89b49b-7330-44df-8661-504537f0b991",
        "cursor": {
          "ref": "b2966a66-ba63-4159-b5f4-ff8ae4546b08",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "69c64cab-8e70-42a3-8f27-9bf75ff6cebb"
        },
        "item": {
          "id": "7c89b49b-7330-44df-8661-504537f0b991",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "2f58b9c3-6346-4ce8-b46f-8c52308711aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe1c692f-91d7-47fa-8288-cea5c695e081",
        "cursor": {
          "ref": "1d849eeb-51bf-4ae4-a701-abdbe41dcd5a",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "e7f0e33b-e989-4c50-9620-5ba246091c10"
        },
        "item": {
          "id": "fe1c692f-91d7-47fa-8288-cea5c695e081",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "4429c273-fb89-4b7a-96ca-6774fe11805a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17fa8ab3-5387-459c-8b62-d900bb2558f3",
        "cursor": {
          "ref": "4352925d-88f4-49f2-802f-c39a50e02a81",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "f8b5226a-2876-43d9-ba94-70facc3e7f05"
        },
        "item": {
          "id": "17fa8ab3-5387-459c-8b62-d900bb2558f3",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "f5d54982-3c9f-4954-86e6-f12a2d9ebfe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ef68a0e-56a3-459a-97b6-ed5b448dadce",
        "cursor": {
          "ref": "d4962bc6-7e52-47ab-b1ea-dcdac45ad5e2",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "373f2675-9ab7-4bee-ad66-1ca4dec44e2d"
        },
        "item": {
          "id": "4ef68a0e-56a3-459a-97b6-ed5b448dadce",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "588d666e-5a17-4bc5-afc1-9980fa7edb23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84e58086-f44f-405b-b48c-67c32b58002d",
        "cursor": {
          "ref": "b81ff916-8dc9-4cf3-b794-bef2d59139e4",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "3f015f36-2d65-43bf-a3b9-1b41665dc0df"
        },
        "item": {
          "id": "84e58086-f44f-405b-b48c-67c32b58002d",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "7c339b28-d333-4eee-add9-eadf267e5194",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29384b66-12ab-425e-96a4-54be0f7e8a25",
        "cursor": {
          "ref": "60bb6e12-5d19-4e12-b77e-997ffd8e7720",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "c590f517-246c-469f-b3a5-350e8989527a"
        },
        "item": {
          "id": "29384b66-12ab-425e-96a4-54be0f7e8a25",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "7bbc7482-60d2-4818-b7a8-5350184bd7b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17885936-f6c8-479c-9339-cfa43a37b756",
        "cursor": {
          "ref": "c96c180f-52dd-435f-bd53-636cd896979d",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "bbd5ec91-30a7-41e1-b9e4-671a874c97c8"
        },
        "item": {
          "id": "17885936-f6c8-479c-9339-cfa43a37b756",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "209d2f7a-2f1d-48b2-80df-75d37a4ea438",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7b7c2f6-6a93-4af0-9f2f-3bd9dd5fe890",
        "cursor": {
          "ref": "ae897b57-1850-4cdd-9579-05ad5a166c6b",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "1ae72a5c-401a-4bf2-82ef-f724cbc2e7e4"
        },
        "item": {
          "id": "c7b7c2f6-6a93-4af0-9f2f-3bd9dd5fe890",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "c1f7b126-ad41-4afa-bcaf-624e826d06c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a64ecad3-a7ac-4784-b15b-248678b1d31a",
        "cursor": {
          "ref": "aefcbf44-e587-4b94-9676-dedd038e1c30",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "2e2d7f95-dfd5-4090-b9ab-0be4387f4f05"
        },
        "item": {
          "id": "a64ecad3-a7ac-4784-b15b-248678b1d31a",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "4cbb8c02-f50e-4dda-8bf1-e52d7d6427bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d6549de-bc0f-4ff0-ba86-c5d4c030a64b",
        "cursor": {
          "ref": "5b63c3fd-9bc8-42f0-96c9-1e47d2f8adc3",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "0af169cb-948c-405c-87bd-39d66e29abe8"
        },
        "item": {
          "id": "3d6549de-bc0f-4ff0-ba86-c5d4c030a64b",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "faac1c6a-51b3-45a1-88a8-a28fbe16b465",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8d42325-046b-46a8-9e8c-dc5b8ec9396f",
        "cursor": {
          "ref": "2249faef-e865-4ad0-855d-06910fe2df79",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "29536368-4ec5-49be-a300-02f36b30236f"
        },
        "item": {
          "id": "b8d42325-046b-46a8-9e8c-dc5b8ec9396f",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "1a94af9c-ea65-409a-8064-464cf06fb04c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2d3858f-1369-4b75-b6c3-8ec9c98f50db",
        "cursor": {
          "ref": "191cdd4b-5205-4952-8211-d98e38e6730c",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "f3471c81-fa03-447d-aebd-da27c0826dcd"
        },
        "item": {
          "id": "d2d3858f-1369-4b75-b6c3-8ec9c98f50db",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "2c994e9f-49c9-4b42-b8d7-fbeb6b994d3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28eb8b69-967b-4d3b-ba23-5018587e1295",
        "cursor": {
          "ref": "b81070bd-328d-405f-bc51-7b39228fd25c",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "43e48f93-2b07-4368-97e5-b5b1c6a9645f"
        },
        "item": {
          "id": "28eb8b69-967b-4d3b-ba23-5018587e1295",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "1c8a92dd-f6f3-49bb-8fb5-d9c281070dd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e38b0e9-d800-4989-abbb-cd887c0adea4",
        "cursor": {
          "ref": "01f8ae8d-948c-45b2-a339-be42d4c95eff",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "b4b44537-8721-444d-abac-c84b9992cc58"
        },
        "item": {
          "id": "9e38b0e9-d800-4989-abbb-cd887c0adea4",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "aefc5584-4e0e-413c-a6ac-35341de3b1b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "361ccb22-0707-4b77-826d-df0bc52a412c",
        "cursor": {
          "ref": "56c511be-f55e-475e-a895-2ba7a1653a49",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "4c10a40b-704d-40e3-96a1-ef1cbdf00ad5"
        },
        "item": {
          "id": "361ccb22-0707-4b77-826d-df0bc52a412c",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "5a4d3d5d-a9a8-44ce-85b8-526e4ed5700d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:244)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed7864d7-57a4-421c-ba31-054afb52ed66",
        "cursor": {
          "ref": "1dbf26d9-1a8c-4db8-ae5f-53ac610a79f4",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "e78bdb92-eb73-47ee-a4c0-a31fdc0b9ee6"
        },
        "item": {
          "id": "ed7864d7-57a4-421c-ba31-054afb52ed66",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "16f834c8-54cb-4b40-a50f-c8b7eb3ee0a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:245)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:245)"
            }
          },
          {
            "assertion": "response verified is false",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is false",
              "message": "expected undefined to be false",
              "stack": "AssertionError: expected undefined to be false\n   at Object.eval sandbox-script.js:3:245)"
            }
          }
        ]
      },
      {
        "id": "db39aabe-a208-47e0-b4ce-e33cc1c4f06b",
        "cursor": {
          "ref": "a6c4429f-d4bd-4419-83ee-18d307b6ade4",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "1418e8c8-d68d-4af8-8811-dde6eda868e4"
        },
        "item": {
          "id": "db39aabe-a208-47e0-b4ce-e33cc1c4f06b",
          "name": "credentials_verify"
        },
        "response": {
          "id": "9bd41ad5-fbf1-4825-a715-0eaf4cd46231",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:246)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:246)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:246)"
            }
          }
        ]
      },
      {
        "id": "517c4c89-f80b-460c-a249-e789d509ea9c",
        "cursor": {
          "ref": "d14fbf0e-9ed1-4734-a8fd-80e97dbf04b4",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "e90a59de-762a-4622-a2c0-6502edc3619d"
        },
        "item": {
          "id": "517c4c89-f80b-460c-a249-e789d509ea9c",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "a25fc27d-a572-4212-8f11-ccd7934e462c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:247)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:247)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:247)"
            }
          }
        ]
      },
      {
        "id": "c5c619dc-f699-40b7-811f-fa84cb692b2f",
        "cursor": {
          "ref": "55f7101e-da92-4c3f-ba2e-087ddb450c17",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "7aa18220-fe1e-45af-844e-50fd185668e5"
        },
        "item": {
          "id": "c5c619dc-f699-40b7-811f-fa84cb692b2f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "2f406483-1113-4e04-b2ab-1d875d512df3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5c619dc-f699-40b7-811f-fa84cb692b2f",
        "cursor": {
          "ref": "55f7101e-da92-4c3f-ba2e-087ddb450c17",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "7aa18220-fe1e-45af-844e-50fd185668e5"
        },
        "item": {
          "id": "c5c619dc-f699-40b7-811f-fa84cb692b2f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "2f406483-1113-4e04-b2ab-1d875d512df3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "745c82ac-06a3-4ed6-ae9d-a64ff80b3800",
        "cursor": {
          "ref": "05b9e9ae-b442-4b7b-9a44-4976e8055e03",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "3c34b8ff-1fce-4a7e-ab17-9e23048ddb3f"
        },
        "item": {
          "id": "745c82ac-06a3-4ed6-ae9d-a64ff80b3800",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "696f07ee-fb95-415d-beae-a10141422cf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3906bc0c-f4d8-42fa-aab6-806978755528",
        "cursor": {
          "ref": "d033cc25-ea22-48bb-89bb-b1df0e532aad",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "5485981f-ab34-4bb8-ace0-38c2ec8577ce"
        },
        "item": {
          "id": "3906bc0c-f4d8-42fa-aab6-806978755528",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "f88572c0-36b0-4b93-bfe5-84c84593bb42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}