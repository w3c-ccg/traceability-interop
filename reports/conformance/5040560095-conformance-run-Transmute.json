{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "dad86529-ae4f-4f82-b563-acfdd4cd9c47",
        "name": "Clear Cache",
        "item": [
          {
            "id": "b1685262-a24e-4cd1-9b5d-cdddf956e03e",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3bdec95f-e72c-40ba-a154-f526ea7fadf5",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "9c191a98-d2af-4924-a5a4-20b22bcc0c70"
                }
              }
            ]
          },
          {
            "id": "159b85c6-f505-48e4-893c-c2f66c8a86ef",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a9343dfe-f16b-46f9-86da-c2ec3826b8de",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "38ebb5ed-e6e8-443d-9548-816ef80b1c4a"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "29804301-326a-467b-a72d-5471653b1601",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "7d5842be-fa6b-4ed0-b4d0-1edca7afca31",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3efc669c-a3fe-4d43-99ac-90db28c357c7",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "85d6dc1c-f4f4-46cb-a4d8-5fdb044a0106",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "52206871-b454-473c-a4e3-41669642c038"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "039cfccf-9455-4a9a-9cee-c36348aa33b6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9aa18786-4f3e-4a5a-9c1e-29410638ee4e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7e1ecf52-6926-4163-98d3-b0ade63e536d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9a9d73ac-4ccf-4bc3-9045-32a38581cd86"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1ececd63-acac-4649-9066-b5f07c95b709",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "4a99598e-cd56-43d5-9aeb-c41eb4759d1f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "78f12af6-f245-4ae8-ab01-fca2fad89782",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8cfced4f-3f2d-4cde-8f10-c3aeaaaee406"
            }
          }
        ]
      },
      {
        "id": "236deb92-907d-4b98-93ba-905bcb8b9c06",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "db2e2039-6988-4aeb-889b-f7c1ed1a62c9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a75ba219-47fb-4fd6-86f9-2024952e9781",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c57c1a87-d0cd-4326-8233-011daf0263f3",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b841d42d-97ed-426a-9e5a-a20232f1d583",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "74c77ba6-e662-459f-98b4-722fd11e462c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "481bbcc5-25ac-4257-b0ec-c81a7746a837",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "860c0160-a2cc-445c-978b-297a6bc8e6a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "829315ba-471f-4517-82bd-2ec89c0af91a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1b8b4c5-a9be-4d6f-845d-cc67e321e883",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37d33143-11fe-45ea-be68-054274871ee7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "85dcca4a-920e-4636-b675-4dff3eaa8c7c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e1dfd010-1a9c-4a83-b93e-0c25afb3a9cc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5df206aa-c6ac-4874-a0a8-2fc4f88e1a83",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0671c0e0-6239-4f3c-bf1a-3a771de68f5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a208d273-b421-47c4-800b-32c9e255a0a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cdd320f-0763-419d-9114-d311f66f46fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57d0aedc-33f2-4468-933f-cc9357cb91e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27b49d44-5153-429c-b999-f1962e16b36a",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a44df465-6530-423c-95cc-ef5e904f4547",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0aacbb04-d394-4b21-9d08-e4851e705ee1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da224782-788c-4132-a461-cda1a3bcbcc5",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "a8e4e815-fe2f-4b8e-9606-e0bba76d52fb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "5738293e-198d-46e0-a975-62f3baaf1a39",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2daa13e5-5df7-43a4-ad2e-89b26dbab374",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5c340527-4db1-4df6-a97a-b5e1c6a9985e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "e3640f4c-5bb8-4bc1-a533-5769acf71e93"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "43359947-57fa-4bf0-a659-1d3fb4842d93",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "bec0a7d6-9c49-4285-aa0b-955f8e982443"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c425ae86-b731-4844-bd42-0288682c4319",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bcfb0d73-dba4-4ab1-86a6-5b8021dd1d5f"
            }
          }
        ]
      },
      {
        "id": "7a074e1e-141c-4eca-92ae-be6724fc6822",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "3b947964-666d-41e6-bd96-e731a5008927",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c9122a61-a363-49c5-b8d4-5d58a030dc86",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "c811cc1b-1126-4284-93f9-4aee7bebdba4",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e733f12a-57b6-4f37-9e51-10d5f0d1352f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8e99a1b-c56f-4fbb-b76a-0295d05e7fe6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e707741c-116c-42ba-b565-bc5b81d3a46f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f4646f70-8900-4bb6-860b-d1a61a6c3200"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e55240ac-513a-4cba-91d6-291b05c2d926",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d88c556-a2f6-4c7e-9dc6-40c2f0b874fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c68c65f-1330-4159-884e-ff426936493e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c31da467-3567-40be-99dd-9fa7144fd1cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4ada5c33-eef4-445b-ac1d-ce357bb3c5d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60068146-3c72-4db0-a1da-f9dc60aa87d6",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62f6ee42-4aa2-48b6-9250-8bcc85fbde73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a35f482-a919-4f0e-94b2-5062fa03c6f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb79d1dd-87ac-428a-9087-79f5f65b51b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4738c2af-e76d-4e53-bfa4-709822469e1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a3cfde6-63ea-4f6d-876b-626ae14c10ab",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0841cb37-e2e5-4c56-b0c7-cd959b953cc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffd5ea9f-366a-4ed0-81de-d93d5f4223fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9e3d3c2-f4a1-4afd-8498-40256a445b29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "436df40c-a5b3-4394-906d-4ed38d6484de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "187735de-c285-4625-bf17-3b7309496f49",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "764a2c9d-1786-4ab9-817e-b4c09902b6cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5cd40d4-e127-4933-95fd-23bb04977c5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dbc853c-b23a-4448-be40-b1e319e22c91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1f5d7ac3-9345-4a24-afd5-029bef76fc5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9bde17c-f760-4aa3-95c8-8e606071f57d",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "663da0ab-01c1-4252-8f4b-3a34d0e74e72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0755af92-628f-49eb-805a-c3407f9e73f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e277435a-0028-467f-abd3-ebb5c1c3865f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3befe128-2375-42c4-9e05-c9affe9930fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36d2a260-a288-43fb-8b17-96040310f0da",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac55c9c8-52a8-42b0-b3d7-c67ce21b38ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd41c3bc-8f83-4412-8c00-e9bbed3fdc0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddcfdd6c-8c05-4576-9db8-934e0dc08298",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "73a4cec1-a485-4c94-94ba-ca1c8e183045"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddc25c80-e091-4083-b4dc-0b8591db3543",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5419c5b-4d2d-4381-a8b5-e1d8e2eec301",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a852f9e-743d-4e8b-a38a-95ea0fb91672"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "886a1d70-0a9e-4e26-b9d5-1402a500e239",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e9b97512-cdfc-4252-beb7-8eedb7e35e9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4c81a3e-53ba-403b-8101-028a55483d61",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41eb7d10-c743-49d0-a63d-826d273d2f2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e17f13f8-81c0-4926-a0d7-4c0663d49e8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e12ff43-e49d-4d74-a2c0-40d5e5b77312",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9f1d26ac-1680-41ab-9809-31c9ea0665fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42be0547-4ca0-4dc2-b2b5-e9162ca9eaac",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68b3bf28-bc82-40e7-a3ef-3b9314f594ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06f1ad76-9c2d-4d5e-9994-b8f237ad39ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8654982-c6be-45da-ad3a-c6178a603f17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dde392bc-4dc9-4efd-8a41-ed5e9cf38d98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff57515a-f254-40c6-85fa-99352c11a9e5",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac58c3ff-7811-4385-a72f-7bc451e928bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "927912bb-6d1f-45c7-8d3f-899b16578695"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9b5981a-8f17-43fe-a496-edc085300b26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b2ccdd11-5ddd-4539-af6e-ac6627507f07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df30b16f-9c92-4762-9788-dbd081f4bd0f",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aa91dbd-3aa0-4676-8226-5fdfe6517d51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de6c0d09-b0ab-45c5-bef3-dbf8aa10fbad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc52240c-aabb-47ad-8ab4-6f8d53e29b42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2801e59a-fefb-47a2-8744-e25fb064c6c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fe26f8c-74cb-443a-8844-e0a699202e8c",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc56d0c1-c3f5-47f4-8369-eb2dd7717528",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "389ec1fb-55b8-4436-bb97-20cd15112348"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e718a89-dcdc-455c-9778-e9db68eaedba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cfc0d35c-6c62-4314-b8f0-6bc1cdc09007"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e570a5e8-a291-41be-8d74-41c896c5e37e",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c664daf5-6dbd-46f2-809a-cf46417d2eae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9b62e72-eaa3-4494-95cc-b58e3cff3ec6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aecca195-b12e-41bc-afd4-f7f29251348e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4e1e5401-5917-4f2b-aa36-b3ef39346593"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3c83690-e928-4f45-8284-b25fa2d24ef0",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "078d2e40-72da-4b3f-a0f4-8cf24f99e0dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ef84b73-2606-4eeb-a2ff-de2a1098bc0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c2a666e-49cd-4975-98ca-a3a227dbebea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "43a505f4-0476-4130-a8b4-ca66ead8a353"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b89441f-8e33-43c3-ab60-1b8b9646b950",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "038b1146-23d3-409c-b30c-1c123057a45a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "809317d4-3fa3-4c66-9edd-0ce282121db8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21f5f5a7-bbf8-4acc-be4c-58ebf3367574",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "34623d26-ce1d-422c-8b4c-bacfdacab32e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c572e04c-89ab-4e50-aa68-f3870205db3c",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcd7a0d8-ac4e-437c-afda-ad4818c5843f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd99e4c0-f0f9-4f1c-a4aa-694ba2b4a376"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf7f59af-bb2b-4834-8a8c-4486d3184ef8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "88ee8247-46d6-4840-977e-faa313de1ad7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63d3e11f-d8ac-4594-b416-303044ee52b0",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0e4422c-3351-49d2-8756-f8e639b40831",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9340b359-7ed3-45eb-8f96-0e048e4a3507"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cda5c07c-a9ac-4855-8fc2-1c1e61b6bfe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "48b24034-9621-4d91-860a-4cb1c312f652"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb18d32f-91b5-4ddc-8cf4-c5984227b00d",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cac3f81-99e7-40cd-8e2a-a7f89fb578af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37be5898-fc51-417b-a253-8b8f2a83b733"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf5d8f80-a2ac-4b54-a4af-e738e675fb67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5fec6196-dc30-44a7-a1d7-2948e2b0e098"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8471a3e4-8790-4837-bedc-c98585eeab80",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a1a3599-e5f5-423b-9347-12d111ac273b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "595cbfdd-22ee-4b2c-829a-f0f213b8a745"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5571af31-74c9-43dd-9628-1213b51d6e02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4dfdc4b0-bbf4-4214-be6c-0d7da1b0a495"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e6ef2cb-f8ef-4a1e-8279-ba6546c23e17",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fde89aa3-178f-45d3-8a3c-f8525f73973c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1109b0e6-f2eb-4da5-93b4-9c7fded4a896"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93983ef5-c623-4cd0-83f3-399be2b72746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "66af74ff-9fdc-4793-acac-8b33d9d8263d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bc4db91-fad7-4b7f-ad45-23fa4d48e18f",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e6bb55a-0edf-4462-aeda-3d7e0670ccdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e03eb57f-5515-4a13-9052-e2ef5618556e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30b10dee-200b-46be-a609-550d04959a30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "da8d4a20-291f-4390-a5ed-67adcd63e033"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea3879fe-8579-4a0e-88be-9c60683938bd",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c2db5f7-cc81-4e82-bc14-5079d2972df0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01bfe89a-cd02-441e-8f8e-f2964b591ba8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b6e26fe-7cbb-4c33-a157-c3b5b5eb0e72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "59f94970-b6a1-49a6-a2dc-e74aaaa10e7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96d43721-690b-4582-906e-9a0ca95e1388",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1038cd7-491f-4b5b-bf2e-17c63d05f443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a66c92c-0f72-413c-803f-2acc76537808"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "828b5898-f028-41e2-9a6f-9e7a3085cdd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e28e8ba7-2970-4b5f-b7c5-0220d172c14f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f750dc29-d93e-431e-8ca5-ac4bff5b7227",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1e1a249-57a4-4d59-8e4e-5d6d679c6fd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff237267-2133-4254-9ed1-57fd5b8b1b24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a721d963-1315-4536-af1e-97097604a276",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "58b0039d-00e1-4e61-8fea-661177624b42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89e32f60-3275-462c-8611-a1bca2271c40",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce1ba43d-2dea-49c1-9781-016572b00ef8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98bb7883-b20f-48a6-81ab-87b522273ae0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7780c5d1-fab4-4bfc-bbec-90849725cc5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "061d3e2f-0d86-4383-8772-eeece629d06d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2adfce8a-0661-4c77-b780-29973eba99fb",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9791e24a-f488-4fff-a931-9e4b9d525b9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58eed61e-1b2a-4f54-ae90-33255fd82fb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "020c7f1e-c6d9-46ca-b0e3-d3f1c356c220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "37b2ebdb-aa9f-479c-9d57-6d6e42b569f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1208566f-f168-4004-8eec-1306390f4b2c",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "334a99f0-c8de-4494-a1ad-eeaee400cb63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abb152c4-229c-40c0-9b3b-31de4f631fc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "947a9374-19e7-42c5-8331-75e5dc9011c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c80488f-b8de-4335-8978-ef6cd4f693b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6306599-91d5-4599-94a0-b78d9940d8c4",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1641876d-7ba2-444a-adf4-9765e79b63fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "384da368-370e-4bb7-9652-c3f5db8700e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9637c86e-180b-4809-a669-0217620d5740",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5b70f32-a591-4d86-af0c-d007610e886a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "590c1632-ae98-47de-85ff-a37ce1d25ce6",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c467823-e9ae-43cf-b90c-6b108ec4695e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f25c1595-0fc5-40a2-aed3-0f4b2111b499"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5df98e5d-afde-44c7-ae0c-3a1a6c47ec71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a6e3287-1501-449c-8a47-0c08b8e964bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a3a52b8-a888-4278-908f-d69e83fe650b",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5e8305b-ba75-4480-a824-0dfbf8b82f99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffc8d4ae-a205-4b83-af91-03664de41c70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a4277bf-432d-43d2-95fc-c78bfa4b3fd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cdca4a69-ff6b-4cb6-a986-e2a89be9bf4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1fa6632-c270-4092-af33-16393c8bedac",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0ae44c0-ed13-4118-a12e-a716a2e9a6c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e936c3f1-e1d7-420f-ae05-d2cc3f67f8ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24cb9d0e-1508-469b-8f02-180f526b4983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d7693890-7a9b-43ad-a3d8-e65788002e0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2cfbb8d-fabd-4f4a-b2e5-1979d73a3ee3",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd452420-d4c0-40eb-a83b-f194841aab69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3da776c4-91a7-45d4-8508-11cf2f82f0b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8774e9f0-413e-4b7f-87a4-64fd42394929",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b547864-3124-4e81-9aa6-ae04ac0aad08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "904f51f5-1dab-4114-9d1e-b22838095ecd",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6858e47-933e-4e46-8c15-371e4ae0d686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4a7d17e-ef02-485e-bfdb-f8d36a0ffe5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be1cd53e-6a3c-4bd5-914d-92fd301ac9df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d19ad72-1b52-443b-97af-ec2fa613a8ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78b62bb8-4756-459b-8417-52b8291d2135",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b7c6080-859b-4dcc-bb0b-24f2339db6bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a273a85-e9c5-450d-be95-43ed396bb564"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47c8efcd-c8c0-4647-8a28-fcc87655d045",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "d148c520-a2af-4341-98aa-41928030bc63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17b4dbbb-f209-4a9a-9789-f1dfff4206fa",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc348832-c5a5-4046-b833-3bac33c28117",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b461d76e-56a0-423c-b8df-4091f75f515e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3313d1d-b681-4369-b615-f9d7dfb38dc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f942ea8a-2d0e-46d2-9cfc-1179b2633e61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7e882e6-9307-49e0-8bfb-84ba088b74c1",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf7bdceb-0e53-4c31-ae2a-c6d02de30b68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8c0772d-2097-4d8b-af99-e631913760c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80a94abe-198c-44a6-8174-5c1fb92f7e55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "00236703-07b2-478d-9522-000d4246d647"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77db4b2f-6f65-446a-9d63-0b13343ff47f",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3935ccc0-f5db-4a4a-8074-a47f9b5c033a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "451f530f-66a0-4c07-9606-fa434e700f97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79bd302a-01ee-4128-971e-b1d119265ba7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "adf1f634-4447-4d97-a984-1d35a12f77b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2a999ad-80ea-442b-85e7-3adcc48612e9",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "256c23e3-f082-4d13-9c2e-7694d924051c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d9a14e8-8740-4d46-b2b6-3ea8f9d7fdaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb617068-d54a-4c26-bef5-f655dfa2cda9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5bec41b0-cd98-4f76-8adf-698b90f164a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0be4960e-824a-43b0-9790-d8dbbbbba84e",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b72a2206-2672-4b96-9b08-a87323efbdc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfa2aadd-d2da-4191-99f4-59a25da6dd96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "172fa07b-1660-42df-8765-af443a1b09ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "68866645-5fea-43e9-9d34-cef61e59ff57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a068af4-1a87-4a0c-beb4-86b819682f70",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b52990b2-e765-4842-9bbe-6faabc936480",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8381697c-0dac-4668-84ef-e7dc25e36a68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7197e1e-0600-4f39-a361-f645b9c32d3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6ba9c995-e99f-473f-9521-cba850ce8842"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41942612-2fad-4fcf-9303-18acf172e042",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19581848-6de6-4f71-8d42-4c26df67478b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49c4acd0-6d8c-4374-9269-e5c593d8a19c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b84c25f1-6dae-4d86-a249-28e55fc97782",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "d68f5243-e71c-4043-b0a4-03fc744f0303"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9b6f4dd-ce2f-4f96-b0a9-8eb488a5b94b",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c41c93c4-3b47-45c1-b0c5-fdd9b979c21a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e73cfcb8-f63f-4c8d-9aff-718d8dea3230"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "874a7484-1be9-4c18-bcde-9923a8504ff1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "cec3309b-549a-4c8d-b07e-00e99ffb16cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13f9c3d2-fc7c-4556-8fe1-ecd59111decc",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec4d27da-a9f8-463c-ae93-cd46f51d40d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d60bd142-7f2e-4a95-9120-c2c9c8dd903b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ec0a024-290b-4e17-b789-ece1097a59d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "78ea60d5-62fc-462d-bbf1-a78e81d87d92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e3eb48a-0cca-4cc4-8d1b-eec0077a9d7c",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a22644e8-e1e0-4848-bfcd-aebc31afa010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "106a1a87-f072-4b86-a168-1fc318b70777"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26df67be-48dd-4949-bbf4-4e2b3c99284f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "16c15fa8-43f6-4b76-86e2-64ac8ea8f087"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37b5abd5-2db5-4e84-84ca-0ac2e4d374e6",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bf9f297-4878-4661-a837-d760b6dcb0cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abcd6757-bf66-4556-8061-4323c13db2a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08433ea4-644c-4ad0-9647-9e8342817cf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb8f992a-7e51-4249-86e6-3dee05c542b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb816ab4-1450-46b0-87db-008423d2271c",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "106d5cb3-29d5-463a-b731-c8999048fd9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f6e5ba2-ad94-40b1-9503-fcd2def67780"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eddf5c2-9431-4b3f-bfb5-51e8a21d5f14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "09941077-a557-43ba-8db7-e2ceec757d1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5f9e571-165e-4bd4-84a6-a3567417b7b2",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2938d29b-5d39-4bdf-a14e-a99948f48064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57799433-d5b6-4dc7-b157-f94355f26f8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d70b1f9-7455-4620-90a3-333ef19302f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "23406ab1-e96d-4135-b999-817ffe2b7327"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0c6cb50-73ff-4660-a0b7-90f5a16718cf",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "193ec5be-9129-4b65-8b9f-40a49c499562",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7c41f5c-8946-42f3-ad98-24a091296ba5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70c6520f-07d5-42b6-a478-57eb7af7fc9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5fd45376-ace0-41ea-942e-bfeb5b7c5e6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc908304-9ef0-4b9e-a2c6-b76eb9918a04",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9b2b18b-c71f-472b-b5a3-c1783380eea1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38e5d2fa-8c8d-48f4-a256-4504974210de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5962831-65e0-47dc-be60-463a9305fdfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6bb90168-5b89-4096-bddb-36854e1750fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f331937-0e51-4e8c-8c88-a3c1997cb40a",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b8880d7-0dea-4fb9-a119-c6e4bc211b37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "920adbd7-8d5b-4a26-bc7a-f054af53c353"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "674af881-0553-48dd-8b10-a96e7793c612",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d1b9854-92c7-45cc-b78c-2619caf2e06b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65b6106b-d653-48f7-bd62-758585954111",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4da8998b-bd18-4f29-b5bf-e59db3cf92e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be3fff65-cbd2-400f-b703-a37eb63e6c60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56108c8a-65fb-4c7f-9fa1-c5708b849e89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "561e18ad-4431-4038-8418-b83859f15311"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ce09caf-a202-4fe8-a3e9-e4acd03e617d",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e4c8aa3-117b-4789-9792-7f9a3313a998",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a33cb008-b4e2-4d2a-ad6f-2863945792db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e69e97bc-228c-40dc-a254-f58fc54ac73e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "093e8641-8419-430a-8902-9786dba7edfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dc500f3-e75e-472b-acf8-0f8727792d71",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d2a7395-bca4-48da-ad88-730cfe280ad3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "442009ae-2087-41ee-8666-21d6a612aa40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bb6063b-a701-4c60-96fa-c5017ff994be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd270638-b630-4035-9ba7-37c87485ebc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e88df094-104e-4daf-8b27-120a3582c31d",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0083962a-58cf-46f9-8e86-9a21a30e2cac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "241b77f3-2c09-479b-b99a-c2cfdd39804f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec5b8924-9844-40ad-b73f-629fcd52583b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "589a4784-19eb-4e82-bf5e-9fe0c0c9944b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2b6013b-a1c1-412a-9188-a1c2728f9f06",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c2efb48-74aa-4659-a7e1-5146a86298b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8335352d-e89a-48a4-96a0-1d6cf3aa3352"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e52e63e-c795-4a94-b2de-f19d60aaf9e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "a3e2f5a3-ea3c-4d41-9121-f3642d7cfb40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18040bb9-df2d-4c85-a625-d18567cad332",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b35d7534-f369-496e-bfd5-7be381d6c6b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d3f2e22-800d-4764-ab5b-a545a61b90ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b1e2dfb-8af5-4d96-9bb8-aeb209a828ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "410cd51c-276d-4fe3-bf98-e43c7fce7d3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d3566b7-f69d-444d-ad66-4d4fd311f4e8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "659a2ff0-aef0-46d2-81ae-c0093ec503d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0a48ade-7a4f-4504-b703-fc1594463cc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "146a284a-753f-4a8c-ab95-f51c20e3747b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c173198c-c5bb-4ec7-8306-e9ca476bf212"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93b8b5e2-9674-4f6a-aa3d-a9d754e27a14",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1554dfbf-b4ce-46e2-aa55-01b74cd22841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2af0c9f1-facc-40f7-ac2c-63cd93e99316"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "861e8e02-81e4-4574-a36e-5dee14f6c0a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2b1840d0-2b41-434b-a660-a80d431f1a8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00880bf5-678a-4b9e-b51c-654dd7083ccd",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc6d6fc1-fec6-444e-b449-f46038440f3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a7949eb-93ef-4425-8408-51e1bf27d5ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4028902c-1ecd-4ea5-b30b-1e7355ada942",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8b520876-2a06-4f4c-9570-7404f48853df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c18cba34-c83b-4aa4-9b9a-ce1d8a5756e3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c804205-a546-4fc9-8ee1-8f31d5bac78c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "304d5263-bbad-42c6-8bc8-df8cd5c7bacd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b51f8e17-590e-437e-9481-0d83ec241e27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "cb86a36b-3dff-4d1a-a7f1-aa8414f2eb00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ada37385-1c21-47ea-af4a-93984ab52071",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f71381d-f7da-4404-8fc4-3e40ed056fd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e4caaeb-bd2e-409d-83c5-02a7c17e1af8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16816843-f2b8-42b0-b94b-35015af44e0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "64b277f2-4c72-4294-9033-e2a2254e2806"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc417e42-e031-48a2-b429-32239319cddd",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ab6fa87-2681-4a56-a588-a7b56a0eaf8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d41ce588-d66f-4b53-bb03-37190af9f2bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15aaa3bf-1b06-4303-8d9b-cf91d727bdff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f2105f1-21f1-48f7-96f7-c48b098ec73e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49c00a47-3173-4a3c-b2a4-933b5758b38d",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b175eb3-d7ca-49d3-9a45-99c70151e5d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f59d1568-6f5e-4939-ad38-c8ff3694c42f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af37d227-0f94-47c7-b7b2-6d1dcd18b204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c16d3abc-e571-4415-a9ea-3d9fb8a10cb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0e15a55-ba68-43fc-8529-708bbbb829c7",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b9f33ae-99d1-4916-a4a8-2cb17e73439d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9d8a663-715a-4c0c-9c5b-0488757f42a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11bce7bc-052d-40eb-ab7e-075559014d4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d4b0ea6-e023-4ea0-9db7-2e632f993cd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08d2afe0-8e2e-4ea7-b3cf-3adf2c4848e5",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0565a00-835d-484a-a1f4-7fea1da48f9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e6d1eee-af5f-435f-be64-1267e4ad08a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab665436-1486-45de-a3d2-aa2535034ae4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "80398c0c-cb5d-42ff-abce-824496460dca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63ff9952-d1d3-4827-ad9d-982da8c7a329",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a9f923b-6de9-438a-8e1d-1bbd321574e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9ec58e5-1b7c-4b2f-969b-e1091ca12c6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93e6b809-1c32-44a7-a6aa-316321701721",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "da7cc85d-9431-415b-ba08-abb8b37755d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "394548a3-bcbf-4115-8532-d987e90378d2",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "697d1fb7-9229-4eca-9628-bb995ac4f900",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b184694c-5bce-410c-99cf-8f0f292591be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe4afb7d-32bf-4490-9ad2-8f796662e600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c8272cf-fe49-44c6-a6ae-4359e2338d08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20947ed5-ae14-41f3-9c0a-a29e0adae990",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1de31fb9-2dbd-4e06-83f4-6bef195ed763",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f1cc4c0-8649-4204-8d52-54c7cbad5e24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a1d1dca-2481-415b-a918-9df207f18054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a973450-0cd0-4e0e-8fcf-9bcff2ff797c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e3a2d3d-4e7c-4d54-9375-44ed3a7fedaa",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9329e8a-0212-4977-adf1-14e02bfc7720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3211fe04-1701-4e79-ac95-08376190a874"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "001e840b-6f9a-482d-9510-69ec74cc1225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "de4cfbf6-1c60-4184-a024-4750426d535c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03970e9a-ffd5-4c38-8995-4af4b8c5af50",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6964ad62-0c1c-4062-803c-bc06cc64e71a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03fadb73-86db-42c8-a3fb-6194a76253c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "795d0e6a-8df0-4663-880e-a9c53f30f90b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4216102c-e67c-439b-a51b-1fac73cac107"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae2eead8-6cfc-45c6-882a-47253489fbbe",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c4659cd-0cf3-4611-a3a7-a7f337239b5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18cb018b-0a4d-462b-bf2b-750bc9f89e12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dec79b7b-c978-4697-b3e3-10850a4d3761",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2473a746-0a31-4b4a-96b4-a5709605790c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb414450-8a6d-4f61-ac31-b1e529694b74",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adebe58e-2971-482a-a105-647cba82b04e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe4276a3-5f7f-47c4-ac38-8820454b7ee6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "037145d4-9885-4282-b9d4-1301aa794e1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ab151a4d-4b3b-4b58-bfce-3935bae7efbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14aa3e32-7034-4930-927b-5c2e46d738a9",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3456e3ac-63d4-417d-b018-59f1ffdb8808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00c61b26-2a5f-497d-9c6c-b8df9061ce26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c72628b3-f453-4ce9-b959-1cddee95a342",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d359806d-eb55-42da-bc6d-c2bb3c011b00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9f5cc83-80ae-4cb9-b1a7-823f29a01d47",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8282537f-43b7-44c8-9108-851390af0ec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74d26b5b-2fba-4175-b6e3-b8c79893acc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cec351ec-f5f8-4d65-9334-dc96d14c8f49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8531b25-d799-44c7-b4c8-1a1630bcecd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e5a56ad-b6e9-4b45-bbaa-d6c94cb933c7",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7078aad-7d84-4e33-b0a4-858b6155c8e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52c85fc1-6fb8-47a7-a559-998e2ea5eda9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be7bfeab-eaec-4ee1-a9d1-18398d7a1756",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0fa1b533-68d8-413e-a07d-23a1ff6e10bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7632bb9c-dced-4358-84ff-56db25b57f20",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a1fec7b-70c1-42ca-bbe5-33e55fae5e7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fc3ccfa-f624-4344-b686-aaa5aa4914b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96c3959a-e93d-4b60-88af-6857c86ea53e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c3fcbb1-cbbc-4bc6-9c80-cf9153b7cdb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60969951-d160-433a-8623-6fb9504a38a0",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e905935-60f0-4c3c-b968-e6b57830fa02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ccf4fa1-6e8a-4231-9ca6-b32516f47bda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96e0dd85-b293-458d-b837-1290f475aabb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4129bb1-ea9a-4076-8d95-2217333820d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca86320e-6776-40be-954f-6c3d762b98cd",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caaae4d7-4b30-40f1-bf1d-0d378b27d112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6235ee50-42ba-4359-9644-6167613d7d5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bc1d61d-ce7a-4515-83f6-08581e8f0116",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5fa9e8dc-7ef8-4268-a712-0eb887522f08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2aa8589-d608-40a4-8d96-abedeb86f61a",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93d3e1fd-219d-4a11-b8e1-0620f322b1f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75130fb0-df09-425e-a37f-0fbc53effddc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63297202-91e5-4d75-b3ff-4c6ed2d1f650",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "79e15119-0492-46a0-8433-1e84e3ad954e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b216a70-d31e-4f85-b96c-8051c4f2979f",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0db48d02-bf6a-4db2-b164-7076d2f6cebd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcd017a9-476c-4834-acfb-8df330a83d4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6126e0df-1d62-47ba-b576-173cc2cb1a78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9c1930c-566a-4094-9eb0-10c0f35924a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d51ed1b-b111-45b6-8161-72abb8b54e86",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b43b6986-80a2-4b18-9584-91f089c0f9e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bafa64e4-d2b7-4139-9ac8-170f4efda23e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ec92f57-1e4f-4d9b-a2cd-8764522705a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c894a75b-870b-474c-b99d-6e3d914b2a56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d226fbd-fc83-47ea-82cf-1457f36f0dc3",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "655cb82c-e09e-4bcc-b089-8a0ad1a9fde4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a3d4f5c-943a-4fa9-84d0-8add37bf26bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f79ec24-be71-41bc-b4ed-5b86219666ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "72de590d-81f7-4d34-9beb-ffe5f1ab444c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ca58f43-589b-4e3d-be6c-558b81d89863",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bbf0d83-f404-471d-a673-3f68eb6f0412",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2569923-1834-472c-861a-68059a79ff46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d60365b-2af4-48e4-ae86-7bedb7fac781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8baa1e37-f900-4423-aaec-d60826ceac85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "990e1810-92c0-4b3c-94b3-66e9c4e1e0ce",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cea9b212-c59c-4f0b-bb2b-0eb210fcc889",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "615ca2f8-c4bd-4879-8f71-0f07bc290f4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff2dcc09-490b-42fb-8c09-a2afbe97aff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "187376b8-19f0-4bb1-86ed-0f7e4838cf62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c7011f4-3aca-4358-ac2f-f6644cdb29c2",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3a7b417-bfc5-47e9-862b-5004b19a63ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "992449ff-2977-41bd-bed2-57b58157078d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc09759c-5c78-403f-873b-1bb1f4de8027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a4bd2cb1-02bc-4784-9d8b-4aeb8adf792d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32f13052-6abb-4256-8615-b0acc8a6aac0",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "544e2f97-559b-4654-87fc-43a0f7acd119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f11b1df8-0eff-4a24-8640-29a5e208d4d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6afb909d-ce26-432b-9fb1-5e923a332268",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a7ef7b4e-4a80-4c48-b0dd-8e0e05acf8bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "082eeb06-793b-43cf-89d0-b3fd734ebd19",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78e23dc6-9850-400c-b475-0bc94a8bfc5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c43fff59-7cc7-49d3-bacb-56a7a27ec177"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab20b675-3985-4cb0-8568-37d34c2c2207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "bce5f076-271b-4f68-bcf7-3121014843f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50a36dcc-d058-49ce-be54-26ce44a0313b",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4fd52d8-9e09-440f-bb86-baa90272f7cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be4fa6ae-6893-4167-af7f-43a166deda6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3abf88c3-4e45-473e-98b2-2808ab6ed7a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "70728f07-ce53-4d7f-b111-6b8f04566f63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f38317c1-d8d6-42be-a212-415d327c0a0f",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef27cff4-081a-4e2e-8619-8757c63056f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40780b59-8f9a-4a35-a70d-54812b63e25a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fab0f83-0c1e-4796-92c7-ebf9ffd8b143",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f40b3051-c3cb-4273-a989-a523fc8c5346"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e86c7ea-a967-4ac0-88c7-3e489b8de438",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e1e38e0-cf85-4672-a0ff-d3172b0c0fc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06a7ed8b-2d9b-4ced-b21f-d566694dd2cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18bce6a7-b973-4462-9bf6-203577ef7363",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "4182f087-793a-45dd-a048-50fac0f2a87f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "515709bd-e830-4f5a-a006-d86923a74fc5",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acd851bd-4e35-4b14-a904-4b2cba5f59ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "6eae7370-88ba-4ff7-ac0b-b06a25b47f14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9cbdbb2-1423-4742-be68-3500edf003ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "b9a08652-5515-40ba-bf72-048733bae583"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "bec412a6-982c-43db-8ec6-04afca611a55",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7b19d870-f116-464d-93dc-4832107993e3",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba70c22b-1f41-4434-9aef-bdcfe613c921",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "63aac01d-d4d1-472c-8625-8b828ecc747d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "346607dd-f101-4706-8912-e042a2efe3bf",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "048bda9b-bcb5-4d35-b28e-6bae24e685d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c40cbf4e-809f-47dd-8c6e-978624d2fc1e",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "646dc581-86c0-4df3-b9f3-98da6edd8261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8f2a6534-8910-4583-b472-17288a7df314"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d222d7d-7d34-46e9-8c29-cd2d60190368",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bd01c918-3bb1-423a-b11d-0b3dcf0fdf57"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "63fc51b7-52d7-400b-9107-7d94d1b737f8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "303345e4-2fcd-41f7-bca4-fcb013b03a0a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8bd1efca-56d8-4621-b7bd-843fb3c44328",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4c03be5c-904c-47c6-90d7-2a3c78498edc"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7937cbc2-d615-45cb-9e69-ab08c257c7b2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c7e9a06f-44a3-432d-9796-0e13696f3f66"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3d63bc80-438c-4276-bfb0-c6cf3227326b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0f056505-82ae-46d9-81ed-95d867dd9f10"
                }
              }
            ]
          },
          {
            "id": "dacc7e72-c88f-4105-807c-7ec02a5809e4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ca41fa23-cd88-4e5c-bcde-6e1451d8b18d",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "becbd64c-c6d7-4462-bfba-7746b220dbb1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "33a86a5a-b32f-4544-97ba-bc0797c4325f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "532f8bbf-d7c9-452b-8d32-1d3c4c3a9e21",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b540be2f-beae-43d7-ac34-f7dd003b9d39"
                    }
                  }
                ]
              },
              {
                "id": "40546b89-b805-4987-a509-6f499b76fc0a",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "74c771c7-5396-416d-9cd0-001885303edb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "53c8b97e-6b03-49da-a14a-fecdf2b29163"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a7cd9fc8-4db5-4370-9db8-718b3729420e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "944ebad2-90ab-49aa-89ef-c7b0803678be"
                    }
                  }
                ]
              },
              {
                "id": "0105edfb-bc0d-44c5-a67c-db0bf5ad4519",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "57ab6591-58fb-4060-8fa6-d75a7d73af4c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5908ab96-211c-4ada-8cdb-e1e92baa9351"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "44522e2c-2d8a-4b21-9d31-6384bb95a4e2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "bc1f3072-0c3a-4f59-b7df-503386b4a2cb"
                    }
                  }
                ]
              },
              {
                "id": "590d553a-75d5-4c24-8de1-0e0d983a32ea",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "030698ed-e687-4291-9336-95a073fbc1a6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cb7a82f8-8c75-4499-b517-65af959d42eb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0f73930b-91b3-4472-9346-d4621b320909",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "de4cffd7-7b6c-4bbe-8e24-a1300a2cb938"
                    }
                  }
                ]
              },
              {
                "id": "f3bd6a0a-0a85-4384-8ee5-4b21bd8c942a",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6de73443-4713-4212-a1ee-8b5eaba6840a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7cb5f0cc-8f14-4008-bc48-6fbddc24e747"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c4f1bb59-e553-4b79-b271-1e856788e38b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "2349881a-fd88-4112-8a8c-8b7ec9259f20"
                    }
                  }
                ]
              },
              {
                "id": "7cd91f93-90a5-4020-96c9-922a97955db8",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "db100142-25ed-4c03-b64b-0d40ab1dfb05",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7631bbf4-bcea-48ed-8d40-05f47ad6c481"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4b68a36f-5fea-4b37-a288-17a487d382c5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "407471e0-bd7f-4640-b199-54a52a9c2c89"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "460547e4-1fd3-4286-ac7b-1312b3a24022",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b4debd06-7e11-4da3-8e27-560b245ccc1f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "62bfe9c7-da69-4303-a133-3e0d9b6f449d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "33701aca-ddc8-48ce-b786-8e6f781e361f"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "15b0b41f-cf89-41fd-a07c-4d8041665c59",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "d4a0b6ac-d803-4909-868a-3bc33339619d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "67d2687c-9195-4a37-93ed-93f269ddc43f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2074def6-536e-4d04-8557-911e9e81f536"
            }
          }
        ]
      },
      {
        "id": "bb5fbf10-ee9a-414c-ad9e-3636f806b457",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "1e8ae8ac-a36d-49b4-81f2-6e3dc1d49196",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e6fd9d14-a477-438d-b02f-b2c2017e665e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6d29d610-e0f7-4fcb-a494-042b0a489182",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5baf9ee7-0635-433d-bf2b-c473d660d6c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b20e5b13-8a41-4eee-9405-dbe4386ceb87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2755abf7-6e51-4b24-aaaa-520f32b88123",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "3099a302-c127-43d3-813f-a0eeee4097b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "821826b8-fdc2-4dfd-a43a-a6beb2037802",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1df237a-e461-4bfe-90fe-f92a2fdf00c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d46bebe-006f-447f-b8b9-57a0316e122c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30bfe452-063e-466a-819c-78268a5b319d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d963a645-3553-4b33-b845-89b84d383229"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b95c4dc7-c205-4a67-bdb4-95da39520bcd",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d84bae4e-4d3a-4755-997f-d4825f6d65e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2979bc1-f20b-4c37-bdfe-ecd2052ec2b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b4947a9-2b43-4cf1-b3ee-c18f2f87d123",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "38072ae9-e160-4915-a5a9-e84745192451"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7391b22b-c703-4a98-b8fa-c572c464f92a",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "437654d5-a66b-464a-bb2d-a4339d3b0f14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "001d1314-7dc1-4cc1-9354-499d572ff41a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f2d27ef-9f40-40b0-9ed0-acf84a2b440a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "03504f75-1234-4166-b00e-af85a0df8366"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e33a8a92-270f-473f-80d0-a704741ab1bd",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "905553dd-36f7-489a-b0b2-fd7c77420e68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5d593a8-3f6b-4ce4-a9ac-7fdd2c15eb4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bed3f64a-edb5-4799-9e75-eeee714d8983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ef3d39b-427d-4b59-ae9e-f2062db3beb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7b42b07-368f-47cb-ac74-f6b5ef34c4ce",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2877610c-b354-44a4-a57a-10ce2880cdb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4e66b33-7f30-4ea7-be21-eca71fd78ac6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b0c33c2-1c73-4ed9-b4e1-d118021de282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5ba2a15c-6507-4a22-9ec2-8e22c9c9fdba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9470acce-83fc-4d4e-b32b-6caac791c89b",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f200e54d-07a2-4af4-abd6-012a4aa604dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e35205cc-df04-4063-a17e-a6444b1ad1f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6cd9209-0758-4d74-9525-fecdb5d24f1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "d34e096c-fc2d-49a7-97d6-82d349867c6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35719187-f086-462d-bb1c-797739f97453",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d84272e-1f8c-4281-b802-f43297388c01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5822c18f-572c-4f7e-9c77-4219a4ceb5f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6708f9b-70e1-458a-a27d-ef505d641d04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b94645bf-0c13-4131-a730-7bb80edf2ab7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73ea2ca1-203d-4a6a-ba35-08b184102c5e",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "932c1b80-5f78-4e4e-9171-d8d998d77d2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "752b0588-a245-4dc6-92c5-c0fe85b01c0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94bb657b-4df3-4476-87c0-75bf23e02a6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "930701d9-8049-4618-87fc-52234fa85278"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21ea410f-451e-4d5f-9f01-a34f7a8afa7d",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0e50513-d4b0-451f-9460-4b81b2822585",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb5cc912-9ad0-4786-9d51-a4227e0dabbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44cf5307-6ee7-4976-b1b0-36dbbf2fa6bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5653f4df-46e3-46af-9974-3931e24ec6a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c81d1f7-0b54-4a4e-b6a9-f17d87219ba8",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f19dfcbe-9d2b-48b4-ae8f-2731924bda7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6786b5a-4ff4-4ca3-96ef-11ebaf16563f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a94b908-843c-4f5d-bac8-19cbe1a3cae5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "a5ec2c33-e1c7-4128-bab7-7a5d207c2029"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ed22144-e741-4911-ba15-5d560a8cba24",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1be7765d-3136-4766-a9d8-c97660e49fd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4628dd70-c7da-4060-8186-11b2d3faad70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f54fc151-2740-44ce-89d8-e8928f34d534",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "88820939-233b-4771-b529-83f57ebadc68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3047dbc-74fb-498e-954f-2a9a02986b08",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0063ef67-a289-4b7d-a181-560f30dd26f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3a9f695-8e60-48db-b2c4-ff37d162ab75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2517ba82-cd1c-451c-ad3e-0de2544212cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "48e2b7f6-9c85-46ca-88ac-f58cdf2a70d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d18c93f2-6a9c-4c3a-9f89-d4b282236b7f",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "615ee63c-6f9f-4693-bcec-a812f05d8350",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f55849e-9ff0-4484-bcaa-c61039fcc5e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11422c48-7095-4e8c-b592-8d5438637c4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "c85e8840-215a-4f37-bb5e-f906947e32f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c96e9c77-66c5-4f4b-abf5-f09b73c080d2",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "608a4ff3-77ee-4d92-8e9a-5a38d78e697b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22eaff37-c709-44ad-9874-33572fee461b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb85cbaf-fb29-4462-9e6c-78a0bdd5e1b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "97daea74-b28e-48f9-82a2-adf473dfb296"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da01a739-0e43-4d12-916d-55f61ece7750",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98f7d5cd-9c6b-4da4-b9a1-eee5b14932d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02478ccb-0879-46ed-a2bd-132c5dff3d76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c6f1c7a-f1d8-4a07-a9d3-e17298126d6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "a12b2254-dc6e-4b39-99ad-b74ff300f713"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e7ab33f-8e11-41b0-a6fb-9223b3ce39e7",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42a29894-eb79-4464-bd86-2138364cf4f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a1481bc-ebe7-43d4-a8b0-b8fcdf59877a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dec88180-bf48-4f84-9210-c69da168540a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "d01f5819-6236-43fd-93f0-6751feaec561"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0034137-4b35-44d8-b776-b7d8daad577e",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fee53b0-b618-4466-bb3e-9b1e362f063f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37aea404-9ba9-487d-aeac-3f0c9c3e28be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23dfa0df-8cea-44bb-8a87-9fc1334d80dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c84a3698-adc9-44f6-b7d0-1fd0073eb5bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8b5068c-4664-4918-a1a5-ee0cca51fc79",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e46a06b-bd1b-47de-9e68-7982aa62ae9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cef03473-4824-439b-a874-906ce0cd0ed3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab60fed9-821d-4e58-95f5-9e3489a97c39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c5abc99-a6dc-46fb-b2d6-5c690ee04771"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbfc840b-03c9-49eb-b540-ced8794c0103",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35ee5862-9ef0-4b00-830b-451dcc3e5162",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca566002-3d50-4af0-98e7-6181accb6b5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee6f3db3-557a-422a-87b1-bfe0e44e5049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f15aa33-4de9-4023-b3a0-eb4b05127f9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7412572d-9b8c-4ad5-bea8-64f26cdab89d",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e36b4a3-3d5b-4ab6-b3bd-db654716cb30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2eba1fc-edc2-4c9a-8970-b5aa6050b47c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5524580e-5247-41d8-b209-00e72f55237b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "23008e13-934c-4ed1-bc1e-1dcaaf61dfe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3291c134-9698-4651-b9da-0f5a5bfe3d7f",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3d61786-292a-4918-9083-927227cf246c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3604316b-c979-48ba-81c3-a9c0a988fb13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15391e6d-c1c0-4b04-bf9b-9e0d388c4c79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "821aa580-60d6-4fba-8d14-49197c02f157"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2561403c-9624-4c76-86a4-9ea52ffbff8f",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4467e35b-28e8-4c5e-8734-e1dacac592cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aeae26cb-72ad-4542-8001-7052e3be13bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6fd0ce2-95bd-4fcd-9363-aca844adf7c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "21e7ac14-329a-4934-944c-4e8f733d81f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98ef6ab7-97a0-4a37-923c-f78602a2eb61",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae8f6448-220e-45c1-87a9-1da68f0ecfe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ca095f0-cdd7-429c-8628-d7ee569e6751"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc15e9f5-bf7b-49bf-8c3f-e9822bb60d6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6cfa760b-eb55-4191-82c6-1fcc0e834e54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1d86c7e-fd65-471f-86c2-25447490da46",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2e0464b-679b-4d04-839e-f3770a1052b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89da5db7-20bd-4c27-baec-29990df40a60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db55a47a-2746-4a67-8b4b-1b54f974bb3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d8b080b-57c7-406e-a97e-47d8ecf4e655"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ec50ca7-65af-42e0-a101-268bb1f266e3",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1397efab-69ff-4b1a-bc9b-11c919553f7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56516606-a1cc-4b9b-b2a9-93bf3d176ff7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a941273-f2e5-4d1b-9b64-20a1570dd6f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0807152-e414-46f5-b33a-111caea84dbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fab369f-4a63-4d49-9e80-b4d6cbeb1a76",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "142701fb-8577-4ed4-873a-130bc9321198",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2009e174-9516-46bf-a500-3c97d7e45133"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6ac3d5c-3edd-4ab5-9299-885d3f5eef9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6539bb7f-456d-4cc3-b34c-a672e2463588"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0df33e46-4d21-4dd6-9701-d173b2d5fec3",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee6dc8ca-fe95-4c1b-abfb-9d5bbf823f1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e141a608-1225-4156-a905-780536ff1dfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b99ce105-064b-48e3-9594-12d8808b7069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f63b247-28ff-4387-85c9-5c3a7cfc18f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09e8119f-3d0d-4051-a374-a88f25a4b404",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d51a293a-a7ba-4875-8f33-795004c31a12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "452647aa-e507-422c-9c33-fbd3b93a728c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "707e6d89-be3c-4a66-922c-ffe7660412ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c56b314-decf-454d-a970-bc40df9f6291"
                        }
                      }
                    ]
                  },
                  {
                    "id": "466ec60e-aeca-4ea4-8594-75baeb1c1b40",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7e4b5b1-d781-4565-93de-954709868a94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f73260f-fd43-437d-93b8-65404e017af8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11f899b4-540c-45f3-a7bb-5b66ef885dc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "74271fc0-2592-4036-9502-475b0d8842b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "198307ab-a61b-43a0-9b35-6158f1115320",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46ce99b9-42b6-4782-b820-6d84071f3273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82d7a44d-8835-4bdd-ae3c-a354b351896d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acbb3ca8-d216-48cb-80e1-1953adde8907",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "34e72637-ef8f-447c-9b47-aec3a0c70c77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88f04178-cde4-4210-92d0-bada4e3575d6",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eed7709-6127-4e19-ab1c-cc6ffb18b567",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af948b96-c29e-443f-bf4f-634574ed966d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c10b110a-0dc7-42a4-b3d1-6e8b7a519a84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7aa82a3-56b3-448e-b69d-385c75340d59"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0a24de98-b1d4-47ed-8e28-a02a501501cf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "93c1e6b1-dd24-4ce4-b51d-386ab1510657",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fc76acb-d790-41f2-aef0-25b31c0ed446",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "ba10ea9a-8fed-4b4e-86fd-0379356c6e4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45a87d2a-5768-4791-a0a0-a953895ead73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "797a07d1-3c32-4ed0-b2fe-42c68046fd7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81272484-eedd-4858-a272-d42198fa33d3",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0f5c1a4-0840-4859-8e07-4759736854d5",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "c4789206-8854-473f-9a47-747c3bc9ebee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2d65caa-549f-413a-ae38-290e1a791ba8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "58875e78-b827-4e24-82b1-ad71df5aac78"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "07d9f8ea-f92b-4a00-a646-97c256868c77",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "76b13ba6-c35a-42d4-a098-09993765a819"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6a7f59dd-e6ae-4b7e-acf5-9fd7977b14af",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "008a0bdd-d752-4f9d-9878-bdc7da6e09e7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bf2d6b90-aa38-46c9-937d-661201b4a13b",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ed3c5699-b74e-49f9-9773-ef243d3b4469"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "20c876e6-83c8-434e-9e1e-1cccf220d683",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b52d0b25-dc5a-4118-b785-b4fc15304b6a"
            }
          }
        ]
      },
      {
        "id": "21ca114b-9c83-47ca-803c-23fbc026225a",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "695fe523-2033-467e-9f09-b7d8b3046859",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ecea885a-07b9-40b4-b982-146535a52d75",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "83eac180-bd95-4bca-8a26-96daf759abc9",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "322b7ce7-245c-4484-a031-ad355ab7218f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ab0a36d-d597-432e-9013-bf2f5d8f38bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ec0e4d3-c478-4ffd-9316-577f6f8fc5cc",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87e9d68f-8bb9-4a3f-9e47-ed7af60db8ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8eb04f03-f208-4e99-bb6f-d53af493f1a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26bec062-c60e-4681-b545-b48703278006",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04096d0b-d00b-4fb9-a480-9155b32e7af4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93fafc18-2dc6-41f3-a270-6bff8ce8f5c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feef0ac8-233a-44c1-84f5-faeca1527429",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af71defa-94c0-405f-98a8-a2bc6e11be00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bedda731-530f-458c-80ad-9820358c59d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a687ad0f-9717-4a9d-abb3-8d217495351b",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ff62728-fbc8-4658-9ce5-287e12eda9e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf6e15ab-639d-4ebe-a4f5-76f3c615357c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e21bd45-25e0-45d9-b871-7543c0ff2016",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5879355b-04b6-4fa0-8c6a-040b474bb69e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c155ab3c-cb47-46d2-bff5-67f6a549283a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "883f6be3-e1de-43b4-b9ee-5cd20643257c",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95b35aba-ed30-46c1-90a5-f34d9c35dd32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4a09604-f4ef-4515-838e-cf287bb4f86a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6804e2b8-a8a9-4f83-9200-f7ccd24c0819",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f39a6c90-283b-4460-8dd2-9c1160b1f539"
                        }
                      }
                    ]
                  },
                  {
                    "id": "747ee6f3-4d3a-4091-ac70-90eaf72607d8",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef013453-a96e-4932-b102-182844142af6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "588fb172-013e-431f-b8ea-133da3f049e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "105f812c-c15e-44e0-8aab-2716cebe0fe3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0f2e13f-ceeb-497a-b16d-eeb63395537c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd4617fd-8676-4753-a5ef-1d560618fdc9",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "979d8432-3d9c-482f-96e4-be6efb1c3696",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0be9c2be-2aab-4172-b858-e1bbad1fd02c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05129abc-3421-4848-9228-70ab34b7dc59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f4f5d7b-2bf9-496b-800f-8f9d4403d1da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2f96138-8424-4ece-977d-16f37abc4e00",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "256fe5ea-6f55-49bd-9780-bc44822298a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72f17a7d-ae7f-43bc-893a-ed96eb3e166e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f9fd596-b699-4b92-bc97-46ee5f3bc216",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfc448ef-5dfa-4bad-92c6-06693ed35738"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b16f81bf-6267-46a4-b8e2-8ef8831a3e14",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0cca9d8-1f55-4af7-8b0c-a260c2340b46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "870d5d82-f3d6-431a-af4e-fc303d97317a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcccb31e-daef-4958-993d-ca0b93a27d71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96d3b42e-0248-45d1-ad49-32d4783e3901"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d8fa1ad-fe73-4279-b446-914ad250cf3c",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77e29898-2bca-442a-8d89-6fd94cb17936",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4591553-b77f-43a5-b426-6305124cce17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58406373-cace-42c0-bbb6-5177c0ae9398",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ff817cf-cdff-4e92-91f3-e6b75fcb19c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28bb5213-856b-4be4-a4d4-0d33a890b6cb",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18c7e46d-c0dc-4d5d-815a-047462ff481a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b7f1a36-c988-48a8-8add-2149e789b2ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ec560d1-111c-40ee-8a4e-c01a39438236",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d581a490-9034-442a-a32b-5af59a12fe0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b836be8c-f64b-4c5a-8053-3b73ee54fc71",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d463f07-01d7-4247-aece-8a3af4e4777f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ff984da-1c87-4b26-9e7f-928b3e6bde0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ba58e4d-f321-44fd-a75e-28fe40235528",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bccb50d-bfe5-4953-9b5c-d17cd8963391"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ec33722-6995-43ae-a439-01147171d422",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8493f0f8-cf34-4d81-9692-834a1f464d0b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0994cdf2-77d3-4d30-b32d-cabef574f079"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50b5e889-7e54-4a05-b91a-19f02f8dab98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3e5ba86-d223-4745-8b8d-758041bfc252"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77cb5495-fb66-4ba1-a5a4-0c93a172473b",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e5556de-04ea-445a-902e-7a77c8eef44b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "256872c3-fdc3-41ef-8ff4-db2b7d621ae3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8af62a87-c259-467c-9485-cbf8371b8e67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51a486d0-9429-4ef8-9ad9-154f4a339701"
                        }
                      }
                    ]
                  },
                  {
                    "id": "206dc11a-2eb1-4745-aa81-8fa93ea6e38a",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9350e794-28f1-486a-8062-00aa7b0c5173",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59c4b2da-aaf4-4f6e-8a4a-744ca4f0fe10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea151931-1496-4bd5-8d2b-88213d45d002",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8b5f890-e403-440f-873c-05f829b04299"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f91175db-8529-41f0-b029-0aa70b5106e9",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccc06a99-5853-4f31-81cb-1205849b4802",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36bf826a-a40d-4793-80a2-50ae40c7d294"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9af05cb4-1ad2-4b30-9efc-c6ac2925c705",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fe20c5a-28eb-4ae7-b677-5522da9078e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f227f2c5-798e-4ef0-be02-af1008d99e53",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c258038e-7add-4c88-98de-d02af47e11c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a34e453-29b7-4df0-80d6-17e5f7917ec5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18f5d4e9-4992-44b7-9b0d-92a54ea3275f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecce2d08-a5c8-49a7-8838-e63db60f74e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4ab54cd-e72a-4796-bc89-eedaba913975",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38a70fb6-4332-4ccb-a2f9-debce547c2a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "190d4eec-03c3-4e40-972c-3c924d268860"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1327c09f-ccd6-49d1-9dbe-a5224a345f85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47028cba-3b78-46ef-ad15-0759395a0336"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b7b0b55-498f-4c20-8743-e001fa2041e5",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "266b99b6-7741-4908-a71c-982e9378aa08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cd333b9-0032-4a5e-84ce-fe67b77cbf8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af5ae0db-1567-4ec3-9b4f-99b59988772d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a01c09f-e0a5-4e51-a142-c3f6ec4a2485"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27db9f5d-171f-4ce9-8a3c-7a1fc8b11701",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57f022fe-24c1-4d6e-82c8-1db669c86e81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a63e83ca-bac0-4b39-b781-f26b2829e45d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8b6ee0c-0d64-41fa-968a-8972c940ff45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8f556e0-4db3-47a8-946a-57718441cb50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b62c5dd-d8e5-4a96-8e61-d87f7fa96ed2",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "754df512-e7ce-4d1a-b542-18cbe42f97e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9026370c-ff3f-4f82-9662-28c62b319078"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd085d7f-eb97-4f28-819d-8cb4d210c9f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47a60107-e5e9-4131-a134-7963771d7b3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66febe96-46be-4414-829d-8db387ed2068",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c48e60c3-fe3f-4c1b-ae91-67064a898d2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15a4c2af-ae58-4fb8-95a7-0eb52cf1d3dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97d1d6b3-5aa2-40e2-b051-4baba73d7d20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0bebd6e-7562-4396-b365-85ed19ceb051"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6290e37f-04a2-40ef-8c12-7999509cd097",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a8c182c-57ab-4f59-965c-b1d8f97aa3e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed111694-a478-42c9-8036-ffb05d5be499"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e639494b-5f2c-42fd-8739-be525f7db147",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2decd9da-5e7d-4cf6-894e-047417017775"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0cd477b-c799-496b-b39d-38a7e12bf551",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66cc68fb-a219-4d05-b671-eddf25b13405",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2d061d4-48ea-4fae-9d53-a57a334f4a50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa3909b3-2010-4576-90ca-8f44f94aa1c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3eb0d9e-c443-4806-8e63-ec3cd7881a62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e68e05de-ec36-4605-898f-99eb924de021",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45689713-2fff-4ec2-a553-2f9e69be4744",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f2d933c-c062-4637-9e1f-0b0291c7fa4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d715f9ba-7bdd-4e14-9330-7f62f77709a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b375e054-b2d1-4251-9a15-e84d8ed93f49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb698119-3e4a-4bf4-aeac-cb6b597c43ba",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fed1b59-ff29-4770-85d1-5b2ad4831330",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "929e7f5e-a529-4639-a6ec-1dbfc68d0b93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02d1bc71-1665-41df-9e0b-fb3e6dff3d23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88d559f0-5448-487a-a06a-533cb8ac75d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7203dc6a-abc3-4e0b-81d5-f8a976006392",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2456545-dd7c-43c9-813b-12ee976565f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cbf2a904-d449-4a48-9b79-2e276aace608"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cde752a-bce8-4866-af94-834b8e2f1673",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "928324d6-4aa5-4be5-84ed-92311826acd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cebd3a5f-60de-4f94-af13-aac9832ff578",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "239ee6fd-f9e4-4964-8a40-b9985d898fc9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cfd12fad-e05d-4c4c-be99-3d580a2c5abb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79802107-bbdc-4fe1-a7c2-a811292736f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e44e4898-bb25-4741-9e45-56295eda8922"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8aed543-6ed9-45c8-8b38-04b4cf31579f",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80de6c22-d8cf-4c44-ac0c-c36bc55914cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5566b1d4-13d0-4c9c-a859-330a14386061"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0db54517-a266-4ec9-9689-b6384b6bcec3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfd894ff-964c-45c1-bc5e-6a246189e16a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c955cb00-e7fd-4753-8942-7cf68abf3678",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a49c156c-6b04-4ee4-8e99-b97fc4ebf6ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90224a05-c4c4-423b-83e7-ac055b915118"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20f2b1ea-f753-4304-9238-a5d9a2a829c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "171fea3b-1079-4ca9-b736-a89e5b3f4741"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79120309-33de-4b58-a248-60afc0e5f9d4",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "053b6c09-49fa-4c49-b7f5-90e853564840",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8fc6800-874c-44b3-adc3-974e16e51304"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94ea7b42-266b-4c63-aba9-09e97243f199",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef15a8fa-e563-4011-93ff-f4b0fd0f50a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dec681ab-b224-421d-8161-ea3dce674fe0",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3f59b0b-8d52-4fd7-bc14-b94e5e2134b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1cc7cb40-9484-4781-aa9b-48854a82ae80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "506792f5-6f22-4da7-8fc2-28e1b0a37199",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc7c4400-c661-4ab9-9269-6a6803ff11b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00fa6052-2d21-4d9e-8bb6-89d22cffba9d",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe490408-9002-4574-a17f-8f69245a9da6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3dbba88-fa30-4e1b-b44d-5faa3ca539ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be8fa30d-5c5f-4700-9319-b037147725e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bff47014-4094-4571-ad07-1489fa67e536"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f7d4dd0-67d7-4f60-a973-cfe6398aa254",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1001260a-db58-4738-ba13-bf21678803c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b69e7ff-9f55-401e-a824-59c74a0c89e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99c9043c-3d54-4433-bb93-6711f1fafaef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d88ead5-1e0a-44db-a078-bad79169f41e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08b7afe4-2fcb-4c2a-bec2-7ec4eb256a21",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccc33069-8714-46a4-a2b2-dcd5a0258e29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a522372e-d51a-4e69-8d02-cd80e036110f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c2115b9-587c-4cd9-88aa-712b330bdde3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acd5725d-9130-499e-9c80-090173497f7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4bd4f12-7850-48d9-8876-df09797d30d0",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3348d533-0822-4c38-aa65-cab8a0b4801b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3af584a3-aadc-4bf9-99c4-78d911783e39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64954a7b-c454-4505-babb-29d87c2e7d9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c1e8c91-9bc6-4d4b-b47d-e6b5c24b78d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5a7c125-13fa-4537-8ba4-e1dd404533ef",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b788c063-ef34-4b92-990e-536bc34f6a9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4faeceb4-6942-4f28-8ad6-9bb92e4b804a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fe20c2b-dc56-4e0e-b397-eb3f4f1813cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b98b6b46-a549-4a27-8d33-db9f86e9e912"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41f478a6-97ba-4e68-ac32-2819424e9b2f",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a4b9c32-2e0f-4336-9757-3eba19c2561b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6745f94e-7183-4c4c-b952-ec4df22c476b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1ba1cbf-f3d9-49c0-b385-baff0db7387f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56442705-4c7f-4125-8867-0bfdcf12562c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7422bf0d-c5c5-42a3-a899-2b6fee57d686",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75faab6e-7212-44c9-8e2b-48edb2d8967f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f575765c-ccf4-42bf-80b8-228af61c2fb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "590eedef-7915-4afa-8647-9418a1f61ec7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cf96673-80d2-4100-a4c1-1e1895f047c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f13b826-732d-4869-8549-5b132a4a4e30",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c63523c6-6f59-4f39-8142-3d41ca4b50b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7df7ad87-274a-4a4e-a678-c55e81689487"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16c7ea99-9686-4c17-83da-0c00541309b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2371b528-5e49-492c-9397-6069037644b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8950ca75-07ad-4235-bec0-8f696c2c3ce8",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5e2d23b-da64-4a9e-ab54-79a55c027891",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d0bc6f1-a641-4423-9250-e762d399b0bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0f34fd8-6d29-468d-b87f-cce10a503d0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dccc0010-1d99-42e2-87c1-b3e567ca6ceb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a1ae9a4-829f-414c-af54-88d2435b1742",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "946d24cc-f42a-4636-8a5c-c8a22a365f63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b9dc01c-75f5-43ba-8548-817d8274f836"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f90e6de6-fa6b-429f-9932-5db558804449",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd2bda51-b1b1-4703-83c4-e63c7763b4c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8a1e318-bb05-43e9-b096-0287592a5807",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b00e4f4-553d-47c4-b23c-a6f982069c63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80ae0e5b-50ba-493c-938c-b488ca976dc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fab53514-3ef6-4892-abf9-eafa7c661761",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a090acd8-f446-4864-9472-be0d19e75ea0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ff6c922-2f31-47ff-b187-270b59df0fe9",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "258800da-4ee1-4388-aa80-84f2df2348de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "098d0d19-54cd-42a8-b587-67368d9e3a03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8847720a-b603-4e98-98b0-35bca716b42f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb005f52-e257-4a63-9633-d3af9aebf2d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19fcf6dd-fa00-413b-b7aa-4b1d9283f1cc",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a29feafe-84b7-4102-9bf7-dcb4ea8df9c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "644df222-910b-451f-9deb-9ee69f6c290d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "caaf751b-8cca-4f5b-b1ce-4941128b0b9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1c8a3c9-b915-4176-8c3c-031c93ceb098"
                        }
                      }
                    ]
                  },
                  {
                    "id": "368038aa-c6aa-4a04-a6bc-a227b128f898",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a6f4169-6df8-4403-97a6-17507fed1772",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd90fec0-038d-4600-b5de-5164d1650fd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bdd4a22-ddc8-4fbc-af4d-f55703397f54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f596d416-2b42-42a6-80da-a0ff2e081369"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53083401-a61d-430a-a9d8-97f98b955670",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6beef37b-5b0e-4414-8341-3dea79687f90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3591001a-a1dd-433a-a0cf-269c53759a76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93a9983a-afca-4183-bbce-19cfe5cef758",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a708f5cb-5517-4047-9094-a32b0943137b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa91364b-add5-4df8-913c-2ed2fbacc8c3",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "736893d3-1cfe-45f3-856d-02d04015f764",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "097c8402-e1d3-4fa4-95b9-4b029ff518e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce395bcf-1178-4555-b850-28062a14b115",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c510c49-d18a-46ca-8224-1375df012b12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcaf5286-f468-4168-8fd9-4da4edfb6fb6",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "077c0644-ce4f-4c07-ae43-20e7943e3154",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fe0d24c-f7f9-4891-b525-3b2532f389c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11d725cc-2095-49e1-a3b5-681f32ace7d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4848481-17ad-457e-9ce5-dc79de33180c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4b7c24d-5a6f-46c4-a266-403f32bb9ea2",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a95ab0f-e0b3-41cb-a3c1-5a7f57b34c08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e767581-25bd-4c89-bc78-4219ee87203f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d81639c5-3787-4163-8ec2-c27996715cfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "127f35ab-aaa3-4de6-babb-3f08c565b86c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2a64190-65a7-4f78-bc5a-d9ab73f106d3",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1cfe392-bc55-4fee-851d-f0fd60807a2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ab989cd-d513-48a2-a886-3824467081e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34c10294-367d-4c8b-83c4-4c25659e546b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cad7404-aa45-4e99-973b-c6543d1262c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cdc59f8-5a42-4b25-99f9-dd89faa292a3",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c67ea9b8-00a6-4282-8707-c8c3053eec11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2676b166-c197-431d-a0fd-34f1905a5c3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11894b7c-6d59-4630-a1f3-26d5dd1fd524",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd18aef1-bba3-475f-af6f-b8cd9da7319f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4ca35b6-e6b2-44b0-b996-c661485679aa",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae476503-d7c4-4a2d-af0a-491c62917698",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a8379d0-2765-4fd4-911a-ec2554e153f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e95d7ec-b475-408d-b0f3-551457a78af7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3466586-6e48-4345-9acc-6c28cb624956"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a115925d-c5d4-4a07-a5a5-896fccb4d9d1",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14070108-1079-4744-aa0f-2609f7eb0182",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25efac03-e7d0-40e9-8fef-fb8fea3c8bad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3716c17-24bc-4e9f-9b0e-38b3f64ce539",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff935a16-ac85-487e-91ca-c8636cd71664"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d406269-8ab2-4363-90f8-d610fb42dbb2",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6346ef0b-1bc7-45ed-bf81-fd0e00b5f4da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "416a46bd-c459-480d-96a7-8ea81b5fc5fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9591639-271b-4eaf-8ca3-7b9b50dad170",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9c088bb-bad1-4003-9ddc-bc59823be3ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5cb70cd-ce9c-4e79-bc3b-3aeffcc206d3",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "799b6f4f-57af-42e8-867c-02266a94848b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ee2a18b-229b-4844-93d2-99054549f4ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd867879-18ca-4b60-b692-74b97385ef3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47703baf-ece2-424a-8f37-266ad2a6ecd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12eecf6a-9148-4486-bed1-f2a8c47438d9",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1d36370-20c4-442e-8f9d-b335e142ec33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e705a435-6014-4e39-9326-5034f20a2f74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88550c15-3c1a-4ce3-8d20-ec7ba1973854",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed80c6b7-5ef2-4983-b194-b5582a3eea7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a07219ea-dcb0-46cf-b5e5-2dc4e4fa4b05",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "999174b5-d3d4-447d-8bbc-a28b618aa34d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d86ff56-1c62-42a1-bdbc-9d78c9c03c84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d51fd7ed-63d8-47bb-bbeb-d71c356eea3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91a79704-4cb4-419c-af1a-b3b231ad1a48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9017ec87-ece4-4bf6-92c8-8bafab65ac19",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0392dfee-a427-4be0-9e4b-2a3bdc840c12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6a0ad5f-c7b4-41c0-90b2-e8e5062996aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "400fb50a-0523-405e-8015-0ddf2fe8e174",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79a75d1a-f94f-40cf-b881-faf72688a01c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68f83faa-2882-4510-93a3-4733ebd9ca49",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "030a13fe-c81a-4be5-a666-2a325c0b5c50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73ffe599-8b15-4204-8464-1d37189c4733"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22f16e6e-3644-4ed4-95d1-74731c1a742b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3b3ec03-cc1e-420d-ab4c-12a1c9b8c08f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "898e5166-98bf-4dc9-a27f-fc146cfe8971",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b0db5dc-3b8a-4d7a-950a-f3ddf0a84057",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0648defe-f23f-4cdb-9afb-f06e99257b21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c4e5f30-6da0-459d-ad31-c96ffa92c38c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f9f4f6b-b46c-48c1-b6dc-d817f22d35bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a93c358-052c-4ceb-8226-6b76f5b6344d",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0ef952e-51b2-43d0-b71a-2c47494811f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4fa77527-b0a3-4de0-8a60-eb813c70f3c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1047fca-20f5-4c29-b4fa-f009fa7a2f47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3215ded5-6cae-4f41-a461-b4e396aca65a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37bef074-e96b-4792-b987-14f278c24cf3",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0513c047-997d-4c55-ac97-d85692fe69eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d660b5c4-2d3f-489a-b639-09ccfa2e82bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19e02145-7a7d-44d8-9fff-3d519afa692e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05ceea98-4f02-4402-8e2e-ec1a92e4acf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1efa65d-2572-4e01-8896-75bbfe19941d",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e4a4040-fed5-4bf3-888a-a7168d7edf42",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1264a5e-a012-4cc7-a7b2-418dd99a20e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65b7707f-f54a-495e-b486-f951b10c7a7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c0ac7d6-e6b1-40c4-ac03-ad1dd92df074"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3f41f23-1a3f-4e53-9ac4-1fa8ef9d6e84",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ab8075c-4216-4072-8196-03c427f8f5ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1f796ca-cf5f-4295-b322-90a26a896de3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "187e559d-7812-4170-aae0-dfa6b4e6cf14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41d961e0-1cf1-4533-9561-8784e0d11fe3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7135c720-ae26-4e91-aac3-70fe692201a5",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f434314b-d9f0-46bf-8c73-ee1618a43d9e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "444cc16b-068a-496c-a71b-058ecbc67e29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f85e29db-d4a3-4efb-8770-19577ce16b94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2227c6c-19cf-45ea-a6b8-a41858cb219d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdc9a2b5-9fc0-4a58-a853-30f3ebdd50f9",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a03b687-9375-4fc6-8634-494f8a6901e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a523e258-95bb-461a-ab9f-4d58bc4a8a33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "618d115b-1290-4091-b9fd-5999639bbcb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e535660f-8635-4ce6-b554-5259288af202"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dd9ea19-ec40-48a9-ae33-f7ac8772c983",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24ec7bca-1e97-45a0-824f-3111d0eae5ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8af61aa-2236-4f86-9135-317b96b0c6fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10a26ceb-0b6e-47b2-886c-0af84e07a05a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f3bc9c0-f40d-4588-814e-a358d4fa192f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3079fe1-ef19-4da5-b781-3e46cba4a905",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "842b25f9-330f-43de-81c3-9d5a07ace0fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2ac6160-ba7b-4e9d-ac01-3549adffc699"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ae9ab0d-c1b9-45cb-a34d-fd456a791cd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44243321-d1be-4654-b850-997b5be4d3be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "115b2996-0b25-4631-b383-4820793c9051",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47df77e0-2783-4559-9044-6d6be5d66d64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7985b9da-318f-4298-8d89-b1e1ba81fe2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db463607-2284-4390-b9dd-87827d6e2ba6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd992d16-7a72-46f6-99ef-4107cca36d72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fd8caec-3238-49bf-afa5-77ef39df0d9d",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a755ded-7898-4db8-8019-82959fc691f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "815902bd-5e87-43b1-9094-322942984a7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a58c567-696f-4c2d-8163-46a1adbb454e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c2e89b1-3c90-4698-a58c-60f05f4bfacc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0712dcb-6435-45c1-8a5b-47c6141e7a85",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad4c0646-be03-47cd-ad76-b84580276375",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f79e2771-55a2-4681-acfb-7402179ade64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e0ccc0f-2595-46e4-b924-258431347b3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e48b229d-d115-47d9-be7b-66b9b2fea38d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eb0ae71-1714-4c7a-960f-7ae4adb996ba",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2969c970-0fe2-4698-a9ec-af62da011389",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "abf975d4-e0d3-49aa-b97a-8b94fe818820"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1dd1a08-b6d3-4024-8c13-9e7b5c2c10d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fa365c9-5cac-454d-999e-778c86633618"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73d638e1-988a-4367-97eb-21fba015178f",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb2cd5e6-089a-49ab-a231-49c929b6e9d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7916e2fa-f292-4e05-96b8-fdb1ec0e5126"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66658cb1-0da7-448b-912b-419778a4492b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f32ce351-dec5-40e5-aaef-573c7eb05560"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17128f0e-0974-4ce3-9004-13bb4c2b9a63",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11c0fcbf-60e8-4891-8507-ba2cfbf0fb74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66ca4478-93f6-4348-b492-5dbfe54e146e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40e38949-b6f2-427b-82a2-92836050d15d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "793c4604-6e0b-4592-8b19-9216ff4c662f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9034453-4260-497a-84e5-d886ab66612d",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "defcf585-6699-4024-a92f-d5d4ba433b3b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85022a1b-5c6f-43a5-ad18-3addf9e6dc89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67465abc-7d80-45cd-8bc8-9ad952ff571c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcbdaa9b-8af6-439c-9db7-8eb2d2c1d408"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e303687c-0e13-4e95-8ea4-14210ffd59d2",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25f225b5-e561-4d33-9c0f-63f6d9f0f559",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67eda329-0fb1-414d-a85f-a204bf9d1c33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "647828ec-7824-4fe9-a3e7-82bdaa31b7d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47464aa8-f6f3-4965-8cfb-4f3c1b9b0158"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59f3d392-6fee-4296-9ac1-3d0394b81350",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a4af24c-12e0-4bb5-9d78-bf1716adf5c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e05b2db-8ade-4bfa-a2ae-a15ddfdaad30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59f879f5-e949-4800-aca7-69ad602b3dfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f06981d6-0e69-4994-b2c1-74a03632b710"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc00f4db-b500-4488-95f8-5da4911e2f9e",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c9af679-1ef1-4493-b0c2-fc735e383f88",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab749fad-843a-421e-8d36-09b3da8c593b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5976c06-587d-46b3-b5d8-7fb1f89e303f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bde1fa85-3e76-46e4-bd45-a348cd6851bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6b8d8db-d773-421e-ac10-0d6e3bcf8a1d",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41ac459d-a868-4a31-9197-06efae8f622d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85292a5b-5725-4ad1-bd16-6591b7f3a7d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e2daa4b-0c4f-4412-bb0b-2b5f780bdac0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8221ab7-7e66-4603-91e8-7372015f0d4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38580794-0141-4583-bb92-7677ff68c4ca",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c83ece85-0a48-402d-948f-07b590f77d22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b84251fe-2d2d-4e86-a791-3c0da8cf2183"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc901595-c9ef-4345-af25-3e9e3eb7378d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54d7c496-b0c6-4406-9536-63894d77a8c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23667658-9a33-4fdc-8f10-3bea23a21b3c",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29a72cbc-1ad8-48cf-8291-423be522bbc2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0c1fbe6-ea3e-4ea0-8160-dd8b3ecce36e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3d26500-2d4b-4f41-9fc2-67db1e2c96c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6d640da-5f22-427e-b696-c25b314e1e8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0203ccd-63df-4f15-aa0a-cf244a90bdfb",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca0d5bdd-3036-4c6d-8710-669fff8aef3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87a11963-aa95-44ba-ae10-c50d0efcac49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7234e483-b630-4d8a-a68d-9dae53419c6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96079880-cacd-41c0-b12c-cdd7f572ed76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28911cf8-062d-4a89-82c7-81a5f95a09b0",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d123688-3668-4ce6-af56-b5dc82830420",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "422cff9f-a87f-4369-a680-d68468732f47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe02c0d6-b96f-46fb-b2e9-952a72e9f7ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8551296f-6ee2-49a0-ac57-d7fc13a5b5c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1f347cc-241a-4747-a27e-9def88f0f5d9",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efb30a15-9ee8-4e46-90fa-07533d104ca2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79389ea9-8ce8-40c4-83a2-e475b7154e38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8051f41c-de69-4bbf-a1f9-777ca1e12a7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86793236-ec71-4715-8952-a1e689df4ce0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d62f5e3-382f-4e76-a088-ab532c3c4651",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2478a96-3794-4ab5-bf0b-f126acdc4595",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc40fe3e-37f7-452d-8803-90b1d65b5a25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aa1c002-f8c6-44e2-bc10-70f81b7b9952",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23ba12e6-1f7a-48a8-9d57-2c84a687dfbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d215775d-4470-4e91-bf6a-fb7c88a2f670",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2156c0c-d006-4c5c-be99-c14c8a5ae5c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "997319bc-df3e-469c-b93d-b7cb7217b5d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "043e854b-b940-4dbf-8701-8c4148d74c3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1aa67db-555d-42c8-9c2c-22f0ee48114b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0994d4ee-1815-4f24-ba51-4e28853a2dc2",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb62f409-137e-40b7-9fd0-894f96d74b18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7bec6d9f-d18f-4be7-8d63-9912a0a5d37b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e656466-d67e-4c5e-98ca-79a0272b8285",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b37315c2-70b9-4d56-bded-de893a892ff3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9594b17-c424-412f-8df7-804664c51c96",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b1b3a2c-c418-4208-9026-2fd855535717",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7fc9c5a4-85e5-47ee-8579-44eeef47f8b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e347ef96-7765-4dfa-9f0f-dd7f0b8d5a97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7db32c46-0aa1-40b8-bc48-2f51645661d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e72321e2-f28f-4a90-bfaf-c6a508190af6",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "775ed3b6-df5e-46e7-8392-9bc64e028020",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce2b0688-922a-45b9-8722-7ec5f74d8ea0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e3bb5db-f1ce-42ee-b0b1-b3b605e62119",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "589fb77a-fd25-411e-b753-3b5b1ab568bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a7a2ea5-ad3b-433a-aac2-a3e96607bb71",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61ca4e93-3391-4c70-ac87-a255711c8353",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "475b8778-46cd-465e-99d5-72265389e297"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67df9ba9-7dfa-4e2a-a25c-d3120481cba5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ff54f7b-d883-4513-9110-436a0b348ff0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0087dc7d-4787-483f-b62c-716a42b97a13",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64f8d28a-dcc4-446b-a995-c3e7a7219477",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3fed1e9d-25c9-4f03-9181-b0c81862ccf4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dee7265-821f-422f-8639-ce73a0b319c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "511a0eb9-83dd-4897-8e1a-88ee8b1c690e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8e1cdba-41ca-46fe-84fd-5a37b4fbc47d",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77cc5386-95b3-44d3-a537-f0fd5bfad797",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "acb9e63d-e278-4f98-bbf2-da669b362a13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "627ca53e-65f6-45c1-a34c-b28df16046ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7889d5b-45e6-475b-8e3c-0b908ae5695a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aad55aa-fa02-4051-8f13-8e2a9c3320eb",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba756a8c-b159-4ed3-9fc4-40f3796f85d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ed7590e-a026-480c-81d2-2dd8b100cf9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5724675f-2421-404e-9930-8ee51431daa5",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99aa9dd1-7744-4ce0-9edf-92ecbafac63c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67d18e2d-95c7-4cfb-ba45-b936dc783051",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc3830bd-589d-403a-a89e-fd4790b2c5a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94ca52ba-45e0-4d8a-90f4-db8473eb480f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0be7077c-c955-4ce5-9b4e-6aa2cd676faa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09b2e9cc-7cee-464d-8dfb-f058b16ebdf6"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "92e6a31c-46a8-48bd-babc-c13387573db7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3878edb5-bc5e-4aab-addc-4880aae40561"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "048c52a5-1a74-40b6-9a01-1f43d4f2e6da",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "620c3b64-6621-4de3-87da-c7bd3bc64c6f"
                    }
                  }
                ]
              },
              {
                "id": "31ef18da-63fd-4fd6-8ab9-0e0ecbd568b8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e6a87e1e-ba13-46bd-a6bf-c2dbdff3f3f1",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1510d8c7-b58e-425e-ba61-e9d77111f2af",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "8663f567-cf72-44ed-9793-2b874e92de58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "540f6a4a-598b-4f56-8981-b2b7219c636a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cd70ad03-08d0-4b01-a110-47fd771b2e06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f48a86b8-8ecc-48da-b6f9-2a217d8d68a2",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58b048e0-e5a3-461b-8c9d-4acf60cb4417",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "944bcdc8-9062-423e-8e44-1b05a298db66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87dfbe5f-754b-43b3-9564-f33ca425c527",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "08689fe1-1f7c-4ca9-9734-bcc627b868b8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b1a851c7-2a83-4519-a975-c5a2fdbc2193",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f6e6c85b-9374-4e20-960a-94d4cbbc6724"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2b57b775-9c7d-472d-968f-c09d74ee0e10",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1615862c-9a29-40c7-8c3d-d90398e56ff8"
                    }
                  }
                ]
              },
              {
                "id": "68424aa0-c55b-41de-b413-d23abb57f602",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "f9d3fccc-2c28-40ef-af7f-1589e90df9aa",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e1ab816-1f59-4903-81a3-ed3a1d649e7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "3ea0e55d-65a0-4e8f-9abb-1ddb2a319e27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20a03a4c-c2d2-43cc-987d-4f81c37fe8bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c4258f6-42c9-45f9-bf81-d88bd2f6001a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a56f72fc-f876-4511-a109-6aa8f815a6fb",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5c64a613-6a97-4b89-89e3-701c4fc45017",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e20fe606-d517-4bed-ada5-a88d0dbcb894",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "0351b81a-17e6-4fe5-ade2-5685a186e462"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "80d81be5-ec19-4d17-a744-b4918c6affee",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "42869490-4d4f-4c80-80b6-6c83b59cbf1f"
                    }
                  }
                ]
              },
              {
                "id": "f31e6a4e-2039-4afa-8e62-a6d2ca61fdda",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "88178df0-4007-49e2-bcf5-bd40cff6c769",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "33be3786-bdca-4af6-ae3a-f3b739a2633c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "66f4f5ce-c83a-43d6-8a28-5fbcb5991ced",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0cba4713-56de-486f-9a3d-23b7e43894ab"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "98f6a83e-53b0-4069-819f-ca60feb9a77d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "35de5503-c458-4629-87a5-104b8de47c31"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0240621e-8666-42ec-b0ca-f778243bd28c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "66e57144-8b89-4b1d-84f8-e197395f8b8a"
            }
          }
        ]
      },
      {
        "id": "0cefd941-1aba-47b0-a7df-845ed8370cc4",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "f095fcbc-7bcd-4ebd-a8cd-1c2a90bf4c05",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cf02a103-9a86-41ec-a64d-b066dfc75ab8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a03f8f6e-c1b4-420c-8074-a6a11bf84a0c",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb412619-9356-4f96-8b99-8f8a9a5c86ef",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "e986a74d-9657-4f8e-b07c-da0516671d92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dd8bc35-ba3f-449e-a829-8cb6001e835c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5ec0efa5-d2e7-4f0a-8c93-c2580182f6d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0423aef3-5391-4fdd-9456-35d00de46e0c",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad08ce92-e3ae-42db-bdb8-207f88ccc7a9",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "bf7210b5-113a-4458-9bee-5df9e40bab95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6e11876-557a-4160-b63e-2075cbf9b601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4b78b398-c0b6-4f73-825c-73ef04e4bbe7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7c2245e9-a632-4deb-b675-ce77bbcd1eb3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "42c1b03f-12ea-4a0e-89da-b9cf138c0e9b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8b84e2cc-415d-49b2-898c-8fec3bf91583",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7ffc6442-c0ad-4f08-a88e-fd7d19d9296e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fe44afe6-44ff-4dbe-80d3-63397c69c4f6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "7d5c6eb9-d7c0-4f09-8596-64686322827e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "84f9868b-7490-46ad-a7c4-75f53c6f7343",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b307faa2-ace6-4487-889f-7ddfa75c9929"
            }
          }
        ]
      },
      {
        "id": "5efce142-bd3e-4c56-bba6-f04bda75e16b",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "bd041089-5cf4-4d8d-a88d-c9e2d9de9173",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3482c00d-d17f-42fa-9c25-7b21bbeee7e8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "46d97090-9936-4aa4-b030-39efe5cbdde3",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f949ed8-9212-462f-9687-b4f21733d7b3",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8746359e-5587-47e7-9fe7-05b0a5aae96c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9241d274-0ce6-4933-8f38-b5a0a37ae9b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "05ab3c65-fd31-4a0d-b7ed-68b46a8e96bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ed681d8-92c1-4928-8be7-ab53b4ca19d8",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d94324a-e75c-4955-a3b2-7d8490a3e162",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "9b767bb6-4b41-449f-8ae1-ed78d55bd9a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e7919a9-2519-4e7e-adaa-f0574fb4f05b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "620ebfaa-b70d-4d5a-a426-dee89061ea6d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c9da1a1a-58de-4ec7-9a55-387234709651",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "74aee846-3cf9-4df3-9119-9d6df8042d27"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "37e1c56f-41f5-426a-89bd-c4923a904927",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "54b628f6-ff92-403d-9e24-83482f7eddf6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3ce72abf-c184-4a18-a5d2-77e6e8a51c82",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e2c67f5d-df86-45d4-8eed-e2e7500c3c80"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a5df26f3-8cab-4a0d-a605-b0eb0d63a229",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e250b0f7-f53f-4847-b2b4-c8d18a776fd2"
            }
          }
        ]
      },
      {
        "id": "8b211531-255a-4eef-aa32-16029bc5b009",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "4d6ba7e0-0326-4b39-9b6c-6e8c9eb2aa57",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7069638e-5693-4014-8c25-964eda23e798",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c646fb36-b1d2-40d5-8b6d-010368b17301",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaaa31db-ce83-451e-8902-ad52babc11bc",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "936257a4-1d75-47bc-802c-5733c8894b4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a71cbd48-8b4e-492f-8f9a-13640375bd9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8b026769-ae8f-47ac-b761-9d6f84e7c0ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "453d7837-83e1-4715-87f0-d3c4dae8e4ed",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78d95596-082a-48f9-abcf-bb45f9f96239",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "8bf0ab65-8759-4268-a1d5-02c47d3c4b3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "185fa11d-f501-4440-a56b-3d0d9b159573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "268bea2e-250a-495f-91fc-a39f789d3261"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "58e650c8-4dca-4189-9450-2caa0b77578d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "96260b3c-c8c8-4b74-9aea-8311641d4b2f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2768ab29-9f25-4aea-899e-b0159c2fe2b4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "89dd70b6-05f8-4b78-a986-c1216dd3915a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dc40094c-c08d-4364-9fcd-b282de9bada7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "fe197581-cd74-4d10-aaa5-6a6006d3d9ab"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "99d3e82a-9e82-474d-ba0b-4e49a33ebf83",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7dddb4b9-db7f-41b1-85e6-5dcbb299aacc"
            }
          }
        ]
      },
      {
        "id": "de23e13d-5106-4ae3-a8ae-e1b3551f1cd3",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "11dfbb55-0193-49f3-abd2-27546d75a886",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "993184bf-13f1-4b54-9d0a-768769b2f700",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "151e84bd-27ff-48c9-97ae-7b5df0546a74",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a7ec300b-3a3c-4149-8c1b-6f4614bc9c51",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a03815a7-a933-4faf-a9b1-1f5c1c3b2de3",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 906.3653846153846,
      "responseMin": 10,
      "responseMax": 7855,
      "responseSd": 952.7040711906878,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1684715936928,
      "completed": 1684716183218
    },
    "executions": [
      {
        "id": "b1685262-a24e-4cd1-9b5d-cdddf956e03e",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "de9f5eb6-76cd-43b5-919d-451afb6837dd",
          "httpRequestId": "2aeafc08-2c8e-4b5b-a502-23705fef2715"
        },
        "item": {
          "id": "b1685262-a24e-4cd1-9b5d-cdddf956e03e",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "7011d77b-8171-4e8f-92ae-296dbe0a5012",
          "status": "OK",
          "code": 200,
          "responseTime": 59,
          "responseSize": 0
        }
      },
      {
        "id": "159b85c6-f505-48e4-893c-c2f66c8a86ef",
        "cursor": {
          "ref": "0b64697a-3daa-4980-a1c0-dbc9bd37617c",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "e45c1487-5d35-430b-89b6-7472351d90a8"
        },
        "item": {
          "id": "159b85c6-f505-48e4-893c-c2f66c8a86ef",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "04654728-c19c-4e55-acfd-af403ed7d214",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "3efc669c-a3fe-4d43-99ac-90db28c357c7",
        "cursor": {
          "ref": "f7981d56-7544-4184-90c7-c4dcfb0a1c27",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "9ad035dc-ca11-4f6b-a6bd-dc826f287dfb"
        },
        "item": {
          "id": "3efc669c-a3fe-4d43-99ac-90db28c357c7",
          "name": "did_json"
        },
        "response": {
          "id": "4160f4db-55e3-41b3-b964-ccbf0c0e4d9a",
          "status": "OK",
          "code": 200,
          "responseTime": 2016,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c57c1a87-d0cd-4326-8233-011daf0263f3",
        "cursor": {
          "ref": "373c824b-0ec1-449c-a98f-8003476baf9a",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b27ffd14-1487-4ae8-a9a6-629941a3899c"
        },
        "item": {
          "id": "c57c1a87-d0cd-4326-8233-011daf0263f3",
          "name": "did:invalid"
        },
        "response": {
          "id": "728a90e7-4e37-41ee-acf8-b924ed586233",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1041,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c57c1a87-d0cd-4326-8233-011daf0263f3",
        "cursor": {
          "ref": "373c824b-0ec1-449c-a98f-8003476baf9a",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b27ffd14-1487-4ae8-a9a6-629941a3899c"
        },
        "item": {
          "id": "c57c1a87-d0cd-4326-8233-011daf0263f3",
          "name": "did:invalid"
        },
        "response": {
          "id": "728a90e7-4e37-41ee-acf8-b924ed586233",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1041,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "481bbcc5-25ac-4257-b0ec-c81a7746a837",
        "cursor": {
          "ref": "551a7b7c-211c-43e8-9ad3-8858208d107f",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "56ce8dac-5cc6-466a-83e1-7d32fd2c28a2"
        },
        "item": {
          "id": "481bbcc5-25ac-4257-b0ec-c81a7746a837",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "4dee972f-1e88-4bdd-8654-809d9b5f32e5",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1070,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1b8b4c5-a9be-4d6f-845d-cc67e321e883",
        "cursor": {
          "ref": "3f6e8917-b5dc-40e1-a87b-37be5e5730b8",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "d24d04fc-b7a1-4463-bad3-fd717d5639cf"
        },
        "item": {
          "id": "d1b8b4c5-a9be-4d6f-845d-cc67e321e883",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "2aa82fb5-a5d5-4896-9fe7-0219a1f0a1e5",
          "status": "Not Found",
          "code": 404,
          "responseTime": 842,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5df206aa-c6ac-4874-a0a8-2fc4f88e1a83",
        "cursor": {
          "ref": "b9cabedf-f7c6-406d-b182-c8de54a90a21",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "46c04ad1-7971-40b2-b4d0-b88720aacd89"
        },
        "item": {
          "id": "5df206aa-c6ac-4874-a0a8-2fc4f88e1a83",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "9a8a0753-17cc-4a3b-ac4a-94d428af216e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 45,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27b49d44-5153-429c-b999-f1962e16b36a",
        "cursor": {
          "ref": "e38b8139-ebab-44ee-a13c-87f875034847",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "75d3ca36-4d0f-4238-8019-a3d458b6decb"
        },
        "item": {
          "id": "27b49d44-5153-429c-b999-f1962e16b36a",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "65c96386-6736-4632-9fc7-55a1f82962a2",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 885,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27b49d44-5153-429c-b999-f1962e16b36a",
        "cursor": {
          "ref": "e38b8139-ebab-44ee-a13c-87f875034847",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "75d3ca36-4d0f-4238-8019-a3d458b6decb"
        },
        "item": {
          "id": "27b49d44-5153-429c-b999-f1962e16b36a",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "65c96386-6736-4632-9fc7-55a1f82962a2",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 885,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2daa13e5-5df7-43a4-ad2e-89b26dbab374",
        "cursor": {
          "ref": "a81b6908-a0fa-4ded-8a45-c02345273ae1",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "2e964493-5477-4a10-b311-a6a5b602ce48"
        },
        "item": {
          "id": "2daa13e5-5df7-43a4-ad2e-89b26dbab374",
          "name": "identifiers"
        },
        "response": {
          "id": "f83705bc-9e07-415c-b530-96858b757512",
          "status": "OK",
          "code": 200,
          "responseTime": 1294,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c811cc1b-1126-4284-93f9-4aee7bebdba4",
        "cursor": {
          "ref": "c0c8926f-bc26-45d1-9223-7f5d6f5a75b9",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "86799fee-b287-416e-9512-bdc1c9d1834a"
        },
        "item": {
          "id": "c811cc1b-1126-4284-93f9-4aee7bebdba4",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "78150e64-eee0-4fb7-b740-d2437948b6b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 864,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c811cc1b-1126-4284-93f9-4aee7bebdba4",
        "cursor": {
          "ref": "c0c8926f-bc26-45d1-9223-7f5d6f5a75b9",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "86799fee-b287-416e-9512-bdc1c9d1834a"
        },
        "item": {
          "id": "c811cc1b-1126-4284-93f9-4aee7bebdba4",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "78150e64-eee0-4fb7-b740-d2437948b6b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 864,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e55240ac-513a-4cba-91d6-291b05c2d926",
        "cursor": {
          "ref": "3c526956-ffc3-4c3d-a09a-413d7ec19552",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "2185f6f1-984a-4163-bf6a-b14c7eba2287"
        },
        "item": {
          "id": "e55240ac-513a-4cba-91d6-291b05c2d926",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "8ed19a8c-cfff-473b-aa3f-e3bed77fab1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 883,
          "responseSize": 500
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60068146-3c72-4db0-a1da-f9dc60aa87d6",
        "cursor": {
          "ref": "e2b2b180-0f8c-4646-a1b0-90715cdfc87b",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "19e640cf-e0f3-4d20-bf70-2aceb1c7a921"
        },
        "item": {
          "id": "60068146-3c72-4db0-a1da-f9dc60aa87d6",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "0dc88339-5eed-4352-b415-de269bcb4978",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 844,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a3cfde6-63ea-4f6d-876b-626ae14c10ab",
        "cursor": {
          "ref": "539d5248-5d92-4456-818c-8a0ba0a158d0",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "38ad2a87-8878-441e-bc76-9b4edb50da42"
        },
        "item": {
          "id": "7a3cfde6-63ea-4f6d-876b-626ae14c10ab",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "df218299-26e3-4a6d-bbf3-b6bf5cdb7f19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 840,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "187735de-c285-4625-bf17-3b7309496f49",
        "cursor": {
          "ref": "9ef9179a-85a1-46d0-b70e-2ee2b75939e2",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "9459225c-541d-4160-9aa1-b7eeecabb4f4"
        },
        "item": {
          "id": "187735de-c285-4625-bf17-3b7309496f49",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "c461e354-86b3-45fa-95cd-6dc1ef3bdc46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 829,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9bde17c-f760-4aa3-95c8-8e606071f57d",
        "cursor": {
          "ref": "5a5e9a0a-1461-443f-8406-a0e1ad9f9bb0",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "5b6eb4ed-a1f2-4b78-b7b8-7ae3df6d97e8"
        },
        "item": {
          "id": "f9bde17c-f760-4aa3-95c8-8e606071f57d",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "eae24ab7-257f-4e43-9f36-068a5d9b81b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 836,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36d2a260-a288-43fb-8b17-96040310f0da",
        "cursor": {
          "ref": "401e129e-5be8-4861-ba3c-7e9e941630ba",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "985c0a52-2121-49d7-aa6c-d33d74489f5c"
        },
        "item": {
          "id": "36d2a260-a288-43fb-8b17-96040310f0da",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "757bedff-b96c-48f4-9de9-38a2d1fe43da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 862,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddc25c80-e091-4083-b4dc-0b8591db3543",
        "cursor": {
          "ref": "993e857c-8583-482f-acf0-28a28e238314",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "7abeb0a9-5f5d-4218-aa99-313aae29c50e"
        },
        "item": {
          "id": "ddc25c80-e091-4083-b4dc-0b8591db3543",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "c263d9d6-a3e9-4c1d-8afe-e04e22fbe815",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 855,
          "responseSize": 592
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4c81a3e-53ba-403b-8101-028a55483d61",
        "cursor": {
          "ref": "93142f1c-b529-4b8d-8297-d2c2bee0b5ca",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "0bfead16-3090-4f1d-bd73-aebdfdfad51d"
        },
        "item": {
          "id": "c4c81a3e-53ba-403b-8101-028a55483d61",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "c698f5f8-7d5a-40ac-a372-5324686bd990",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 864,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42be0547-4ca0-4dc2-b2b5-e9162ca9eaac",
        "cursor": {
          "ref": "ee7b17bc-d96a-4135-818d-172823276e72",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "2c10c3ee-07c6-4a65-a81b-daba1d5385b8"
        },
        "item": {
          "id": "42be0547-4ca0-4dc2-b2b5-e9162ca9eaac",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "784a2d8b-7006-45ae-9337-a79b95eae529",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 860,
          "responseSize": 558
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff57515a-f254-40c6-85fa-99352c11a9e5",
        "cursor": {
          "ref": "0d0ac4f4-cb45-49ab-a1ee-143bd22e70f8",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "83a39b94-1be4-429d-a1fe-23b789b23ad2"
        },
        "item": {
          "id": "ff57515a-f254-40c6-85fa-99352c11a9e5",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "9c7912cc-d099-4907-871f-0e907f28c04c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 893,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df30b16f-9c92-4762-9788-dbd081f4bd0f",
        "cursor": {
          "ref": "a93953f4-2397-4109-a432-5f11148e0020",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "0d977509-2158-419e-a7af-e6b6a7a89664"
        },
        "item": {
          "id": "df30b16f-9c92-4762-9788-dbd081f4bd0f",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "c9af40d7-c27a-41cc-be73-4838c57c793d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 902,
          "responseSize": 601
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fe26f8c-74cb-443a-8844-e0a699202e8c",
        "cursor": {
          "ref": "6e92b769-b296-443e-9ad6-b3e8cda5be47",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "5e210d7f-d1e7-4063-b1ec-d6035cddb9b1"
        },
        "item": {
          "id": "6fe26f8c-74cb-443a-8844-e0a699202e8c",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "cdb70c5d-508c-4b12-8159-ddd55c73123d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 859,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e570a5e8-a291-41be-8d74-41c896c5e37e",
        "cursor": {
          "ref": "d4d8602f-f8e3-4240-8648-5a18ddd60f7e",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "d362ef43-4073-43f2-8f8f-17f557e567e0"
        },
        "item": {
          "id": "e570a5e8-a291-41be-8d74-41c896c5e37e",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "22cd27c0-73b8-4b72-aec5-3929d7ab968e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 843,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3c83690-e928-4f45-8284-b25fa2d24ef0",
        "cursor": {
          "ref": "b4417910-45fe-4fcc-92af-6c072e0a15be",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "cd89edef-5739-4332-9a8d-62af22544376"
        },
        "item": {
          "id": "a3c83690-e928-4f45-8284-b25fa2d24ef0",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "dc9a323c-32f9-4094-ab97-1fe89b656499",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 830,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b89441f-8e33-43c3-ab60-1b8b9646b950",
        "cursor": {
          "ref": "0ee02dd6-eb14-41f5-b174-4902c91c4120",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "c3b581ad-45d3-4462-abf2-46cae3dba938"
        },
        "item": {
          "id": "4b89441f-8e33-43c3-ab60-1b8b9646b950",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "56dc3fc4-ba1a-409a-83e8-41caba3620ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 857,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c572e04c-89ab-4e50-aa68-f3870205db3c",
        "cursor": {
          "ref": "0317b0f4-25a5-4f2b-bd75-6672e442a83d",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "e7d142e4-97bf-4993-9468-c804a0c71af4"
        },
        "item": {
          "id": "c572e04c-89ab-4e50-aa68-f3870205db3c",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "9407024b-3301-4690-a6a6-ab7fdc2808d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 842,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63d3e11f-d8ac-4594-b416-303044ee52b0",
        "cursor": {
          "ref": "2bcac136-4817-4bde-8df5-d810d38da6e9",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "46c51e1a-e0e0-4167-87f1-4d64479e90a8"
        },
        "item": {
          "id": "63d3e11f-d8ac-4594-b416-303044ee52b0",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "2c0a28ba-e546-4f12-becf-9d1d8b6e8413",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 886,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb18d32f-91b5-4ddc-8cf4-c5984227b00d",
        "cursor": {
          "ref": "939d742a-3a6e-4ca8-ab85-cc0ee93231e0",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "e6fa0e3c-aa4e-44b3-bdeb-0dd2d486e944"
        },
        "item": {
          "id": "bb18d32f-91b5-4ddc-8cf4-c5984227b00d",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "344fc2b3-e75d-4271-b859-7ecf307cf565",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 863,
          "responseSize": 544
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8471a3e4-8790-4837-bedc-c98585eeab80",
        "cursor": {
          "ref": "1fc09913-41d6-4a72-99d7-f60dd038de1d",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "a014f003-1dd6-4414-8286-7e3009d5ee3f"
        },
        "item": {
          "id": "8471a3e4-8790-4837-bedc-c98585eeab80",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "37e1989b-aa25-4919-a58a-83529b0e7958",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 851,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e6ef2cb-f8ef-4a1e-8279-ba6546c23e17",
        "cursor": {
          "ref": "8a57c3de-0052-4d9a-af6e-da45123647a4",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "5df4c164-00d1-43a3-930f-2678327fd06f"
        },
        "item": {
          "id": "6e6ef2cb-f8ef-4a1e-8279-ba6546c23e17",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "ea57f1b2-0ffe-486a-8b34-1fa23a604510",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 861,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bc4db91-fad7-4b7f-ad45-23fa4d48e18f",
        "cursor": {
          "ref": "bf94787d-67de-41af-b235-5787c4c2ef7b",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "86ad4d58-acc4-47ac-bea6-b0b1c4fe864d"
        },
        "item": {
          "id": "7bc4db91-fad7-4b7f-ad45-23fa4d48e18f",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "93820859-437a-4677-982d-f0df4d1f1d2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 856,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea3879fe-8579-4a0e-88be-9c60683938bd",
        "cursor": {
          "ref": "6bc7e1e5-2c8e-49aa-8084-9014819d300d",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "3319092f-0a5e-49ac-bbfd-365f3ac88a74"
        },
        "item": {
          "id": "ea3879fe-8579-4a0e-88be-9c60683938bd",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "1450bdf4-13bb-4e92-b538-031d9a21a10e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 841,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96d43721-690b-4582-906e-9a0ca95e1388",
        "cursor": {
          "ref": "1cf6f784-0dc1-4728-b226-9d565fa9e5f5",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "3b73df7c-4ddb-45f9-9dd6-275ff4a0fb65"
        },
        "item": {
          "id": "96d43721-690b-4582-906e-9a0ca95e1388",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "57ef6b9c-2c79-4812-916e-b44f483d47d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 829,
          "responseSize": 563
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f750dc29-d93e-431e-8ca5-ac4bff5b7227",
        "cursor": {
          "ref": "814a9c25-0f61-4637-8384-2e4f4381907d",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "d7c635b7-fd18-4a5c-a689-13bb228c2041"
        },
        "item": {
          "id": "f750dc29-d93e-431e-8ca5-ac4bff5b7227",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "c6e6aee1-c8ff-49fd-8f0a-0d070559612a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 867,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89e32f60-3275-462c-8611-a1bca2271c40",
        "cursor": {
          "ref": "ed9b8c0e-9b41-48ee-90b8-6837f8c79e52",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "6dc0b1de-458d-47ac-8aa8-ca876b3e3bf8"
        },
        "item": {
          "id": "89e32f60-3275-462c-8611-a1bca2271c40",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "3135bb91-7d29-4932-b62b-dae5a95ad718",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 854,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2adfce8a-0661-4c77-b780-29973eba99fb",
        "cursor": {
          "ref": "2545cd5d-c045-439d-883c-6bde9be06ceb",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "19b7d728-bcfe-4129-a11d-96fe419ecbdc"
        },
        "item": {
          "id": "2adfce8a-0661-4c77-b780-29973eba99fb",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "6abb9a7c-bdd1-4f02-9031-5da1fc9b4abd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 843,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1208566f-f168-4004-8eec-1306390f4b2c",
        "cursor": {
          "ref": "365d19d9-e2f3-436e-8214-e3e30cb52f13",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "c6246bc0-b432-4123-9b95-0adc4631636a"
        },
        "item": {
          "id": "1208566f-f168-4004-8eec-1306390f4b2c",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "8d94186a-d32c-49dc-9229-003376d14825",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 973,
          "responseSize": 578
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6306599-91d5-4599-94a0-b78d9940d8c4",
        "cursor": {
          "ref": "36bc208e-d8c8-483c-8bd4-f8b995c3ab30",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "f8aa33d3-42de-4f59-801d-367ecd7fdf34"
        },
        "item": {
          "id": "c6306599-91d5-4599-94a0-b78d9940d8c4",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "a2565767-c728-4ff7-87e5-6b1a6eb70270",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 871,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "590c1632-ae98-47de-85ff-a37ce1d25ce6",
        "cursor": {
          "ref": "912f9481-9f9c-411c-a202-523b29d6ba7c",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "b31a69fc-6d0b-4eb1-9054-5d80b7ca4c14"
        },
        "item": {
          "id": "590c1632-ae98-47de-85ff-a37ce1d25ce6",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "1419496f-e690-4626-a969-3239ce7c0422",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 869,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a3a52b8-a888-4278-908f-d69e83fe650b",
        "cursor": {
          "ref": "2f7e577a-dac6-40ac-a19b-e1ea4dcb9177",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "c55583c9-fed4-43ba-aabd-5ef1edcdf0ec"
        },
        "item": {
          "id": "7a3a52b8-a888-4278-908f-d69e83fe650b",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "7e37a07d-9f30-4f05-b0e3-cb6462165c2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 867,
          "responseSize": 1001
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1fa6632-c270-4092-af33-16393c8bedac",
        "cursor": {
          "ref": "cdf82589-f543-4e65-bba3-c3f25be74316",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "c56869c8-d64c-4efe-bb1e-8b6bee421ecd"
        },
        "item": {
          "id": "b1fa6632-c270-4092-af33-16393c8bedac",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "109389eb-6c00-4984-8920-a106eccb9022",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 856,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2cfbb8d-fabd-4f4a-b2e5-1979d73a3ee3",
        "cursor": {
          "ref": "27bb5aa4-7bb2-4b0c-a4df-1acb250b123c",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "d13bb510-ef1c-4e1f-87d1-45d4e04e2b52"
        },
        "item": {
          "id": "a2cfbb8d-fabd-4f4a-b2e5-1979d73a3ee3",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "13f2f31c-9ab4-4b00-89e7-f7f3ddc3dcbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 874,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "904f51f5-1dab-4114-9d1e-b22838095ecd",
        "cursor": {
          "ref": "342bab8e-5d67-409f-80af-962906488bd1",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "6602e009-f96d-4fb3-abf4-723beda40efc"
        },
        "item": {
          "id": "904f51f5-1dab-4114-9d1e-b22838095ecd",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "b7af44f3-95f6-42a3-865d-32049d4bd23e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 848,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78b62bb8-4756-459b-8417-52b8291d2135",
        "cursor": {
          "ref": "aef58960-3693-41c2-9333-e312888c2ada",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "0a65367e-b0bd-4be7-b198-fe1adac34dae"
        },
        "item": {
          "id": "78b62bb8-4756-459b-8417-52b8291d2135",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "d677b647-7e82-4728-a57a-97724c7ae1e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 833,
          "responseSize": 1332
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17b4dbbb-f209-4a9a-9789-f1dfff4206fa",
        "cursor": {
          "ref": "cf9c7539-3dc9-49cd-8514-0e1285068f55",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "04e2eca5-25c5-4b49-a81c-4e4f90140516"
        },
        "item": {
          "id": "17b4dbbb-f209-4a9a-9789-f1dfff4206fa",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "fe9a2cb4-4bec-4ad6-b825-aa1a60e4b121",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1027,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7e882e6-9307-49e0-8bfb-84ba088b74c1",
        "cursor": {
          "ref": "4c437036-9ff5-408f-900c-7b24c1f58a6e",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "588019ce-80cf-4756-a98e-6c88bf6a47b9"
        },
        "item": {
          "id": "b7e882e6-9307-49e0-8bfb-84ba088b74c1",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "3c192a93-e4cc-4611-8efe-03e8da3639c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 837,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77db4b2f-6f65-446a-9d63-0b13343ff47f",
        "cursor": {
          "ref": "12ed4395-d061-471e-a9e4-b5e6f4edfbb1",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "6d86ad1e-43bf-4a63-a3a9-7a8f918f1277"
        },
        "item": {
          "id": "77db4b2f-6f65-446a-9d63-0b13343ff47f",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "d0355e1c-4e36-44e9-b9ce-0e575fed9b8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 853,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2a999ad-80ea-442b-85e7-3adcc48612e9",
        "cursor": {
          "ref": "02e8ac63-1b40-4c13-8a6b-8116c2cb5e4c",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "87258f84-4293-48b9-af05-ef0b40b98133"
        },
        "item": {
          "id": "e2a999ad-80ea-442b-85e7-3adcc48612e9",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "793a0dfc-c4b0-487e-84fe-96347ce353d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 853,
          "responseSize": 1269
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0be4960e-824a-43b0-9790-d8dbbbbba84e",
        "cursor": {
          "ref": "ad8babf4-eac9-4d72-8f28-beba86994567",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "a57998f7-555f-4787-a345-3d325a9fda9e"
        },
        "item": {
          "id": "0be4960e-824a-43b0-9790-d8dbbbbba84e",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "bf9f4a46-bfd7-4b9e-9be9-33858da1c5d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 857,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a068af4-1a87-4a0c-beb4-86b819682f70",
        "cursor": {
          "ref": "2a58c286-afda-45f2-9260-a8078330281d",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "17963b5b-5615-42b9-8b97-7ae336b907f6"
        },
        "item": {
          "id": "5a068af4-1a87-4a0c-beb4-86b819682f70",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "9d8b4a74-aa2c-4016-a93c-1c26d3d5f0c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 848,
          "responseSize": 1268
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41942612-2fad-4fcf-9303-18acf172e042",
        "cursor": {
          "ref": "9d2fe206-cf86-446d-b8bc-4e5ec40ebd02",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "b0c4ed78-32e4-468c-aad9-5b8c199b2277"
        },
        "item": {
          "id": "41942612-2fad-4fcf-9303-18acf172e042",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "c3360d04-91a3-42e7-b659-debb00287bc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 862,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9b6f4dd-ce2f-4f96-b0a9-8eb488a5b94b",
        "cursor": {
          "ref": "c5831435-2ede-45dc-b914-3baaa8c3d50f",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "404ef64d-44cd-426c-9bb6-89165a806488"
        },
        "item": {
          "id": "d9b6f4dd-ce2f-4f96-b0a9-8eb488a5b94b",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "758ffe6a-f770-4e30-a060-55ed99554300",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1001,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13f9c3d2-fc7c-4556-8fe1-ecd59111decc",
        "cursor": {
          "ref": "a17e57e5-b5b5-416d-8d7c-3e5a31ec5cc1",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "b1ac9516-4f3d-4601-a3a2-7b2a4bbebf53"
        },
        "item": {
          "id": "13f9c3d2-fc7c-4556-8fe1-ecd59111decc",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "2e85b85f-7522-4416-8116-390a164b0c5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 860,
          "responseSize": 559
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e3eb48a-0cca-4cc4-8d1b-eec0077a9d7c",
        "cursor": {
          "ref": "9e2c173c-e864-4de3-9ce5-ffdc0490bc69",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "9ffcd6ca-dfc1-4e33-abdc-b8b2bb3a5ff9"
        },
        "item": {
          "id": "1e3eb48a-0cca-4cc4-8d1b-eec0077a9d7c",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "1a783ac9-9a98-4872-82c2-9e097a02083d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 871,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37b5abd5-2db5-4e84-84ca-0ac2e4d374e6",
        "cursor": {
          "ref": "3879d491-f780-49f0-980d-c05f867aaa4a",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "95d53e22-462f-4e2d-87b3-8e1663afe253"
        },
        "item": {
          "id": "37b5abd5-2db5-4e84-84ca-0ac2e4d374e6",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "a8f6303a-4477-4e34-8902-f49214c7e922",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 871,
          "responseSize": 564
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb816ab4-1450-46b0-87db-008423d2271c",
        "cursor": {
          "ref": "29adef60-37f3-4b70-8eeb-f34b3f0cfb68",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "63373f92-760f-4197-8445-da886e0e18e7"
        },
        "item": {
          "id": "fb816ab4-1450-46b0-87db-008423d2271c",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "53e719b4-4b56-4d78-ab91-583d97899169",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 872,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5f9e571-165e-4bd4-84a6-a3567417b7b2",
        "cursor": {
          "ref": "ce073530-d6aa-4600-9f9c-56d5c190d62a",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "da6604d5-b742-4901-83b2-35222317a852"
        },
        "item": {
          "id": "e5f9e571-165e-4bd4-84a6-a3567417b7b2",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "ad0727a4-8f04-45f7-9e03-1d908fcec80c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 852,
          "responseSize": 563
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0c6cb50-73ff-4660-a0b7-90f5a16718cf",
        "cursor": {
          "ref": "fc6bdbd7-9d57-432d-9bf4-33ab6d8e3ae2",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "875d10ff-7b8a-4e9a-bc70-122229531196"
        },
        "item": {
          "id": "a0c6cb50-73ff-4660-a0b7-90f5a16718cf",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "0fab5b22-4d33-4648-909e-f00b6dbd59a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 856,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc908304-9ef0-4b9e-a2c6-b76eb9918a04",
        "cursor": {
          "ref": "ae7d62ff-ae0b-4570-ae4d-f25727f8aebf",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "5d99ef91-d995-4086-a806-9519eafbcf90"
        },
        "item": {
          "id": "bc908304-9ef0-4b9e-a2c6-b76eb9918a04",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "1f038b59-9b83-46c7-a503-85da948b4665",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 848,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f331937-0e51-4e8c-8c88-a3c1997cb40a",
        "cursor": {
          "ref": "2ec2a53f-3e86-4ccb-ae17-5dd274b2a8f8",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "fc998590-b208-47b1-8c62-7d7ba4c1968e"
        },
        "item": {
          "id": "6f331937-0e51-4e8c-8c88-a3c1997cb40a",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "fe8c5844-20b9-4819-b63c-1cb8ccb1f490",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 852,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65b6106b-d653-48f7-bd62-758585954111",
        "cursor": {
          "ref": "b14ea9b0-80a5-4b50-9efa-70ec03231760",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "739ec5cc-170d-4b4c-bca3-8b20e3c00b22"
        },
        "item": {
          "id": "65b6106b-d653-48f7-bd62-758585954111",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "fe2794c9-0b2d-4b23-95e5-da6dc902d412",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 874,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ce09caf-a202-4fe8-a3e9-e4acd03e617d",
        "cursor": {
          "ref": "0e617c96-a3c9-4794-958a-e1e5e5bf9dba",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "3222b8a7-25df-4ca6-a7ab-f9cfca1b4c6e"
        },
        "item": {
          "id": "1ce09caf-a202-4fe8-a3e9-e4acd03e617d",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "e476e423-8dcc-4438-b1df-4f0743e8245e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 890,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dc500f3-e75e-472b-acf8-0f8727792d71",
        "cursor": {
          "ref": "e9a75e7e-c75f-4fd0-ab6b-9dd8cb2df219",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "89b3683f-9d56-44f5-92b1-fb1f1ca86b7d"
        },
        "item": {
          "id": "8dc500f3-e75e-472b-acf8-0f8727792d71",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "abd8dde8-3793-4172-a8d2-2890045a84ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 889,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e88df094-104e-4daf-8b27-120a3582c31d",
        "cursor": {
          "ref": "0625be78-cef6-4fd3-aec9-89b5c9dd8ebc",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "02b218d3-ad28-4222-83dd-5cfacf373051"
        },
        "item": {
          "id": "e88df094-104e-4daf-8b27-120a3582c31d",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "52a55779-ebf5-4764-b8a9-1782425a2037",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 861,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2b6013b-a1c1-412a-9188-a1c2728f9f06",
        "cursor": {
          "ref": "4089e9a2-c149-407b-bf09-fefc575c7b8e",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "903ad9ab-4914-4a94-8d49-3eda004d1244"
        },
        "item": {
          "id": "c2b6013b-a1c1-412a-9188-a1c2728f9f06",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "425538f1-8b25-4a47-9105-c363d0060cce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 924,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18040bb9-df2d-4c85-a625-d18567cad332",
        "cursor": {
          "ref": "91edb4c2-f073-4492-9788-586410727ded",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "ab10c1de-2f06-43ba-975d-29ceace5efb3"
        },
        "item": {
          "id": "18040bb9-df2d-4c85-a625-d18567cad332",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "2ec4badb-a259-415a-9d50-ff580b6ea47d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 856,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d3566b7-f69d-444d-ad66-4d4fd311f4e8",
        "cursor": {
          "ref": "9aa75347-51bf-4b00-a6d1-67f2d04901ce",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "54a1339e-21f9-4686-8374-d3120e32d4f1"
        },
        "item": {
          "id": "6d3566b7-f69d-444d-ad66-4d4fd311f4e8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "f2da8f53-5256-4ecf-8d3c-a773d64e3d62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 849,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93b8b5e2-9674-4f6a-aa3d-a9d754e27a14",
        "cursor": {
          "ref": "ee0b8abd-bcd4-4f74-80e4-43a470b8cea2",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "aaa1a61d-603d-4a18-a9bc-511b9c275704"
        },
        "item": {
          "id": "93b8b5e2-9674-4f6a-aa3d-a9d754e27a14",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "5e628159-dcbf-4179-95f5-cdba260c8992",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 842,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00880bf5-678a-4b9e-b51c-654dd7083ccd",
        "cursor": {
          "ref": "89755540-62f3-49ec-ac04-2de0bea169dd",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "10b6c3ca-f61e-4549-bf38-e713fb221dc2"
        },
        "item": {
          "id": "00880bf5-678a-4b9e-b51c-654dd7083ccd",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "4eae528f-8b3c-4aab-bd74-5d484c5c1d58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 874,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c18cba34-c83b-4aa4-9b9a-ce1d8a5756e3",
        "cursor": {
          "ref": "6f62df79-6954-4fb9-9d9c-b6acdcb21090",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "a485db1d-5aeb-494e-902c-796daa0e2e5f"
        },
        "item": {
          "id": "c18cba34-c83b-4aa4-9b9a-ce1d8a5756e3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "26384847-1481-41af-ba5a-948b58fcaa38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 960,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ada37385-1c21-47ea-af4a-93984ab52071",
        "cursor": {
          "ref": "2cbfc0ca-83d2-4fec-9a07-01ed4862269a",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "b8a50bd5-8903-436e-badb-5814bded8f23"
        },
        "item": {
          "id": "ada37385-1c21-47ea-af4a-93984ab52071",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "5ebeb9e9-e47d-4874-a9e9-24ce4a1ea132",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 868,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc417e42-e031-48a2-b429-32239319cddd",
        "cursor": {
          "ref": "7150c2a2-c694-4b43-99e3-1d12c1a1fd9f",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "c399edcd-9c1d-4f69-9f39-818fd63005e2"
        },
        "item": {
          "id": "cc417e42-e031-48a2-b429-32239319cddd",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "c5778f3c-2f9e-40d6-bbfa-714856517e5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 868,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49c00a47-3173-4a3c-b2a4-933b5758b38d",
        "cursor": {
          "ref": "fdce8840-5954-47c7-9712-8e2852b4c343",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "7dc8d241-d523-42e7-a6a4-7d04ebc258fa"
        },
        "item": {
          "id": "49c00a47-3173-4a3c-b2a4-933b5758b38d",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "166bd83f-e016-4034-a41a-0ed4cc021735",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 878,
          "responseSize": 515
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0e15a55-ba68-43fc-8529-708bbbb829c7",
        "cursor": {
          "ref": "0b577362-d62a-4fa2-a0eb-a15fb3a796ac",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "e327a70b-27d0-456b-b274-93d670027efe"
        },
        "item": {
          "id": "c0e15a55-ba68-43fc-8529-708bbbb829c7",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "a714075b-a01c-4850-8954-5cb4741a768a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 859,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08d2afe0-8e2e-4ea7-b3cf-3adf2c4848e5",
        "cursor": {
          "ref": "1619906d-94fc-4322-8f98-7e5f8f461db8",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "d10f7db9-2445-4bc3-8bc6-b29781a41945"
        },
        "item": {
          "id": "08d2afe0-8e2e-4ea7-b3cf-3adf2c4848e5",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "f1536975-ff87-4fee-a75d-1f52c3fc0e7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 867,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63ff9952-d1d3-4827-ad9d-982da8c7a329",
        "cursor": {
          "ref": "64338f68-6120-474e-b04c-8b67c4012935",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "45463c3f-d4f1-49b8-9605-a739ba9cc62b"
        },
        "item": {
          "id": "63ff9952-d1d3-4827-ad9d-982da8c7a329",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "83cd6641-19fa-4d22-9833-fe41dd5ce04b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 904,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "394548a3-bcbf-4115-8532-d987e90378d2",
        "cursor": {
          "ref": "6c303e65-c32c-4df9-a462-ffc2414ff773",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "15f98d2c-26be-4079-9fbe-bd48fd5fbd35"
        },
        "item": {
          "id": "394548a3-bcbf-4115-8532-d987e90378d2",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "2a62ec6a-c7a8-48da-a8c0-a1d8d295d4f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 851,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20947ed5-ae14-41f3-9c0a-a29e0adae990",
        "cursor": {
          "ref": "8b330ca3-8284-4a32-8ec1-350744297404",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "89e3508b-ef7a-4f41-833e-0b4f6fe889e9"
        },
        "item": {
          "id": "20947ed5-ae14-41f3-9c0a-a29e0adae990",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "ab4d7b4f-c4b5-4b34-bfb7-ef0eda689dca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 852,
          "responseSize": 791
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e3a2d3d-4e7c-4d54-9375-44ed3a7fedaa",
        "cursor": {
          "ref": "4a1b3ce8-22a9-4679-96c3-c63657b7f713",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "b0e8c16d-42c6-4e5d-a2cd-4a43522febf2"
        },
        "item": {
          "id": "8e3a2d3d-4e7c-4d54-9375-44ed3a7fedaa",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "b3ed06aa-fcec-48b3-94b0-d608f493f451",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 865,
          "responseSize": 772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03970e9a-ffd5-4c38-8995-4af4b8c5af50",
        "cursor": {
          "ref": "ed3b182b-de2e-4666-afce-4774478712eb",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "2681c7a3-6ae3-4510-926c-4954b12fa2f0"
        },
        "item": {
          "id": "03970e9a-ffd5-4c38-8995-4af4b8c5af50",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "5b2637b7-4f0e-4463-88ed-f52a2d4deeb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 843,
          "responseSize": 769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae2eead8-6cfc-45c6-882a-47253489fbbe",
        "cursor": {
          "ref": "37b56328-9dfd-4e30-bd95-2a41d99d74c2",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "2af69b8d-083b-45dc-bb51-f8344d20acae"
        },
        "item": {
          "id": "ae2eead8-6cfc-45c6-882a-47253489fbbe",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "f45ab17f-d4dc-4dc4-b340-86ee4d937d53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 857,
          "responseSize": 771
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb414450-8a6d-4f61-ac31-b1e529694b74",
        "cursor": {
          "ref": "0a6ca3a8-c3be-4d8e-af68-845bfbdae80b",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "8b7320fd-5bd5-4b9d-b4fd-0b0db72f09b2"
        },
        "item": {
          "id": "bb414450-8a6d-4f61-ac31-b1e529694b74",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "1faeeedd-62c2-402f-848e-b06c0d5651ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 862,
          "responseSize": 769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14aa3e32-7034-4930-927b-5c2e46d738a9",
        "cursor": {
          "ref": "127c3eb9-f302-45cb-90dd-0f060bacd73c",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "9d4fb017-4da0-42ea-b959-bd744d6a68bd"
        },
        "item": {
          "id": "14aa3e32-7034-4930-927b-5c2e46d738a9",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "0293c246-8401-4e8d-862a-7bd7a8bc8a3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 907,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9f5cc83-80ae-4cb9-b1a7-823f29a01d47",
        "cursor": {
          "ref": "f195426f-be67-4dd7-a5ca-cc45e0125366",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "67ce7044-b994-4c45-9875-f28372507098"
        },
        "item": {
          "id": "b9f5cc83-80ae-4cb9-b1a7-823f29a01d47",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "579db1e2-0d3d-477f-884e-14096968617d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 923,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e5a56ad-b6e9-4b45-bbaa-d6c94cb933c7",
        "cursor": {
          "ref": "fd28bde7-327a-440b-8d59-5f323ee35717",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "417c86c6-74af-414d-94e4-37aaeefff35e"
        },
        "item": {
          "id": "5e5a56ad-b6e9-4b45-bbaa-d6c94cb933c7",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "2d6646d7-318b-4b69-901a-46b2d2b1b101",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 861,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7632bb9c-dced-4358-84ff-56db25b57f20",
        "cursor": {
          "ref": "09aa0107-1353-4901-9ba3-a87d43321de0",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "bbbe15d6-f141-46bc-bc44-623471ebd4ba"
        },
        "item": {
          "id": "7632bb9c-dced-4358-84ff-56db25b57f20",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "f6a046e9-f4ff-495c-86f2-942b9995ae6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 997,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60969951-d160-433a-8623-6fb9504a38a0",
        "cursor": {
          "ref": "68c95761-a551-406e-9b25-8dca72c5a83b",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "eb051ade-612a-4854-9006-12c2cde01b6b"
        },
        "item": {
          "id": "60969951-d160-433a-8623-6fb9504a38a0",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "5a4bbf5e-0c2d-4e4d-bfdc-2c7ce04718d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 863,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca86320e-6776-40be-954f-6c3d762b98cd",
        "cursor": {
          "ref": "d79f3119-42d4-4883-b7be-7346829fa99a",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "f4550bd6-48ea-4fe9-96fa-f79586eeb652"
        },
        "item": {
          "id": "ca86320e-6776-40be-954f-6c3d762b98cd",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "4a2b6a4f-0826-46ac-b71a-34a89b997d20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 883,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2aa8589-d608-40a4-8d96-abedeb86f61a",
        "cursor": {
          "ref": "139a9c64-8fc9-43c3-8177-d6cd418768f9",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "e179887d-eb6d-4d62-a3e7-5b2edf92987a"
        },
        "item": {
          "id": "e2aa8589-d608-40a4-8d96-abedeb86f61a",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "df751245-e935-4607-92e7-4cc5d08c5ce6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 858,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b216a70-d31e-4f85-b96c-8051c4f2979f",
        "cursor": {
          "ref": "ef6bf221-9caa-495e-b799-5b9f7b0abbd3",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "c3e132bc-df51-46e8-ac5a-251c1d69ba0d"
        },
        "item": {
          "id": "7b216a70-d31e-4f85-b96c-8051c4f2979f",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "54121157-77e3-4d2c-902c-fe44c6251131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 846,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d51ed1b-b111-45b6-8161-72abb8b54e86",
        "cursor": {
          "ref": "45cef543-3366-486d-a136-d0bb95bfc031",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "fad61700-3174-497d-966e-48afa5fe3de8"
        },
        "item": {
          "id": "1d51ed1b-b111-45b6-8161-72abb8b54e86",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "26218281-09af-4c51-8a78-9260410fae39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 858,
          "responseSize": 611
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d226fbd-fc83-47ea-82cf-1457f36f0dc3",
        "cursor": {
          "ref": "b37b4151-1fd2-43d3-9a37-3cbdade9255f",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "d83e1889-918e-4409-95b6-3069b46356da"
        },
        "item": {
          "id": "3d226fbd-fc83-47ea-82cf-1457f36f0dc3",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "81383693-d0e7-4d5d-adf2-f1fa23c22fdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 855,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ca58f43-589b-4e3d-be6c-558b81d89863",
        "cursor": {
          "ref": "cb94013b-4a05-4618-8c03-03b2f48fa338",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "8ae05efc-e652-4a59-ac10-48dcc0e157c3"
        },
        "item": {
          "id": "2ca58f43-589b-4e3d-be6c-558b81d89863",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "0b305864-93ab-4dfb-b279-8f2b90bf912e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 864,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "990e1810-92c0-4b3c-94b3-66e9c4e1e0ce",
        "cursor": {
          "ref": "8e2a10ed-f9b5-4d80-b611-16c621052b62",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "14428fea-067d-4d0e-8b4d-061a1e5f55a9"
        },
        "item": {
          "id": "990e1810-92c0-4b3c-94b3-66e9c4e1e0ce",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "dd98ef10-11af-45ed-b2f2-e3f0c4558efb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 872,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c7011f4-3aca-4358-ac2f-f6644cdb29c2",
        "cursor": {
          "ref": "d9952457-aa07-4a9e-8d66-0e24dabbc130",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "0a9083b3-abe1-465d-acbe-8b3333c9866e"
        },
        "item": {
          "id": "2c7011f4-3aca-4358-ac2f-f6644cdb29c2",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "fc6ee158-c835-49f0-9083-38666829937c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 883,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32f13052-6abb-4256-8615-b0acc8a6aac0",
        "cursor": {
          "ref": "fcdb8824-9b30-470b-a571-f89e19529932",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "e30ed5fc-dba6-4817-8f24-bfad0fc6b114"
        },
        "item": {
          "id": "32f13052-6abb-4256-8615-b0acc8a6aac0",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "cfc4709f-0203-46f2-8b0f-8ba139a356b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 883,
          "responseSize": 908
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "082eeb06-793b-43cf-89d0-b3fd734ebd19",
        "cursor": {
          "ref": "72ec2832-18a0-44fc-b106-9c8ec2b40d6f",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "50eb2557-7e73-43e3-8909-f591ce638ac3"
        },
        "item": {
          "id": "082eeb06-793b-43cf-89d0-b3fd734ebd19",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "2cd8dabb-4287-4bd3-b025-512e0b0f0565",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 860,
          "responseSize": 885
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50a36dcc-d058-49ce-be54-26ce44a0313b",
        "cursor": {
          "ref": "b18988c5-ea64-47c7-ae33-57cdc0a7aab6",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "8655a4d3-46ff-4ecc-bbae-453078663aad"
        },
        "item": {
          "id": "50a36dcc-d058-49ce-be54-26ce44a0313b",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "60186eb9-b22d-4ae6-8a32-f53954262113",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 896,
          "responseSize": 882
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f38317c1-d8d6-42be-a212-415d327c0a0f",
        "cursor": {
          "ref": "3746acea-0e83-4ccf-be5c-908b2eac5699",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "af8d1ca7-1b29-40e8-8537-d40454c4ac39"
        },
        "item": {
          "id": "f38317c1-d8d6-42be-a212-415d327c0a0f",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "d9f52562-f538-4704-8d47-84ee5cfbb1b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 875,
          "responseSize": 884
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e86c7ea-a967-4ac0-88c7-3e489b8de438",
        "cursor": {
          "ref": "85f9a666-36d8-4de6-b9fb-21be0fca641e",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "d17e91cc-9ead-4ac7-b3e9-503b2696b20f"
        },
        "item": {
          "id": "2e86c7ea-a967-4ac0-88c7-3e489b8de438",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "c28dac7f-2053-43cf-af88-5d07f41dd9eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 863,
          "responseSize": 882
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "515709bd-e830-4f5a-a006-d86923a74fc5",
        "cursor": {
          "ref": "7b3fe7c2-ac31-48ad-81a8-07f29d298ee4",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "d149e607-0077-446e-b7be-9dce343a5b01"
        },
        "item": {
          "id": "515709bd-e830-4f5a-a006-d86923a74fc5",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "8ac16c1f-c4e5-4c87-bb62-a3b5a06a0ae2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 868,
          "responseSize": 708
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b19d870-f116-464d-93dc-4832107993e3",
        "cursor": {
          "ref": "7dbf97e5-d861-41d3-861c-b483a16ce17e",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "8cf4be21-f872-4983-b902-9f9164f86764"
        },
        "item": {
          "id": "7b19d870-f116-464d-93dc-4832107993e3",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "3fc61bd2-ccb6-40bf-b63c-4abd06968fc6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 44,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c40cbf4e-809f-47dd-8c6e-978624d2fc1e",
        "cursor": {
          "ref": "fb91f888-5fdf-4fbf-9bdd-5630722247f3",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "8ce01172-185b-44f8-86f1-9731ea64f1c6"
        },
        "item": {
          "id": "c40cbf4e-809f-47dd-8c6e-978624d2fc1e",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "ad11e58c-8bf4-4219-8149-d4e76b110d34",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 884,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca41fa23-cd88-4e5c-bcde-6e1451d8b18d",
        "cursor": {
          "ref": "fe56fed4-8d75-42d0-b60a-9321da11317d",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "cf395af8-0884-468a-a210-89d8de5e20ba"
        },
        "item": {
          "id": "ca41fa23-cd88-4e5c-bcde-6e1451d8b18d",
          "name": "credentials_issue"
        },
        "response": {
          "id": "3ae54979-34cf-4267-b693-7d9fa05e67af",
          "status": "Created",
          "code": 201,
          "responseTime": 7416,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "40546b89-b805-4987-a509-6f499b76fc0a",
        "cursor": {
          "ref": "38012dcf-2557-4583-9c1d-4c42e4dfd364",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "aa8eae1c-21fc-41ad-99c3-07a630f0adae"
        },
        "item": {
          "id": "40546b89-b805-4987-a509-6f499b76fc0a",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "a62e8dff-fbae-4757-9be7-8299a36094bf",
          "status": "Created",
          "code": 201,
          "responseTime": 6478,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "0105edfb-bc0d-44c5-a67c-db0bf5ad4519",
        "cursor": {
          "ref": "438b410c-8693-4f3c-9e35-f4d18176c31c",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "ea7682fe-6574-463d-a0df-4e9228e7466e"
        },
        "item": {
          "id": "0105edfb-bc0d-44c5-a67c-db0bf5ad4519",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "c7ef8352-d8d9-4f8a-a13c-aeb0875b8724",
          "status": "Created",
          "code": 201,
          "responseTime": 6900,
          "responseSize": 703
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "590d553a-75d5-4c24-8de1-0e0d983a32ea",
        "cursor": {
          "ref": "ffdc2dd1-0f46-4bba-b0e5-75e20f898d6f",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "1f8355fe-9cac-40cd-bc68-22b7d76552e7"
        },
        "item": {
          "id": "590d553a-75d5-4c24-8de1-0e0d983a32ea",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "30650d86-c302-43cf-a746-dce67019222b",
          "status": "Created",
          "code": 201,
          "responseTime": 6036,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3bd6a0a-0a85-4384-8ee5-4b21bd8c942a",
        "cursor": {
          "ref": "cc6f7bad-f1d1-4206-8de6-ab909cd68cb1",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "11812a97-56d4-42b5-8a17-cfd3158f5979"
        },
        "item": {
          "id": "f3bd6a0a-0a85-4384-8ee5-4b21bd8c942a",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "18260941-8400-4ea8-afb1-98896d9a4f18",
          "status": "Created",
          "code": 201,
          "responseTime": 6637,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cd91f93-90a5-4020-96c9-922a97955db8",
        "cursor": {
          "ref": "86b5f688-b4e2-4d8d-a08b-8cd9e1c68fc8",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "3a111f55-36d1-4be5-b4ff-43357f475fb5"
        },
        "item": {
          "id": "7cd91f93-90a5-4020-96c9-922a97955db8",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "1082bc38-e2c9-4175-b5cd-f37076352466",
          "status": "Created",
          "code": 201,
          "responseTime": 7855,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d29d610-e0f7-4fcb-a494-042b0a489182",
        "cursor": {
          "ref": "0c69d776-35d1-41ca-be3d-a3b8cc9eeac6",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "26202bc8-61a9-4441-98f5-2e7523d27415"
        },
        "item": {
          "id": "6d29d610-e0f7-4fcb-a494-042b0a489182",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "d2b3ad1d-8406-43ce-adc6-02470722bc2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 855,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d29d610-e0f7-4fcb-a494-042b0a489182",
        "cursor": {
          "ref": "0c69d776-35d1-41ca-be3d-a3b8cc9eeac6",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "26202bc8-61a9-4441-98f5-2e7523d27415"
        },
        "item": {
          "id": "6d29d610-e0f7-4fcb-a494-042b0a489182",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "d2b3ad1d-8406-43ce-adc6-02470722bc2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 855,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "821826b8-fdc2-4dfd-a43a-a6beb2037802",
        "cursor": {
          "ref": "8386498e-b04a-43e1-a8e9-282617909fd8",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "21aa1200-a8b7-4adb-b347-00335c1d1263"
        },
        "item": {
          "id": "821826b8-fdc2-4dfd-a43a-a6beb2037802",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "c1a726b5-971e-4fa5-8803-cb8e7e0e6aeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 906,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b95c4dc7-c205-4a67-bdb4-95da39520bcd",
        "cursor": {
          "ref": "b131d7b5-776c-4693-a3b6-9b60727e044d",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "a7f0a0c7-a9bc-447d-b862-8a1c4fdab2db"
        },
        "item": {
          "id": "b95c4dc7-c205-4a67-bdb4-95da39520bcd",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "3972137f-ca79-4acd-9048-da3ff0bcef01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 875,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7391b22b-c703-4a98-b8fa-c572c464f92a",
        "cursor": {
          "ref": "641e9314-bb1d-4138-a128-00b511a5c202",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "7ad2f4b0-b7ea-4ed6-9e16-b516cb7df9e0"
        },
        "item": {
          "id": "7391b22b-c703-4a98-b8fa-c572c464f92a",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "24315345-d122-4c57-9127-0f6f6ee76f7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 850,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e33a8a92-270f-473f-80d0-a704741ab1bd",
        "cursor": {
          "ref": "a920ca9a-9d09-4f2a-89a0-87521d64505d",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "f8e94391-b44e-4d7a-8fb7-11533dda3822"
        },
        "item": {
          "id": "e33a8a92-270f-473f-80d0-a704741ab1bd",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "1efac729-34c7-422e-adb6-e13d8c68b716",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 853,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7b42b07-368f-47cb-ac74-f6b5ef34c4ce",
        "cursor": {
          "ref": "84fa2165-7b9a-42c8-9e7a-3bee71500ea0",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "88a0afe7-0331-4ed3-af13-4cbb9f4e8408"
        },
        "item": {
          "id": "e7b42b07-368f-47cb-ac74-f6b5ef34c4ce",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "43d1b115-0451-45ae-b0d0-efa59e6dfcfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 875,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9470acce-83fc-4d4e-b32b-6caac791c89b",
        "cursor": {
          "ref": "e20c066f-9768-4a6a-9c7b-79536735e31b",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "a6058dcf-e870-404b-9bf3-c47740ad9338"
        },
        "item": {
          "id": "9470acce-83fc-4d4e-b32b-6caac791c89b",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "bbfe0bf9-79f0-4f7e-9c18-25b1860606fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 845,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35719187-f086-462d-bb1c-797739f97453",
        "cursor": {
          "ref": "afcfb526-78fe-4b10-b4be-8fa904c38c64",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "0a6fd371-3b52-46f4-927a-469c3419b54b"
        },
        "item": {
          "id": "35719187-f086-462d-bb1c-797739f97453",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "e52754ba-298a-4e80-af29-0b43ffc07af1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 875,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73ea2ca1-203d-4a6a-ba35-08b184102c5e",
        "cursor": {
          "ref": "1aab4d5d-5033-4545-bddd-22d7323cc6cd",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "28cb07d0-7ed2-489b-a4c9-ef9be01f4b53"
        },
        "item": {
          "id": "73ea2ca1-203d-4a6a-ba35-08b184102c5e",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "5c599b03-6b44-41d5-abf1-996cbe576f2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 878,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21ea410f-451e-4d5f-9f01-a34f7a8afa7d",
        "cursor": {
          "ref": "61b4e92f-6b81-40aa-b6e8-f53a7b1dbb7c",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "64896cab-ad0f-4022-8712-7152483c3a9a"
        },
        "item": {
          "id": "21ea410f-451e-4d5f-9f01-a34f7a8afa7d",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "b928da98-1abf-492b-98b7-75fef06e298d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 875,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c81d1f7-0b54-4a4e-b6a9-f17d87219ba8",
        "cursor": {
          "ref": "f043f2fd-0a04-4311-8be8-96e7a5a92b53",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "3800f879-a4a3-4e4d-8094-e59c8c7ca8f1"
        },
        "item": {
          "id": "2c81d1f7-0b54-4a4e-b6a9-f17d87219ba8",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "c5c3a0af-7fc3-4304-b77d-bd17a56c7b25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 862,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ed22144-e741-4911-ba15-5d560a8cba24",
        "cursor": {
          "ref": "b226af38-f56f-402c-9fcb-1fe201cfc420",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "c3ec6055-1841-4c6a-a5f2-3d10591fa7e1"
        },
        "item": {
          "id": "9ed22144-e741-4911-ba15-5d560a8cba24",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "b5222a62-201a-48d6-a71d-150be7bf18f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 856,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3047dbc-74fb-498e-954f-2a9a02986b08",
        "cursor": {
          "ref": "0f4422e8-2f6c-4260-a285-d436ef01183f",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "e433c1bc-d6eb-4036-81bd-ff61d6ac5375"
        },
        "item": {
          "id": "b3047dbc-74fb-498e-954f-2a9a02986b08",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "acfda64f-f900-498d-ab7b-ca0090fa6677",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 841,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d18c93f2-6a9c-4c3a-9f89-d4b282236b7f",
        "cursor": {
          "ref": "fe820c5d-34d6-4458-9bae-03074df65e2c",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "1821da66-5b07-4a94-98f7-50b7aa0b9bcc"
        },
        "item": {
          "id": "d18c93f2-6a9c-4c3a-9f89-d4b282236b7f",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "520bba79-bd18-4df4-a50c-d33b7fd44ccb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 846,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c96e9c77-66c5-4f4b-abf5-f09b73c080d2",
        "cursor": {
          "ref": "84fd59c7-8141-4543-a487-5d0f9d54b3fb",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "ea50c3be-3fb1-49d3-9730-d340286f76bf"
        },
        "item": {
          "id": "c96e9c77-66c5-4f4b-abf5-f09b73c080d2",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "c66b1140-7254-493b-af46-6c37257f3a82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 877,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da01a739-0e43-4d12-916d-55f61ece7750",
        "cursor": {
          "ref": "f0e7ddf2-72b7-4e69-8a11-8bc54dca15af",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "703a859c-7daf-40ce-943d-2e8cd93d8ac5"
        },
        "item": {
          "id": "da01a739-0e43-4d12-916d-55f61ece7750",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "69531a26-d2e7-4697-a5a5-c01eaadc8974",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 847,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e7ab33f-8e11-41b0-a6fb-9223b3ce39e7",
        "cursor": {
          "ref": "1a91dc44-1ae7-41db-9c84-7b53cf79c986",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "c0be9fe7-6a37-48de-93a5-f21870881bf4"
        },
        "item": {
          "id": "6e7ab33f-8e11-41b0-a6fb-9223b3ce39e7",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "05fc392d-c255-4ee0-9e4b-0a6e9fd5132b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 863,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0034137-4b35-44d8-b776-b7d8daad577e",
        "cursor": {
          "ref": "8ca49e8f-6764-48f4-906c-644e5a737c67",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "6d655191-0231-4305-a4a2-7e30c284a3ff"
        },
        "item": {
          "id": "c0034137-4b35-44d8-b776-b7d8daad577e",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "320aaaae-2ca1-44e3-8f9c-a878a4f82055",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 866,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8b5068c-4664-4918-a1a5-ee0cca51fc79",
        "cursor": {
          "ref": "d33385ae-73fe-4327-8b46-c25f1a03d5f6",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "ed1d83fd-4e25-4b8d-b256-cac9d80f1b6c"
        },
        "item": {
          "id": "c8b5068c-4664-4918-a1a5-ee0cca51fc79",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "7a0017cc-3ed7-40cf-88db-8f30f1e564bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 878,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbfc840b-03c9-49eb-b540-ced8794c0103",
        "cursor": {
          "ref": "ec43fb1d-acbb-418b-aee1-3ed46695fa65",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "25dc978a-f854-487e-ac91-56263c936b3d"
        },
        "item": {
          "id": "dbfc840b-03c9-49eb-b540-ced8794c0103",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "956ecd35-b7ba-46b3-8056-ee2a470270db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 860,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7412572d-9b8c-4ad5-bea8-64f26cdab89d",
        "cursor": {
          "ref": "8f5d6c21-a153-4dec-8485-5cbabbac9360",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "a895704f-ca7a-4a3b-9c1e-3f2b8d6f0dc6"
        },
        "item": {
          "id": "7412572d-9b8c-4ad5-bea8-64f26cdab89d",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "4f533d52-0eac-40f3-9f1f-46e31aa046cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 883,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3291c134-9698-4651-b9da-0f5a5bfe3d7f",
        "cursor": {
          "ref": "7105a231-7ec3-4344-a7ec-6dd78deadb50",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "292e62d9-bfbd-486a-aa75-9e90f9d3306c"
        },
        "item": {
          "id": "3291c134-9698-4651-b9da-0f5a5bfe3d7f",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "98253533-7801-44d7-809f-8bc125ea01aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 860,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2561403c-9624-4c76-86a4-9ea52ffbff8f",
        "cursor": {
          "ref": "4469f9d3-e36a-4d14-bf27-4c9c6ca962a6",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "b8522348-32ef-4386-9117-ded28feb2cc6"
        },
        "item": {
          "id": "2561403c-9624-4c76-86a4-9ea52ffbff8f",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "4f511a9e-dcf7-4f35-9ce2-2ecdd6ddacc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 856,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98ef6ab7-97a0-4a37-923c-f78602a2eb61",
        "cursor": {
          "ref": "ab049c2c-b52f-4eb4-8e74-9d31bbc51fcb",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "15d2c347-8037-4760-84ec-72d0c11d6321"
        },
        "item": {
          "id": "98ef6ab7-97a0-4a37-923c-f78602a2eb61",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "d071828c-2047-47c7-a661-7c553ed73ff7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 866,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1d86c7e-fd65-471f-86c2-25447490da46",
        "cursor": {
          "ref": "fd29dc03-0e2c-493a-bc54-d46ede5816d9",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "1b517b41-da94-494d-9870-87fd34e93afc"
        },
        "item": {
          "id": "e1d86c7e-fd65-471f-86c2-25447490da46",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "adc6dbd2-746c-4327-9dc3-fafceff81bd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 862,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ec50ca7-65af-42e0-a101-268bb1f266e3",
        "cursor": {
          "ref": "3a9aca06-983e-4e3d-b6f9-6affc6f9a1f5",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "2a116cb6-2059-4883-8d8c-ba9e2c9c3f11"
        },
        "item": {
          "id": "6ec50ca7-65af-42e0-a101-268bb1f266e3",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "1577c02f-c430-47db-9982-875881c112e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 877,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fab369f-4a63-4d49-9e80-b4d6cbeb1a76",
        "cursor": {
          "ref": "537251b5-c626-47bd-9f1c-f798ef65648d",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "b78a7a5c-c495-4098-9fe1-6bbd759b78ef"
        },
        "item": {
          "id": "8fab369f-4a63-4d49-9e80-b4d6cbeb1a76",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "4c5d433d-98d2-4b12-bdaa-a4ea5cb9f345",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 873,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0df33e46-4d21-4dd6-9701-d173b2d5fec3",
        "cursor": {
          "ref": "912546d8-834c-41dd-8c76-9cb3646b3412",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "f5f05918-ef44-4199-a794-a0d15fd69770"
        },
        "item": {
          "id": "0df33e46-4d21-4dd6-9701-d173b2d5fec3",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "76908ade-d65c-4580-beda-24384efdde33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 883,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09e8119f-3d0d-4051-a374-a88f25a4b404",
        "cursor": {
          "ref": "e034e147-0143-430a-93fc-6cb874188ac6",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "20c1aebd-88b8-467b-82cb-e3b287faee6d"
        },
        "item": {
          "id": "09e8119f-3d0d-4051-a374-a88f25a4b404",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "6ae1a190-c002-41a2-8a40-e581711127c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1070,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "466ec60e-aeca-4ea4-8594-75baeb1c1b40",
        "cursor": {
          "ref": "1189d404-f13a-4639-8fb0-741adf7a941f",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "f744906d-56e1-4783-a216-d618bfabfd43"
        },
        "item": {
          "id": "466ec60e-aeca-4ea4-8594-75baeb1c1b40",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "53a26818-0f14-4f9e-bb03-7fe11dbf4c1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1408,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "198307ab-a61b-43a0-9b35-6158f1115320",
        "cursor": {
          "ref": "338d0158-8a43-4235-b54b-26542f45841d",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "430fa4f3-bd06-453a-bf70-152c18e56a87"
        },
        "item": {
          "id": "198307ab-a61b-43a0-9b35-6158f1115320",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "59bef18b-dfc2-4f46-ae92-b0a7de66ebe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 861,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88f04178-cde4-4210-92d0-bada4e3575d6",
        "cursor": {
          "ref": "311c8262-a0c6-4fc0-b302-12a4be07e86a",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "cfdb396c-b52e-4bb3-81cc-ec58a91a4b85"
        },
        "item": {
          "id": "88f04178-cde4-4210-92d0-bada4e3575d6",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "ea847562-2158-4e9f-b20c-86f864c92645",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 901,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93c1e6b1-dd24-4ce4-b51d-386ab1510657",
        "cursor": {
          "ref": "daf47edb-a31d-4a05-a6d8-e115186244e3",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "369c9fbd-118d-4114-aaf5-e3bf861a895b"
        },
        "item": {
          "id": "93c1e6b1-dd24-4ce4-b51d-386ab1510657",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "114b3943-ad9f-4acf-8b75-7b6a19c654e2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81272484-eedd-4858-a272-d42198fa33d3",
        "cursor": {
          "ref": "e45abac6-eaea-43a6-8f46-55f9ebb3e331",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "7d02c0be-70a4-4625-a888-edabf5669713"
        },
        "item": {
          "id": "81272484-eedd-4858-a272-d42198fa33d3",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "3857f6eb-b23f-42bc-aac9-351113aebf73",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 892,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83eac180-bd95-4bca-8a26-96daf759abc9",
        "cursor": {
          "ref": "5f095b74-911b-47b6-804e-bb055cca3340",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "4413dc28-c6b2-4aa4-81e8-b17b3ad01ee9"
        },
        "item": {
          "id": "83eac180-bd95-4bca-8a26-96daf759abc9",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "dce480a9-3334-4a95-83e7-ac6189a4dcfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 655,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83eac180-bd95-4bca-8a26-96daf759abc9",
        "cursor": {
          "ref": "5f095b74-911b-47b6-804e-bb055cca3340",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "4413dc28-c6b2-4aa4-81e8-b17b3ad01ee9"
        },
        "item": {
          "id": "83eac180-bd95-4bca-8a26-96daf759abc9",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "dce480a9-3334-4a95-83e7-ac6189a4dcfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 655,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ec0e4d3-c478-4ffd-9316-577f6f8fc5cc",
        "cursor": {
          "ref": "a9a82ea3-dd2b-4fed-9a28-a66ed9023e16",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "110c7e4e-0ed3-4c1a-b436-049df171cf1d"
        },
        "item": {
          "id": "5ec0e4d3-c478-4ffd-9316-577f6f8fc5cc",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "333e226b-749a-4ea1-90de-51540ce180fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 656,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26bec062-c60e-4681-b545-b48703278006",
        "cursor": {
          "ref": "a00b5508-a437-4bc3-abe4-b78c9b943846",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "292f88e0-b214-414d-8647-08c861b59799"
        },
        "item": {
          "id": "26bec062-c60e-4681-b545-b48703278006",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "24ac787e-45ea-4f1d-bcc9-4269209a42a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 778,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feef0ac8-233a-44c1-84f5-faeca1527429",
        "cursor": {
          "ref": "78d61d21-6efb-4ba3-9306-98ca584480b6",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "b68a8c0b-5ce7-4122-851c-a28820548515"
        },
        "item": {
          "id": "feef0ac8-233a-44c1-84f5-faeca1527429",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "b4265f13-9a9c-4d1a-89c3-61e4589bd295",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 658,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a687ad0f-9717-4a9d-abb3-8d217495351b",
        "cursor": {
          "ref": "200c67bc-e897-42e3-9885-c2f43c5cae7a",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "24197a20-122c-438f-a2ee-a5a38bb2f3d2"
        },
        "item": {
          "id": "a687ad0f-9717-4a9d-abb3-8d217495351b",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "7a4d018c-6ccd-4b76-8e17-361311e8fced",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 634,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e21bd45-25e0-45d9-b871-7543c0ff2016",
        "cursor": {
          "ref": "7f4050d7-b672-4b0a-b58e-f277851d5197",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "cbae7e56-4dc5-46fa-93f2-07af9dc489ce"
        },
        "item": {
          "id": "2e21bd45-25e0-45d9-b871-7543c0ff2016",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "ef7b2d85-2e75-4e53-83e5-fe6f0b80f552",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 659,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "883f6be3-e1de-43b4-b9ee-5cd20643257c",
        "cursor": {
          "ref": "bfb595cb-5748-4beb-b01c-de7c006dca87",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "eb55095e-a2b2-451f-86fb-561a52cd2520"
        },
        "item": {
          "id": "883f6be3-e1de-43b4-b9ee-5cd20643257c",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "0e936c6c-b7d9-4ceb-be53-14ac593557b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 664,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "747ee6f3-4d3a-4091-ac70-90eaf72607d8",
        "cursor": {
          "ref": "b724011e-0625-4239-9a02-8bef5e6d93be",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "6bae3fe1-de73-46f2-82c9-8f273f8dc784"
        },
        "item": {
          "id": "747ee6f3-4d3a-4091-ac70-90eaf72607d8",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "1a44b611-ee13-4711-9463-950ef844b3e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 633,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd4617fd-8676-4753-a5ef-1d560618fdc9",
        "cursor": {
          "ref": "15d8e886-dec1-443a-9191-bdd3b0b606d0",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "093a4882-531d-4f9a-a0e0-2eaa7f91d75a"
        },
        "item": {
          "id": "fd4617fd-8676-4753-a5ef-1d560618fdc9",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "42ac83c6-eabd-43a5-a886-8e32efd4fe88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 631,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2f96138-8424-4ece-977d-16f37abc4e00",
        "cursor": {
          "ref": "6c2e3299-1ce1-49be-98da-1fdad582116c",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "a7e2d896-2ad0-4001-965f-1891a698564e"
        },
        "item": {
          "id": "e2f96138-8424-4ece-977d-16f37abc4e00",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "6a7eef1a-c919-4684-9bd0-2a474543d138",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 650,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b16f81bf-6267-46a4-b8e2-8ef8831a3e14",
        "cursor": {
          "ref": "4db049c1-a0bb-4d67-9080-7fc9910b9e5b",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "666a8ada-91d9-4ea6-80c5-00350c54877a"
        },
        "item": {
          "id": "b16f81bf-6267-46a4-b8e2-8ef8831a3e14",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "74d460ae-b498-493d-9ff6-9b7b261a1e96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 635,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d8fa1ad-fe73-4279-b446-914ad250cf3c",
        "cursor": {
          "ref": "54cbd879-71e6-4752-843e-c506f08bda35",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "6219ad8e-dcd4-409d-bd5e-873d4472eb88"
        },
        "item": {
          "id": "2d8fa1ad-fe73-4279-b446-914ad250cf3c",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "1a19e94b-b9d5-41ac-b8c1-cd1c7ebe6261",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 640,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28bb5213-856b-4be4-a4d4-0d33a890b6cb",
        "cursor": {
          "ref": "bd14ee13-f1d7-40a3-b05b-a43a34691507",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "5ee6f1f1-ec47-492a-b192-90baa50b8a8b"
        },
        "item": {
          "id": "28bb5213-856b-4be4-a4d4-0d33a890b6cb",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "c24d84cf-ace3-4ae6-b7c0-cd07245a87fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 662,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b836be8c-f64b-4c5a-8053-3b73ee54fc71",
        "cursor": {
          "ref": "74582312-bb8d-46e8-95a2-4eea31366e62",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "b63d7c35-c1b4-4589-9941-bfde64da19dd"
        },
        "item": {
          "id": "b836be8c-f64b-4c5a-8053-3b73ee54fc71",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "df57900c-967f-46c7-b42d-f4b2cd20bca1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 648,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ec33722-6995-43ae-a439-01147171d422",
        "cursor": {
          "ref": "eb0cc446-21eb-401c-aef7-cbb1a2ca8e6c",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "43cd6fa5-803d-4e2c-940e-c38a895aa308"
        },
        "item": {
          "id": "6ec33722-6995-43ae-a439-01147171d422",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "6e511b16-e00d-4b9c-bcc4-be4b342525f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 648,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77cb5495-fb66-4ba1-a5a4-0c93a172473b",
        "cursor": {
          "ref": "d40842ec-0714-4114-b0f1-3d07b6ded377",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "6d099c6c-558e-4b3b-8e52-e7621ad3af3d"
        },
        "item": {
          "id": "77cb5495-fb66-4ba1-a5a4-0c93a172473b",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "866ba358-9c31-42f4-8f6d-f3fff0940a48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 646,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "206dc11a-2eb1-4745-aa81-8fa93ea6e38a",
        "cursor": {
          "ref": "30d0fec8-c867-44bb-a79c-a4e85bd98218",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "3238181c-d132-4a9f-803f-26deb67ebc9d"
        },
        "item": {
          "id": "206dc11a-2eb1-4745-aa81-8fa93ea6e38a",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "a437d414-3ebc-459a-9ec6-bfba4c8c383c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 640,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f91175db-8529-41f0-b029-0aa70b5106e9",
        "cursor": {
          "ref": "07258fa6-9190-4ed3-a47c-4f00b40b927d",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "a9a4fc7b-eff8-454b-9c89-a3513d6b5dc9"
        },
        "item": {
          "id": "f91175db-8529-41f0-b029-0aa70b5106e9",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "16cba0e9-2eef-4350-ad55-b8871249a2a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 654,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f227f2c5-798e-4ef0-be02-af1008d99e53",
        "cursor": {
          "ref": "d67ad332-efd3-4a94-9dd6-6d21a8ac9b2b",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "a056224c-01c3-4fc3-a8d1-4723f870be70"
        },
        "item": {
          "id": "f227f2c5-798e-4ef0-be02-af1008d99e53",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "af68a23e-516a-4f99-a6e7-af7125ec8c8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 646,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4ab54cd-e72a-4796-bc89-eedaba913975",
        "cursor": {
          "ref": "2b59999a-1471-4b2c-8e32-a73aedf0ee1f",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "8a6e9bc7-f273-4308-b0f0-4e8b812bbea7"
        },
        "item": {
          "id": "b4ab54cd-e72a-4796-bc89-eedaba913975",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "22595dee-706e-432c-8917-960a763ac59a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 637,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b7b0b55-498f-4c20-8743-e001fa2041e5",
        "cursor": {
          "ref": "16112c73-5874-41ae-95ef-c1b139fcef61",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "70d9acea-3514-42d5-a93b-eda39b67ac75"
        },
        "item": {
          "id": "8b7b0b55-498f-4c20-8743-e001fa2041e5",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "4ba98050-0625-4152-87cc-77fc6458110d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 640,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27db9f5d-171f-4ce9-8a3c-7a1fc8b11701",
        "cursor": {
          "ref": "103d161b-b400-4c28-b3dc-bbf6999bcae9",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "92af5d78-470d-49ad-81ec-75a115f0e34d"
        },
        "item": {
          "id": "27db9f5d-171f-4ce9-8a3c-7a1fc8b11701",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "81c60314-8771-4aae-ab1f-686b033017e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 659,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b62c5dd-d8e5-4a96-8e61-d87f7fa96ed2",
        "cursor": {
          "ref": "d42cda3a-4db7-4429-8aac-ac06b5391236",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "5d135e47-8be0-473a-ad11-f0c4af056ddd"
        },
        "item": {
          "id": "2b62c5dd-d8e5-4a96-8e61-d87f7fa96ed2",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "dc4ca0d2-55e2-43f5-ad62-334a68e1cb90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 636,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66febe96-46be-4414-829d-8db387ed2068",
        "cursor": {
          "ref": "56671a3f-a3dd-44aa-bd1e-302ddd1df54b",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "079191e5-67ab-4da1-b800-a2b52ad03e52"
        },
        "item": {
          "id": "66febe96-46be-4414-829d-8db387ed2068",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "15c3e185-828f-4952-81a1-b45a8572bb0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 624,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6290e37f-04a2-40ef-8c12-7999509cd097",
        "cursor": {
          "ref": "9777147f-1dd7-4a68-a0ce-66f8f0bcba99",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "aaca06f6-29bc-4fee-9ed3-483bcfb480d7"
        },
        "item": {
          "id": "6290e37f-04a2-40ef-8c12-7999509cd097",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "4e715e30-b5df-4076-82ca-50ac826e4765",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 659,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0cd477b-c799-496b-b39d-38a7e12bf551",
        "cursor": {
          "ref": "231cf069-7912-4bb0-b409-e9d560122ee2",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "235a6761-d0fb-4157-b5b2-aee3bb41322b"
        },
        "item": {
          "id": "c0cd477b-c799-496b-b39d-38a7e12bf551",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "8f097993-33ab-4a68-8b6f-a38b17e115cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 640,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e68e05de-ec36-4605-898f-99eb924de021",
        "cursor": {
          "ref": "09d86065-f4ea-4116-aa94-777e8c74133f",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "7794956d-56ba-42c3-b1c4-1e90d14c497c"
        },
        "item": {
          "id": "e68e05de-ec36-4605-898f-99eb924de021",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "8673f77a-b412-4cd6-9395-126308f47976",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 636,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb698119-3e4a-4bf4-aeac-cb6b597c43ba",
        "cursor": {
          "ref": "c2af6040-e526-4aac-af73-c72ae438da50",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "3e553cb2-6766-412a-9726-9985a634a300"
        },
        "item": {
          "id": "bb698119-3e4a-4bf4-aeac-cb6b597c43ba",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "0123ddb9-c054-4391-ab3a-d8a737c49d44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 638,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7203dc6a-abc3-4e0b-81d5-f8a976006392",
        "cursor": {
          "ref": "69ba47e8-525e-459e-9271-ddef2ef9c793",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "4e14816d-9854-464d-a77e-bff933e58631"
        },
        "item": {
          "id": "7203dc6a-abc3-4e0b-81d5-f8a976006392",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "c66835c2-4031-4c27-a433-1dbdecc00f12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 646,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cebd3a5f-60de-4f94-af13-aac9832ff578",
        "cursor": {
          "ref": "90890901-5d0e-4839-ad28-f7ee87455186",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "d5488f8b-a1ea-4735-96f0-d0b733cd370f"
        },
        "item": {
          "id": "cebd3a5f-60de-4f94-af13-aac9832ff578",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "ea335750-9399-4234-8fd8-fb65987f5a75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 637,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8aed543-6ed9-45c8-8b38-04b4cf31579f",
        "cursor": {
          "ref": "4d195f54-0154-4adb-8152-0ad759c85200",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "5bd0564c-5d8b-4790-ae6e-0b8a6387bf09"
        },
        "item": {
          "id": "b8aed543-6ed9-45c8-8b38-04b4cf31579f",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "90c3dfec-e63e-4f55-8791-911009c7ca68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 653,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c955cb00-e7fd-4753-8942-7cf68abf3678",
        "cursor": {
          "ref": "cb0cb890-fece-4f7a-8c2f-ddfdd3f638c5",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "7868d46c-64ca-4124-8599-150f8ba048f3"
        },
        "item": {
          "id": "c955cb00-e7fd-4753-8942-7cf68abf3678",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "65e2eaab-0307-44c9-ac86-d5e3c07302f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 681,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79120309-33de-4b58-a248-60afc0e5f9d4",
        "cursor": {
          "ref": "8b4981c9-14a3-466e-8ad9-44c2f887f998",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "afb211d6-7acd-47d0-9551-747e8b7af867"
        },
        "item": {
          "id": "79120309-33de-4b58-a248-60afc0e5f9d4",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "64907e92-35c2-4e11-800a-5f6f4e578331",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 656,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dec681ab-b224-421d-8161-ea3dce674fe0",
        "cursor": {
          "ref": "dc845863-c911-42c0-9ba2-08f1fc0cba0d",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "45396219-5433-4969-a0db-35a284df5dc3"
        },
        "item": {
          "id": "dec681ab-b224-421d-8161-ea3dce674fe0",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "543dd058-d930-4ead-a03a-1b9a2ce58d70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 647,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00fa6052-2d21-4d9e-8bb6-89d22cffba9d",
        "cursor": {
          "ref": "6fc34dc3-91ac-4168-be3b-df2b705416c5",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "86efa60e-4a3e-4e30-9cba-98bd6bf562b7"
        },
        "item": {
          "id": "00fa6052-2d21-4d9e-8bb6-89d22cffba9d",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "b1be0462-d9a0-4d1d-93f0-804eb4837a77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 663,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f7d4dd0-67d7-4f60-a973-cfe6398aa254",
        "cursor": {
          "ref": "c0cb025d-dded-4390-a5cb-19d75f99eac1",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "8ac38e16-070a-4aef-8daa-69d8803e9adc"
        },
        "item": {
          "id": "6f7d4dd0-67d7-4f60-a973-cfe6398aa254",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "b2f12378-0776-4cf9-997c-549de41581f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 636,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08b7afe4-2fcb-4c2a-bec2-7ec4eb256a21",
        "cursor": {
          "ref": "f7f82f93-80e8-44c5-83c0-5326d9fb129b",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "58ee8e50-1b89-4072-b056-8ae74d1d4ca0"
        },
        "item": {
          "id": "08b7afe4-2fcb-4c2a-bec2-7ec4eb256a21",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "e2d5a94e-bfcd-4f71-80bf-e614fb8fd59e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 632,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4bd4f12-7850-48d9-8876-df09797d30d0",
        "cursor": {
          "ref": "57463192-5716-4ec4-8389-8aeed8fe734a",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "9c87b59e-9c6b-4aa4-95cb-59358eff17fb"
        },
        "item": {
          "id": "d4bd4f12-7850-48d9-8876-df09797d30d0",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "df8b7749-0f4d-485a-8193-54dc1ca0fe75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 655,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5a7c125-13fa-4537-8ba4-e1dd404533ef",
        "cursor": {
          "ref": "1b9ab878-413d-4aef-89f7-52db0ac8ec35",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "e41c9285-d8d9-42f3-b2ee-3398ad87ba03"
        },
        "item": {
          "id": "b5a7c125-13fa-4537-8ba4-e1dd404533ef",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "813ecf1b-4f57-485d-a60c-d0ae3323ee89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 645,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41f478a6-97ba-4e68-ac32-2819424e9b2f",
        "cursor": {
          "ref": "40c6d89a-fca5-46a5-9e10-9c2f3a2c63ed",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "53bdac91-a017-4be7-a10e-9c2a193a5495"
        },
        "item": {
          "id": "41f478a6-97ba-4e68-ac32-2819424e9b2f",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "76be2f58-baa2-413c-8aa1-faab7829a244",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 644,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7422bf0d-c5c5-42a3-a899-2b6fee57d686",
        "cursor": {
          "ref": "8c4e899c-e84f-4478-8de2-a180a038ea10",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "ace2d2c2-c5e9-4b8d-93f8-f6712742713d"
        },
        "item": {
          "id": "7422bf0d-c5c5-42a3-a899-2b6fee57d686",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "56341794-f508-4ccf-b73e-930b05050049",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 641,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f13b826-732d-4869-8549-5b132a4a4e30",
        "cursor": {
          "ref": "98448be9-fafb-49a0-bb8a-3d52f247958c",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "49cc7308-38cd-42d4-981a-a88a8ad23a21"
        },
        "item": {
          "id": "6f13b826-732d-4869-8549-5b132a4a4e30",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "21de6327-00fe-4d5c-bb84-d574139646ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 678,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8950ca75-07ad-4235-bec0-8f696c2c3ce8",
        "cursor": {
          "ref": "7f628f1d-10cf-4688-8c84-d2a1aa54e49a",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "059dd0db-be51-4e1b-b064-3242cfde9dad"
        },
        "item": {
          "id": "8950ca75-07ad-4235-bec0-8f696c2c3ce8",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "2588fef2-ad45-4631-a605-239255c2161b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 633,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a1ae9a4-829f-414c-af54-88d2435b1742",
        "cursor": {
          "ref": "351d0992-5280-4a8c-aaa1-6e1cac98e187",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "29081ab4-1d5f-4bc9-a806-adb80be3ce7c"
        },
        "item": {
          "id": "4a1ae9a4-829f-414c-af54-88d2435b1742",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "83805ccd-398f-4d37-ac84-68dcf78ec540",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 646,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8a1e318-bb05-43e9-b096-0287592a5807",
        "cursor": {
          "ref": "461df8ab-05d7-427c-9c07-768762b42854",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "cbbabdf4-16e9-41d0-a3a7-8dded58279b1"
        },
        "item": {
          "id": "e8a1e318-bb05-43e9-b096-0287592a5807",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "34f9a0b3-40ae-411a-bb1b-d13c2039ff2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 646,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ff6c922-2f31-47ff-b187-270b59df0fe9",
        "cursor": {
          "ref": "82479c39-80e0-4fe7-b9dd-4ecbfd96e237",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "5394eb2a-bbfb-4483-948e-3985e2e4ff67"
        },
        "item": {
          "id": "1ff6c922-2f31-47ff-b187-270b59df0fe9",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "e1bc59db-0ca3-440a-9a67-0a216e87a1d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 634,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19fcf6dd-fa00-413b-b7aa-4b1d9283f1cc",
        "cursor": {
          "ref": "3107d2c4-bd93-4228-b410-7c88aab5077d",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "0bea2da1-6c20-4d79-9bda-1e8aeb021eda"
        },
        "item": {
          "id": "19fcf6dd-fa00-413b-b7aa-4b1d9283f1cc",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "c25f9983-6184-4141-a939-b245c76f408e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 652,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "368038aa-c6aa-4a04-a6bc-a227b128f898",
        "cursor": {
          "ref": "cb4dae54-c92e-4db2-8bbc-aeb19403c295",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "6ad75528-9e7a-4b95-835d-3bce729d42e9"
        },
        "item": {
          "id": "368038aa-c6aa-4a04-a6bc-a227b128f898",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "3e64948f-2362-4cec-9fe7-a4df59ad1454",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 657,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53083401-a61d-430a-a9d8-97f98b955670",
        "cursor": {
          "ref": "4191476e-639a-4f00-b8cd-69d6f517f5aa",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "9bc19de9-d40d-41dd-b8bc-1dcdd1e97329"
        },
        "item": {
          "id": "53083401-a61d-430a-a9d8-97f98b955670",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "767dd8e6-3ed6-4bac-b9d4-98316d27e294",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 632,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa91364b-add5-4df8-913c-2ed2fbacc8c3",
        "cursor": {
          "ref": "2e34b8f1-fcf9-4f3d-b0ea-0e0f94b04a4b",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "f854c456-1e33-482f-975d-701bb7ef88c7"
        },
        "item": {
          "id": "fa91364b-add5-4df8-913c-2ed2fbacc8c3",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "73d319fe-24ed-45cb-8681-793b4303189d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 652,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcaf5286-f468-4168-8fd9-4da4edfb6fb6",
        "cursor": {
          "ref": "3e2595d6-2f91-48ce-9bfd-2d37b0391114",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "ac912968-062b-4eb6-b18c-a8bb599aec59"
        },
        "item": {
          "id": "fcaf5286-f468-4168-8fd9-4da4edfb6fb6",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "f3186f42-d4b5-4db7-9472-52567b9ad57e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 659,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4b7c24d-5a6f-46c4-a266-403f32bb9ea2",
        "cursor": {
          "ref": "7eea6430-d3ed-4c1c-9555-3f32bd47acc9",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "ec9e526f-e092-4502-9039-d5c265d75a6b"
        },
        "item": {
          "id": "b4b7c24d-5a6f-46c4-a266-403f32bb9ea2",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "1b18613d-68d2-4f6a-8239-e69f882bbb61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 633,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2a64190-65a7-4f78-bc5a-d9ab73f106d3",
        "cursor": {
          "ref": "9b3ba5db-2383-4892-b916-546209410fa1",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "577fd978-feac-411f-abb9-e05a7c38810f"
        },
        "item": {
          "id": "d2a64190-65a7-4f78-bc5a-d9ab73f106d3",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "afee15e6-7ab7-46bf-90f4-6efedd389bb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 645,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cdc59f8-5a42-4b25-99f9-dd89faa292a3",
        "cursor": {
          "ref": "e7bb45e3-2137-44dc-a7e1-e828bdc9636b",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "5d1b375a-c443-4d30-a934-2817cf8c8bd4"
        },
        "item": {
          "id": "5cdc59f8-5a42-4b25-99f9-dd89faa292a3",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "a4e9c860-5173-47b6-9508-e6f95d3326eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 651,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4ca35b6-e6b2-44b0-b996-c661485679aa",
        "cursor": {
          "ref": "038d69c3-aac5-49c4-b0eb-e17514820150",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "ce39bdf5-a8c0-4d45-a345-73b9aef8bba4"
        },
        "item": {
          "id": "b4ca35b6-e6b2-44b0-b996-c661485679aa",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "12024878-61c9-416a-8a6b-575db37208d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 641,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a115925d-c5d4-4a07-a5a5-896fccb4d9d1",
        "cursor": {
          "ref": "826c6040-3855-4fbb-94d3-4ba2d33e7f11",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "219db29d-9d3d-4551-b9ff-8b8dec6eab40"
        },
        "item": {
          "id": "a115925d-c5d4-4a07-a5a5-896fccb4d9d1",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "cf75aee1-ac83-4a8a-bdd3-18a60f6da028",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 644,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d406269-8ab2-4363-90f8-d610fb42dbb2",
        "cursor": {
          "ref": "6b0f561d-d71b-462e-a8d5-35be04a3299f",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "766042b1-5f4a-4d72-aa2f-74dc7d513079"
        },
        "item": {
          "id": "1d406269-8ab2-4363-90f8-d610fb42dbb2",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "9a2382eb-fb16-4292-b84e-492495e5bfd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 645,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5cb70cd-ce9c-4e79-bc3b-3aeffcc206d3",
        "cursor": {
          "ref": "b421af30-2d73-4deb-87b0-7f3c16f5b9ea",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "f5f1b3b2-9ef8-4a15-837c-d75919ad17b4"
        },
        "item": {
          "id": "d5cb70cd-ce9c-4e79-bc3b-3aeffcc206d3",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "fad63e3c-a338-470a-acfc-e504a43b3a8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 636,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12eecf6a-9148-4486-bed1-f2a8c47438d9",
        "cursor": {
          "ref": "fd1aec97-8055-4304-9c78-4ed3fd29588f",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "f73c8726-628a-4d4e-9784-60c421e1b294"
        },
        "item": {
          "id": "12eecf6a-9148-4486-bed1-f2a8c47438d9",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "8dbf4317-3b35-42a8-af3e-cd96ea5aeef8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 641,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a07219ea-dcb0-46cf-b5e5-2dc4e4fa4b05",
        "cursor": {
          "ref": "01e25ce6-8988-425b-8c22-a024371555e1",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "e3b1c63b-d733-4c83-bbcd-fc478540730b"
        },
        "item": {
          "id": "a07219ea-dcb0-46cf-b5e5-2dc4e4fa4b05",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "ab0c792a-47b1-4956-a012-ccfde1bca6c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 718,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9017ec87-ece4-4bf6-92c8-8bafab65ac19",
        "cursor": {
          "ref": "15bad7ec-b818-4ffe-89a7-b01040413a5f",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "1216b0f8-8556-45bb-9a07-7910d9162101"
        },
        "item": {
          "id": "9017ec87-ece4-4bf6-92c8-8bafab65ac19",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "62e2430a-170f-4519-b47a-a5c3f2a7e93c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 649,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68f83faa-2882-4510-93a3-4733ebd9ca49",
        "cursor": {
          "ref": "fbdf1a20-a77a-41e7-98ef-adbc99579be7",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "9d7ef525-54fc-4fcb-b229-392fd712ab9b"
        },
        "item": {
          "id": "68f83faa-2882-4510-93a3-4733ebd9ca49",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "b3323955-1713-4202-b86b-0d9d34057304",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 651,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "898e5166-98bf-4dc9-a27f-fc146cfe8971",
        "cursor": {
          "ref": "dfc674d6-6337-431e-aac6-81f3df3f792a",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "76ed977d-b083-409b-ad54-6cd5cb690c25"
        },
        "item": {
          "id": "898e5166-98bf-4dc9-a27f-fc146cfe8971",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "c7720110-77d9-41fb-b3d1-2c4913c90549",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 646,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a93c358-052c-4ceb-8226-6b76f5b6344d",
        "cursor": {
          "ref": "d7a2bc11-4e8c-4823-afd8-a507e73f322b",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "29e2e814-2765-4486-b929-a2dd645a1c94"
        },
        "item": {
          "id": "7a93c358-052c-4ceb-8226-6b76f5b6344d",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "7d7cce88-4be1-4c82-8e82-38d2e2deacb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 655,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37bef074-e96b-4792-b987-14f278c24cf3",
        "cursor": {
          "ref": "854619c2-b938-43a8-85a2-7a9d1e589f65",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "5e0dc6ea-7c0e-4dfb-b55e-22299570ed42"
        },
        "item": {
          "id": "37bef074-e96b-4792-b987-14f278c24cf3",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "46bdba46-b079-4f9e-87de-05dd8d2d0e27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 632,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1efa65d-2572-4e01-8896-75bbfe19941d",
        "cursor": {
          "ref": "573cd1e5-4691-4a41-95e9-c2182133ceaa",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "709733dc-3f05-4158-bca8-81b84a10f19b"
        },
        "item": {
          "id": "e1efa65d-2572-4e01-8896-75bbfe19941d",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "e89dd66c-3749-4af8-9135-c916a5a4667d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 658,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3f41f23-1a3f-4e53-9ac4-1fa8ef9d6e84",
        "cursor": {
          "ref": "5edcde92-3003-4e9d-b13d-a077a4edd9e1",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "75e1cf75-8359-4c2f-aafc-5b612cb385ad"
        },
        "item": {
          "id": "b3f41f23-1a3f-4e53-9ac4-1fa8ef9d6e84",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "561904bb-6d11-49a6-a7e6-62e91e70ae9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 654,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7135c720-ae26-4e91-aac3-70fe692201a5",
        "cursor": {
          "ref": "355c8680-1148-4313-8d96-6e8387f9e0ad",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "4f68b851-d647-46c8-85d3-d95b4d75e3f3"
        },
        "item": {
          "id": "7135c720-ae26-4e91-aac3-70fe692201a5",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "b97e0315-f7cc-42fa-9700-3b7af21061e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 655,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdc9a2b5-9fc0-4a58-a853-30f3ebdd50f9",
        "cursor": {
          "ref": "b0652394-1dc0-4ff0-8aa6-c21b0064581a",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "35f2ad9e-ebb4-42b3-bdd8-96aad2e22c4b"
        },
        "item": {
          "id": "bdc9a2b5-9fc0-4a58-a853-30f3ebdd50f9",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "88a47d0e-d168-4501-87ac-fc909816b0dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1169,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dd9ea19-ec40-48a9-ae33-f7ac8772c983",
        "cursor": {
          "ref": "55d2c732-50c3-4d03-804d-e7891c410629",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "74835458-d2eb-46c7-901f-c702780e0f73"
        },
        "item": {
          "id": "6dd9ea19-ec40-48a9-ae33-f7ac8772c983",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "970de4a8-4870-4bb5-945d-a74fdf2f5a25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1310,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3079fe1-ef19-4da5-b781-3e46cba4a905",
        "cursor": {
          "ref": "7bae701b-b610-489c-b235-48d3072de662",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "d73be76a-0d1c-41bf-b73d-74b9b1a8460f"
        },
        "item": {
          "id": "b3079fe1-ef19-4da5-b781-3e46cba4a905",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "a9fa1801-3b9f-4ebe-ac55-f46fa9da852e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 661,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "115b2996-0b25-4631-b383-4820793c9051",
        "cursor": {
          "ref": "f106a7b4-2fb1-4a1f-8c4d-02f783f2cd75",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "720cfdb6-c086-4fa7-9819-6fe24023a15d"
        },
        "item": {
          "id": "115b2996-0b25-4631-b383-4820793c9051",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "503ac5dc-9606-405f-aa10-6cd8cd68b0d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 648,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fd8caec-3238-49bf-afa5-77ef39df0d9d",
        "cursor": {
          "ref": "ce65d4cb-b71d-40b2-adf9-3912fa50e466",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "b7b42c9b-d964-4aab-b48d-593ea9efbfa6"
        },
        "item": {
          "id": "6fd8caec-3238-49bf-afa5-77ef39df0d9d",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "31c03448-3ad2-4800-a4a5-9bb814fb117d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 664,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0712dcb-6435-45c1-8a5b-47c6141e7a85",
        "cursor": {
          "ref": "342c9590-a45a-4895-89ee-f78e04a77947",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "cedcaa82-fcc2-40cb-804d-fc3699d0c483"
        },
        "item": {
          "id": "a0712dcb-6435-45c1-8a5b-47c6141e7a85",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "1435c434-ca58-4cc3-a773-32bba27d34e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 656,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eb0ae71-1714-4c7a-960f-7ae4adb996ba",
        "cursor": {
          "ref": "0e1d562c-b203-4b1f-bde7-c221dddf3aa0",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "7489655f-326e-43fc-bf58-a4ff7689f3ea"
        },
        "item": {
          "id": "3eb0ae71-1714-4c7a-960f-7ae4adb996ba",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "e47e1fdb-d6a1-4e43-9ab8-ef7e202a486d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 645,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73d638e1-988a-4367-97eb-21fba015178f",
        "cursor": {
          "ref": "9b5e94a4-5333-47a0-a718-5bded4f57bf3",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "d920cfcf-67fa-4e35-8f30-19e38bad3aed"
        },
        "item": {
          "id": "73d638e1-988a-4367-97eb-21fba015178f",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "6e8ff42d-eee3-4933-acb3-5297941409a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 657,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17128f0e-0974-4ce3-9004-13bb4c2b9a63",
        "cursor": {
          "ref": "7119bc1b-5c20-4c7e-9a19-281b82c0a8a7",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "23d0db3b-f573-4a48-b988-9dd7395912f6"
        },
        "item": {
          "id": "17128f0e-0974-4ce3-9004-13bb4c2b9a63",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "2fa75461-266e-4b8b-8174-4d47249d4a42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 668,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9034453-4260-497a-84e5-d886ab66612d",
        "cursor": {
          "ref": "127471b4-98cf-412a-b1fe-e4e48fc40ccf",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "6257ae28-d8c6-47af-92e2-0431ebd2d607"
        },
        "item": {
          "id": "e9034453-4260-497a-84e5-d886ab66612d",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "6e72d43a-09fd-405e-b029-b02b930dac36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 669,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e303687c-0e13-4e95-8ea4-14210ffd59d2",
        "cursor": {
          "ref": "d586a93e-297d-44e2-81cf-c3d6cd86563f",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "fcb16750-9b82-426e-9654-a6128e4d3e70"
        },
        "item": {
          "id": "e303687c-0e13-4e95-8ea4-14210ffd59d2",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "5b8d3249-9de1-4950-8a7d-2c10158b44e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 653,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59f3d392-6fee-4296-9ac1-3d0394b81350",
        "cursor": {
          "ref": "15c990a4-5bc8-4a6c-89dd-9732fc459cd0",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "dd068c1a-3c15-4ef2-91b2-5138bba287d0"
        },
        "item": {
          "id": "59f3d392-6fee-4296-9ac1-3d0394b81350",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "ebf1371e-efa0-4c40-9898-68bde7a25205",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 639,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc00f4db-b500-4488-95f8-5da4911e2f9e",
        "cursor": {
          "ref": "1c2a41ee-dbac-4d5e-bb1f-8ad9d950d33f",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "f01f4078-bfc3-4b8b-895c-7481407cb609"
        },
        "item": {
          "id": "cc00f4db-b500-4488-95f8-5da4911e2f9e",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "9de48dd3-c851-4603-ab3d-a8defaeb7092",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 649,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6b8d8db-d773-421e-ac10-0d6e3bcf8a1d",
        "cursor": {
          "ref": "72afc5a8-50fd-48f3-b2c1-ab5437fac0f8",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "c243d5b7-fe12-466a-bce0-963f13f8d465"
        },
        "item": {
          "id": "a6b8d8db-d773-421e-ac10-0d6e3bcf8a1d",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "af286916-8db7-447b-b11f-6b3720ae2f78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 636,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38580794-0141-4583-bb92-7677ff68c4ca",
        "cursor": {
          "ref": "cf1bb2dc-ae09-4a38-8ad2-c897c3e6588c",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "78034915-148d-42ba-bdf1-f0a49a6a6986"
        },
        "item": {
          "id": "38580794-0141-4583-bb92-7677ff68c4ca",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "facef82e-9550-4c77-8bdf-a32c1938adc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 662,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23667658-9a33-4fdc-8f10-3bea23a21b3c",
        "cursor": {
          "ref": "4da999c3-47c1-4650-a420-644878f32a86",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "dfe61340-192f-4a3a-97ad-f43b0bc02859"
        },
        "item": {
          "id": "23667658-9a33-4fdc-8f10-3bea23a21b3c",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "74648c1f-47ae-4ef1-8b9b-265fc4a29b16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 641,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0203ccd-63df-4f15-aa0a-cf244a90bdfb",
        "cursor": {
          "ref": "9dd60bf8-f820-4d9c-a6e5-7dd9ee7e4111",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "18f50d52-7333-4478-8cd8-116e950254db"
        },
        "item": {
          "id": "d0203ccd-63df-4f15-aa0a-cf244a90bdfb",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "ee351c20-e5f2-44be-b3c0-3151365c804d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 658,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28911cf8-062d-4a89-82c7-81a5f95a09b0",
        "cursor": {
          "ref": "9853e882-0fbd-46d8-930b-17551310ed57",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "b8891439-3a48-4798-85d9-94da2ee19f5e"
        },
        "item": {
          "id": "28911cf8-062d-4a89-82c7-81a5f95a09b0",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "7077e1bb-2be9-48e1-93db-8820634300b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 678,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1f347cc-241a-4747-a27e-9def88f0f5d9",
        "cursor": {
          "ref": "0befc95a-f998-4212-95df-cbef175c590b",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "1b7c35ef-f452-493b-841e-76137ee7b40b"
        },
        "item": {
          "id": "a1f347cc-241a-4747-a27e-9def88f0f5d9",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "9abc55cc-f397-4f94-84d6-bb1a805cf7d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 665,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d62f5e3-382f-4e76-a088-ab532c3c4651",
        "cursor": {
          "ref": "ba5887ea-911b-476c-a7e6-98d6a3e76d98",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "099b1768-7f34-411e-be60-e5321a62ea30"
        },
        "item": {
          "id": "4d62f5e3-382f-4e76-a088-ab532c3c4651",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "80fd9d30-5511-46a0-a37a-dd8a35a8484e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 653,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d215775d-4470-4e91-bf6a-fb7c88a2f670",
        "cursor": {
          "ref": "f33e6836-a736-4951-a891-3dedd07cc11e",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "8db70ef6-9551-4de9-8cb7-bec8e940fd25"
        },
        "item": {
          "id": "d215775d-4470-4e91-bf6a-fb7c88a2f670",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "51dc6e25-d951-44a2-b7d0-2d1b9fba7dca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 647,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0994d4ee-1815-4f24-ba51-4e28853a2dc2",
        "cursor": {
          "ref": "48d0309a-4ce4-4fa3-bd6d-106284dd3b07",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "7357ea06-2719-43a2-b345-0f39c4cab6e2"
        },
        "item": {
          "id": "0994d4ee-1815-4f24-ba51-4e28853a2dc2",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "f5aa31ac-bfd8-49ad-9ea9-44b783f41850",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 666,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9594b17-c424-412f-8df7-804664c51c96",
        "cursor": {
          "ref": "f52ef75c-626c-4097-9f0a-4defdc437189",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "ed1c5604-2ed6-4677-a569-06282021dd79"
        },
        "item": {
          "id": "b9594b17-c424-412f-8df7-804664c51c96",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "1511ad4a-469f-40d1-a689-a0f4f58ec517",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 660,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e72321e2-f28f-4a90-bfaf-c6a508190af6",
        "cursor": {
          "ref": "f05f30a3-039b-4228-8187-f423fb27795d",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "ac8aed9d-8411-4787-875e-b4429f134e29"
        },
        "item": {
          "id": "e72321e2-f28f-4a90-bfaf-c6a508190af6",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "76136460-b03f-4852-91e2-1e80bb1cb9cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 639,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a7a2ea5-ad3b-433a-aac2-a3e96607bb71",
        "cursor": {
          "ref": "15ac1438-7721-46ec-b345-c2489b6b3f1a",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "d0b724c8-b378-415a-b600-d0ce8fd6db27"
        },
        "item": {
          "id": "7a7a2ea5-ad3b-433a-aac2-a3e96607bb71",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "fd930f19-efb1-4306-b891-68aa5189b624",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 644,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0087dc7d-4787-483f-b62c-716a42b97a13",
        "cursor": {
          "ref": "90c11230-f6ad-4e71-9dbb-ec2af22c80e8",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "f13e41f8-9eda-49e7-b2c0-23327045211e"
        },
        "item": {
          "id": "0087dc7d-4787-483f-b62c-716a42b97a13",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "8a64c469-caff-4ba6-b224-45acee14c996",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 662,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8e1cdba-41ca-46fe-84fd-5a37b4fbc47d",
        "cursor": {
          "ref": "21413361-bb6a-49c8-b474-983386457d3b",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "587fae0b-dcca-454b-bf86-541bb612402c"
        },
        "item": {
          "id": "d8e1cdba-41ca-46fe-84fd-5a37b4fbc47d",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "a8caf73d-c9be-47f1-97b7-7fbd9ba34d83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 654,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aad55aa-fa02-4051-8f13-8e2a9c3320eb",
        "cursor": {
          "ref": "6907a083-ac04-490c-9a23-f3107a15d268",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "ebc42dbe-146b-4268-83a9-693fbb9d6d82"
        },
        "item": {
          "id": "8aad55aa-fa02-4051-8f13-8e2a9c3320eb",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "6a49f2f7-4d94-426e-9b26-e559b155d347",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 669,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67d18e2d-95c7-4cfb-ba45-b936dc783051",
        "cursor": {
          "ref": "d39a3768-88e4-491f-a6bb-1c64fa5db713",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "4a12ae51-c6e5-42f4-a621-b2ab7b978472"
        },
        "item": {
          "id": "67d18e2d-95c7-4cfb-ba45-b936dc783051",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "2ef1ae5b-580d-44b8-833f-8e8df01a21f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 654,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6a87e1e-ba13-46bd-a6bf-c2dbdff3f3f1",
        "cursor": {
          "ref": "5be58d5b-84e4-4d25-bd2a-b736b2c7c77f",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "a52981bf-0129-4289-ac02-92cb42027290"
        },
        "item": {
          "id": "e6a87e1e-ba13-46bd-a6bf-c2dbdff3f3f1",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "13938f3f-57df-409d-8c4b-250f9f2c923b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 44,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f48a86b8-8ecc-48da-b6f9-2a217d8d68a2",
        "cursor": {
          "ref": "696ba87c-ef10-4d28-b7b3-5c283e06be16",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "0cbbe26d-5ce6-466e-8703-f94b6cad1f29"
        },
        "item": {
          "id": "f48a86b8-8ecc-48da-b6f9-2a217d8d68a2",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "1ac11541-48d1-4f1c-8149-4a30096d0667",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 659,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9d3fccc-2c28-40ef-af7f-1589e90df9aa",
        "cursor": {
          "ref": "7e36682b-2a69-416c-94a5-597eba8563ae",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "4b4b50f4-2e13-4bd2-b029-bc5afe309c0d"
        },
        "item": {
          "id": "f9d3fccc-2c28-40ef-af7f-1589e90df9aa",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "93f2d844-60b0-4f0d-8641-b3762a5036f3",
          "status": "OK",
          "code": 200,
          "responseTime": 711,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c64a613-6a97-4b89-89e3-701c4fc45017",
        "cursor": {
          "ref": "ea2c6ac2-7047-4577-99a7-c14b3dd4137b",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "40e32ec6-7ad6-419c-86ee-d91701a9cd88"
        },
        "item": {
          "id": "5c64a613-6a97-4b89-89e3-701c4fc45017",
          "name": "credentials_verify"
        },
        "response": {
          "id": "782665f4-9efa-4c5a-9e86-d5a4471f7875",
          "status": "OK",
          "code": 200,
          "responseTime": 1867,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "f31e6a4e-2039-4afa-8e62-a6d2ca61fdda",
        "cursor": {
          "ref": "2b3ee8fd-9d56-4e9e-a297-639220a048c1",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "8238b695-f12b-4ece-9aeb-41009aa0e67c"
        },
        "item": {
          "id": "f31e6a4e-2039-4afa-8e62-a6d2ca61fdda",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "c95bcf33-7f3c-477c-9fdf-121caf126c34",
          "status": "OK",
          "code": 200,
          "responseTime": 2034,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "a03f8f6e-c1b4-420c-8074-a6a11bf84a0c",
        "cursor": {
          "ref": "13c8461f-ab64-4c67-a528-90e543c3f8ad",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "d9705b62-3f89-4bf5-82d2-270932cf0aaa"
        },
        "item": {
          "id": "a03f8f6e-c1b4-420c-8074-a6a11bf84a0c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "750661d8-ee7e-4760-aee3-85720e1ceb42",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a03f8f6e-c1b4-420c-8074-a6a11bf84a0c",
        "cursor": {
          "ref": "13c8461f-ab64-4c67-a528-90e543c3f8ad",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "d9705b62-3f89-4bf5-82d2-270932cf0aaa"
        },
        "item": {
          "id": "a03f8f6e-c1b4-420c-8074-a6a11bf84a0c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "750661d8-ee7e-4760-aee3-85720e1ceb42",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a03f8f6e-c1b4-420c-8074-a6a11bf84a0c",
        "cursor": {
          "ref": "13c8461f-ab64-4c67-a528-90e543c3f8ad",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "d9705b62-3f89-4bf5-82d2-270932cf0aaa"
        },
        "item": {
          "id": "a03f8f6e-c1b4-420c-8074-a6a11bf84a0c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "750661d8-ee7e-4760-aee3-85720e1ceb42",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0423aef3-5391-4fdd-9456-35d00de46e0c",
        "cursor": {
          "ref": "404fbe44-1dce-48cb-adc7-dabe3f32d088",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "2bb369a2-9267-458e-b897-b570fba88498"
        },
        "item": {
          "id": "0423aef3-5391-4fdd-9456-35d00de46e0c",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "b3dc09b2-fe99-4015-a1bc-f6c5b6534e1d",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 638,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46d97090-9936-4aa4-b030-39efe5cbdde3",
        "cursor": {
          "ref": "17fd55a2-10a8-475d-bc04-03da6dfb2598",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "450dc561-a3fd-4a52-830b-f206db975ea6"
        },
        "item": {
          "id": "46d97090-9936-4aa4-b030-39efe5cbdde3",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "47afa203-24f1-4ecf-83b4-59441ae140bf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46d97090-9936-4aa4-b030-39efe5cbdde3",
        "cursor": {
          "ref": "17fd55a2-10a8-475d-bc04-03da6dfb2598",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "450dc561-a3fd-4a52-830b-f206db975ea6"
        },
        "item": {
          "id": "46d97090-9936-4aa4-b030-39efe5cbdde3",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "47afa203-24f1-4ecf-83b4-59441ae140bf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ed681d8-92c1-4928-8be7-ab53b4ca19d8",
        "cursor": {
          "ref": "87d57657-1a13-443c-b4ab-827eb2516c65",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "4c48dc0e-8c9d-4632-b359-efe9926ab55f"
        },
        "item": {
          "id": "0ed681d8-92c1-4928-8be7-ab53b4ca19d8",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "70e893e3-baff-46ba-b059-274b395378f1",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 921,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c646fb36-b1d2-40d5-8b6d-010368b17301",
        "cursor": {
          "ref": "6ba2a1b3-3585-4e8e-9795-1f904f142e48",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "c505510c-837b-40ee-a493-4f97d250e8c5"
        },
        "item": {
          "id": "c646fb36-b1d2-40d5-8b6d-010368b17301",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "d5f6d85e-d5fa-41f2-98e3-24587437775a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c646fb36-b1d2-40d5-8b6d-010368b17301",
        "cursor": {
          "ref": "6ba2a1b3-3585-4e8e-9795-1f904f142e48",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "c505510c-837b-40ee-a493-4f97d250e8c5"
        },
        "item": {
          "id": "c646fb36-b1d2-40d5-8b6d-010368b17301",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "d5f6d85e-d5fa-41f2-98e3-24587437775a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "453d7837-83e1-4715-87f0-d3c4dae8e4ed",
        "cursor": {
          "ref": "dc87c34a-06ae-4be7-945f-407ff11fbf34",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "7fff592e-6b10-477f-baf6-400403b17299"
        },
        "item": {
          "id": "453d7837-83e1-4715-87f0-d3c4dae8e4ed",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "589f2df2-003a-4131-bda5-2a35cb242f70",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 914,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}