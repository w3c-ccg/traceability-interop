{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "5d3600e6-032b-4cff-be64-35f98ab1145c",
        "name": "Clear Cache",
        "item": [
          {
            "id": "2ddc5d8a-120d-4087-b77a-c3f4ac85fee8",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3b36d4b9-448e-4afd-9cae-1d3d2057785f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "5769bf91-91f6-4fd7-aeff-13e6c4501ead"
                }
              }
            ]
          },
          {
            "id": "0758d782-5358-42d5-b4d0-9e934be3e20c",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d3b64245-2694-43d8-bcb6-43dff3575f2b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "731d8c2d-579a-4cbb-bdac-f501c2f46175"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "4b0bb338-2ae1-4860-8019-fa786753b550",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "054944d7-d7e9-43d1-a115-bb1c148c7abd",
            "name": "Positive Testing",
            "item": [
              {
                "id": "481b456a-7d10-4f6d-9fd1-665be6811390",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5e1a3fbe-27ad-4df8-be65-8068d06a4b8b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7d56d463-1bc2-4dfe-bf6d-6692e4fd294a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1ca11a1b-191a-4fda-86b5-15a2cdc26049",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a950de52-f0b8-43fb-9fa0-4a8b7c87c905"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "755a2edc-e9bc-4278-ab35-91f7834b8fa1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b4c9350b-7c35-4fa8-a43a-0f433b2933ae"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b6ae8628-ce48-447c-9aaf-7fa159d585a8",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "9740a24e-4f5d-4444-84c3-27ec222b307e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d1f6930f-5169-4ab0-84a0-b072dcefd4ef",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "830a25ba-c194-488f-b036-a6520ab6264e"
            }
          }
        ]
      },
      {
        "id": "c647421c-38b8-457e-b260-608b149acb29",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "e270475d-9c86-43c7-a82e-4caf7413e103",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3139f55a-8558-4a45-9e5b-278c4b484fc9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "349fc335-1d65-41cf-bdd6-5c6b6d33277b",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e425eb5a-0acb-4755-9ca4-0b1a3caf4952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dc433413-3215-43a3-af4e-9822cee7c063"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b3aa3df-c48b-4e8b-82e0-f12040a1bd8f",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4e718b8-d72f-40a8-abb1-c3d455f0af95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "da2e211f-a3fc-47bd-bb7f-227945068192"
                        }
                      }
                    ]
                  },
                  {
                    "id": "413feeb5-17f8-4a83-8b3f-9d76de78be99",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ca7edd3-b05a-46a5-8cad-bac1f02ddcc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1d3c9e10-972b-450d-9ee4-e97afa6cfdc9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0a65a1b8-cef9-4c14-8442-0b84bdff070f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a7c15628-24e1-4df5-84d5-6269b9572728",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0e91356-c22a-4207-a281-d44f5de3fa0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7c0757dc-4d39-4e47-9caf-d097357e6420"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c540a846-2c07-44fe-9437-90eaf295d5ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "272b755a-e390-4a0f-8e7d-0628dae7489a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "fa986707-8057-46b4-9585-999bedeacf5b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "259b093f-908e-4a71-86bd-35c6d53263b2",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4fcf1173-6ef7-4eca-8ab7-c4c30540555c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "12c1d2a9-9a8b-41af-8676-9746fde5c6ef"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "aceb654c-827f-495f-b036-b6f21256cd15",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "777a6456-2bc4-4e67-b8ed-225e7473bceb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ac9bdb3c-af60-4a27-8b72-684d6ba92f63",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c058de8f-5467-476c-9853-a8f1d96664d6"
            }
          }
        ]
      },
      {
        "id": "1a871254-a728-4d86-9a48-f06c8e80d86f",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "cc4b64e3-d2e3-41db-acdb-1ea62840d2bd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "42d52b79-4df7-475d-8445-76750bd0026a",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "696aca36-1682-4662-a381-ac97f1103696",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99d4b20b-6d95-436a-92df-f24fe39fb416",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1afa386-87ad-436c-82bf-51c6ca6a6666"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8551867-1bfa-4007-a938-9878da6b1eae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cef2cda6-933c-495d-b8ee-e1b2534d8540"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9f183d7-4216-4dad-9dbe-f22c567861a1",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09d45a1f-3c03-4067-8deb-9b8574824d13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cd6a331-9143-4be0-a9b0-b8610be18168"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00306b78-a962-463b-9366-821dc4b331cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d51ac22c-a1da-4c9b-a8f3-aba25561c8b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "216c285f-9ef6-4a35-8370-dfc20c5bf9b3",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95870e7e-6562-4b70-9787-bbc3d329a92f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51e47b2d-4213-4c71-918a-14ea910f5f31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8b25a65-2a6c-4168-8f7b-7d835f26585b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "748b5ad6-cb2e-4859-8bf9-301b7fb2ed1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd0e3a3d-8124-490e-8ac1-e8b2d58d72b8",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7631c78a-6347-414e-8fcd-80105f159e0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e53f9ea7-8ef9-45ed-92dd-1fbc79c77355"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01ce1f64-dd63-45a1-91e5-0be48504447d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4c6c15b3-bed3-42ed-b947-c6ee61ea0ceb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35d4b5a0-14e2-4e50-b120-2407c41f6d9b",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "deb57c4e-d45b-4680-a3f6-895a2c81aa92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6166c163-44f0-4395-8bf4-316e855035ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a057f7d-9b4d-4f6d-85a8-1f0829908a92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0917c77a-9ac0-45ba-a41b-c3fb8703c7c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c9c98fb-fb18-4ebb-95d0-fbcabc986bc3",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "396cf921-7e10-4a76-8e52-b09c8b0833ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d3a9b33-ab49-4d83-ba83-c4aa88b63b25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b3b2386-8817-4fef-9b39-7196983b1f8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "806b78f3-7e67-4ed8-83d6-46f134855a4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7289f19d-959c-42b2-84f3-9d89a04a89bf",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1c30c24-e70c-4df1-ab30-d387329c8230",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b14e948-08ca-4bf5-b3a7-6c60d528780c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "184fa541-305b-4db9-bec4-f21de90c144e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1e55fdcf-8a57-4a5d-9dc7-34078f527c59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de876878-41f0-4922-846f-7ab941fa5bc7",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af223229-1495-4aff-a362-3a3aeb2088ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59324eb4-ac5d-40ed-a782-9ec9b2cb3824"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a9d5abd-8d34-4f66-b446-c477bba2efdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "987b5fad-5363-455a-a298-b8cc3529638b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63fb2a9b-b1a5-4622-a5c9-9fb981245250",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e43ada7-da44-4256-aeec-c935eddf237a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60c12c34-de43-42e7-ba9b-3160f9f081e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b323238-84a9-4dcd-a431-e4d3bc8248cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5f3fac07-88a4-4a78-800b-9c9035159003"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e7abe4a-85db-4a80-9dae-63ac7337e336",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63524f2c-f782-49a9-86c5-4d4319d25e87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21fe4c20-b698-4686-b4b3-1ca1288e0f19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fa3876a-8dc1-445e-8f23-b2c24f1a0315",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dbcf99eb-00b2-4ae7-b8bc-fa31624ec4a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f43cce9-688b-4c1d-a509-b744dd7f5126",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b929590a-0c6b-425c-9f40-74af892ac1db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd9a7315-2e24-44c3-893b-b075e94e85d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2390869-67ed-4fad-acb6-42ef89eb186c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e1eb8ef6-5277-4cfb-bd5e-b14e2546efed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6a152e2-c004-4476-81f4-41ec8900c780",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acea9e12-7e7d-44ed-97a8-ec7b5ed6fb4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7361f8f-f43b-4130-bfb8-1503e91eb338"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72142253-3996-475f-a33e-c8ed8ab56d6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a8cfeaf3-4c62-413e-9162-bbfeefbfd17c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "773671c0-0226-4ab0-9f91-b7a23720eb29",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49c2a51d-f24d-4f39-8c20-7e23f5d6e039",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee0bf3ef-f3fd-4398-948d-265d21793701"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5669867b-e76f-438a-a8a4-66b6443abd91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4aeb630e-894b-4709-b638-9b8d58916217"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84f01c78-261d-4715-b7aa-ec8100bb0dc7",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e1d7d22-e5fa-4b7e-a754-ee7e1772d628",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9af4c922-f311-463d-8c0f-32f5ccaf3e54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "499f341d-ea19-478f-a76c-b00aad801dd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "743b2b50-5542-4ed7-aa70-c21d6b670e5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa3e8e0d-abe3-4e92-847a-97a9d4683bd0",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "588be5fe-5897-48ad-9b40-b90351fd89c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04179286-f735-4f6b-8243-afe9677ad575"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d075e5b-6476-4fa4-91af-d21137681924",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fff626fa-af13-4095-8522-a35b80fec42a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "209aeaaf-9ac0-4d93-ad77-0b24d36944e4",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1230e18e-9c06-45d8-a99b-629953937aa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dc2a23e-2144-438c-8c4c-57ec68be9c90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "043964d8-33eb-4731-8188-67b349c0aa68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2ad0b134-9bd7-4412-8b10-45a64bffe1a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "525a79b9-047f-4cfc-b05c-0b0036e6ad57",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bbf83d6-ebe7-4fde-b273-72bfb045d166",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc45067e-e944-4588-af8c-1113353181f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77a4084e-3dd8-4962-beae-f388af73087d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b7ed6226-1454-415a-bb8e-4bc8ea3f287b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74186c62-27d1-49ad-9a30-570b19afd6fc",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffb6a789-007a-447f-8c3f-b7d75d359c4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6289df1b-b0ca-4698-a6d7-4859b0d1c39e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb198f49-c76e-4e4c-a2b5-21d84bf854b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "beec8922-fd9b-44a0-84a4-d0c5f7a66f9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c66911f8-b3fb-45a4-bfee-7f558c2802e0",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6ceeac1-aeb6-4b51-8ecb-abb62923190f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a048411-9543-4a50-ba86-48c501d0420f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a8b8828-a6d8-43c7-bb89-87ba160f8601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a05ebc8-f87a-496d-9013-1823c5073a34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebb01854-a877-4892-958a-0a9f619f5b00",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de9e49e1-c876-451a-8b7e-d92b2099ee65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8132aea-5335-43c4-9812-9728432ab043"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebb18df6-fadf-4463-b4de-a91a7d7d2eea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6661f83-6264-4bf8-9db3-a02486f9a90e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d326afd0-0bf0-4f7e-a545-d5b27e38809e",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ce81501-66dd-45a9-a338-3275e0f0fbed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c97a6ced-200f-465e-ba3c-4b9929f9aeee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c821bd25-af69-4df0-be60-c5cc3eccb249",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a91c609a-c9a7-4375-bf1c-232991faeb0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d966353c-2870-479f-874e-09de5df6909b",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23c0998a-ad11-421e-a7d4-50f44b05d4d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec04d09f-7257-4e35-aacb-446ddab701e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2156a769-32bb-4853-af34-28792fc535a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0cbd591d-8591-4e89-8c96-6b45432c4ad8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "435beff4-bbc9-4117-abd0-9803bd54cf82",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fefffea-c318-41aa-9baa-e82b4095d53e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a9bc0de-9c00-4f27-974c-486f31d2f3a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a70766d-3441-4851-9565-bf74c3c1a263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6e84d924-45a0-4268-8fb1-5a884d29ea8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdc2ece8-205a-4d2f-b9d7-6425f24fff55",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05530338-0e3c-4aa5-b87b-ff593390cc52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "037bf271-0c7b-4f01-852c-67d65eb453bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04d0498e-42cc-4fa5-a6f7-54e4de03fdc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0501171-2d32-4d99-ab39-8c36eeed8aaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20c49d80-bed4-46a8-929d-ae4f74d1497b",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e6bfdad-8a07-44db-ab2e-06b42093ed2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "101f88e1-9638-4f97-9ce9-ecfdd70f0abf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8845d97d-81a6-4745-8ab9-459f4847b596",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "91b18e33-eb83-4a92-baec-337af95f81b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60ba10b3-2b3e-4cf6-92b1-e8003ca00315",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d568370-c09a-4439-a76e-b7f0b44dbae4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da451e0b-2cbd-472a-8a31-03b3bdc99076"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85f773ff-9c68-41ca-babe-5238e4184b96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6cd19fc-0ce7-4118-b055-fb0dfbc69d27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c703b11-32c9-445d-8c3a-ed0637998740",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a4371d1-7ee9-410d-945d-5b1650abeba9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fcea1f7-a17e-473d-8405-306361bd255f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4669d999-59be-4d92-b5b3-652e75fdfea5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "03d83f03-4a85-4ca2-a3e4-8a47bcb38700"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b43ade02-962b-4299-b40b-474626d8aa3a",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e35c3f1-2945-48b7-8724-e0d6bdcda903",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "795a6e64-76c7-4f87-9155-d910a8d518ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3ba1e7d-dff5-48be-8dba-672b5ca4befd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7023e5f-96d9-45f6-91c8-281a60156a97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b12db15-bf3c-4858-aad9-73251a22e851",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c2f5bc4-529e-44cf-a563-2b3e50c0bb18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6b475ec-40b6-45fb-a429-ac7deef366d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb174e28-ffe0-4fed-93fe-28f165fa7f25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8b31e98-9746-487c-b273-3176b676b4ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7edf173f-7da4-4cf9-b9dc-080d4ce0e1ea",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff5b0a01-4094-4b32-a0a3-7b8f4b969c78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3632ef80-27ca-4bcf-bfa2-4f1b7f2f1bca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9ea58a3-15c4-4ff6-a307-e19043f4f351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "a785c120-30fc-4cfd-ad34-c544bd4fd4eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af4cc01f-74eb-45c7-88d0-cf806298d18a",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b63c2c43-03ba-44ab-9744-755662f08603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d824096a-b0c6-4870-a495-7fa6270af82b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17539fe5-4038-4a2b-a3cf-329e69969f10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "885cd0e0-ecca-4753-820d-730e439aaa75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad5d04cc-c446-4563-a4a8-8fdfb78b97d5",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7af88d43-3591-4f84-baf6-06c1a1a78e95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "defd3a4c-062c-42bf-83aa-7aceb323816b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce4628b0-41a2-439c-a83c-e0765e3e5d37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5cbf42ff-33d2-4c89-a396-4e249090f6fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0493a91b-9059-4ace-af6e-0eec1000b720",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05ce857b-6d27-4083-bb96-c50a7364e418",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f5473e9-f21e-4c7f-8f4f-4793bbd7e17d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c94263c-003e-4e36-b2e4-1c1651f40e2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "548091f2-4c15-40d3-9e4b-3a0ac7133f36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8c3ac69-f80a-4666-ac1f-1e13ba968a2d",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fd10c97-8531-4f18-8339-fcf0ae9a2a81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3ce7c37-5009-46b6-a7a0-c611e3ba369b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fdc6a24-6dae-4af7-baee-cc74f1d17b2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "40f20003-7811-48b6-87ee-071a4b2d2703"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62f59c09-9145-4758-bf9d-5bbdf0b16783",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "702252dc-bc97-464d-bba1-30fb5f1176c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ebe7e1f-b9fe-4500-a889-492387c43830"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dcc4d17-b7f7-4a8d-8ebf-8033dadbefba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "dd261a67-1566-4402-bd64-894b105b9228"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d8a17a6-aa12-4cbb-8a19-eeddb3525dd9",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e7e31f0-ec3d-4f36-8fb1-d14562ba7883",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "03f86c49-94ab-4ba4-a740-7959aa893bea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c5b39ca-4235-4aba-9baf-ca1fae9f5154",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f920f05f-0f10-4210-b21f-fe4fcdb9f1ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17561c86-45e5-4d3d-a751-7f7b2245526d",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a87dc13-28d2-438e-9f17-0305acfc98aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd2f4b93-ced5-4160-ae63-6d1fafcfbf49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b37b48e7-6841-4dbb-a187-2fa8f5799f00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d64ab496-3fae-4baa-b9f9-c056e223b757"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3cf0d61-22e9-4b8a-b3a7-9a0753e3932d",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e52b70d8-7fea-4fdf-9270-21375e54c5e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3bf912e-2c91-4fbb-93c4-570c43ccd313"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15c7dd57-39b3-4e02-947e-d076d1b39180",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "067d5a43-9790-4894-9149-d2ea19e89aac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23b60eb4-ad57-4140-86f5-dd5f5177bffa",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acb68dd3-99b1-44ec-b694-eef029d1f5a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f341e094-ff69-4337-b3e7-a9a0e8797ad6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbfd024b-fd4a-4cc4-bbe2-d104f37a6666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3ee3f26d-0926-4bb4-bffa-2dc35c82e921"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3953050-c264-4e28-afce-1b828069d260",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5260f2f4-70e4-4346-88c4-aa69db9401ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0aad5998-d5f9-49c2-9dbd-97ba2b95dfcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6799e15-b58a-4b4b-b22c-23f9c1476178",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "873372bb-aacf-4c57-b76c-007be38d556d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cc87adf-69f7-4e45-98f1-65aa152b29cd",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "507b229c-4128-4dcc-8fe0-cdc24633eaf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83af3c2e-d1bf-4083-aff0-180c9ce69686"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5ed6831-7e82-47cd-986a-d6aace1ff07f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5fcde7ee-211b-4cdd-8a4a-7d8e64cbcdb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a45a2801-958a-414a-a54d-03bef36177dd",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f80d8def-0a46-4233-b95a-379a6e6b9007",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0493b35-1931-4230-82c0-10fff90481a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1c6ee76-c9ea-436d-9d51-ab8d94fbbba9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "a3e12faf-377d-4c7d-bbf9-3544f4baf296"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e34a49c6-7e8a-46b4-8ad4-06176e47efd3",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dbda570-22ab-4fb8-84de-ac8ee49a5ee9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68e134c8-41fd-4484-823f-ac7c8745a4f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77bae856-cff3-49fb-9562-865692773739",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "9309160d-0634-4ec6-8f25-2d02764ccace"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67cca70f-d911-4032-b897-3866cc35db46",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3af8c41-c6f3-465d-be94-dd30139fd10a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b156b84e-2749-4a3b-87ae-caa1e4358386"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f157fbb0-3caf-4bab-aca6-2d4311e1d728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "e303a86a-9a7f-4f04-922d-a05df24afdbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "809b9a08-433b-4e1d-a426-9d675beb8023",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f899f531-9314-4461-a0b5-eeafff25336d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f9c4a37-fb8b-4473-921b-3b554735f925"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aed64484-56fc-49ba-9e98-219f6a194ad8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a857ae3d-ad35-42ef-b939-6824600df201"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d34ca159-6aee-438c-ba3a-4c28c631f99d",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b58f983-8a86-4379-bf01-f38b2c0e77c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd40f647-b578-4478-8190-4c38495a4731"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04be1213-ed4f-4b46-a735-221a9355f2fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "92fb7a5b-b7d2-4930-8682-7762b1d450bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5df14b2-2cb6-42b6-a5cf-e8be5ae521d1",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b4456a2-2a25-4448-82c8-2daf899fc57a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3edcbad3-a8e3-46ab-8cc2-e7b9782c5f3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1745d5c-6313-4383-90af-b40a4d837154",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8379b79-8340-4d38-9ee4-5563b367cb5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13efbbc0-1b0d-4c7e-a536-b1de1778b40f",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23943e28-1d8d-41ee-b708-d3a0acf0eaf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e2dd1c3-a7fe-467e-972d-8adb9696572d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14714d75-999a-4996-b111-6cb1dbf1de43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a63b775-722d-4228-a5dd-491d4ad18019"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31534fbc-3b83-4123-8ec5-e5aeef106422",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a66afa14-53ba-4453-aed8-33e9160f1204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b17fae16-1d07-43c7-a7f5-fb4d963ec89e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95d1f01b-6c0b-4a37-9079-1af134187418",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8f80d7d6-3992-4c36-be77-aced12cc8182"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f86c55f9-7e94-439b-a1d6-31bdbcee368e",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec415661-04f9-421d-8ec5-4a8435f5ca31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91710560-9c83-4676-9c31-0e7dd1816ce8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bf33314-f49b-48c0-ae87-665a243da038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "537bc05a-f5a9-4fab-97fc-4cc1bba53740"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ad3b60d-8058-478d-9037-182e7e7c3ec7",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df4db167-629b-4515-91db-46e2e690d41f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6146e490-864b-4831-8dae-c73ef4b495c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8088b2f1-ad99-4fbb-8021-ff857b666541",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "3efb24a9-2f46-4938-98d7-a060ced95250"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaf5744f-1456-48f8-b330-d7e5b23e2b11",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61ee1fed-a617-4a53-9233-339b46d9ca5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8df001a3-a429-4754-a452-f1b2ddcbb31d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b90df374-00e5-4575-a530-9a83fe1f624d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "01158e09-03dc-47cf-aa25-2fc5f55f8707"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d35df185-bb9f-441e-8426-44f73d7ae413",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92770c51-46d1-465a-9596-872ba5a26f1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5c677e0-64e9-4290-9e85-24cc9834dc13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d504f361-77dc-4e7d-9d8d-ce904766100c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a08a6f9-11c7-4a24-93ce-c96537048d29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e1730dc-3081-4ae7-9b1b-9f23a70c220a",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d0a2fb0-8842-449f-b2c3-2b54e68f4a49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "516be664-58c7-47d6-bd99-da425c1fc655"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfbbcab1-7e77-48e4-93fb-1a2c62b5548c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "06d3cfe9-a65e-4160-abd4-c12baba1e086"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99a1762a-9c38-4abb-a595-dc459e7cb501",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14e41e65-5315-4b9b-b486-e4336b84392a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3c4dc68-729c-41ae-88f3-015d12f3d0e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "808427f4-5cdb-4aeb-9927-e3f707673820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f402ea87-d735-48f5-b39f-94f111e989fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5368c57-18c6-4fe0-a6ff-21744f87a784",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d2bb8ff-51d7-4d55-b87e-01813efc5bc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d395e9e-a5f0-432c-a8a0-180eeca40704"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "817e85dd-a716-4cf2-bd4a-fe1eb6c23c37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "ce71fff0-1446-467a-9447-7997cc566827"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34dab368-74d3-40cb-a018-580d743a03ab",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4c3715b-149c-4fed-aa6d-286cb1c54c09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99875b85-9a42-425b-a2dc-8c462c207957"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77263f33-3f12-4e73-b82c-e78e0810c9f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "862f7bb6-12a2-4f4c-a2c4-1e705d25f13a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2085f8c6-e85d-4713-911a-7e10297e2734",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd315f65-8bdd-4800-85a1-59685a00a9ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76dc8beb-9f56-4a65-9617-2b818705a9fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c10f250f-84ae-4a8b-84b1-569776dc5d01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4cf5f9ad-8ce5-4d28-8e76-1b07db562281"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd5a83ee-f06b-4d8d-b7fc-9beb7f0b755c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bec284a7-8237-4ee2-bda2-11fbb4114d90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d823ad1-9aa7-430a-ac6f-eb45eaa121f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8c9727f-790c-4237-8dd7-562b719b93b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "3c7589c4-7a75-4d5c-a28b-651662b85d87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f96a464b-ad86-44d8-827a-a7dabedd5e84",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d27a7617-4e8d-420c-903e-322c5870f5ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53ef5f92-604d-4909-b67f-0e8e594c1eb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c91a734-623d-48d7-bf76-27c64c148d87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "cbca4ed6-1af8-4ab1-a607-423454cb1c23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be401310-418d-4145-a9c1-d983b6fb2478",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c745b865-2cd7-44cf-8054-11e494e88e69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74e96a7b-4ebe-440b-b22c-4f0c3ec1beed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5ec72c1-d1ec-4f1f-9254-534ee1c401ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b254cde6-0256-4fdb-a30d-14efa0c740a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cf846ba-145e-4eac-86eb-9a4aea519dd1",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7f6bd60-1a5b-4cfd-807d-68a7cff6d132",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24426054-64e4-4404-a223-a94f0e4437c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4f07900-a119-4147-b917-4280068f0bca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "56cd336b-66cd-44c6-b91e-a15a4901cfba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "960c21d0-19b3-4777-b446-f5e90e90becc",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f25b8e1-d0aa-415b-9c4b-85cdd40ab4d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a18d981-4e25-4b58-885d-e5972e971807"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c50bbf51-7407-4a48-8b52-424559b60d23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f19a63e-de4f-4269-b313-df709637dac9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d34bd1c7-bac9-4473-986d-035e623d2e5c",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8d59ead-c8c4-487a-9f0f-04ce567e53a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "475a2dbf-add5-4461-a3e1-7c76aa6657ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbee1f65-2c6a-432f-b8ca-d39d682a1486",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0485ddf-abf5-411e-a16b-73ac28874cc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34c4cf99-32f9-4c47-b35c-518d2fea401d",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62d36903-2e26-4e9f-bdd7-ea71de1a57ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edc50425-6bc0-4c60-bf36-34f17848c598"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5c9382f-fe99-44ed-88d4-fbb4e6510f2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "121347db-c8af-4b9e-995a-93e164e3b18f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eae6f993-7b69-48df-8e48-6961c62a35ef",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f057d6d8-7a50-4002-b4ae-7edbc4bc7662",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef9c9b3c-13d2-403b-ba32-5c9ef9bf7d60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba4d4dca-20f2-40d0-9f90-1ed8a89b7b3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb00ae76-a152-4aa6-b6a3-6fd2a31c9085"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b72569a-bbd1-4401-869b-df41b1efcaf2",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20212402-fbc1-4fb6-9036-f280c7c143e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15acaaed-6aca-43ba-8e10-c42d79ef1398"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79655504-6c89-4b47-a95c-891b69f13e9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a1aec458-ecba-474c-b2de-96b48a32ac2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4e59561-c78e-45e4-b091-012473170b9c",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "290986cb-e960-40bf-bbad-65b41e2b0820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8c30a93-12d1-407e-bc33-b94cd725f055"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0174254f-a31d-4640-b739-2cf5f826fd1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b25526e-e60c-4034-8da8-af1300ba6803"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3ffe401-6d4f-4544-b8a1-a3f5f66f7ec6",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80e9974a-52cb-4e61-9802-2029bca0fa4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7250626b-5d48-4880-99cd-12a69ca86435"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cca713d-f3e9-4e44-8389-8c208b3ef603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "bae0404d-f315-4556-87a9-0130c4c00f1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9aeb5b5-fec4-4189-af21-5d1011654eb1",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42891d12-f503-443d-b689-df912f91cf22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3277a76b-3d3f-4519-a1ae-51d1090618b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9705dbc-896a-418c-b976-27a1b273d98e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa58718b-5e46-439f-8b60-8eda2ccc8eeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0402a27b-7779-4590-b00a-a1df3f52e2c3",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f442edd-6802-4b95-a827-ddeba5c31486",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b39176b-a6b1-4a1e-915e-aeef0e73248f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eef8946c-3d05-44f0-8389-00132ba3c44f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "22fc1cfc-251d-489d-a8fa-fe30927763d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7c98521-72e0-4767-878b-0bd21c3f1632",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11017152-a012-4705-8637-c432a21abd77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfa7e39d-2733-4479-ab33-4f87b0f4eb6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17e25463-637c-47f6-a4f9-df23633edba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f20c9f1d-db43-47de-a791-54bb0ccd96f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9ab427e-d977-4012-a44b-c2d2dc37f3dc",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb9f8868-6139-44cf-a6bd-99a2ba97397b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82ec4fe5-f4fa-45a6-b798-335c1bcec15f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74a2eb80-705d-44b5-b95d-e27c784d1485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "143f11de-a991-4657-adcf-cbfad69c056d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea72fb29-fe5a-4d91-97fd-317e512d0f85",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7bd1d2d-efc4-49e2-b108-80eee5431b3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f32c531-fc9e-4c5f-98cf-dab4cccaf37d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99ef67df-0b9b-4a45-9223-1ecd011fb79f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d07b1db7-92e7-4d0d-b0b4-6c843260a7b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9c7f439-a58f-4900-a861-9241a30132cd",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2a7188b-ad19-40e9-9346-d8f89aec68c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e0eef1b-9063-4b45-8c77-976d9851ec1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a169fb6-1ebd-4cca-a86d-fd5d6a75ec63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f859b9bc-e0d1-48af-aabf-83c8e38e72f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24d83fa6-2f2e-434c-b41b-8706f8a00aa2",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ec82a1c-8b60-43a9-a43b-921df54fb792",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c271e833-3a3d-49b0-8b81-e997c1025acb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e31a5e35-03d6-4a40-8eee-3edeea885c19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ba759d1-759f-4e0c-beb6-bb8c6af7362e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92818fe2-9c9a-4c41-88e9-dd2ed8355864",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "110a04ba-4d7c-475b-a8a6-726c5ad15eb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a187183-0980-4fb6-aaa3-91d7f1510731"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a67110a-3509-4996-897d-36adabe69811",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "072d9c95-d9ec-4830-830c-e96f82bcb092"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c63f898-7d67-4224-908a-0da2262ee47e",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54f96716-6745-44b3-afae-34454e88b54e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c283331-df14-4ccc-92fa-7d0a1db74bd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdb955c9-0dcf-4d2d-9704-17fd21fdc4e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f48f4b5-6c5a-4da3-add2-0582a782dcb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "824636ec-6439-4008-94c1-5050cf28eaa5",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9161ff5-d654-46af-88cb-2aa99dff2e78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b03cede-9d04-447e-b100-de6f852834d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66e4db75-384e-4f17-bc93-74f535a60d0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "50b9e225-9c16-41b4-bcc1-a8449938f9a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e6f6f28-ff29-4cbb-be7b-56c5755a12be",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45084db9-5867-4846-adce-754de61a79c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efa43e39-2c6f-42d2-a0fd-9ea3b31a13d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "061e08f1-d9c7-43d5-a356-6efb87550b9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4c9eb892-f3cf-4a78-b4b8-0b4ce647fc05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cca6d5bc-696b-4863-90b4-494cb03b6562",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9d51d00-28ab-47d0-8b00-6febf69c7867",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbae0703-c322-4d31-a108-c98ef7fd6cdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0b33ec7-025b-4c58-ab49-879eb3a7b85e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9bb0dfa3-a519-4489-9bdc-747fc3251972"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cf484d7-b846-4032-b011-8f87d9700020",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f58e3f80-e74a-45f6-abc7-2967e761b81d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd7c3d2b-6a2a-4263-8316-9ebab982fbef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11895634-107c-440e-b8b1-707645f94807",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4bc4b08-6078-41b2-a358-c6f9a013095d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38e3575a-a013-43d9-a633-53452e07d0b9",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2eb3f75-9e19-4f16-a171-f055c1f803d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd895a4e-b7d5-437b-a95c-b068919cfaa5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fca66a9f-854a-4d3c-9937-e1f08448cad8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "25a449a5-d59c-4c77-8918-654bbce3a7f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00a8f01d-d195-46f0-9623-e4d5e46c5726",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "562e46a7-d534-4329-85c1-eef0e6b58c35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21dc5d1c-9c97-4181-b119-e05abc2388a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9ace31a-70f7-4c13-9286-e1cbbcb8543e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8112c71-1d62-4cc1-8c29-d22e0d196850"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33863765-eabd-4b13-86ec-af07384324ad",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ac867c9-b846-4cf9-aa24-d20f093980a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfdd950d-5a25-44bb-a820-7127de25c751"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44abd368-a036-4bdd-b907-d887e8b77b47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a54e0fb1-2a4f-4c1b-b10b-9f0de5993c2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "954b9cb4-1055-4f7c-b85e-9e7ffd2a5e5a",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52777961-5f43-4c12-9e07-85d64b2a8524",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db5e50e7-2121-4816-b714-478f1d60e481"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48add9ce-648e-4548-a8aa-c83fc6a2fef4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f6a02242-5828-43e8-9539-79d44a887b13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f283b2be-9429-44ac-8bd9-ed529e924ca4",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a57ae13-0407-44bc-a3b3-c09dcb9ca65f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc331943-8ce1-4833-b518-fc2cf5a00ed0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e3834df-7a99-4f49-9ed8-60630a7e0019",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "96735d83-b441-4f50-ab95-c59f071bc1de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a21da56-b135-42d3-adaa-a4da45226abe",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "311eedef-baa0-4452-9315-2a8ee32c6446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ca15444-6f5f-4f67-87ab-536929a4c914"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b87cb50d-4a13-4738-8e56-de77ba1e2210",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "56f62118-4cb0-4d24-aec6-f135200333ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4afccba-4cc1-417b-ba2a-5c15251ba2d9",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbec5be5-d579-4aa3-b35c-1a2ddd2c81a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a0f75de-7a76-4540-be7a-2a05daf1f4f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "460720aa-833b-4f97-a61b-a6931e9ca0f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "dd44d59b-2352-4fcc-b838-6be99d7b0b95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2853023b-0aec-4167-b37a-ae94c33c6522",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ec9cbd8-eb0d-41e9-81e8-7a35f93a428d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d16f167-34b0-4b23-95cc-c5db7f1b5108"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c1e72e2-4ccf-4a2c-98cf-d262e0edb7da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f10fd0ca-9a69-41c0-814e-9581c80ac20e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a0cd88b-2f60-43b3-bee9-1593eb114c29",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c20c84f-a5fc-47bd-ab6a-2eda9a79ceff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd887641-4b68-4ddb-ab83-5eb40a5e8d1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5765153-55bc-4101-ae71-90a9ba6d0a49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "555abbfe-e288-4801-8e45-a38b723f4af2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7c7b132-116a-4f34-86da-3a0927eb53d8",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a03592c3-fdab-446e-a6b5-6d1ba252df5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "0d801af0-483a-4b26-a8a5-302a814b10bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e11d7918-f740-4e96-8ebf-e4303dab201d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "1a9b088c-9eb2-456d-85c5-9f7bb6f2b1d2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "975fdf0d-3722-4a1c-822c-d6a4774fbeaf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "436cd4b4-8e68-4d68-aa24-0c4316f76313",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df4a47c8-bbc6-4f88-a610-bd08a499f877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c84ea779-b732-45a7-b8f8-1714568af07f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2a646e3-2bb0-424a-be35-a1713c8a1c2d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "64a91b23-6093-4e0e-a2bf-a258704fd2c4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "92948b5c-68c3-4aa6-9677-b39d6a92870a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0e1eff5d-ff46-4632-8f77-6814d491981d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4f5a65ed-5b5c-4e92-b2c9-906299cf10b1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c4f7a2ac-a75a-4bb8-82fb-85401b51ce3b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "992867ed-40a5-456e-8e7f-7c09da56507d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7d020799-a455-4890-a07b-34e9007d7391"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "02977783-e8e9-4225-948b-cd25eadb144a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d2350be2-6f84-469d-b0f9-49811107f591"
                }
              }
            ]
          },
          {
            "id": "2f5203cc-7ce9-4fdb-b6e0-6279299cec1f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "bbff32ad-e803-44f8-bfb8-fc6a666a61ec",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "b8320b5a-3aab-4129-9b35-825ec56848c0",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f4015de-5462-45a4-8a05-84a04310c4e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "14dc1b13-6407-4d1b-8f75-2d70e3538151"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c78dbc9f-5a9e-442e-a391-8d73aa8ce5bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "677d6944-3eda-4bcb-87e2-425cce329722"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "70c6ff52-b4bd-4efd-a039-cab38cd93471",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d3d29caf-20b9-4727-b3d0-c239bcef14ba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "40d6483f-dc1b-4b36-b8f2-30934f1c781f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b3998325-4ea1-4738-8fe7-ca02f2b7c169",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0c31d9c5-ccd0-4388-950b-a5cfa90c15f2"
                    }
                  }
                ]
              },
              {
                "id": "aacbbe32-3853-460d-9bae-d0f002ad225c",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9ee5345e-e39c-414d-a014-25492215e8c4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "08d54628-0a44-401a-8339-949f5ad1bfae"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3f039648-c906-4d84-a538-7bc4845518b7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "26740829-6903-4967-a2a4-f4a821dce38a"
                    }
                  }
                ]
              },
              {
                "id": "27e1674d-e1f7-4b52-b26e-266db024851d",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1e0cb642-85f4-444c-9aa3-4c15fed2fe3d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c17b73b2-5952-4fc1-acaa-211df9ee0529"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3d6c995d-77e0-44f8-8d24-cf1f8f8e643d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "eb75e41f-ee7d-43e4-a835-7013a0cb5961"
                    }
                  }
                ]
              },
              {
                "id": "7f68e167-df83-4bde-a3ed-7929f18b6b9c",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b0b376a5-b773-41a8-b845-50cac1b11236",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a5b042f8-2185-4d17-9aac-167aecf27af5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ef08a6c3-1640-488b-a6cb-6a32e9d40a8e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "08f4f7d6-50bc-47e7-b063-f8503d844663"
                    }
                  }
                ]
              },
              {
                "id": "7ffc6d17-3a23-4e8e-ae3e-ab55e49632d1",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0596f05e-b002-4fe2-9787-61d1016c16e4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "97bbf675-98e6-45e4-9b23-9554e20f1729"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e96a40dd-a71a-483d-9688-86d00f378e75",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "4d2c8d25-f577-4048-8360-e2e378ab5517"
                    }
                  }
                ]
              },
              {
                "id": "bbbea59a-5f15-4684-83cc-4048decd4627",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0fa818d7-7996-4dde-8c5e-b400bb980b9c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0c78e469-c5b8-49ef-b312-1c4a8b309b9e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "05ef8f28-57c8-4ae4-8a3f-7b9d33e2660b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "bf9bf423-8308-49bf-9b56-c6dae507e5cf"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "996a1882-b30f-47eb-9088-0473474aa828",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "edbfc0ed-f672-4051-8f25-367a119848fb"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d2096704-7ea9-45a9-961f-5f553e4ee059",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "79f90a0b-30f5-428c-87f2-d5f1eadb28f6"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d5dd4692-1407-4ed6-b247-4bdee673d7cc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "3668bd80-1cff-4af3-98bc-2f6090777535"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "22622439-e2ad-48a0-89aa-5c3c81bc6e45",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8ea1d6a9-3877-49ee-8f03-7b128e024b53"
            }
          }
        ]
      },
      {
        "id": "ff950aaa-f536-4d5d-b5a9-13504bf4192e",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "b1be4751-c3e4-4867-bb6f-0185327545fb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b2af487d-0a00-4a0f-beb4-b2ac1d3da85f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e2c6d376-817f-4ee1-a62d-b7844dce3982",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5385c70a-3afd-477f-8f20-8a1436b14910",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1eb61bbc-0d78-498a-92f9-6edd4ce66045"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42b1d64b-b37d-4759-ab90-254a8a42ec4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "26b1f1c1-31a0-400e-a57c-093744f0f033"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb3cc3db-dff6-437f-b036-296211928d88",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ef028ff-a45d-458f-ac20-966aff5d0930",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a722a9c1-9660-4433-a1e7-1e7fe657103d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c61c6def-558d-461d-a3f9-e975b5df0e72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4e13342-1e3d-443a-abd4-84ad905c0086"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d87fbb2-f504-45e6-9b40-7ed1a3792bc6",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c5d2646-c218-4395-a074-acf494e0e558",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea753335-8877-4c33-afd6-3c2ca8f6e677"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ba2b020-7512-4ed8-872c-31733123582b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e9ae022f-4425-4562-a4ce-2320b5d6060d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "350a8961-5017-4c21-b2f9-efafaa46868e",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55d01b3c-4f61-4d21-a9e8-ac2ddc917dc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb030ef5-8275-4ea9-8d2d-bd1b2f9c4efb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d95641c-1b6d-4119-9de8-170882fdbe29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "80ed5b25-cf4c-49fb-ab8b-3f3f45731b0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cc9d96e-bc02-409b-b14f-352130c0d6b3",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e216c165-3d0e-4926-9368-86d05803d473",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "deb8be02-e2db-49f2-a482-a6c0e418c696"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51bc2bc7-04e0-4f9a-832b-b96c05d8ab6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "38329c9a-4bdf-48e0-9fc5-f4f9e002fa9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc7b5be4-7f6c-4d3e-ad5b-11ca47ce6409",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36db6bdd-3191-43bc-b434-3974cf951ed8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "996b74b7-78b5-464e-ad0c-6b1bb31c8857"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4284a48-fc48-4c9a-a25a-958cf8cda2ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b7e8c5b7-ec70-4d09-adfd-8ebd84cc3929"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f9f39f7-265e-44b7-8ee7-a646cf158b1b",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e8da6f6-89b4-40f0-97fc-cbf66d9ad083",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1477888c-955e-47f2-bf4c-01a523d108a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c18cb738-902b-4449-a8fd-28b8547853ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "e73fd1da-e5c4-4ea8-9515-b825908ee11d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc93a654-fd64-4132-b9b6-49086ccb3e29",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8ca9858-4d21-4d9d-8cd7-4b1481c19ed5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "070fae54-7596-4baf-ac77-ce93209cb334"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d654c87c-d140-4129-b565-c26ca18a9b3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "76447338-68d2-4d41-8564-629df2692fe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61c3dd60-00b9-49bb-8006-8f15841b0e33",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f91a852-e5ff-4fb6-833d-cd0cddb9b17a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "518902f5-46ed-4d07-ae7b-d99b4232f6de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84a44ef6-e873-4259-83d6-97f2d8c95243",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3590264-b899-4a33-86d5-3ff464e4d9d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abe30ff8-f6c5-48bd-adbc-cec294af87a2",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58bcbea5-c051-450d-afde-93d3ff9dd2e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7fdb30c-7829-4910-8916-d5dd54b0d125"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ee97391-aebd-4ae1-ad28-2c4cc226a733",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e2dfd04-5a7f-41ba-9962-598d63d2b6fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcb2b478-f4e6-4c27-b7d6-e06bc1fcb0bd",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15c10473-b6dc-4854-8c21-e62b72916168",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fed8b941-e628-4bae-988e-5cb8619b3aaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb4e0146-b756-4208-8627-91bdcb16f69d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "ef176735-a5d1-49d9-9343-9a7a43e0b4ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d86dd44e-1f70-40dd-8e9d-fae3cf157337",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23e94cd9-4878-463f-8258-b0fbd5cda848",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a404210f-740c-4da0-96f5-6987a1984b54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b41e76f-1057-4d17-815d-eb18a7cedc54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "37526f6d-000a-4278-897a-65982dbd69a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb532cc7-4819-475c-b42e-264c3a6ab074",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fa30b97-4deb-450e-846b-2496d58d3df7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9844b815-bad8-4107-ba2f-36348ebf73fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb7d8202-594b-4f7b-8334-df20bb2511e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b09aeb2e-7798-41ec-adbf-0899ca6acc4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1215f698-d7f0-41fc-9ebf-f7b0ff9803dc",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "227d2052-1230-44fb-8bd2-6d7295107bdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d20d1e7b-b8c4-4386-a56d-c7718c021706"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e394e72-b0fa-4181-9307-9ebedfefeeaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb6b1016-ec67-4620-b374-50eac89c6d14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ba9faee-eb91-4fdf-98dd-ad1f98a19112",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4ad98e6-136e-421d-8091-f6c92dc0817e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c3093c6-6b65-432a-ba72-0ef411ca88cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e393b51-ace3-470c-a45f-b4fc91ebf02a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d9f5841-ad34-445b-af11-7be5450b96e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc8f6228-1719-4ea3-8473-bbe61d941837",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06d8e7ee-cd1c-4b64-8a37-3a9d49b96d9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7510b196-f327-4722-84d2-6198010c1944"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5169bc52-49f1-410f-9342-0f2003ae3624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "0cf1f60f-83a6-413b-8b0f-8d9364f424b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b56ea01-d9fe-4cf1-b74e-c30cc95c0d9f",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85af05fa-d117-45c3-a122-9849e35da1ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae82fd3f-4401-448f-b6eb-f857fa853157"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac2d5678-a14d-428c-9983-316a3258eea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "29d269a8-cdb0-4ed4-9971-b78461a1ac2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc21c095-137f-459a-9fd3-f6ff5bbb0a52",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cb50033-6718-41bd-9a0f-af544061c624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4802221-f7cc-4ef8-9a6f-1db6c624c1e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73fa7d2a-d892-47a7-9df2-5c22ec2aa1c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "db8e3669-40f3-45f0-b863-c4d85ae2bffa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78f9be34-e9c2-4661-8981-c4c69332c8d2",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "031d2db0-6429-483d-9b79-594b521bb856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0668255-8c2c-4817-9999-75a3905f2e17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a491b613-b1ac-42f4-88c1-0673b91525b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a04272da-1d23-4b8b-af47-58a0db2ea3de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03b8becd-6777-48e2-b172-d37b8e810199",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68f60c8c-7b6e-49c4-b499-99835f3805be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc8812fa-57e0-4af0-b923-916bf86cc0b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bf0c0f2-7e82-4a26-b3a8-021bf8f3ca7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "71951dfe-5d3a-4e7e-ad17-238e6a4be3f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0e30c0d-9d9f-4c1e-b147-d170b64acf85",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e97b087-53c7-466f-83bd-06fa35d5411a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "910fd794-c83f-4a1c-921e-0ce6846f4b18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9ad325d-7862-447e-9900-a33743e23cec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "788849d1-60f5-4e62-b35c-b8efe428f754"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f53136f-bb21-4c70-95d9-893389f54cf0",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2948c22e-9d20-4ed0-9440-86086669f1ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7484020a-cf74-45f8-ab5c-207bfc32b74f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a3e9e2a-7fda-4321-9866-3314b8cd31d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d2f58ba-1102-4b09-8bd5-565f43311854"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cbff9d1-7c7b-4d07-af39-9c1c295e073e",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbbd3ffc-e81d-453a-aa7e-6f127069b51a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0004eee-0b23-4c73-a073-acf42af01ad4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cd649e1-19cc-4e7e-a6b0-8581299e6ec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2b2f1cd-d851-435b-97c6-8e5df1bb2917"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c272d32-f645-447b-b4d8-6824bf664a16",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6a01883-5b72-4017-b447-3186eb8e919b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb252e2c-ef41-4745-8c10-b1d167be2f53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5ee836b-a01d-4281-8226-cc16838c2bc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f08be345-65bc-4e3f-b2fd-85e9c27d7bee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bc8dfbf-ed1c-4fb6-84c0-622b0999822a",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf22b530-2570-46b8-989e-1fa5147117fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ab91b0c-8d53-4df1-83aa-3598de833b2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd734938-4e2b-4772-90b4-083de88c8f9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5b12868-cd7f-4ff7-a53c-1a358962456f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f876ba5-01a9-43fc-a00e-fb781582b2d3",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf322795-ef0d-4047-8815-ec35e008ea82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e036ab7d-3d09-4fa8-aee3-590297c78b30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c9b70c7-a28b-4a5f-af6d-a249583fedbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0be1bc4-25d1-445c-8fb1-e147fb5dbab3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c87e3836-a23b-43f7-9bd0-36f9c195e050",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "909134d9-7bb8-48b5-821e-ce1ec774fae1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38e10f53-715f-4b7e-a039-4b6ebb329bbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c0a3142-22c7-41ce-80bc-0b3d0b3a81c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba927731-9260-40ef-b2ab-31ead5bd2a75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13fd08fb-d109-44e0-9e36-792160e36d7f",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5822dc9e-80a5-4069-987b-84f5042b5403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11ea9546-5323-4676-a180-22691e5f8ad3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95172fda-a52f-4042-8dd9-6a195da7f804",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc2260d8-3aff-4e52-97e5-e76f36180931"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4d37c85-b770-4600-ac8a-90722980ace9",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3d134c1-7a39-486f-b3b5-22c31da50fe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ea579da-e375-4d8b-93ab-faece293ac70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b26dd92f-ecc8-4473-9e3f-ede2e4f4ac2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6df2598b-2796-4873-ad31-6a980bad87dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75d0767b-b0c2-42ce-83ab-0953090ef948",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ec56919-cc0e-40c1-88fb-3e1409460624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb319128-31dd-4c3e-b137-3ffb210eb273"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29a83769-ea5a-42c3-9373-b0169797e3b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b202b158-971f-4c34-84dc-2d98ea103b11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfd0b9e6-fd4e-4787-b604-dd2f97be748d",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "555b7c07-e4c2-417e-bd96-08cd0dac4b99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55c110e2-5646-4347-b3c9-6bad01e38b31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a7c0c76-3af8-44d1-a150-72d689333333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c930170-f192-42bc-b759-d625ca4090bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a31a63d-0785-48ab-b7eb-95bfbed5a7f3",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66afc8d4-a786-485f-b6e9-977c485a0ee8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca4d1955-a513-49a1-9415-adf1efc7c4dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b72f519c-9dbd-4c3e-9fa1-53607740c0be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e94d9d01-2612-4636-aa22-c54af455094d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b17a6a07-8f0d-4657-8c58-a2394cccbbf4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3fb05493-9b2b-49ae-8ee1-574d02423024",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5f95b36-02ad-43dc-b34f-a1d4431296f9",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "9d655742-91a7-4590-b6b0-a05fcf451779"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f761da1-59aa-49c0-8427-16f8af7797b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0609dc28-1a2a-4331-9e95-a4e1ebcdfea5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d90531f7-958f-48c0-b089-af44e89fe884",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fbf1a9e7-d056-4ea2-a8d8-7a33282414fb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "88d0b2c6-8cb1-4f86-99a5-937b21a1b94e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "842d64fb-bd82-4cc5-803c-064d66f1f839"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6b5a89d4-7d62-4d2e-9e31-4136a8da528a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c5b84e14-30c7-404d-939e-90f20473f294"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7803bb9d-ab5c-46d1-9cf9-0742361feb5c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "424acf61-34cf-40f2-8102-54a48df8cac6"
            }
          }
        ]
      },
      {
        "id": "5e9c612a-e7b3-4e11-bb72-f72c2b564da6",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "c1d4f5ae-edc3-4dc6-acfc-94b76535ac49",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6e6b82d0-5c59-4bb7-b6c7-74b821785f36",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "433735fc-c87b-46a4-aa5c-024613bbeb3d",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62c5ba35-f46a-4708-b1a7-23863b672247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "333d47ec-3770-4a34-a471-09fe1b9e9578"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4d2f01e-44ee-42dc-9484-a242f66077fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "23de27d6-1f68-48b3-a790-be35d17b17d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9178890-ef7c-4d75-b55e-69d071684e99",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03608eb3-f3d8-4401-84c5-7e51968a91fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcb24d30-4b12-41c8-8bc5-57c12c7b8bdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0d1634d-2932-46b7-ade1-6f40af9da7ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "478f17fd-bfff-4426-9fb2-62f080d764ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ea04b41-1985-41ec-a424-35f8cd1dbe30",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f293da01-2276-453c-87ce-e2813471db02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3420ed8-4684-484a-b991-abfb5a54aa49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2dc1e71-9f3b-41b6-aa44-b7e6e64db397",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "de19d825-aa97-4cb9-bc18-2c2bcef26b9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1f73a17-7468-4d48-b1f8-8f318ac0a8b6",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52bdbf1d-535e-4f7a-b686-fc3defafa289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57a7d60d-a367-42f5-ae96-c75394ed22f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e8a556e-ec75-46f7-a0aa-1dd5c7b21a20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0af000fe-89ac-416a-b6f4-d3d2e6ab0a3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8c0e5b7-0ed6-4a12-b92e-24b68bf1d16e",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3b2495e-07c7-433d-805b-c82c64dfbff6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0472cbd2-3530-4ef3-9330-df0cc72a1ee5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32de0d7e-2413-4ad9-9971-48dbe4395166",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2032c02-ba19-4af7-af86-a4effc0cd1c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5d6e5aa-f521-4ed4-a044-3a17067c769d",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59baa746-2dcb-4d6a-8d0c-3acb71aff282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fa22316-1b01-42a0-96f4-cd375628443a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "786145a1-5b4c-4820-be3a-68dc16a3f733",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1c9bbd1a-ae60-49af-911e-31422b23bb84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b66aed86-d154-400f-8565-edc40a0fe509",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4453c0fa-f0c5-4e36-ac9b-ab2d34d26014",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf81b7fd-8f7c-4e2b-9d1d-cd3a28140218"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98666653-2fa9-4c49-81c4-a4c6153b443f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "e9ee5fdb-8465-4796-8737-096d08ff27a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58355f8d-d26b-403b-8bb4-7da198a813a2",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "416eb740-c183-492e-a5e6-4629c08ae75d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11982fa0-38c8-432a-a29a-ed3002e11d20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "901476cc-f65a-4a9c-b6db-2984e0ca161a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c33aa638-0f68-4456-8822-f7ef614ccbae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "974b4bf1-a7ec-435d-aba2-8cd1de5480b3",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a23c036-afb2-41d2-946a-d861bd2140ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c2595a7-87ee-471d-8251-00c71f870373"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc189c89-91f4-48a5-b214-a718c2ebb07e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "886ab970-63c5-4e19-9087-334fbef6dddb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "872f7c78-d75b-451d-9ef6-278f8e581642",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6db9582-f064-4d01-83c9-f1defca96cc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a29b528-409f-4ea4-8947-c8405a9fcf25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e81d515-73e3-4e3a-b23c-f70ab5be1123",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "24dec954-981a-42c6-b050-0f0259a6f832"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6ac835c-b4ba-4ad0-9e8a-db5388cef3cd",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "877a21cc-34dc-4ac2-9bba-153f45277757",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1275589f-6638-4898-a271-88b2bf8724ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e414520-fcc9-471e-a7c7-581e5facdd6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "7ae3eab6-8504-4287-82a3-889b5f038c44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b56fe83-0033-4844-9a4d-1b1d08a2c212",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0e42eea-aa3e-429d-acc8-17be7499cdc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8f6fcf1-5894-476f-ae80-56f514614c16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6874c4d-5bef-45f7-9831-b471727bed68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a1a40fe7-b126-45f2-b71d-eb2549e406b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de4fad7d-9f80-4cf8-b451-a96072b79a95",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0529225-ddd2-4425-be5a-f7332517e9ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ab81812-8f3d-405f-b16c-5867c73181a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01a20aa3-9281-4c37-9f5e-727e7d303653",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "dbbae534-c604-4572-b580-69c99eb6c9a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18139185-b2c7-4af0-9281-7f3b9af626b8",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ace054d6-1c3c-4fc7-9b4e-5e11ced427d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99e18251-f4cf-4dff-95b1-06e228c975c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4c9240e-c91a-4c4a-9604-63e2ffe1ed72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6b8232a-9215-4c9a-8e21-e5c1f2a391b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f41959a-5384-40dd-82d6-0904d1f64a1e",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6a822ee-b926-45ec-a07f-5a4b83dd1ff9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a79a8b11-715a-4de8-badd-91c7619fcbcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8d26f6d-e965-4ba5-818c-c4043009d3ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "473dcec6-e8f0-46d9-8bf1-4f179acc1b74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c3e553e-ff92-497d-b15c-4f08c94d20d3",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f79e37d0-b0be-4349-ac94-bf36f8c5e20d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63a2f908-bf15-4dde-93ed-17cc4102f786"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50c004e8-49fa-46ed-9764-3d0cf67e63d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9af8de5-95d0-47fd-8e89-52e33bf2b26e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26c47e8f-6ec9-4d96-af1d-9bc5f6d5103c",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1545f49b-7f6c-43d8-9196-fac675cc4f1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "841de0d6-21b2-466a-bfe2-44b01e453d5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a27dbcac-21a6-4a96-b429-f4a844d36a6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "29a45554-ff6d-4a27-a6de-71ec3ff553bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbbeb3a9-7917-4a70-b93a-17221eb11c1f",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9212228d-692b-4c40-9e1c-c55bb2a21765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06c8fa6c-451c-4e2e-808f-31f107e7eab0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81088a13-e484-4a89-baef-15db95803705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "05a4f898-9944-449c-ae84-b495524c7dee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e148f18a-2910-4fa0-932f-ccbf6e4ecfba",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "551ba503-3e3f-4ddf-bf54-54c551382ba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d46415e-0e67-467c-920a-123c8dad6fbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1988dd0b-2a0e-4b85-b1db-ce5685ea7134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "42796a3e-6967-466d-aecb-6a0ad657bbf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41922e91-3073-4b7c-aced-416eb3a857d3",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "751eafa5-6fc1-4909-881f-765d527e7704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c733789-b8b7-4924-8d6d-a9121e041b55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d92978d4-6a8e-4044-925a-b38118c2ad84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a663903f-4905-482b-b947-d59afbe11d5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3860700-bd40-414a-aee9-4a3b3f742cf4",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9017a67d-c7f0-40d7-88cb-27f727678084",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "846c9df5-87c3-40ee-82ca-26d1a83f32e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8697ff4b-77af-4545-9af4-3d6d1a4b7c30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8fb15fb9-efa5-436e-8cb8-eafb49d3a96c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a2585b9-2d2f-42a6-9394-70718152e2d0",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85a17886-0a67-4d9e-93ea-fb0999f3ef12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2de1e019-0bdf-4461-86d9-7f0888c444ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcd79829-2b49-45d0-8347-0c7fbd3ec75b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5c34e1c-a278-4975-8722-8fec5d1a8882"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7970d5e0-4e26-4ffa-b103-25a1ecd8b7a3",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16c0526e-2d5c-4aa4-a2c9-542683f98e57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3bd9dbd-532f-4591-b17f-badf4d24281e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "664ffc17-e54d-40fc-a757-9e411928f3ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "78d720db-b8b2-4bdc-83a9-a85f182608bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69d0e4d5-7605-4b8d-9085-a91d3c64cb8b",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b766877c-5892-4500-bc7a-3b573a3f816c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8af740f-9e60-4c82-8019-02e4d25c431c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bd088df-7928-4822-9a54-f4de955ddcd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2b37d54-74f0-45c7-87a4-59f036453cf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cedd9cca-4551-46a2-a52f-cb1dde67d705",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3c9ed4d-01d7-451e-895c-c05ba6a7424c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca94e89e-fca0-41c0-8b96-422be0efc9ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da5bea3d-b538-4c30-b5b4-4eb9f3eb0845",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1ca97d3-6991-4d84-8e7d-dd14fb1edbf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc7273c2-72b6-4e67-9d86-1ea7dbe96a2a",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fbdc8d1-1909-468e-8643-38915a9c7b57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92da32f1-ce41-452a-adfb-c6b541738872"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58bb820b-c762-4d84-877e-d0b8e874605d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "42301d14-4b8c-4acb-9b78-0a4ef1c601d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2de2e576-8306-4660-9aa9-76c1b1abc025",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aad0813-af04-4674-b7b0-524599eb769b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ba6fdf6-b874-4bd5-b299-e7b11e6dada1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e58c9024-076f-4e94-8fa3-9f52ae8801a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f29a49c9-0f24-4543-8517-102cc7c73f9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f85c1fec-5108-479e-a3aa-220181a1e36b",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c991465c-f85e-4c73-bf8b-5030c5fc8da2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb760760-6729-4d7b-9dd8-48f24e5fcd2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36b45e33-5daa-4864-bf63-7faaa66d4d77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8a071e0-483e-43c7-a7fa-68186ca66150"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad327aa8-96cb-4edc-bfd9-e882d2a1f99a",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5cca8c4-5e42-4883-a292-a17517220f6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bc4eae4-7c71-4da9-9af5-7ceb9df8c356"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15822507-bc2f-4813-86aa-605d0107a982",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "084a374c-b041-447b-aa84-6d1f94607bf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6df8d1c-44e6-41c3-a7b5-a4d00c6e0c28",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd6e8748-c419-449d-af8f-68e766c5ec61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13892aee-fdc4-42e0-a109-fcd91123188d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34d53b81-c9b9-4b36-b1e9-d74b483efe24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee829e56-6c4f-41bb-9a00-6dca2fdb6e4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "065abc42-8938-4a97-8d62-27681418b969",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f685a19-6f99-4f35-bb2d-48df5e6ae402",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2312694-0e8a-4a93-8a2d-0679764e1201"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ea73689-67dc-48fb-9a40-5b6c8c31f753",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "55d7d90e-feb7-4f2b-bb57-efb421888390"
                        }
                      }
                    ]
                  },
                  {
                    "id": "464aca3e-fb9d-4533-9819-e73355c558c8",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99df99aa-760c-4c6f-bdac-d5efa7c297ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96f4b820-97fa-42a7-bdcd-972e19dc7fcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6541e3a1-9203-4852-8fdb-738eb0230337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "385aa0b0-288e-49c9-9851-faf7eb19613a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68dc605f-39ca-4da7-9f4d-646cdcfbf003",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61bb52e4-acb7-4756-9c94-4c9dc5fb1c01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80da6366-68cd-45a3-9e90-ba7992a8fefa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9803cfb1-1175-4cdc-b7a7-dadcd4d5d190",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "709fd295-e4ec-41b8-9bae-6bcb3f90be32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31b9ae7a-6e56-4724-89af-9d503640aacd",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7571b56e-2b23-4148-b98d-8859432f67d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b5733b6-27b0-40a1-a823-39132ed4f6ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e090ab0-f711-4409-8048-2bab8d098c62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd854609-50bd-44ab-96bc-74e73d45f379"
                        }
                      }
                    ]
                  },
                  {
                    "id": "590cabc1-57c8-4128-acaf-bfaa0bc4a876",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "430b0234-809e-4405-89fd-529504a07cb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dc8c2d0-aee4-487a-a09c-3f9e50da20ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7ca4526-9aba-4cfe-8d62-110f185b952f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "abae684c-29f9-4683-a1b2-784d17c2a290"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c08b6386-caf3-4f86-993f-9568b60013f3",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eda32760-e684-4a4f-8e77-6f79ee934ba8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d700e3db-abb8-42b9-a01e-dbdd208e664c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54892937-efd8-45db-a0e1-299093be7ebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "49fecfdd-20ce-4088-82ab-d74260f0e2ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1156ade7-1de8-404a-9106-1946a2d8a303",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19a8b579-7226-4a9c-831b-65a2f9e59573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c9f7959-8da3-4770-8c19-e9e71cd07872"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88fed536-0315-4efd-8464-617cb4a052ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a7ad3ab-f56c-4090-b45b-da1b6a2a61ee"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "da7afce0-f968-44ff-8488-2533600fac60",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e25c712f-1ef8-4110-8bcb-bb9c2adcd46d",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7832ece-f0b3-4ff1-83a3-20b75163f536",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "6d2374fa-45cf-4e5e-862b-7c2f86208104"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3c3d213-8382-4d12-9a85-00c1125518ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cf389f15-60f0-4a9f-aea0-2a140494fd68"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "679673a1-bdcd-4cee-ad16-5b287ecdb69c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8b6ad2f7-4af4-4f20-8674-f989e75d0e47"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3685d0d0-b13e-40bd-a789-64303c9e92eb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "318d255d-f283-4ab0-8a71-530cd0b916f3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c989375b-2aee-4f74-a8ac-d0a0a49335a3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "efa740ce-4217-418d-bc40-a39a545d277f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "aee57459-b88a-4d99-b223-c36dba948c8c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c909221d-8449-4ba7-8f68-c9060272eaa5"
            }
          }
        ]
      },
      {
        "id": "1cbc6c35-22df-4970-99d6-03d1d3dd1710",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "0c74d447-7136-49a5-8c1a-f8e350f10e5c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2b0d8207-20ac-4e1f-a900-00b7960cb628",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "228a2f06-006a-42d4-bd60-8c6e6f72e998",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a5bd0cb-8c7f-4658-8475-25710d06952d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38f883a4-6dd4-4b28-ab09-46e3ac1195f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94ac25ee-1449-43b1-ada2-d8b305f2b4f0",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1519842-7c23-4a26-938c-380dd0772cfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10b7ca80-129c-49a7-910b-23ca1d1b7181"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f354282f-d87a-43f2-b423-a8f738543ed5",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1065e2f-1e38-48f6-b6bb-6be4f655ceb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69d778bd-9184-479b-812d-6977f9665f0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09b07b46-d3ec-4949-9971-bd5520f42dc9",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c86d1b5-2455-4889-82fb-f3006e06b2de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bddfb24-c324-4460-967f-46f2abd79e02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7848c88-edfa-4937-8704-d3b354331406",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3147b590-07df-497b-a77e-e267e996d37f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9f56670-ad41-4f0b-b302-99c42d8ecce8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3874b09a-7625-4069-90c2-32247df4c64e",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ecdce54-afeb-44c6-96cc-2daf6b3e1445",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "766cd185-da51-418d-a53a-0e635396fda6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35c6c6a9-767f-4875-b041-5fcd10f4b714",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b335271-253c-4ccf-85f2-05d13ce95f11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dd9741a-d02e-4707-9c8b-dad308cf453f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19574634-7f54-4337-946c-e47cb179d66b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f65d878-7515-4041-adab-2a9f587efb20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c80087de-5564-4bc1-a66c-3b8bf4945c12",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a03ad04-22c9-4e55-b988-057aeb69bec1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd615f45-80aa-49ce-866c-b44ee822c78b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6292849-daa5-437f-bbd6-620a71f04417",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c994ebf-4d06-4205-901e-f469900fbe5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82cd454d-4a9b-4e3e-8d46-d7ac4e854d27",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbe86d6e-562c-4916-a159-8241b796911f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53e48631-57d8-41f3-89d6-84e53111b25a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04375b69-3d83-4209-bd44-5f503c99e39b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d07a3f1-0c41-43a2-a16a-0ea0e9eb950b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57ebc6e3-873b-4942-8549-684c17102d24",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e989c58f-f75a-46aa-9c87-cda9e959c1d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "532835be-ea82-4cf3-ac37-706f02b380c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df66937f-2e34-4651-b1cc-f7b93ada2b1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "521a566a-fec7-4ca3-befd-8ab40f9ad0ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e09cd492-e8de-4f2a-a5f4-661abf56f041",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3a7a997-60e0-4b6a-a235-bfcd093dd3e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fe287a0-6c59-4e69-a2fb-13dbfd3088cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26d54223-c144-4dd7-8d85-7e64014cb8ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4327cc7-8015-49b1-9619-8b3023bc679d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdfddfcd-9329-4bf5-b117-4b02c45d29f6",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "277a98a1-34fa-4b8e-86ee-bf9903134e17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed275727-ea40-46ba-8e44-97fb3ac8e95a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d5c2634-d8bf-414f-a414-08f342219026",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "167f9b92-c00c-418d-8b45-91436155429b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "724adaed-edaa-45cf-8cc6-bb90e88c9de4",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b37bba90-5a8e-4c50-ae27-c8cef681c41c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f90f522-ba81-4e3b-a6ab-e8b3915572e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1c6b966-49c0-4e96-8f88-b81658d99f3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d322b681-1cdb-427d-9a7c-83c9d8b419b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10a3fb22-c5df-49dc-b0cc-c21f682083d6",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09d1420a-7cc8-4091-8125-634dbefbfeab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "049e2f48-b944-48a1-880a-4eef50dbb9c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1b9a0da-777f-486c-b9dc-f42aba4effe1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "493ed3b2-01be-4cc5-ba6a-5832d708bdb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cd8e7b7-9416-4a52-ad46-34591ce3f8e1",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba47c828-b96e-4df5-97c0-f2473ac8ece8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f19bbfaf-9b1f-4f11-beac-442e4e589ccd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "754efa37-059c-4dd9-b7d3-163ae4ebf689",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c0b1c51-c9e9-45b5-9ffa-0b5d659f59cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96888f1a-15e5-442d-8dac-032c35b31a05",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb9b0197-065e-467b-8f3b-507660b5a09e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9bf63b5-683c-4d3b-9d52-c5744b1ce873"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81a9f88c-c644-4252-8b48-70c311b7d843",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0373b1e-cb14-4f12-beb0-2be345824071"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94b7f4ed-0467-4d2c-ae5c-d517c236c89b",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dab80c36-d2c5-456e-8ae0-9a77d79c09a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea3d907c-a554-4785-a227-ed28801d5b1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbf74bb2-ed69-4f31-8c61-7ce21939bb6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d56f0d0-d164-45c4-841a-91b784e4dd49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e5f8576-9468-494a-a9c7-a160e3b1ac60",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6e32c7f-5504-4165-a392-0f3d5fd3e8af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70b30e47-1084-4a67-a427-bdde4d0e21bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6bf29cb-5cdc-4b09-bee5-7db89cdfdbfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6090364a-5bcd-48c6-b30c-bc7a8bb7edc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b89ac217-11c7-4864-89d2-de3eefa93136",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "875ac234-7b49-48ad-9ae4-eea6f133a778",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "452b580e-eb1c-4c87-a090-81af7546adf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be0e1f5d-cc14-4bff-9f8f-5d4f0dfedd66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1f6fefd-0f97-464a-ba11-a2e183169601"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a925802-5eaf-4918-a3b7-000a3583e7c0",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7707f492-bae7-47e6-9fff-a377a70b8323",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1353333a-583b-43dd-9330-1b0196c7b871"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a95fb98b-e7af-4de0-8d50-f389ee41cfd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05cd2f7c-58eb-4b8d-9a1b-512967d02044"
                        }
                      }
                    ]
                  },
                  {
                    "id": "935cd8de-f943-44b2-abb6-deca863fc16e",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1b16490-aee2-456a-b69b-8dd4d92f73bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53fc5012-826d-4c1f-8c55-69d26fa7b292"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e44a8118-3788-4ca2-a65b-4e32580a1612",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b09af1cf-2de1-4e1f-a1d4-5d7e5d9e0c30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33cef431-c87c-4ac5-b484-8bb363d93c8d",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1e5fa1c-e504-4ba0-ae50-5ca198c86485",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58e04244-029f-4696-bf1d-eb54ddfc19d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "675a640a-79c3-40a6-a07b-8ced9914e305",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbf8ded9-b3d3-4643-965a-5c17bd995a08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1f1fd13-473b-4637-9689-f6cb18b87d83",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ae07034-e56e-4eef-97f0-d3158e560c8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1047f3f2-7868-4a78-9d0f-60511a39fb95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e75397fd-d7ea-49a0-a463-6fcf2d048b9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31cdb746-8017-433c-b90a-44c081d37983"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3421d5fd-a828-472c-8f9d-5f1c5c463cd5",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08db605f-a592-4321-8195-1b42d5ce0318",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e44738b-14ad-4d4d-a3b5-890b1219da67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "608c07a8-51b0-4c4f-932f-bccc01c34516",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1759a74-3dfa-40dd-8d5f-63214cb81338"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab30e1c8-5be1-4e63-9950-110d5373aafe",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e23f6735-f67f-4089-901d-4b1210d8a2b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a248d0ac-d29c-46a3-866b-918f9562ef13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf4ee573-6532-4a12-a0be-18d0efa43b47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4d7ed91-f00e-4dda-9f8a-c20d1a220adc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea93b6bf-ab92-4f96-a305-bdc2305c95aa",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba70cc69-2ca8-49e6-94b0-395cfd1d2892",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e999e04-ab74-4a07-94c7-93fdc57f917c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74f9badc-b094-411a-acf1-c2b394351e01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "834cfe99-295d-4bf9-843b-799edfe16d51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7177ccc-9645-4ad4-94ca-2ebf55a46ef0",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7ddc68d-67d9-422f-8585-4b7e5b8a68c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06e099c2-649f-4fe7-ae6c-01fd1e268792"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82e910dd-514b-4d1e-8ca7-19563df4d813",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "617259cd-82fb-4723-8a5d-689d5a7f72a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8476a051-cbe3-49bd-8dbe-12ed7208d7f2",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "377141bb-3483-4f5d-be9a-c8a61fb6be7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5868ea8f-0f9e-4a04-8eae-cb6ac9c383f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc8743e2-c1be-4b0d-a6ce-f6c30da0baf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a01e028-c202-4a8f-82d5-0e1a3e612506"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10332e3b-e02e-4556-a653-84fa96c9099c",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f870ec7-0c51-40f3-b4a9-2e071d250182",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ffb823e0-6bad-4a44-8594-712f25995e0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb15f5d0-e766-4ca6-b929-005c4cd2d454",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73c005eb-b89f-4d4e-807a-2e4714ddcff6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fd5fbc9-4718-487f-8ddb-4d7fd89ea050",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6d7ad93-4738-4ac3-b5d8-3a784d7ac6fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6193ebd0-2048-4540-a287-91bf308a4320"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1381629-ebf7-4f63-b43e-af78581d3bf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5548a7d-601d-4dc1-b2f3-a431401c69f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10ff4185-98e3-4a63-ac1e-2efd4966d47d",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0004a7c7-3e35-440e-b90a-1428ecb33f0a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8db6b82-834c-4bd8-bac6-c4739fcb0c9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c98b904-861c-43f7-8166-aaff8842436f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c473f11-06de-4998-8ca7-b3d99bbbf118"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aca8039d-d165-4bab-a3fb-9b5146da32fc",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fad6bdd-db1f-4ee8-a99f-a1be392b7399",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a49f0a6-12ba-4a43-bfd0-9f2995c26f1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ad56021-a440-44fa-968c-55ccc6259169",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28fef39d-5396-45b7-b373-bf3e29001b4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d11c28fc-9e5a-4fa5-b6de-065ba754ea5d",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ca6bcf3-a53f-4ea8-9a7a-b3f08d0a39b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06791667-8446-4fd4-bf6e-0341ce28f00d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d1cbe98-7f05-4373-804d-6a17047fe3a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b20c6780-42be-4852-ad06-9d4b23ba0761"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df7914d4-987a-47ad-bf8e-8c62622d1e63",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55217d35-4030-4e43-a989-2fea4058d848",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2a6223a-9866-4317-aeba-a0bb4bc71f20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf57b000-2bf2-4e8f-bb15-02bd6ed446e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b46afb06-8075-4dff-878b-580a57fedc1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4c24410-eda2-4f47-a6e0-d511f8a78374",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86ddbc0a-b95b-4b67-b660-44081fe0475f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f3680e8-81f5-4bc3-b2e4-f8f28856057f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cab21d8-b8dd-429f-910e-198d8c4bfb1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad54c41a-606c-452c-b2ab-cf0bb8d0aa51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66e8727f-a781-4e4a-b1cf-a5175f2ea2e1",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2db6a21a-f203-4a6f-b417-349b7d5abdd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5575f565-d2a9-40c8-99f3-9891a89e6937"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c54cc5c0-d3e8-472f-83ff-339c59bfd58b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84e3b137-9801-473b-acf9-4af60f114553"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59be47f3-927b-4f4c-90c3-08caa5675e8f",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f28a952-511b-47a7-a039-41c841b2f0fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a7d9b94-2b21-4f82-9696-2b551dcaddd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed0d0178-8747-4624-8547-1aab0870068d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42e5499d-eb64-442a-88f7-5007df333c1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79c3a0ce-dd0a-428f-a6ac-811148b83037",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2195c204-247e-4b8d-9583-cd6f7d53158b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d646b569-408c-45a2-aa98-f6416f659cc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a4e610a-750f-4f51-95b2-a4357f8e745e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3236b46b-169f-4bd7-a39c-14126433fd33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0a9e711-9659-493a-a3ee-c1d10dbbab9d",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a72f0be7-50c6-4915-b3ed-d6aac031dffc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00af47d7-e0d3-43ca-a0b5-0fa405b98734"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76d23cb5-9491-44a7-8bf3-8da78939373c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5fb81a5-2351-43ab-86f0-3427c15fc737"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6c37aa0-2cd2-41dd-a9c0-b91e8ad13c9b",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2ddebd2-5f8a-419a-b199-8258c279c4ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbe650a9-f506-4261-b443-a342fd4df968"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb650568-d903-4ad2-9cce-8f8ddfa3774a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d678e91d-a3e6-4445-ae0d-05fec6675da8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afe205c4-fe06-46a2-9ea3-3fa07c65e9e2",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12a37eda-e91f-4bef-84f8-08de869e154b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d111a52-9507-4d32-a2da-cbbf7e9af348"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8391fb5d-33a4-4a09-bd6a-060fef1ce9d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "266c22f1-a189-4908-88f2-6f6efad9641d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fa07253-81e0-417b-90fd-76608e45cd0d",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41d0c489-5d2b-42d3-8f44-84777d160114",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26ec5958-606d-440c-828a-49089319a775"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66bc5a17-7e29-457d-bec8-faf440d04d2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "508e9565-eca2-4633-9983-371384c78fc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79b3a8d9-12c2-4a1b-bdb2-e1bc8c332e24",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a14b2f1-7b81-4389-8a99-f454d4f93872",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04b1c5cf-5893-4c14-8074-91cc9a029737"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f019571-b7b9-4105-991b-e23718e97591",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bca712bd-fa1b-4b3b-882c-45ed903e5878"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7a77a25-0529-45f1-b14f-8403160331f9",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f93c026-c436-4f27-9d02-04974e385675",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "232850c7-b537-4016-a1db-df5e80709b30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a0cd228-3cf4-42e3-bb89-4dba85c005ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ab2ab76-bb1a-4e07-9a0b-51d029655ce6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5476f7e-565d-404d-8ebb-0cc4baff9bb5",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88d873ae-f1ba-4c58-827b-4d51e5f09a3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d46b822-4ee0-43ac-92e7-b7516d9d0735"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33aac087-d29a-4a5a-baab-244e7266d842",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0679bd8a-bfc6-4714-be78-0c3fa366f4cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5905274-7838-4672-8008-25031d19f919",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57d6a14f-58fe-45da-a991-8323dd7b06b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a66f77b-ebe6-4356-a266-758153239bc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "721d0beb-51ff-40ce-b7af-62e1f697e0aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9061734f-cbf1-46ad-87f7-d1ac8db2db64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89015810-d1d8-4875-a578-bb1c3be00097",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "531831e9-8181-4085-9803-2b1f5a0ce769",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b80fa136-f13e-4a0c-8a8f-a0536ee98b11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e402200c-676b-44b5-afa3-10400d433292",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83fb42ce-ebd2-4102-8783-b67bc23480f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b0c27d4-f6d2-4867-be64-d4d542af2367",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4b782d1-f7dd-4a74-92c6-01084afd53af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a007bc6-747c-4b79-83e5-74d2163fb6fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1a9327d-dd11-4c03-a707-c78d9c303ce6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48da8ae6-75fd-4e8e-8e02-0b71565db2cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ea7b41d-6fd9-4370-b4e7-48cfd50960b2",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeebdeb3-2903-4039-b369-19c76486c7b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc2d575c-b8be-4e94-a6c3-4d3d65f76964"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08f69971-f6a8-40d0-a688-dc2efa900f09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95501372-095e-4c2f-9f39-6a1f3cba71a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7630f8fe-d61a-4713-a081-0e81ff9fc8ab",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3049a158-7311-4ff2-98ad-eed9b0b4ec92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d904a0b1-4d24-4d24-bf93-d7140c39fb5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2756497c-4e0f-47ec-9f3d-fbdbfc8cb6fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9806292-4173-41a6-8f7d-e918d58abf88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c836903b-e27b-429c-ae73-7e3ee4873571",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13db597e-23f6-4e5e-967c-0080b6babd3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6991b3d-e498-420e-83b5-1f3a0dd3ad9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4df3b91b-a436-45bb-800c-5c0209a71712",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15d7ef77-6668-42d7-93ce-eac4f0ff4cc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da80cef5-75a7-4c08-9230-05e0680d10dc",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab8bd1de-1723-4de2-b4b3-da8f721df05d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a71311b5-f911-4a89-8bb7-a3fef6183cc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "230dc789-6f66-495c-83e7-f01a1acebca9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "522da1ec-529d-43ec-a369-5ef2946814be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28aaee76-eba1-46c1-9aa9-b4ebacbc469e",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43ab048c-5f07-426f-bacc-3d4ce8ee2a66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "500ac16c-3614-40d5-bb74-0ae2f3c1c7bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f33c2848-6217-4622-aedc-61dc2357c4eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd1926d0-f64e-4aa1-8c0d-438b7b9160f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34c15fb9-e2ec-46a9-af0f-67443645cd99",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86a93eee-90f9-4ff7-ae5e-41909e13d8ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a084ca3-6bcd-441c-81cb-8e5df770f3b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c58532b-77b7-4d0f-b21b-1e3f6cbc52fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a399563-8132-4f90-982a-39a2206a3805"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c755784-e7ef-4990-b0ce-e78d32fc355b",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a228fcea-4a47-432a-aff3-c7c012083168",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c2c1567-fcbd-4c48-9f52-774b54a6ebd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a409aff-9e62-457a-b534-a059e9396aa6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd6fefc7-f3fd-415e-b946-32bd421b06af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "857d1405-5da3-411c-b25c-708c23d4cfb3",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d27aa1a-2df0-437b-ba2b-8cc7f036fd87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02302dc9-0834-42e7-bc24-e93edba09143"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a13dd998-cab0-408a-8dcd-c7d4f9e7c7f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d995453-6ea2-47fe-b92c-0620c57af926"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d49697d8-b8ea-4f72-9ea7-3f8e9614fd39",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19496d8b-9dc3-4cd9-adb4-7d97d33f6568",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "678cf2f9-17d9-4fd2-a8d8-a67e3c9d1855"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d7e3a50-8f1c-42a0-b012-007140e87b73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09164ff4-e3c8-4b05-887a-a40ce7b240c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd8f3f67-2c99-4f0c-9071-8a2c435c02a1",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0558bc21-3e57-43de-af5e-f700acd520fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0ab9644-75ee-411b-88c4-d4c8b450de14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b5fcb0c-2767-4adf-8e05-7204745e7d77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82eb4e86-d36f-49cf-be9f-1bd930f936d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20242c06-3488-460e-b9ac-c71926512888",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5980cd02-c577-43d1-a3db-3007bf08fa55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "868f28bc-3b0b-4452-9ec7-8f587e1a7481"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43f9fca9-45b1-4241-a327-cb3aa3a01540",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6d28e9b-dbbc-4038-bf9c-29cef313d9df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e6647de-7276-405e-b804-fb217b585bda",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d419ca6-46e0-4b37-819a-4fdcb9cae130",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02dc952f-4797-4aab-bb5e-392231afe6b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b16dc73f-0ecc-4d4b-b96b-376c225e9a92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b96e5d87-755b-4efd-ab9f-ae2b09717900"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5604da5-eaf9-470f-9250-6e0ddb7d7eb1",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7954687c-d067-48cf-98b3-fe3c587e602d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "688b24d8-64ba-4b34-834f-730f7dea9cf4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69e2826b-2894-40aa-8458-9bb4fb040a81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c1bb710-b2bc-4cc9-8b1e-711257387c08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fee772e2-053e-4dd3-8800-5ed9c91cad46",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86c59791-e37e-4384-80d4-e78c19c8488a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df9076e0-61c0-458c-b590-07e2aad183f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24bbd687-3cae-4d81-aa2c-77dd72bd13ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46d10341-8b6a-44fa-8ff8-b8d96d410f6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf26db9a-9496-434f-ae3b-5fa81793e3cb",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4127a7f5-1049-4619-950a-8bfed2edbcfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf95cc35-8d8d-4557-8ba1-501a7463655c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8257906d-daa2-4896-9340-f33c190df4f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a31f7022-580c-401d-a563-e1d7d9d0a45b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a1ba301-6a20-4782-a34f-b20c0dc01394",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "374d930d-8c41-404f-bef2-b4de5503621b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59ccbb45-eae1-4fad-a026-3f560cad2ac3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f0a40e5-840a-4299-b7be-8860d9112eee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7b67632-fd27-4966-bbf2-72efb1f2ec50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8adb29e6-6ad7-4460-8bda-8a4296318a38",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27a8df49-7d6f-447d-ac38-3619ee097ee2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "606e50fe-15ab-4e3f-b32d-eb7937e1031e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "011c2b7c-deb0-480b-a8c7-6b7d9d0be54b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01ff7de8-23cf-4193-b2ac-7834ca3cfff5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccad80ce-914a-409a-b57e-038a25f9a750",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ba9aa5c-cce9-4983-a93f-c5f0890b6db0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b31eb05b-4519-4075-9aec-f6813432bcb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de03409b-3173-4d80-88e2-96787770492a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "009c1801-ce4b-4346-aa56-f209f2715e17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f27a122-139c-40ba-ad1c-a798d198e716",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb699d71-4bfc-48e6-a58b-1e62da2b400f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11499a21-6531-4aec-9be4-c23952ba7160"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57a14e26-a739-45bf-9eed-4029207d39c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9e577aa-f49b-4207-9cd0-85d2af44d07e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "897bf185-376a-4bfc-924a-ca262cb42b29",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30243087-2c06-4e79-be93-044281c8750e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81dd260f-c044-4937-b391-34a8a0972010"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1da64f64-62ff-4527-a191-a366809c9c56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6af7567-d234-4791-aa6f-157a6c4bcc18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "222b6e3a-05bc-45c8-9fcc-5db977885c00",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b9a3055-b64a-4143-b1e8-593f454fad84",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9570145f-1349-438a-9fa5-6930502e7246"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "579b9bec-e8fa-42d8-8292-b57a6a8a8bd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c33a3431-2949-43aa-ac56-8327002e5587"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b8fbbc0-8043-42ef-9436-7322dd382519",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0d62d10-481f-4276-bbb0-e2d0a03d6a9e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a09ce88d-d89b-4381-bc3f-a566e9bd6696"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8337c05-538c-4a88-9827-14608bbf4dcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9609edf-48c7-4309-a839-474b32507ff2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c85b6ac-ca4f-4cac-9b96-705c281c5004",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dea0b4b-7c18-4dc4-b318-6809d5c9349d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b48f4229-7d79-4eaa-b29d-bfd2979a6b96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f38306a7-c9db-482a-8f60-7cb13dc6ac9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a378759-569d-43fb-b644-775873d8dc90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3b2bd8d-1a07-4d37-b961-edbaaad11f7d",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c44b3e49-bd40-4081-b68f-91b27983c995",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28ce66b2-f6c0-4f96-8c42-0aa6926c6b4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85bd09a4-06df-4bb9-b8c5-83e373de1973",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97626604-35cf-45be-a523-99561dbe8282"
                        }
                      }
                    ]
                  },
                  {
                    "id": "323df37a-5f1d-4d82-827f-90ad65ab6513",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5677cdd2-ae53-4140-96e9-1055cb848eb2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c1efc3b-5643-4db1-a864-7a1b2c5a73b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f307695-fe3e-407c-88ce-bd70d6b7d549",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "914b273c-9dc5-4fe0-946d-bbaa619867d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15fe84bd-c9a6-44e4-8c77-2aa7cde6d0b4",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc823b5c-ae42-4e62-8eeb-5e4f1ebe5c61",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82942686-40a3-4e06-901a-62662b11aec7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f4fdd72-d737-4617-9220-f59b4ac996a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "256e69a0-91a6-4359-98e3-428cbc4e1f81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7acc7043-d318-4ab0-bf2b-8e7d5e65ef34",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db70354f-227e-4bba-9568-97d083b0774b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "453c818a-78f4-42f3-a3d9-523008c076aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b32f1a9c-cd43-4b31-8ca6-be5d8b40c6c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72473a1b-75f4-4f98-ab84-4426861d31d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5630fe8b-e010-4f91-b024-5c6df6c7b46d",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "158554b8-1809-4960-b573-6b0e9da9041b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2389f8c1-54cc-4455-8951-decada164fbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfb27005-f4a5-4e85-860b-29bea73e7784",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a180d9c-eaa3-4af9-97ab-403fe1a26ece"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1f23d1c-9383-4db3-9ca0-0fcf0d1d2b6c",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe958f37-278d-4dac-a5d7-4046b3e540ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "888fa10e-7174-4301-9689-8c15a7d04052"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e344306-7d45-41ad-a3b8-f3d0178ff344",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f39a191-2d1d-44f4-9699-6a438c9973fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "826e1f41-1579-4c2a-8d38-b5c78808eef0",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8404890-fe82-4799-93d1-41ca0d34c32b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "292e7881-85c9-48e9-ae87-1d21c93c5ea5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bf6ed7d-6cf3-4499-ac81-2aff12a93c22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35b48a9e-6162-44d4-a14d-950d420c3d94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b95c95b-a966-4176-a19b-18d541de7722",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "748caeeb-d52a-4157-a2aa-e6b1dc2dc7e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09628019-0a0e-437d-994e-e8e920ad51ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5a33ffc-2018-4be6-824f-1b80e85e06a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1aea357f-247b-4669-bffd-b5b6023c70ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e3d6b86-e9d9-4975-ac92-1e03a78547d4",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bf81cef-b661-40a3-affc-e096e3445f18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99d97389-080f-4d8e-ae61-96d10a3d114b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3db4401-5b0d-4ec2-bdb5-595d6780daa5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dda07228-5b61-48d2-aa33-fe722146fe14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94fb12eb-fd68-4af5-91fb-a76871f829be",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c022d578-448a-4cf6-8612-e5ad706ac8d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85e58bda-8acd-4e55-95be-4801724ce41f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a16212f-98fb-4777-ae95-5ff8001c30c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bf626ce-d94b-4742-84e6-8471bafa8bdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f2f107c-f871-4dfe-837f-bc1cb8dc1a78",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5765da7a-11a6-4a62-9e97-0307f13ef62a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04a2b44c-3e1b-4ae1-a074-8dd111486abf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8546cc5f-ee23-4ad2-929a-188c09e2df23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c29b117-c062-4bd3-8fad-1bab0aa3ab2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efa4b144-777b-4995-a604-57f9dd1c91c8",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17f1bc26-26e9-4d96-9322-135192ae5628",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9302289e-ecd2-4b4f-ae3d-0ee289965db7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f01910da-b606-47af-9826-8e97bf27f944",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d45d40aa-8be0-4e17-a443-41e00ae124da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaff8443-54a7-4850-be31-054f121f2a4e",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48bee439-4a5c-482a-bb52-0445dab65a25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1c1bc17-27b5-474e-b410-81d8a795b9aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce22b789-f145-44c9-83f3-c5ac34f76db1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a88e4d2-6e88-498a-9653-d584047251cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5644304-ada2-44d1-966c-05f42afae7d4",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7780715-f607-4863-b28e-8e776f146738",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00b19470-e5b6-4383-9409-3c7edfa28904"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db252628-ff51-4439-b63e-48ea55f8fbf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "600aaffd-bf93-443e-a556-b8160fad619e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c47eb805-91b6-4608-a622-fe8698527c20",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2d6c187-683b-469d-9955-70cc6dfdf2b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e95c6f9c-bec5-45f1-94dd-6304a9c48e6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e99a17b5-edb7-488d-9ccb-4611fd7c2ec3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6849b39a-f31f-4c39-aaa1-4be1a22d203d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a92181a-d800-4908-a3ec-f8c4f15b1ea0",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a925d68f-1d6a-45ad-b232-d57e8e9f8a5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3013536-473e-4637-abe7-80e48947947a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65a6b3df-473d-4f18-ab78-2c9c5b7e53e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4bf9d8a-bb5d-4d43-96e7-92aa93b76157"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ab48059-e2b8-4bc4-8809-ef9ed37e7084",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "072f1f38-c828-416e-86c0-21a71262a09a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e009ca3-7e3f-4e8e-a909-9ccb3250d70b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97096ebc-027e-418e-b5a2-133ecf1c4d5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "891df68f-c870-424a-b495-49e1e12be74e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d13381d-b3ea-4a8f-935e-fd5fee30a9ba",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ab12549-0017-4228-a648-9540a2673dce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bead1e1f-de2d-4c5e-b2f5-51697ced2bc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a99a4068-6891-4c75-9951-daed3618af2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b20ce7b-7e13-429a-9170-d84db43614e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06ad43f4-194d-43bf-9645-79ad3bb42710",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49c990f9-9c63-4b5b-a413-793e9dd4e6c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1bd4a28-4c10-4f47-856d-8c3f2824483a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d6fdd46-642d-41de-848a-bb1f2ab5729e",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29c96966-fdbf-4f88-8b82-936ad6a3966c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6339ba2a-9fb0-4a78-abd3-3b6f8bd1ecb0",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "568062d2-b537-4f18-9412-a9b9a97842f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1426f1e-d19d-41f2-921f-954bf05cd975"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d3c246e-ab8a-449e-9ffa-8299e5dffb85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a36f321-70e9-4b34-9f84-25b5d680d0b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10246c31-a88a-4adf-9cf7-29e81f313802",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43831484-2027-4a42-904a-93fd9bb11e65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f27c765-29ce-40bd-920b-87b8ea3f3298"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6415b3e-90a3-443a-9b22-a73a6d056e2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eabc9e3c-cc9e-444d-8827-0fecd9a92835"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88c42258-96c3-4c95-904f-84d33437121a",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f5da58e-cbb1-4412-84d2-1ddad3a8c393",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16763746-ba6c-424a-9444-fbcc0f908f4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46735c1e-f965-4a10-9e79-50e3cd331f92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "491f3d01-f691-4ae4-a607-4ae715229bd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4be50146-7862-4393-aece-34ede90afc5e",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "585d2b0a-4701-487c-8cd8-fabd046931fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de1c5edc-04d4-45ed-a943-9d388d617481"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9f383d3-99db-4598-b6b0-c880dd442e0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec6deb5a-a8e3-47d8-a70f-ad5b0526a548"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5341a0de-98f8-4f3c-9ba0-741431ac005a",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13c47d32-ab24-4a18-add0-b081d7581529",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b809944c-6a27-410d-87a1-5f541816c139"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "854c42d0-12d8-4d8a-a81c-e29e7044ce9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90f24894-b720-42ef-a684-3068ee914e99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f185e1c0-7352-4ca6-861d-bfe3215815d7",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f78d768-c28f-4b37-a346-9672de0cc390",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0a36101-7493-4e06-b2ea-ff4d284adb75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45b4dc32-0522-409d-a53c-bc995d7e5e07",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d21a965e-eec9-4f6a-a2c7-9963f6c95ed9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e603261d-8a14-4c87-bab2-7d423a9632fe",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65a5e473-580b-44f7-9eb9-e5203ec07677",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d25aa9d5-5eb0-411e-b1dc-44a10b63397c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f32b677-2b90-4119-9e2b-c6e7121c007f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9a5c315-1df2-4a88-a712-28469c4f521c"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3249dffb-b7d3-4762-8bc3-136be2c725c5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "44fc37fe-10ac-4b69-bf2a-d378c565c60f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "79867a9a-29ff-4496-b8d8-63a95184d938",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9f1b40f7-abf0-4925-a7fd-dd2c1c9b1de7"
                    }
                  }
                ]
              },
              {
                "id": "9a96162f-89d7-428f-9cbf-cd8749eeba43",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "60a22ffe-b2f7-4940-a462-a342356bddf4",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78c25971-690a-4d54-b69f-0b94933c2ad7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "02ee507f-7997-43bc-900c-73f8e50f460e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "394537e9-5695-45f8-abf0-025c4c05c0a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5da6bd0d-c1a6-4a6e-99ef-ecb24430b462"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ee6de8a5-6770-4bbb-b497-cc1771ee4b05",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e337d48c-65ec-4310-82e8-de1588cc98b2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "23c5eb51-74f1-4c63-accc-049de935ef1b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "116340f0-d8bd-4f64-8caa-72d4a08580d2"
                    }
                  }
                ]
              },
              {
                "id": "166489e8-6ea4-4932-944c-12b353e7c3d3",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "a434571c-84fd-4963-9c60-1df1faf9e884",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "985f10f4-c3e5-4e76-8cd1-7cad453f6bfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "057c076c-f66f-469a-ba9d-0ec8086fa692"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de39f2fa-d4e5-46d7-976a-6ecf01844474",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d88eb397-a954-488c-a676-e466c8bee364"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "3c83cd53-92e0-46ef-910e-e5080936ae44",
            "name": "Positive Testing",
            "item": [
              {
                "id": "87b3d382-d108-42e1-a8e1-c2e37d3bd2a9",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "756fe1a6-fb21-4715-b125-4236c5d97ba2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "2e06b514-af19-4047-8f92-bc81a04ae374"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1ff0260a-5eb6-484d-828e-a3d82b5931e7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f195c8ad-03c5-486b-9ba1-acb01416939c"
                    }
                  }
                ]
              },
              {
                "id": "223adae1-8bbb-49ca-bd23-f455de9a9b10",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "524289ce-1b88-40a1-a96d-8f8d48f0fe0c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "00f270b5-8859-402f-ba2e-8c1b318f7a24"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ff45690f-cc53-45bb-8372-2e4d79e50e66",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5fa2e88a-f993-4099-b81c-4f21816596d8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f6f31092-b34a-4031-b53a-a6cc4227ab0c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "6435e127-fefb-4422-abff-fde438a475fe"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b1f4fef3-bbf8-40f6-aec2-9fa1fac13ebf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a98b3e9f-1b62-41f2-92a0-0431cfabd6c7"
            }
          }
        ]
      },
      {
        "id": "d7d52262-ef40-406d-8e8e-525dcb5fe8d7",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "a708fe78-b1d4-41fd-94c1-355958930149",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0e304f24-565b-4f4f-8ef1-14f881ce9981",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d87a4e62-29ce-4f16-b903-acef10d2c456",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54db7d6f-b53b-4a9f-988c-884e21c90ed3",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "3ed7bff9-3937-4a0c-8b95-04ed4171b021"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fe54e20-894f-4b78-b46e-22347a819ab2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3ff7ba93-0a1d-4368-9f67-634eaee9ab0f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2d2a0629-ab1a-4c12-af13-4b443908842e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "87c42521-a535-4d92-9c03-5e94dbfedfd3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "29e3cfb2-046f-4900-823b-8dc7c3c7c9bc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "71c5651d-165e-469b-aff3-002fa90affa9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cbfe6ac6-5347-46d9-b1ee-64b37815575c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "f8b43904-8b97-40d9-bfea-b61f7cbf0460"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a223504c-78ff-4abb-9e61-164b0fd6b795",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a6f27298-0dfb-4dcd-a61e-31bdf7f4c392"
            }
          }
        ]
      },
      {
        "id": "bc3949bc-9463-4d5b-8f6f-5c72ba23b1b6",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "6e064230-b97d-42a8-aeae-2aa6a0055ee3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0873472a-3c41-4166-987d-909a593ce9f1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cf463208-22b4-468d-ae2d-cc8748465812",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38b19f6b-083c-4b46-97f9-f364b1fc7ee6",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "17bf729b-5612-4f20-a8b8-7a1b0f28a659"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd239e43-0380-4acd-9ff5-fe942d1bef95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "98c59f31-e700-4594-ab31-5e0357fd7e6e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "97cd1dcc-fefe-4437-bea3-c215c758e9a3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9eae514c-541d-4cce-99d4-99b2991c73be"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9e47d10d-842b-4440-b194-f16ef63c85b6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "75684f5b-f41f-4928-a095-4033f38bad3f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b5ec31a1-c650-421c-9774-08433b93ec2d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "673a967f-a80a-4983-9b9d-d464eb924868"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c61e54f7-66b0-48dc-980b-a071a1fd16f8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5b3f538e-5334-4bfa-aca2-3a68be777116"
            }
          }
        ]
      },
      {
        "id": "959a126d-f243-4425-902f-2eaa857d94cf",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "76231d11-0076-4699-aaae-ad70160b0cf0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "78fe0c0c-d4c6-4950-b3a6-a97f6177d795",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5f29b719-2e27-4445-af33-385deac44a6d",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "551e9a72-66d2-4798-874d-a5e83b814d88",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "321f95a4-91cd-4b11-a5b5-6b45e9082474"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5481f86-45a2-4e15-aa69-29ec70850de2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "674b3e70-03cc-4666-b583-430ae8170e47"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ad79d186-dbcd-47f5-b641-0c4936faa805",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fd1eadfb-5a3c-47f1-b3ce-53736599b5da"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "db3f88b9-f88b-4db1-9b83-d49e9dcaa310",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eb9b7813-8149-4b10-b5be-1ecb924451b7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d76938e2-1171-42f4-a3f7-62291ce8e67e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0133d38c-52b4-4fae-a516-7b08b0aab7f6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7a455caa-7cbd-49fe-825b-521189ce68fc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7e8a1ce1-2e6e-40fa-b87f-ca860ffd6dbc"
            }
          }
        ]
      },
      {
        "id": "587d5fd0-5f72-4e59-a789-70dbc3c010cd",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f9b7d0a7-aa79-43bd-ab8c-6caffc174ac9",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "058cce67-62b4-43fb-b51a-2b6016b5e5c3",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "b03a08d7-b1bb-4548-85c2-2b4eeb33534f",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b8e7c726-b122-40ad-8042-9c88a88687fd",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3335ee77-547b-4138-8205-dff09f97ad36",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 9
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 97.11929824561406,
      "responseMin": 6,
      "responseMax": 2707,
      "responseSd": 329.1360404701223,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1702082102816,
      "completed": 1702082139682
    },
    "executions": [
      {
        "id": "2ddc5d8a-120d-4087-b77a-c3f4ac85fee8",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "2d7cd79a-c00a-47cb-9c19-77d8705cfbea",
          "httpRequestId": "a427f057-1098-456e-8cf0-33b874f29a48"
        },
        "item": {
          "id": "2ddc5d8a-120d-4087-b77a-c3f4ac85fee8",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "83aab5ca-a33e-42b5-827b-a6915f4d729d",
          "status": "OK",
          "code": 200,
          "responseTime": 62,
          "responseSize": 0
        }
      },
      {
        "id": "0758d782-5358-42d5-b4d0-9e934be3e20c",
        "cursor": {
          "ref": "83d148ae-243b-4e57-a924-d0dbf582a98d",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "e54a5ef2-7b4f-4253-a75e-b1fc5b7ab3ca"
        },
        "item": {
          "id": "0758d782-5358-42d5-b4d0-9e934be3e20c",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "7669273b-ee26-40c1-82ad-d7062fb3f6c1",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "481b456a-7d10-4f6d-9fd1-665be6811390",
        "cursor": {
          "ref": "099b97ce-5be9-4c38-8093-ab9e2e70afad",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "f641f3da-592c-443f-a95c-a8702a4ed7b6"
        },
        "item": {
          "id": "481b456a-7d10-4f6d-9fd1-665be6811390",
          "name": "did_json"
        },
        "response": {
          "id": "f6146a92-bcc6-4297-be2e-a53d914c4f22",
          "status": "OK",
          "code": 200,
          "responseTime": 552,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "349fc335-1d65-41cf-bdd6-5c6b6d33277b",
        "cursor": {
          "ref": "767163d0-436d-45e6-bfec-aa634e287d2f",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "47c5bbc6-25a5-4042-887e-213dd34acf78"
        },
        "item": {
          "id": "349fc335-1d65-41cf-bdd6-5c6b6d33277b",
          "name": "did:invalid"
        },
        "response": {
          "id": "dd5baac1-dd6c-4b16-86a9-74d52e340cbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "349fc335-1d65-41cf-bdd6-5c6b6d33277b",
        "cursor": {
          "ref": "767163d0-436d-45e6-bfec-aa634e287d2f",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "47c5bbc6-25a5-4042-887e-213dd34acf78"
        },
        "item": {
          "id": "349fc335-1d65-41cf-bdd6-5c6b6d33277b",
          "name": "did:invalid"
        },
        "response": {
          "id": "dd5baac1-dd6c-4b16-86a9-74d52e340cbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b3aa3df-c48b-4e8b-82e0-f12040a1bd8f",
        "cursor": {
          "ref": "124e8b43-f304-4e91-9d72-d2d589be786e",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "07ee467d-ac30-47f0-a06f-673e0ac38d9a"
        },
        "item": {
          "id": "6b3aa3df-c48b-4e8b-82e0-f12040a1bd8f",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "07567563-12d0-40c2-abf8-fb95e24b685b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 300,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "413feeb5-17f8-4a83-8b3f-9d76de78be99",
        "cursor": {
          "ref": "de9465dc-ad02-498d-bce5-f223583ec0d0",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "093156b4-1301-4fa0-b20a-50fac00f8aa8"
        },
        "item": {
          "id": "413feeb5-17f8-4a83-8b3f-9d76de78be99",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "a362e180-59fa-49ec-8f0b-7dd667b0257f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 37,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7c15628-24e1-4df5-84d5-6269b9572728",
        "cursor": {
          "ref": "833ba0b8-f426-443d-98f0-d06924aefd62",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "15ec804a-54b2-468a-b014-a145e71e27ff"
        },
        "item": {
          "id": "a7c15628-24e1-4df5-84d5-6269b9572728",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "9016efb1-ff86-4a9a-acd0-6167ba2aa2d1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "259b093f-908e-4a71-86bd-35c6d53263b2",
        "cursor": {
          "ref": "330a546e-5282-4af5-8f4b-2addfda9d71a",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "060b88a9-924c-4d19-9e69-d73942c6d5db"
        },
        "item": {
          "id": "259b093f-908e-4a71-86bd-35c6d53263b2",
          "name": "identifiers"
        },
        "response": {
          "id": "40716e3d-fbbd-46a1-8246-2c0feb1d78f6",
          "status": "OK",
          "code": 200,
          "responseTime": 293,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "696aca36-1682-4662-a381-ac97f1103696",
        "cursor": {
          "ref": "f60186cc-5665-413d-9b38-4b7d8695d703",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "8a59517d-8bd5-4393-9a25-0720ba922c60"
        },
        "item": {
          "id": "696aca36-1682-4662-a381-ac97f1103696",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "7d12c98f-af69-400c-a169-86403d4f3d14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9f183d7-4216-4dad-9dbe-f22c567861a1",
        "cursor": {
          "ref": "ea4f923c-ff62-4306-bf7e-eebc1ccf2c31",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "90e65373-facf-4f0e-a9ad-8f2a469a2d66"
        },
        "item": {
          "id": "a9f183d7-4216-4dad-9dbe-f22c567861a1",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "2f5197a6-ba25-43da-a6dd-2e04f20822a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "216c285f-9ef6-4a35-8370-dfc20c5bf9b3",
        "cursor": {
          "ref": "995d1e00-2000-4a82-949a-44be9e9a1368",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "d406005a-9341-4db0-9c79-b03da9d6b9b9"
        },
        "item": {
          "id": "216c285f-9ef6-4a35-8370-dfc20c5bf9b3",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "961eef59-fc5f-4bf8-afbe-51db33e16940",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd0e3a3d-8124-490e-8ac1-e8b2d58d72b8",
        "cursor": {
          "ref": "bbbec962-b026-4ea7-b3ff-913b3b36043d",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "5598f399-1acd-4d19-862a-b42d7f4eae80"
        },
        "item": {
          "id": "dd0e3a3d-8124-490e-8ac1-e8b2d58d72b8",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "ca8c005a-2014-46ff-9b98-bb576e349c5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35d4b5a0-14e2-4e50-b120-2407c41f6d9b",
        "cursor": {
          "ref": "c6b0abb8-14dd-4d6c-acac-28c30c3f5d29",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "61e0ea56-775e-46ec-9002-f2d3e4c84ae5"
        },
        "item": {
          "id": "35d4b5a0-14e2-4e50-b120-2407c41f6d9b",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "7ec27f7b-cd49-4864-9797-eee3aab8a73c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c9c98fb-fb18-4ebb-95d0-fbcabc986bc3",
        "cursor": {
          "ref": "78275056-4fa1-4b9e-86eb-980df252d6de",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "8c939a22-da04-415a-b85c-bbb35d04caab"
        },
        "item": {
          "id": "3c9c98fb-fb18-4ebb-95d0-fbcabc986bc3",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "d73fab42-7661-4fb2-b5cd-29c87250b67d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7289f19d-959c-42b2-84f3-9d89a04a89bf",
        "cursor": {
          "ref": "e14a0bda-617b-428f-acd7-a6be0c249000",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "37a12830-3d7b-4330-ae64-351c4637dbe2"
        },
        "item": {
          "id": "7289f19d-959c-42b2-84f3-9d89a04a89bf",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "708a4d9e-ed70-4a33-a26f-85d15d43084f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de876878-41f0-4922-846f-7ab941fa5bc7",
        "cursor": {
          "ref": "d196a577-db78-4859-b1f5-7ca8827e3137",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "6d26f288-d877-4fc5-957e-1653decfc675"
        },
        "item": {
          "id": "de876878-41f0-4922-846f-7ab941fa5bc7",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "5441ccb4-8e9c-405d-ae74-7b155a54ac91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63fb2a9b-b1a5-4622-a5c9-9fb981245250",
        "cursor": {
          "ref": "53f7e348-3355-449b-a3a9-72f8d95c77e1",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "1a08e18a-6ea7-4bbf-aed1-0ed2a8547546"
        },
        "item": {
          "id": "63fb2a9b-b1a5-4622-a5c9-9fb981245250",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "a78daa71-0694-423b-a90d-6f82180b48c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e7abe4a-85db-4a80-9dae-63ac7337e336",
        "cursor": {
          "ref": "d0549281-5005-4bf1-bc2a-8316ce8586b2",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "564768b8-5d73-4360-8cd5-5ff7097686e0"
        },
        "item": {
          "id": "7e7abe4a-85db-4a80-9dae-63ac7337e336",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "97c46b4f-64bd-4844-93b4-f0b7682ae10a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f43cce9-688b-4c1d-a509-b744dd7f5126",
        "cursor": {
          "ref": "ed18903c-4caf-4dd9-a8c5-d3cd553889a5",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "88da75fd-c237-4055-9a1c-74ec2d0f7a74"
        },
        "item": {
          "id": "9f43cce9-688b-4c1d-a509-b744dd7f5126",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "21f2797e-52cd-4ffa-a418-f97cb43bb498",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6a152e2-c004-4476-81f4-41ec8900c780",
        "cursor": {
          "ref": "8c95b8e2-82f6-40dd-9c23-b4e2da9d262a",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "28c896f9-b672-4a6f-af9b-abb78e94174b"
        },
        "item": {
          "id": "e6a152e2-c004-4476-81f4-41ec8900c780",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "3412433d-08b9-49eb-b910-ea9fff387fd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "773671c0-0226-4ab0-9f91-b7a23720eb29",
        "cursor": {
          "ref": "9349849e-3baf-422f-ac16-4ef895fcd853",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "bcc78b38-6a15-4162-9df3-3fd5fabc8ffd"
        },
        "item": {
          "id": "773671c0-0226-4ab0-9f91-b7a23720eb29",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "e91d12f4-a002-4945-aa23-9c839bf7cce1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84f01c78-261d-4715-b7aa-ec8100bb0dc7",
        "cursor": {
          "ref": "b5cfe380-ae86-440c-a6ee-a337e5a160f4",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "c906d604-e000-482b-9ce5-955e2c1222b2"
        },
        "item": {
          "id": "84f01c78-261d-4715-b7aa-ec8100bb0dc7",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "4e440f01-a9ff-4893-b5cd-5fe8b05a1f51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa3e8e0d-abe3-4e92-847a-97a9d4683bd0",
        "cursor": {
          "ref": "dc1c18a8-95d3-4347-aa5f-f5c5ce5c1d27",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "832d57ec-6c34-4348-8a1b-e066ae7334ba"
        },
        "item": {
          "id": "aa3e8e0d-abe3-4e92-847a-97a9d4683bd0",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "dc417f75-d3a9-4a7d-af48-e436ca4e02ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "209aeaaf-9ac0-4d93-ad77-0b24d36944e4",
        "cursor": {
          "ref": "a55ab0d0-1589-4f4f-9c1d-d422c4166037",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "8af015fc-7b4a-49c4-83c4-3a374aaaa4a8"
        },
        "item": {
          "id": "209aeaaf-9ac0-4d93-ad77-0b24d36944e4",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "d31c3236-202c-4f43-8f52-d9da02b3994c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "525a79b9-047f-4cfc-b05c-0b0036e6ad57",
        "cursor": {
          "ref": "c3668ffe-6106-473f-b389-05647e82eb75",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "8797bcf2-92c0-4955-b713-5da1ffcc6ec1"
        },
        "item": {
          "id": "525a79b9-047f-4cfc-b05c-0b0036e6ad57",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "1c91516d-d0ef-481b-9a60-168f3246e823",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74186c62-27d1-49ad-9a30-570b19afd6fc",
        "cursor": {
          "ref": "32e028db-a206-4215-8f76-334ca529fe03",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "47daa439-0184-4a4b-aa35-99081b35c098"
        },
        "item": {
          "id": "74186c62-27d1-49ad-9a30-570b19afd6fc",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "27a13231-4bb0-4f19-827d-c56335b2927f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c66911f8-b3fb-45a4-bfee-7f558c2802e0",
        "cursor": {
          "ref": "6ee91bcc-6b9a-4029-b4f6-2debbf98a476",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "b09c31d8-97f1-4295-a2e7-983cd2ddab4a"
        },
        "item": {
          "id": "c66911f8-b3fb-45a4-bfee-7f558c2802e0",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "565d4845-a7d2-494a-b250-af86b9163316",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebb01854-a877-4892-958a-0a9f619f5b00",
        "cursor": {
          "ref": "b03e4efd-13d9-4d07-b4df-c4afe697620d",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "bb32f38d-56b5-4000-bcdb-7c7801af1fc5"
        },
        "item": {
          "id": "ebb01854-a877-4892-958a-0a9f619f5b00",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "706dfeda-313e-410d-b943-ed0dd8716de4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d326afd0-0bf0-4f7e-a545-d5b27e38809e",
        "cursor": {
          "ref": "077efda0-fe13-4f1c-96eb-d3c3348e7218",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "d75aec03-76a7-4379-98dd-3739cbfad76c"
        },
        "item": {
          "id": "d326afd0-0bf0-4f7e-a545-d5b27e38809e",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "d68df517-7bec-4214-815a-e3f6f9ae37dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d966353c-2870-479f-874e-09de5df6909b",
        "cursor": {
          "ref": "673e6a90-3e49-4825-9c1b-d2e1ba4fe255",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "af3f5df2-4f92-4ae2-aa39-dba743daa397"
        },
        "item": {
          "id": "d966353c-2870-479f-874e-09de5df6909b",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "21a5c9b5-c7e8-4ba3-b9f9-90aa6f38b081",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "435beff4-bbc9-4117-abd0-9803bd54cf82",
        "cursor": {
          "ref": "3dd79a29-bcda-43cb-97f5-e061ecc81429",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "c862e247-f23b-4e40-bd29-8b65d0d49dd2"
        },
        "item": {
          "id": "435beff4-bbc9-4117-abd0-9803bd54cf82",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "33dfdb42-5862-4071-9e02-0edaa3ec190b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdc2ece8-205a-4d2f-b9d7-6425f24fff55",
        "cursor": {
          "ref": "ccbbc7a0-d92e-4169-84c2-ffae3ca11029",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "a1acf745-5508-4b56-a27f-8bfb846dd561"
        },
        "item": {
          "id": "cdc2ece8-205a-4d2f-b9d7-6425f24fff55",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "bf09a9ac-bfc4-482c-ae35-46d937935604",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20c49d80-bed4-46a8-929d-ae4f74d1497b",
        "cursor": {
          "ref": "84d2c66d-39f3-4aff-b9c2-68ace717b7ba",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "aa1bb82a-3b8e-4dd2-8ead-adec742239c5"
        },
        "item": {
          "id": "20c49d80-bed4-46a8-929d-ae4f74d1497b",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "33e99cb9-72fb-41ad-a865-ef44b0251f35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60ba10b3-2b3e-4cf6-92b1-e8003ca00315",
        "cursor": {
          "ref": "563d29b4-5770-41c2-994c-7569262978a6",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "08f70a02-91ae-4f1b-8a1d-794d2a91111c"
        },
        "item": {
          "id": "60ba10b3-2b3e-4cf6-92b1-e8003ca00315",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "a17e6af1-4641-46ab-9b51-e90bf17299ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c703b11-32c9-445d-8c3a-ed0637998740",
        "cursor": {
          "ref": "4ad4f229-e9f4-4905-aa07-15dd913f5447",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "611549ef-8952-4c91-9d73-aa48e4edeedc"
        },
        "item": {
          "id": "3c703b11-32c9-445d-8c3a-ed0637998740",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "f2c8f442-81aa-4a70-9500-db0bea81eafc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b43ade02-962b-4299-b40b-474626d8aa3a",
        "cursor": {
          "ref": "e6f8521b-c67f-4aa0-9f7b-b6d9accf4d1f",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "ae7ac9a2-6d38-410b-aa0d-337443db5b6d"
        },
        "item": {
          "id": "b43ade02-962b-4299-b40b-474626d8aa3a",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "539230cc-158b-4ca4-8a60-5f2527aecbd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b12db15-bf3c-4858-aad9-73251a22e851",
        "cursor": {
          "ref": "de07fdbb-adde-480b-b1ad-e0d58a7dd95c",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "0b984748-3279-4265-9fed-2a338a02c8fc"
        },
        "item": {
          "id": "8b12db15-bf3c-4858-aad9-73251a22e851",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "7ee7b899-4ac6-4e4e-97fc-dc7b4d594e93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7edf173f-7da4-4cf9-b9dc-080d4ce0e1ea",
        "cursor": {
          "ref": "5f114b2e-c6e6-4f7d-b403-ee70729fa2b4",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "baed8c6d-4ebf-4f2d-a477-7dff20a7be42"
        },
        "item": {
          "id": "7edf173f-7da4-4cf9-b9dc-080d4ce0e1ea",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "d20a8c62-f9d6-4ee6-a493-37df969e0e16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af4cc01f-74eb-45c7-88d0-cf806298d18a",
        "cursor": {
          "ref": "d81d2f2c-018a-49cd-99d8-9515b5a92a50",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "a87f3a7e-4c17-4d89-9a3a-3e34af4be150"
        },
        "item": {
          "id": "af4cc01f-74eb-45c7-88d0-cf806298d18a",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "7a762d0e-728b-495e-bf06-d7f6274baf29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad5d04cc-c446-4563-a4a8-8fdfb78b97d5",
        "cursor": {
          "ref": "98a86cd3-a360-4cc7-add2-3b0f978e567b",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "b2360764-6cf1-42e3-b333-22df10d29071"
        },
        "item": {
          "id": "ad5d04cc-c446-4563-a4a8-8fdfb78b97d5",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "76275cf9-cdc3-402b-8463-707ce89248a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0493a91b-9059-4ace-af6e-0eec1000b720",
        "cursor": {
          "ref": "9538e07b-f8c5-48b1-ae60-ab3d3ce0232e",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "ee3b6e70-5df6-46db-95fb-13e517d0493a"
        },
        "item": {
          "id": "0493a91b-9059-4ace-af6e-0eec1000b720",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "3705c94e-6014-4df8-9678-f3cc9f90ed7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8c3ac69-f80a-4666-ac1f-1e13ba968a2d",
        "cursor": {
          "ref": "dd82f2e4-0c8d-4c09-bbc5-3c1a804d7953",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "48750c4b-c7f7-40cb-8d6c-aff823e869d9"
        },
        "item": {
          "id": "c8c3ac69-f80a-4666-ac1f-1e13ba968a2d",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "6c1ff9d2-51c7-4016-bc9d-6908a52b699c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62f59c09-9145-4758-bf9d-5bbdf0b16783",
        "cursor": {
          "ref": "f9302b37-acf1-4a2b-a259-3a8573a51b30",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "c446dc01-71c0-4a8e-8eb7-71f1ca79a253"
        },
        "item": {
          "id": "62f59c09-9145-4758-bf9d-5bbdf0b16783",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "731dd732-005c-4a97-b8af-c5ca48c3e8bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d8a17a6-aa12-4cbb-8a19-eeddb3525dd9",
        "cursor": {
          "ref": "b6776c31-879a-4a2b-942e-f9310045fb5f",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "3512c4c4-7578-4288-a016-a4cebdb2adbf"
        },
        "item": {
          "id": "6d8a17a6-aa12-4cbb-8a19-eeddb3525dd9",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "4a493134-f4aa-4ca0-9f9a-3c502290e0c5",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 306,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17561c86-45e5-4d3d-a751-7f7b2245526d",
        "cursor": {
          "ref": "57e7e06f-54d5-43ab-bd20-2775b714568f",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "da2559bf-1ea3-4b19-a227-47c951fa9f53"
        },
        "item": {
          "id": "17561c86-45e5-4d3d-a751-7f7b2245526d",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "a0f6e975-751e-493e-8cb3-9a81a14e60e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3cf0d61-22e9-4b8a-b3a7-9a0753e3932d",
        "cursor": {
          "ref": "77cb4ad7-870d-41d4-8fb8-bf7492039e25",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "33e92cb1-e8f7-4b59-84b2-c08936b808e7"
        },
        "item": {
          "id": "c3cf0d61-22e9-4b8a-b3a7-9a0753e3932d",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "8bdca00f-2189-4246-9b3c-98cf3eb2df67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23b60eb4-ad57-4140-86f5-dd5f5177bffa",
        "cursor": {
          "ref": "cee7fab9-352a-4314-b63a-4863e3332f06",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "a14429fb-5840-4d1a-8a56-7a48714a3532"
        },
        "item": {
          "id": "23b60eb4-ad57-4140-86f5-dd5f5177bffa",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "0081d223-99b3-4219-90ea-2b4047998042",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3953050-c264-4e28-afce-1b828069d260",
        "cursor": {
          "ref": "6cf22f3a-ee72-4bf8-b25e-0fa607251ed8",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "2b399b79-f53a-4daf-8477-fdb1dd369662"
        },
        "item": {
          "id": "f3953050-c264-4e28-afce-1b828069d260",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "0600d174-b11c-428a-b729-13198d1fd33c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cc87adf-69f7-4e45-98f1-65aa152b29cd",
        "cursor": {
          "ref": "1923a45c-97af-4167-a856-c9825f419731",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "136733ba-320e-479e-bce1-f4ec06570c6f"
        },
        "item": {
          "id": "0cc87adf-69f7-4e45-98f1-65aa152b29cd",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "05ced9d7-8739-4825-8ad1-c90384b126a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a45a2801-958a-414a-a54d-03bef36177dd",
        "cursor": {
          "ref": "9fa85032-2b50-4af3-90af-46b22a6e5638",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "7ffe6136-2887-4d3c-b620-b3554060fd10"
        },
        "item": {
          "id": "a45a2801-958a-414a-a54d-03bef36177dd",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "07a38bde-d4bc-4c6b-b22c-fe81af43349a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e34a49c6-7e8a-46b4-8ad4-06176e47efd3",
        "cursor": {
          "ref": "c2de7270-644c-4ea7-ae6f-2a693f2ff3b8",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "63b974e6-3c27-4495-9151-69cb26eedd3d"
        },
        "item": {
          "id": "e34a49c6-7e8a-46b4-8ad4-06176e47efd3",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "157f6a0e-7d1c-4a4f-818d-05f34b6cfa34",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 313,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67cca70f-d911-4032-b897-3866cc35db46",
        "cursor": {
          "ref": "31e45bf3-8f12-4201-b359-89096adf7207",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "e02f24b5-9afd-40fa-bda2-671c93c1b7a6"
        },
        "item": {
          "id": "67cca70f-d911-4032-b897-3866cc35db46",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "86fa75a3-24ee-4f0d-99fc-5d72e869200a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "809b9a08-433b-4e1d-a426-9d675beb8023",
        "cursor": {
          "ref": "7b575e22-36de-47cd-bc8d-f0cb725df2b9",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "a180e9a3-d4b9-4407-a57b-95fd8159d110"
        },
        "item": {
          "id": "809b9a08-433b-4e1d-a426-9d675beb8023",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "903d3ed4-2077-4a0c-82b1-d4b1065ec8a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d34ca159-6aee-438c-ba3a-4c28c631f99d",
        "cursor": {
          "ref": "054ac9b1-b2cd-4608-9d8a-714fb8cdc7eb",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "ae867d29-eaf2-4860-9bd4-a906b8683a53"
        },
        "item": {
          "id": "d34ca159-6aee-438c-ba3a-4c28c631f99d",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "b43b5735-ce58-46f4-bab0-8b47ecb1b6d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 585
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5df14b2-2cb6-42b6-a5cf-e8be5ae521d1",
        "cursor": {
          "ref": "8cb2e3aa-d6de-430f-8fb7-8f8981f6f067",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "7f47d1a7-f159-4193-b64b-ee5e0201a63d"
        },
        "item": {
          "id": "f5df14b2-2cb6-42b6-a5cf-e8be5ae521d1",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "0d8cf371-0441-4347-b3e5-6ed05a33529d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13efbbc0-1b0d-4c7e-a536-b1de1778b40f",
        "cursor": {
          "ref": "0fa2bb94-c6ab-44c3-b937-c8eaa7361f55",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "45a891ba-876e-4bdf-8dd3-fb10d5a8081f"
        },
        "item": {
          "id": "13efbbc0-1b0d-4c7e-a536-b1de1778b40f",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "40a6891f-45ce-4019-854f-f35ae268edd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31534fbc-3b83-4123-8ec5-e5aeef106422",
        "cursor": {
          "ref": "654b11de-2277-4ee3-8c4c-006dd3577f2e",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "d7d89691-3544-44d6-83e8-b59774f32e43"
        },
        "item": {
          "id": "31534fbc-3b83-4123-8ec5-e5aeef106422",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "a3405383-76e7-411a-bdae-cc867ac9f643",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f86c55f9-7e94-439b-a1d6-31bdbcee368e",
        "cursor": {
          "ref": "814cf81e-8ccd-4af7-9c5a-49f007ace049",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "81a40432-caf9-47c0-988a-2372298eec4e"
        },
        "item": {
          "id": "f86c55f9-7e94-439b-a1d6-31bdbcee368e",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "28ca748b-bee9-46a1-a9df-3271688b2dc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 635
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ad3b60d-8058-478d-9037-182e7e7c3ec7",
        "cursor": {
          "ref": "989055be-e334-4cb0-abac-caace76b1c38",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "0d3827f8-5130-4686-83be-788f616db7b2"
        },
        "item": {
          "id": "9ad3b60d-8058-478d-9037-182e7e7c3ec7",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "6b90ed68-4113-417a-b920-ebb79e1a5cf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaf5744f-1456-48f8-b330-d7e5b23e2b11",
        "cursor": {
          "ref": "20556a44-8341-4999-b33e-d9f143de163d",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "a1d72cb0-f896-404d-8858-dd211e30a98a"
        },
        "item": {
          "id": "eaf5744f-1456-48f8-b330-d7e5b23e2b11",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "095ad1a8-3014-4d33-805c-9b1027c191ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d35df185-bb9f-441e-8426-44f73d7ae413",
        "cursor": {
          "ref": "f085e6ff-0ba6-4e63-b048-ac437291c09b",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "5abbb50b-6d9d-437b-9d8d-2ef9df8009fb"
        },
        "item": {
          "id": "d35df185-bb9f-441e-8426-44f73d7ae413",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "01d99279-e686-423b-af97-740cb7634443",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e1730dc-3081-4ae7-9b1b-9f23a70c220a",
        "cursor": {
          "ref": "45ddc321-6a50-4c6d-9ffb-d03fd2231654",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "9f2bb2e5-249b-4e9d-b053-d26e5c6c066c"
        },
        "item": {
          "id": "7e1730dc-3081-4ae7-9b1b-9f23a70c220a",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "3b13db44-a96e-436f-b61b-154483256ece",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99a1762a-9c38-4abb-a595-dc459e7cb501",
        "cursor": {
          "ref": "9099c213-d2a1-48bd-a246-d19ed8a20801",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "fa481411-58eb-486d-a37e-ff4bed4f6e2b"
        },
        "item": {
          "id": "99a1762a-9c38-4abb-a595-dc459e7cb501",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "becc1c35-757c-4226-8450-2f719e1a208c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5368c57-18c6-4fe0-a6ff-21744f87a784",
        "cursor": {
          "ref": "8a56f7f5-79c4-46b5-9cf6-411d2f866ac5",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "edd7eb2a-2397-40bf-9980-79ce4a8c7cbb"
        },
        "item": {
          "id": "b5368c57-18c6-4fe0-a6ff-21744f87a784",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "9cc2aef7-69ed-44d0-abcd-a37cfc7dbe5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34dab368-74d3-40cb-a018-580d743a03ab",
        "cursor": {
          "ref": "a43d1397-bf38-414d-be68-6dd58ba5b7be",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "28852666-6932-4c2d-b4ae-39628ed3f008"
        },
        "item": {
          "id": "34dab368-74d3-40cb-a018-580d743a03ab",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "c0cbe479-dfc0-461c-81dd-7eabe4816872",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2085f8c6-e85d-4713-911a-7e10297e2734",
        "cursor": {
          "ref": "1916e677-51a0-42ec-a2f4-e8c20d6f5ae6",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "2be06057-a7d3-4ece-9bb5-e72eabc483b9"
        },
        "item": {
          "id": "2085f8c6-e85d-4713-911a-7e10297e2734",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "13b277e5-325d-437a-bda0-027cf95e4ce3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd5a83ee-f06b-4d8d-b7fc-9beb7f0b755c",
        "cursor": {
          "ref": "922f7313-fe26-454d-aed1-be430c5d29d8",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "644842b1-21f5-4f5d-b2d8-105167928a58"
        },
        "item": {
          "id": "fd5a83ee-f06b-4d8d-b7fc-9beb7f0b755c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "c83074b7-dfe5-4898-9cc6-6bb8bfac124f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f96a464b-ad86-44d8-827a-a7dabedd5e84",
        "cursor": {
          "ref": "2abd570e-70c9-44f1-b2ab-a98578e2e43b",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "18f8756c-bf58-4f5a-8aac-26020c2b4f61"
        },
        "item": {
          "id": "f96a464b-ad86-44d8-827a-a7dabedd5e84",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "28a06e9e-80f1-4565-8338-ffde92d195c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be401310-418d-4145-a9c1-d983b6fb2478",
        "cursor": {
          "ref": "f739f128-3bbd-461b-89a0-348287cb2ca7",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "7c4cc292-8098-4c5d-b0f5-85f3ea42a060"
        },
        "item": {
          "id": "be401310-418d-4145-a9c1-d983b6fb2478",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "81df4167-c65e-4c95-b623-5fcc482d337c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cf846ba-145e-4eac-86eb-9a4aea519dd1",
        "cursor": {
          "ref": "066823fe-ab05-46bf-a2c2-10c954175454",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "4d863d24-7011-40e9-b5f9-a9c4f19bbe14"
        },
        "item": {
          "id": "1cf846ba-145e-4eac-86eb-9a4aea519dd1",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "342f96e0-db91-442c-99f1-dcd29a09f395",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "960c21d0-19b3-4777-b446-f5e90e90becc",
        "cursor": {
          "ref": "bfe111ee-e894-4ae1-9f46-c10e531083e6",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "f0afd42f-d2f4-482c-9628-18fa9e2d1fed"
        },
        "item": {
          "id": "960c21d0-19b3-4777-b446-f5e90e90becc",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "fdf4e5c2-9a3f-41d4-bf87-6e810ef5c70f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d34bd1c7-bac9-4473-986d-035e623d2e5c",
        "cursor": {
          "ref": "dd64894e-5a7d-47a3-847d-40010f57b9dd",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "f6b2d6f7-a4b9-43c7-925b-0e96afa53840"
        },
        "item": {
          "id": "d34bd1c7-bac9-4473-986d-035e623d2e5c",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "9831775c-82ce-46c8-80b7-8317df41f229",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34c4cf99-32f9-4c47-b35c-518d2fea401d",
        "cursor": {
          "ref": "4a0f3907-f46a-4fc6-8d99-b34d2214a46b",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "75795ede-8fde-431a-a444-ba424ea923b9"
        },
        "item": {
          "id": "34c4cf99-32f9-4c47-b35c-518d2fea401d",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "db307f26-b621-462b-a1f5-063ccfd6e473",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eae6f993-7b69-48df-8e48-6961c62a35ef",
        "cursor": {
          "ref": "f5caf6c7-4973-4b3e-a08e-6215321e18d3",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "fd6a69ff-e0af-434d-8ad5-99a9aadbb5f3"
        },
        "item": {
          "id": "eae6f993-7b69-48df-8e48-6961c62a35ef",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "90be55fe-608c-49c0-aaa4-802818b70b4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b72569a-bbd1-4401-869b-df41b1efcaf2",
        "cursor": {
          "ref": "eabd6622-def7-403a-b23a-a424817fef5b",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "251887c8-36be-4444-8120-8fa642f4cd12"
        },
        "item": {
          "id": "9b72569a-bbd1-4401-869b-df41b1efcaf2",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "58d1ff36-18f5-43f4-a868-a0abe272dd6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4e59561-c78e-45e4-b091-012473170b9c",
        "cursor": {
          "ref": "063acc15-9b21-42af-a553-9bbcdb2dad16",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "13d53f29-ba2c-46cf-8750-1af7648ebdf0"
        },
        "item": {
          "id": "b4e59561-c78e-45e4-b091-012473170b9c",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "ff228a2a-7ef4-435c-8fc6-1b409dd13230",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3ffe401-6d4f-4544-b8a1-a3f5f66f7ec6",
        "cursor": {
          "ref": "818f7877-f516-43bf-aa18-ce59508c1535",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "d138c7c6-a3c2-4b79-869f-e74b7e565c2e"
        },
        "item": {
          "id": "b3ffe401-6d4f-4544-b8a1-a3f5f66f7ec6",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "574a7d79-d307-46ba-846e-c53c2ab34ac8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9aeb5b5-fec4-4189-af21-5d1011654eb1",
        "cursor": {
          "ref": "eeeb4e93-61bc-4a0f-b046-ba18085c3085",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "c8ece213-6c12-40d1-bdc9-565a2580bcbc"
        },
        "item": {
          "id": "b9aeb5b5-fec4-4189-af21-5d1011654eb1",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "184db4b3-5072-4c8e-bad6-1f7927b38fb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0402a27b-7779-4590-b00a-a1df3f52e2c3",
        "cursor": {
          "ref": "00e9657c-d19a-4b3b-8c0c-7a29dfbdc2bd",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "ef34bd40-7690-46af-ad1f-50739fd39e57"
        },
        "item": {
          "id": "0402a27b-7779-4590-b00a-a1df3f52e2c3",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "ee4cbb2b-8e9d-47a2-912c-16432fa2dc6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7c98521-72e0-4767-878b-0bd21c3f1632",
        "cursor": {
          "ref": "9f2c5847-15dd-40f8-844a-52fb4f41fa53",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "43d0b685-f9b4-4ffc-99c2-f40bb01369fe"
        },
        "item": {
          "id": "a7c98521-72e0-4767-878b-0bd21c3f1632",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "86ab6f9d-6822-446f-bc90-9720a8299c97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9ab427e-d977-4012-a44b-c2d2dc37f3dc",
        "cursor": {
          "ref": "292a35b0-ec2b-4297-8388-e83f82a25be4",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "e81d0697-8da8-4f22-a972-82d29d940076"
        },
        "item": {
          "id": "e9ab427e-d977-4012-a44b-c2d2dc37f3dc",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "3ead72c1-db7d-4567-abff-b43ff36d4c76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea72fb29-fe5a-4d91-97fd-317e512d0f85",
        "cursor": {
          "ref": "7ce00bc4-c7a5-4c00-aad3-e935e07a2f20",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "4fa763f4-b725-46df-8a36-5f768de945c9"
        },
        "item": {
          "id": "ea72fb29-fe5a-4d91-97fd-317e512d0f85",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "2a10dcb2-e59e-4e2c-8b54-9e4555d3207d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9c7f439-a58f-4900-a861-9241a30132cd",
        "cursor": {
          "ref": "88d00dac-00a7-446a-889f-7ed59fb3536f",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "a423b9b4-1cdb-4a31-9a3a-deca97e13ffa"
        },
        "item": {
          "id": "c9c7f439-a58f-4900-a861-9241a30132cd",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "7d63f56d-a3c3-44f9-9aca-afc9d3e94c48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24d83fa6-2f2e-434c-b41b-8706f8a00aa2",
        "cursor": {
          "ref": "d2c170f8-2f5c-4645-8d7e-eae3e05e341b",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "3297ba87-740b-4bb6-a984-70698d7a166d"
        },
        "item": {
          "id": "24d83fa6-2f2e-434c-b41b-8706f8a00aa2",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "2f149ee2-41a7-488c-8d6d-872901f47ca4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92818fe2-9c9a-4c41-88e9-dd2ed8355864",
        "cursor": {
          "ref": "7129fce4-242b-46d6-a076-71b23cb35c9d",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "43ecb4ed-4d1a-4b40-9ac6-859c2ce7005d"
        },
        "item": {
          "id": "92818fe2-9c9a-4c41-88e9-dd2ed8355864",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "eff97be4-05ac-459a-9c8b-9711800e92a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c63f898-7d67-4224-908a-0da2262ee47e",
        "cursor": {
          "ref": "3277a621-5d65-455f-ab5a-e812a6ef1ba2",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "68090a66-84bc-4b79-a94e-6fa1f1cfc49f"
        },
        "item": {
          "id": "2c63f898-7d67-4224-908a-0da2262ee47e",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "5267f602-9c7d-4a55-80da-c5100d666144",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "824636ec-6439-4008-94c1-5050cf28eaa5",
        "cursor": {
          "ref": "977f0254-9ca9-42cd-8770-a9e3f30879bc",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "96058f9e-ce8e-46cf-9807-b706acb54342"
        },
        "item": {
          "id": "824636ec-6439-4008-94c1-5050cf28eaa5",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "4d5dcc70-fd23-41b0-9693-492ff5a80b2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e6f6f28-ff29-4cbb-be7b-56c5755a12be",
        "cursor": {
          "ref": "77f85fba-ae37-4731-a492-de40b166878c",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "4cd10e6c-20c9-4f12-82b0-2633cffb0ee2"
        },
        "item": {
          "id": "9e6f6f28-ff29-4cbb-be7b-56c5755a12be",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "77d358e4-bae1-4d27-85bd-f14923f71b82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 660
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cca6d5bc-696b-4863-90b4-494cb03b6562",
        "cursor": {
          "ref": "bfdaaa4b-afa9-4e5c-9746-e34902f81231",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "cd8c79df-ad95-4755-8140-db8f8847f112"
        },
        "item": {
          "id": "cca6d5bc-696b-4863-90b4-494cb03b6562",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "543ebde0-8859-475c-9201-4fa6f7144c69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cf484d7-b846-4032-b011-8f87d9700020",
        "cursor": {
          "ref": "e4fbcad5-ea0a-47dc-8e85-72be593bdda2",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "86db7540-a309-4e0d-88e0-24a2b1e7769e"
        },
        "item": {
          "id": "5cf484d7-b846-4032-b011-8f87d9700020",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "016e3f23-fa38-43ec-8bfe-5033f65d4def",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38e3575a-a013-43d9-a633-53452e07d0b9",
        "cursor": {
          "ref": "0be18a50-42ed-46d3-944b-7b378c83b9ca",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "f9cd5e27-7e94-4062-9842-5f3910630e0f"
        },
        "item": {
          "id": "38e3575a-a013-43d9-a633-53452e07d0b9",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "6c857139-87b6-4914-8ea2-bf2b601fc84f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00a8f01d-d195-46f0-9623-e4d5e46c5726",
        "cursor": {
          "ref": "6f3300c2-fa62-4cd3-9a40-53bc4f8a08ac",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "1aea6798-57b8-4b16-9198-a4b4dd487a62"
        },
        "item": {
          "id": "00a8f01d-d195-46f0-9623-e4d5e46c5726",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "091c4209-4bb2-499e-8369-95909599ec3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33863765-eabd-4b13-86ec-af07384324ad",
        "cursor": {
          "ref": "3e1b9467-6309-43e1-b373-8037ad9fe733",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "9443a2d9-3555-46ac-bdfa-c97bebd94a60"
        },
        "item": {
          "id": "33863765-eabd-4b13-86ec-af07384324ad",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "2fe5c9d2-23e5-4af1-a3c2-28cd59e970f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "954b9cb4-1055-4f7c-b85e-9e7ffd2a5e5a",
        "cursor": {
          "ref": "d6bce3a0-5a3e-42a9-8c8c-a3b3c24dc7c6",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "b0dedb51-ba58-42d8-8afa-c4acf4c0c726"
        },
        "item": {
          "id": "954b9cb4-1055-4f7c-b85e-9e7ffd2a5e5a",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "2e6b9c14-3cdd-4551-9e6b-6347e7593148",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f283b2be-9429-44ac-8bd9-ed529e924ca4",
        "cursor": {
          "ref": "20be294e-9ecb-4660-a36c-e5b11120dd47",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "e3ca53a9-636c-4ef3-97c0-4657098e3ee2"
        },
        "item": {
          "id": "f283b2be-9429-44ac-8bd9-ed529e924ca4",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "c96bcdb3-56ce-4846-a64e-80b205bb26c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a21da56-b135-42d3-adaa-a4da45226abe",
        "cursor": {
          "ref": "0a394c01-fb68-4e25-b48f-e71d0a9ad8fe",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "2b32ad28-1d8c-419d-9ddd-3f765c47dde4"
        },
        "item": {
          "id": "7a21da56-b135-42d3-adaa-a4da45226abe",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "9a2936c0-a7fb-46ca-9fd8-0524bab36b4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4afccba-4cc1-417b-ba2a-5c15251ba2d9",
        "cursor": {
          "ref": "915e946a-0370-491f-b332-939bddda3b76",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "93be322a-6612-4084-8f4d-10dda805bf2f"
        },
        "item": {
          "id": "b4afccba-4cc1-417b-ba2a-5c15251ba2d9",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "ee55911a-2972-41b2-9110-d926cbf8f4bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2853023b-0aec-4167-b37a-ae94c33c6522",
        "cursor": {
          "ref": "6b26970b-d4e8-47f5-a225-d78d022aea22",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "92ec44c3-3f5b-48bb-aa37-eed78de5556d"
        },
        "item": {
          "id": "2853023b-0aec-4167-b37a-ae94c33c6522",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "c37e5b41-69de-4e51-aa8e-2adc09331e0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a0cd88b-2f60-43b3-bee9-1593eb114c29",
        "cursor": {
          "ref": "fc5f1d6c-d3d0-42e5-aa36-afe9f3690be4",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "f58bf530-e680-418a-b5fc-48c7f90456ae"
        },
        "item": {
          "id": "6a0cd88b-2f60-43b3-bee9-1593eb114c29",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "c3d8914f-b070-444a-9bac-6683f2aa5b9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7c7b132-116a-4f34-86da-3a0927eb53d8",
        "cursor": {
          "ref": "5fbe7bc2-f6f8-42f9-a70f-badec74c2f3e",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "ceec6c57-f694-455d-9635-895a46a2a1c5"
        },
        "item": {
          "id": "a7c7b132-116a-4f34-86da-3a0927eb53d8",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "a386b0ab-07b4-4ed7-9226-76be19c4fa50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "436cd4b4-8e68-4d68-aa24-0c4316f76313",
        "cursor": {
          "ref": "11394cc1-63db-4338-96ef-cef6da2f410b",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "7cdbaa54-308f-4208-bb23-124dcf7042a2"
        },
        "item": {
          "id": "436cd4b4-8e68-4d68-aa24-0c4316f76313",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "2f0f6255-2292-42d1-a775-f275287b955b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8320b5a-3aab-4129-9b35-825ec56848c0",
        "cursor": {
          "ref": "32383bc1-8625-4478-904b-2231d3e144cd",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "00a20aba-ce1e-4556-bf5d-e1b07f8f7134"
        },
        "item": {
          "id": "b8320b5a-3aab-4129-9b35-825ec56848c0",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "b48265b0-3c92-4826-ae50-e97e0f2b0987",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 842
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "70c6ff52-b4bd-4efd-a039-cab38cd93471",
        "cursor": {
          "ref": "07f9e8cf-70fc-460e-9fce-3eb35e698d3e",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "f9224e57-151a-4c3c-9a3e-8c420e5801dc"
        },
        "item": {
          "id": "70c6ff52-b4bd-4efd-a039-cab38cd93471",
          "name": "credentials_issue"
        },
        "response": {
          "id": "4c8fab2e-2c91-48ae-bbe4-7e261975279b",
          "status": "Created",
          "code": 201,
          "responseTime": 2707,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "aacbbe32-3853-460d-9bae-d0f002ad225c",
        "cursor": {
          "ref": "241ac44a-a271-485f-9b82-94a21c0fe197",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "b293b0ba-07c7-4645-b8e4-057448638385"
        },
        "item": {
          "id": "aacbbe32-3853-460d-9bae-d0f002ad225c",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "6e132b68-c340-40db-8e81-471247a31e51",
          "status": "Created",
          "code": 201,
          "responseTime": 2183,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "27e1674d-e1f7-4b52-b26e-266db024851d",
        "cursor": {
          "ref": "14e98a3c-ee01-4deb-b729-47d9b6b2842c",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "e9926c75-38ba-402f-b3e3-e25f1ab7ef4e"
        },
        "item": {
          "id": "27e1674d-e1f7-4b52-b26e-266db024851d",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "168cab2b-75fa-4419-b271-d23748f522c4",
          "status": "Created",
          "code": 201,
          "responseTime": 2099,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f68e167-df83-4bde-a3ed-7929f18b6b9c",
        "cursor": {
          "ref": "8c73663b-5b35-4dea-bebf-0295c82ef0d6",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "6e63416d-537a-4081-af35-2e786748b4e8"
        },
        "item": {
          "id": "7f68e167-df83-4bde-a3ed-7929f18b6b9c",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "8cd16044-6317-41ec-a54f-378622ff0a85",
          "status": "Created",
          "code": 201,
          "responseTime": 2685,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ffc6d17-3a23-4e8e-ae3e-ab55e49632d1",
        "cursor": {
          "ref": "9d355161-5b1d-45dd-befa-58557120aaf9",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "600cbb5f-cd7e-4003-9870-34287b017dc2"
        },
        "item": {
          "id": "7ffc6d17-3a23-4e8e-ae3e-ab55e49632d1",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "069fc9e4-865f-4b07-b263-4458843f333d",
          "status": "Created",
          "code": 201,
          "responseTime": 2062,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbbea59a-5f15-4684-83cc-4048decd4627",
        "cursor": {
          "ref": "1e8bc7d1-4123-4f41-828c-62414e75ad66",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "d8a4dad1-9d62-4924-a554-71bf38b6d284"
        },
        "item": {
          "id": "bbbea59a-5f15-4684-83cc-4048decd4627",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "b50c6386-fe81-4ce1-a1cd-b542aafe14d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "e2c6d376-817f-4ee1-a62d-b7844dce3982",
        "cursor": {
          "ref": "9f228c35-fc1a-45e8-9bda-268fee09eb5a",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "1dbb8e56-5d74-4d0c-af0c-71b44ed936e5"
        },
        "item": {
          "id": "e2c6d376-817f-4ee1-a62d-b7844dce3982",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "9f0628c3-8f8b-4e47-8455-b199e0d62981",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb3cc3db-dff6-437f-b036-296211928d88",
        "cursor": {
          "ref": "8b3e96be-b06e-4b9e-8f4b-d40e2f260f21",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "2cedd2c7-21a5-4937-975f-31280865ce6d"
        },
        "item": {
          "id": "fb3cc3db-dff6-437f-b036-296211928d88",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "9ce1ec2a-8338-4861-a048-8bceb9d038dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d87fbb2-f504-45e6-9b40-7ed1a3792bc6",
        "cursor": {
          "ref": "5109143c-eca6-47cf-a459-f5b1ee4a87a5",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "a123608b-84da-485e-b542-d2c94c1e91b3"
        },
        "item": {
          "id": "9d87fbb2-f504-45e6-9b40-7ed1a3792bc6",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "25d98887-6632-44ec-b5f8-52fb92fb6ca0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "350a8961-5017-4c21-b2f9-efafaa46868e",
        "cursor": {
          "ref": "bc810c69-b537-4a5e-bbd2-ffa47046bb8c",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "2f189eb8-56aa-4725-b465-a878aafe633a"
        },
        "item": {
          "id": "350a8961-5017-4c21-b2f9-efafaa46868e",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "c1d7c1f9-1ae5-482e-80b9-3ef61a8f14d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cc9d96e-bc02-409b-b14f-352130c0d6b3",
        "cursor": {
          "ref": "0790464e-f46b-4e6d-a725-8a4a3bfd6c1e",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "95f9bb1a-3fa5-41ea-bee5-7e024e2aa7cd"
        },
        "item": {
          "id": "5cc9d96e-bc02-409b-b14f-352130c0d6b3",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "e134c35a-9e07-409e-ac66-8e1e7edca5a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc7b5be4-7f6c-4d3e-ad5b-11ca47ce6409",
        "cursor": {
          "ref": "fe26ba00-1882-46f7-95d9-4213b9a6d595",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "f4652f9c-28b3-4a0b-9d8f-0be66ed0b6dc"
        },
        "item": {
          "id": "bc7b5be4-7f6c-4d3e-ad5b-11ca47ce6409",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "a5b0f936-70e4-4821-8d8c-104cb5c4adff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f9f39f7-265e-44b7-8ee7-a646cf158b1b",
        "cursor": {
          "ref": "d2cd9bd2-0cf5-4f48-aaa4-2c092a61e5d3",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "b803ba47-1ea1-4ba6-ae4f-bf8891ebddbf"
        },
        "item": {
          "id": "6f9f39f7-265e-44b7-8ee7-a646cf158b1b",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "30ff721c-01a7-4999-94b0-1787996f7a91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc93a654-fd64-4132-b9b6-49086ccb3e29",
        "cursor": {
          "ref": "bf1bf154-f440-4d26-a4ae-93b404bad8c6",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "23b66a4c-7e74-4593-86d9-06280fbdf872"
        },
        "item": {
          "id": "bc93a654-fd64-4132-b9b6-49086ccb3e29",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "ad0734f4-a518-46b8-837d-3ee3d96def9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61c3dd60-00b9-49bb-8006-8f15841b0e33",
        "cursor": {
          "ref": "169db728-22d0-49ee-8e8b-263a184156ba",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "7799881e-26da-4cd1-8555-3f6e6f725ba0"
        },
        "item": {
          "id": "61c3dd60-00b9-49bb-8006-8f15841b0e33",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "105f6930-3d45-4335-99f0-a535bf1e34ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abe30ff8-f6c5-48bd-adbc-cec294af87a2",
        "cursor": {
          "ref": "67617001-c0ee-4678-b304-7704b356e4a0",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "6acf34f2-e6a1-4db0-97cd-0bf0c15069af"
        },
        "item": {
          "id": "abe30ff8-f6c5-48bd-adbc-cec294af87a2",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "a6990950-e0a1-47f9-8af7-7ea056ac20aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcb2b478-f4e6-4c27-b7d6-e06bc1fcb0bd",
        "cursor": {
          "ref": "fe673a94-27f9-450d-9d5d-7bdf3e5a2e9e",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "35519716-0925-40ac-8c4f-bd9e8b1303cc"
        },
        "item": {
          "id": "dcb2b478-f4e6-4c27-b7d6-e06bc1fcb0bd",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "d019f58d-d998-40b5-b1cf-90379c0edc27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d86dd44e-1f70-40dd-8e9d-fae3cf157337",
        "cursor": {
          "ref": "df1fce3d-4207-4c55-8f9a-f7392f3f9169",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "266ae5f4-cc50-462b-912b-1adca116d7e8"
        },
        "item": {
          "id": "d86dd44e-1f70-40dd-8e9d-fae3cf157337",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "adc6f6f1-1e82-4dae-8df6-141704e54c31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb532cc7-4819-475c-b42e-264c3a6ab074",
        "cursor": {
          "ref": "41f10e0c-e474-4ec5-a2d9-27648258d214",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "d6b33199-ad6e-49b7-9404-2d45366d8f67"
        },
        "item": {
          "id": "eb532cc7-4819-475c-b42e-264c3a6ab074",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "910879c6-df29-4298-80bf-8e05e796f7b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1215f698-d7f0-41fc-9ebf-f7b0ff9803dc",
        "cursor": {
          "ref": "961b559d-183c-4741-9aaa-62f5edcef60d",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "bc79abaf-5bd6-4868-996c-d16a0a6590d6"
        },
        "item": {
          "id": "1215f698-d7f0-41fc-9ebf-f7b0ff9803dc",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "e5af6996-d990-4879-bf51-d4cff73244b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ba9faee-eb91-4fdf-98dd-ad1f98a19112",
        "cursor": {
          "ref": "e9c9a536-9dd3-4438-b885-b88aa7a3f023",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "289bc9d7-9bd7-4395-bac3-5417e7356e0f"
        },
        "item": {
          "id": "6ba9faee-eb91-4fdf-98dd-ad1f98a19112",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "c2e8d324-1dfd-48b9-8e73-ba0b962d377f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc8f6228-1719-4ea3-8473-bbe61d941837",
        "cursor": {
          "ref": "946db4d5-0bbf-4421-a88c-b06cb35a4d5d",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "2720f873-78ff-4be6-9c52-2529381d1e15"
        },
        "item": {
          "id": "fc8f6228-1719-4ea3-8473-bbe61d941837",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "80f406ab-a8ca-4275-b3d1-f0f635b0ddfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b56ea01-d9fe-4cf1-b74e-c30cc95c0d9f",
        "cursor": {
          "ref": "cafe3e8b-385c-4572-891d-635a33d12be4",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "852a57ed-fe8f-4670-9567-770b49fca59c"
        },
        "item": {
          "id": "1b56ea01-d9fe-4cf1-b74e-c30cc95c0d9f",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "c3ec73c6-8d87-40db-9e8b-ea1ee3fa8585",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc21c095-137f-459a-9fd3-f6ff5bbb0a52",
        "cursor": {
          "ref": "ea360556-007a-4a5a-95e2-7a16482f097b",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "925e82bb-88a2-4977-871b-d75aa9e2527f"
        },
        "item": {
          "id": "fc21c095-137f-459a-9fd3-f6ff5bbb0a52",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "aff2e1c1-ef8b-4c87-8680-e03138bfbc9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78f9be34-e9c2-4661-8981-c4c69332c8d2",
        "cursor": {
          "ref": "b3b66cc6-4472-41e9-b7c2-96302c873928",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "87dd7b92-c444-4bea-8e08-a6f4c3db740e"
        },
        "item": {
          "id": "78f9be34-e9c2-4661-8981-c4c69332c8d2",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "77030914-3ea6-48ba-ae9b-4dde651ba7e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03b8becd-6777-48e2-b172-d37b8e810199",
        "cursor": {
          "ref": "cde8241c-be4a-4638-83a9-6a5e1be8f6a7",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "ebd70cb6-3846-4257-b28d-b6a9280cc4d0"
        },
        "item": {
          "id": "03b8becd-6777-48e2-b172-d37b8e810199",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "818396b6-29c3-463d-aea9-29a408e32bb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0e30c0d-9d9f-4c1e-b147-d170b64acf85",
        "cursor": {
          "ref": "e56f5458-669f-4dde-a0a9-99509c6047a9",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "418e8f5f-6f95-4ea4-80d4-afa844b2aa49"
        },
        "item": {
          "id": "c0e30c0d-9d9f-4c1e-b147-d170b64acf85",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "7a8d101f-90cb-4e0c-b5bd-e9fe7a9a884a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f53136f-bb21-4c70-95d9-893389f54cf0",
        "cursor": {
          "ref": "68c5ed54-3fa3-4ea9-99f6-3b5b35f01159",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "6268ef8f-baa2-489d-b476-80563a60f831"
        },
        "item": {
          "id": "5f53136f-bb21-4c70-95d9-893389f54cf0",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "46f79325-77ce-46f5-928b-6f9b1c89d8f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cbff9d1-7c7b-4d07-af39-9c1c295e073e",
        "cursor": {
          "ref": "814574a5-4fec-4db6-b30f-854ebec29f75",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "10aec638-9618-4ed7-8715-9406a29bbdce"
        },
        "item": {
          "id": "8cbff9d1-7c7b-4d07-af39-9c1c295e073e",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "0f0d683d-7f62-47e7-b0d9-943e47df58c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c272d32-f645-447b-b4d8-6824bf664a16",
        "cursor": {
          "ref": "a7e70e4c-3a6d-4254-98e0-721639200603",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "1be07061-894a-4d94-ab4e-8966d6111a04"
        },
        "item": {
          "id": "4c272d32-f645-447b-b4d8-6824bf664a16",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "ba3d8f6f-b215-49fb-a0b6-b4a10315b08b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bc8dfbf-ed1c-4fb6-84c0-622b0999822a",
        "cursor": {
          "ref": "f4fab970-90c2-45cd-a09c-994f8690e2d2",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "08b10943-9a9d-4eac-8d3f-05f0a2a82364"
        },
        "item": {
          "id": "6bc8dfbf-ed1c-4fb6-84c0-622b0999822a",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "61452a35-3cf8-4981-b07f-355e4ce628ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f876ba5-01a9-43fc-a00e-fb781582b2d3",
        "cursor": {
          "ref": "584179f9-e80f-47c1-aedd-a4d4f734056b",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "acba714b-0c37-4cf3-8d87-4a2b276afd98"
        },
        "item": {
          "id": "3f876ba5-01a9-43fc-a00e-fb781582b2d3",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "c9aaeca5-f3ac-4848-92ae-c6c7dc9135d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c87e3836-a23b-43f7-9bd0-36f9c195e050",
        "cursor": {
          "ref": "5b951d2a-f3b6-4ae7-b3e0-ce03da2c571d",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "7e4aee04-e8bd-4f2e-b09c-f1d250f4e73f"
        },
        "item": {
          "id": "c87e3836-a23b-43f7-9bd0-36f9c195e050",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "4492c9b2-1a8f-4cc3-87a2-dda7a7522081",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13fd08fb-d109-44e0-9e36-792160e36d7f",
        "cursor": {
          "ref": "10dbe120-f9a1-44b3-8187-a9a531ce1505",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "7280ac69-7a8b-4a48-a03b-06efd4ca76d2"
        },
        "item": {
          "id": "13fd08fb-d109-44e0-9e36-792160e36d7f",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "53152a1f-ec4c-4010-9b78-7a3fad73d592",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4d37c85-b770-4600-ac8a-90722980ace9",
        "cursor": {
          "ref": "40753614-d8c4-4d88-9067-110d23899691",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "e95bad41-ced2-4b02-8643-8e0a512f78d6"
        },
        "item": {
          "id": "b4d37c85-b770-4600-ac8a-90722980ace9",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "da349b9c-b398-4787-9010-c4c3deefcd54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75d0767b-b0c2-42ce-83ab-0953090ef948",
        "cursor": {
          "ref": "7f1145a2-dec5-445d-9c48-ea59e925dd10",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "a9e8177a-765d-49f7-a9e4-1476bf09a8c9"
        },
        "item": {
          "id": "75d0767b-b0c2-42ce-83ab-0953090ef948",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "342bfa44-7325-4d90-8d36-438c46f80795",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfd0b9e6-fd4e-4787-b604-dd2f97be748d",
        "cursor": {
          "ref": "051e86f5-cef6-4163-963d-736a1a394e29",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "bfcaea2a-8112-4856-ab06-28dd4a6809d7"
        },
        "item": {
          "id": "cfd0b9e6-fd4e-4787-b604-dd2f97be748d",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "b2dc4a38-f821-412f-ac0b-05c153ab3e09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a31a63d-0785-48ab-b7eb-95bfbed5a7f3",
        "cursor": {
          "ref": "92df49e6-2204-4fc0-a991-9f49c2aae13e",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "be5cb72a-e1a4-426b-8457-2ebcb3daf0e2"
        },
        "item": {
          "id": "5a31a63d-0785-48ab-b7eb-95bfbed5a7f3",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "3970dac1-78aa-4b93-b07d-7f76dcd6b921",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fb05493-9b2b-49ae-8ee1-574d02423024",
        "cursor": {
          "ref": "2b99065d-7e8d-4862-ace1-86f4d31d2648",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "18d31416-3205-4c66-9b2f-586ed1bf3935"
        },
        "item": {
          "id": "3fb05493-9b2b-49ae-8ee1-574d02423024",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "11b455e6-3a2e-4ba1-8d9a-0be8ec47efb4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "433735fc-c87b-46a4-aa5c-024613bbeb3d",
        "cursor": {
          "ref": "d61c51cb-95fa-4a9e-bdc9-bdd15154db6c",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "0b7e8506-733b-43a2-8514-8901d28b3f4c"
        },
        "item": {
          "id": "433735fc-c87b-46a4-aa5c-024613bbeb3d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "4002be94-2b2b-45b4-acdb-0ce31ca6c3e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9178890-ef7c-4d75-b55e-69d071684e99",
        "cursor": {
          "ref": "717e122e-8f3d-4bc4-84aa-e08b01db1cc0",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "b9be7788-ec4e-4678-979e-47a29b79af57"
        },
        "item": {
          "id": "c9178890-ef7c-4d75-b55e-69d071684e99",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "4a485e58-e313-4d14-8cfc-49630047bad3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ea04b41-1985-41ec-a424-35f8cd1dbe30",
        "cursor": {
          "ref": "85d02d5f-632b-4179-83ca-6b6062fe3887",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "0391593f-9364-47cb-8acd-988887ad7b9f"
        },
        "item": {
          "id": "3ea04b41-1985-41ec-a424-35f8cd1dbe30",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "31434764-d407-400d-b002-0a4305cdc217",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1f73a17-7468-4d48-b1f8-8f318ac0a8b6",
        "cursor": {
          "ref": "0b89e101-f5f7-4d50-af20-8726accc1b77",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "a19a4282-bc62-4a79-a555-ca31c24a8ccf"
        },
        "item": {
          "id": "e1f73a17-7468-4d48-b1f8-8f318ac0a8b6",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "142aa53f-db4a-461c-89c1-b9751bfdc41a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8c0e5b7-0ed6-4a12-b92e-24b68bf1d16e",
        "cursor": {
          "ref": "c0ecf9cc-72de-498d-9514-a827e4eed062",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "228c2776-3f71-4e41-a440-c130012d07c9"
        },
        "item": {
          "id": "e8c0e5b7-0ed6-4a12-b92e-24b68bf1d16e",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "56967bdd-1445-417e-959a-52d951ca5016",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5d6e5aa-f521-4ed4-a044-3a17067c769d",
        "cursor": {
          "ref": "62e35312-1674-455f-8ffb-037f30dc253a",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "7c1ee3bc-6e92-44f0-8d6f-77fab1ad6e82"
        },
        "item": {
          "id": "c5d6e5aa-f521-4ed4-a044-3a17067c769d",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "61618d69-2c55-4fad-96b9-4a84a5c33692",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b66aed86-d154-400f-8565-edc40a0fe509",
        "cursor": {
          "ref": "7ca73616-00fc-477f-a0b2-10676afbe9d6",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "2530843e-f621-447b-a340-f874296be27c"
        },
        "item": {
          "id": "b66aed86-d154-400f-8565-edc40a0fe509",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "5351614b-6b39-4344-9dd7-39b35b55fd0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58355f8d-d26b-403b-8bb4-7da198a813a2",
        "cursor": {
          "ref": "2623fe6b-e683-4ee1-b879-464be8c820b9",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "48f38e55-617f-4a9d-a127-666cf8d5e723"
        },
        "item": {
          "id": "58355f8d-d26b-403b-8bb4-7da198a813a2",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "5c6cbdd4-bb41-4cfa-8d3c-4e6176acf8d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "974b4bf1-a7ec-435d-aba2-8cd1de5480b3",
        "cursor": {
          "ref": "6916b5f5-b260-40d2-9994-78cbfe5a6ae6",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "2a832adf-31ed-464d-9ba0-9ceaeeeceef9"
        },
        "item": {
          "id": "974b4bf1-a7ec-435d-aba2-8cd1de5480b3",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "c02ed680-bff6-46f2-8408-a866b7fa6355",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "872f7c78-d75b-451d-9ef6-278f8e581642",
        "cursor": {
          "ref": "6977f762-fa98-4121-a9ea-d866ef4e94fc",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "f5a637a2-9eee-4283-9006-ebb2a256b517"
        },
        "item": {
          "id": "872f7c78-d75b-451d-9ef6-278f8e581642",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "e8989576-3898-4b91-a1f4-acc1ae2be51d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6ac835c-b4ba-4ad0-9e8a-db5388cef3cd",
        "cursor": {
          "ref": "35052068-f78a-46c9-84dc-a25345f0977a",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "dee0c450-0eb0-495e-9fe6-4888e2c47f5a"
        },
        "item": {
          "id": "c6ac835c-b4ba-4ad0-9e8a-db5388cef3cd",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "0f4e6b9a-8807-4e26-ad83-43594f64b866",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b56fe83-0033-4844-9a4d-1b1d08a2c212",
        "cursor": {
          "ref": "f7bf6721-2367-44d0-886a-4b834e21927d",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "cbb08d97-aa1a-4153-b4cb-a7d1d2913ae5"
        },
        "item": {
          "id": "8b56fe83-0033-4844-9a4d-1b1d08a2c212",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "3b71172b-e683-4a33-9359-1a693fc66d43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de4fad7d-9f80-4cf8-b451-a96072b79a95",
        "cursor": {
          "ref": "3713803e-9122-4330-857e-e0ce8ffe50ff",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "28224014-c5d2-4493-9d40-07f74371d664"
        },
        "item": {
          "id": "de4fad7d-9f80-4cf8-b451-a96072b79a95",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "ed67bdf4-a199-449e-90ca-1373e13aa750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18139185-b2c7-4af0-9281-7f3b9af626b8",
        "cursor": {
          "ref": "f880c9e5-bc87-4ffa-8d14-4a6639e3dcb6",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "31b75b13-9884-4f04-8a77-a1378649eb5d"
        },
        "item": {
          "id": "18139185-b2c7-4af0-9281-7f3b9af626b8",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "46870e59-1931-4662-87a1-85413a06b4ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f41959a-5384-40dd-82d6-0904d1f64a1e",
        "cursor": {
          "ref": "06d36265-3fea-46af-95ca-cc6521b6fe48",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "9e773812-3202-4ad4-92b1-dd41bfca6a77"
        },
        "item": {
          "id": "0f41959a-5384-40dd-82d6-0904d1f64a1e",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "d212981d-2e63-4d6f-8159-50f5538f6796",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c3e553e-ff92-497d-b15c-4f08c94d20d3",
        "cursor": {
          "ref": "ee1d3c63-75a2-4a95-86a9-204b9d8f5c06",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "03913798-79fe-49e3-ba82-2c7a2c81bd27"
        },
        "item": {
          "id": "3c3e553e-ff92-497d-b15c-4f08c94d20d3",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "0d82b1bc-4268-41dd-94ca-87ee2d104850",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26c47e8f-6ec9-4d96-af1d-9bc5f6d5103c",
        "cursor": {
          "ref": "0e6aa3be-a52e-4bfd-87a7-a8c33eeb37ef",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "149663e6-1875-4f4e-bcf0-0d956557f657"
        },
        "item": {
          "id": "26c47e8f-6ec9-4d96-af1d-9bc5f6d5103c",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "434069d5-b7e0-473c-94be-ccb5734727b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbbeb3a9-7917-4a70-b93a-17221eb11c1f",
        "cursor": {
          "ref": "70b8c370-c6fe-4a94-b2dc-d7bfb6229d46",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "12e3c98e-856d-4c26-9b5f-d98510c20a62"
        },
        "item": {
          "id": "fbbeb3a9-7917-4a70-b93a-17221eb11c1f",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "02b8ec1f-ac4c-43df-b5a0-967d78e11ada",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e148f18a-2910-4fa0-932f-ccbf6e4ecfba",
        "cursor": {
          "ref": "2a90895b-0a2e-4cd2-8e94-ffd2c09fad35",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "a4be3ff1-54ac-46b1-8588-b811749581e6"
        },
        "item": {
          "id": "e148f18a-2910-4fa0-932f-ccbf6e4ecfba",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "3b2ae939-e8a2-45df-91c3-c8ac35a5e2dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41922e91-3073-4b7c-aced-416eb3a857d3",
        "cursor": {
          "ref": "e7cd3770-df41-4b0f-9a5e-219a1c3c5d2c",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "c58d6f12-c3e4-4254-a3e8-6059c040a042"
        },
        "item": {
          "id": "41922e91-3073-4b7c-aced-416eb3a857d3",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "e731178b-5fbe-4ca4-86e4-d82a1a83125d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3860700-bd40-414a-aee9-4a3b3f742cf4",
        "cursor": {
          "ref": "0316e9ff-7bc7-4c98-b639-59eb377254d4",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "dea615f3-c0cf-4109-b712-ebdca9d757c0"
        },
        "item": {
          "id": "b3860700-bd40-414a-aee9-4a3b3f742cf4",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "aced5d93-4a70-47dc-8717-f9be50f45c55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a2585b9-2d2f-42a6-9394-70718152e2d0",
        "cursor": {
          "ref": "737b056f-d92d-444c-8b47-cb8fc21f1346",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "3978e835-9fb4-463a-9f52-780f7ad2c406"
        },
        "item": {
          "id": "3a2585b9-2d2f-42a6-9394-70718152e2d0",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "93900c80-9622-4ad7-932a-1baa25857573",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7970d5e0-4e26-4ffa-b103-25a1ecd8b7a3",
        "cursor": {
          "ref": "26f85825-7f6d-42c4-8023-79fadaaffaca",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "2814f527-6e8e-43c2-b189-7d3cfdadad7e"
        },
        "item": {
          "id": "7970d5e0-4e26-4ffa-b103-25a1ecd8b7a3",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "cc360f49-4b28-4c04-b46c-745d944853b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69d0e4d5-7605-4b8d-9085-a91d3c64cb8b",
        "cursor": {
          "ref": "af050bae-cf6f-4af2-bdd4-3e1fca4098de",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "855cc01c-2c41-4e17-8479-d6609b4ef581"
        },
        "item": {
          "id": "69d0e4d5-7605-4b8d-9085-a91d3c64cb8b",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "3b9ba60f-2b08-4379-803f-3fe09f665774",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cedd9cca-4551-46a2-a52f-cb1dde67d705",
        "cursor": {
          "ref": "578c54e0-badc-43e2-b493-5d87bbea4784",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "16fd8e3c-51b6-407b-a68d-9ac73e3100b5"
        },
        "item": {
          "id": "cedd9cca-4551-46a2-a52f-cb1dde67d705",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "e94088bb-d4a3-4ee8-a850-c0ede7f51bb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc7273c2-72b6-4e67-9d86-1ea7dbe96a2a",
        "cursor": {
          "ref": "68dfd965-a622-4517-a1ca-5031c7c75552",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "5eccf260-f7db-48a4-abeb-eee8b8eae2e1"
        },
        "item": {
          "id": "dc7273c2-72b6-4e67-9d86-1ea7dbe96a2a",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "3917671f-0683-435c-acbf-2495ab882304",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2de2e576-8306-4660-9aa9-76c1b1abc025",
        "cursor": {
          "ref": "a1a64854-7a7d-4fb8-b5ac-4e0f077e987d",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "ae27a7d7-b9b8-4e28-b16b-53f9ca6684fb"
        },
        "item": {
          "id": "2de2e576-8306-4660-9aa9-76c1b1abc025",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "05cf3729-7ba6-4360-b5a1-463e049b76d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f85c1fec-5108-479e-a3aa-220181a1e36b",
        "cursor": {
          "ref": "2f93a3d5-1e91-42ec-8687-603e1fd8e1be",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "6ef9d670-96e3-4e39-a782-860acfbc1256"
        },
        "item": {
          "id": "f85c1fec-5108-479e-a3aa-220181a1e36b",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "f54d2f6f-1fed-48a8-bea1-3900654cfdf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad327aa8-96cb-4edc-bfd9-e882d2a1f99a",
        "cursor": {
          "ref": "16cf6593-1888-4870-9c80-610036b55bc2",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "c3866f9d-df86-4c43-803f-74533e84cd95"
        },
        "item": {
          "id": "ad327aa8-96cb-4edc-bfd9-e882d2a1f99a",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "4e531395-f434-426d-886e-637eaf77433d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6df8d1c-44e6-41c3-a7b5-a4d00c6e0c28",
        "cursor": {
          "ref": "ba12567b-5dfd-4f4b-b872-5d65bb313169",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "8deb43be-0a17-4074-b670-d20e63744235"
        },
        "item": {
          "id": "b6df8d1c-44e6-41c3-a7b5-a4d00c6e0c28",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "8df586f3-398f-4ead-9456-522637470f25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "065abc42-8938-4a97-8d62-27681418b969",
        "cursor": {
          "ref": "2d797fcd-49c4-445e-9c59-78cc52ea38e7",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "27d1bb64-0cd3-4eb3-b3b9-5da34ea47cb5"
        },
        "item": {
          "id": "065abc42-8938-4a97-8d62-27681418b969",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "dc70eaed-ea8d-4412-8f36-04c13d198668",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "464aca3e-fb9d-4533-9819-e73355c558c8",
        "cursor": {
          "ref": "fee4707b-123f-48f0-a672-13d75b806ef3",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "b00a2ae8-7396-411a-924f-3d2af5105887"
        },
        "item": {
          "id": "464aca3e-fb9d-4533-9819-e73355c558c8",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "3ed7e0b3-b1c2-4e08-a026-822e7d2a7194",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68dc605f-39ca-4da7-9f4d-646cdcfbf003",
        "cursor": {
          "ref": "7950de90-af53-4f8c-94ca-c9696cf2351c",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "2ad25555-35a3-4385-aab2-e631c196a01e"
        },
        "item": {
          "id": "68dc605f-39ca-4da7-9f4d-646cdcfbf003",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "7a95b1ac-d4e5-4c50-ad7e-6e10aec43da2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31b9ae7a-6e56-4724-89af-9d503640aacd",
        "cursor": {
          "ref": "15a98dc4-bf8c-4700-a4f9-912e884cf2b0",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "ed5d624c-088c-4832-bc77-9ff4e5ade6eb"
        },
        "item": {
          "id": "31b9ae7a-6e56-4724-89af-9d503640aacd",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "3f22b1e0-92f4-4a44-adef-cc0f14021750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "590cabc1-57c8-4128-acaf-bfaa0bc4a876",
        "cursor": {
          "ref": "dc1fcd0d-deb5-4f5e-884c-a94572d6c3ed",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "06daef59-59ee-4b7e-a6c3-cd45bd1eb0fe"
        },
        "item": {
          "id": "590cabc1-57c8-4128-acaf-bfaa0bc4a876",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "7dfdca6b-8d5c-450b-87eb-87d82494b3f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c08b6386-caf3-4f86-993f-9568b60013f3",
        "cursor": {
          "ref": "bc8703a1-ba68-44d0-8c41-f457eaa17210",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "93732256-ea8f-46be-b771-6938b7c20c54"
        },
        "item": {
          "id": "c08b6386-caf3-4f86-993f-9568b60013f3",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "f5b93a5a-f035-4912-a0a2-7b2a4448280f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1156ade7-1de8-404a-9106-1946a2d8a303",
        "cursor": {
          "ref": "18a0b5ed-3434-4568-8b5d-923f28d0b378",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "2a7e5098-fd98-4e71-9c29-ab35ae42a51f"
        },
        "item": {
          "id": "1156ade7-1de8-404a-9106-1946a2d8a303",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "6fb6c3ce-3f9a-403e-abb2-b7a5df39ccc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e25c712f-1ef8-4110-8bcb-bb9c2adcd46d",
        "cursor": {
          "ref": "2cdc5cb4-f8c9-49f4-95e8-8ffd2aeb7bda",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "6a17da58-109d-4001-8f22-e5679ab47074"
        },
        "item": {
          "id": "e25c712f-1ef8-4110-8bcb-bb9c2adcd46d",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "97cd38eb-5cf5-4d6d-be02-1d36905e608a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "228a2f06-006a-42d4-bd60-8c6e6f72e998",
        "cursor": {
          "ref": "06cf86b4-f373-4971-a48d-52a05ec5064e",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "58472387-cdb7-4065-bae0-7c8ccd7519b9"
        },
        "item": {
          "id": "228a2f06-006a-42d4-bd60-8c6e6f72e998",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "288bd861-41b5-4828-8a77-f809b8381666",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94ac25ee-1449-43b1-ada2-d8b305f2b4f0",
        "cursor": {
          "ref": "65ef9e8c-f76f-4a5a-a64c-2e922db2c942",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "2842ce60-e708-463c-a338-042f1166de96"
        },
        "item": {
          "id": "94ac25ee-1449-43b1-ada2-d8b305f2b4f0",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "f76fc0d7-43de-46fe-b226-edb770b79646",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f354282f-d87a-43f2-b423-a8f738543ed5",
        "cursor": {
          "ref": "ec86661b-8134-4bde-b971-8a20a9500bbc",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "afdcc966-3965-496c-a3ba-f42e406aa4b0"
        },
        "item": {
          "id": "f354282f-d87a-43f2-b423-a8f738543ed5",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "b4d9b62e-4fbe-4228-8c57-a6b2e35f6a69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09b07b46-d3ec-4949-9971-bd5520f42dc9",
        "cursor": {
          "ref": "d3a0bae4-d377-4e54-8a35-94d9ab37f6c5",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "4dc98b4f-a55f-46e9-8155-809f1f36624a"
        },
        "item": {
          "id": "09b07b46-d3ec-4949-9971-bd5520f42dc9",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "c1e6ca10-baf6-414a-925a-f33cb1f0bbbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7848c88-edfa-4937-8704-d3b354331406",
        "cursor": {
          "ref": "8cb52321-4c86-44c8-94af-9a793c2d19dc",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "bd9f6d07-0e08-45d6-9d1c-6d633dfc1784"
        },
        "item": {
          "id": "a7848c88-edfa-4937-8704-d3b354331406",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "bb7983ec-a2fc-4aaa-a60e-4442cfb8502a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3874b09a-7625-4069-90c2-32247df4c64e",
        "cursor": {
          "ref": "b6f44e86-5040-4086-81c1-5eab7bce84af",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "dbb905a2-ff47-410b-ad01-10662abfd2e0"
        },
        "item": {
          "id": "3874b09a-7625-4069-90c2-32247df4c64e",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "24d1905b-e978-4f5c-9d09-71e0412a3001",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35c6c6a9-767f-4875-b041-5fcd10f4b714",
        "cursor": {
          "ref": "1c2d8b63-865a-4417-be20-eaad97e758c2",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "2f849a6d-4223-41cc-8c2c-550902e9c2ab"
        },
        "item": {
          "id": "35c6c6a9-767f-4875-b041-5fcd10f4b714",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "41f0e93c-f60b-4c41-9c1c-7b9bd7c80c0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c80087de-5564-4bc1-a66c-3b8bf4945c12",
        "cursor": {
          "ref": "2beb5303-8af0-4cf3-b7cb-787e4d100d57",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "d5f514ef-9a03-482a-b748-35ab3ca8d877"
        },
        "item": {
          "id": "c80087de-5564-4bc1-a66c-3b8bf4945c12",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "e42e5305-8159-4cbd-b128-b0c5ab68ba6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82cd454d-4a9b-4e3e-8d46-d7ac4e854d27",
        "cursor": {
          "ref": "190fa1c6-8584-4e2b-984e-3b6660c09179",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "04e29578-a2b1-470b-86b8-c9062d892837"
        },
        "item": {
          "id": "82cd454d-4a9b-4e3e-8d46-d7ac4e854d27",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "0e6cd510-13ce-434c-83f0-512c13e854ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57ebc6e3-873b-4942-8549-684c17102d24",
        "cursor": {
          "ref": "14e7f4c4-a1e4-4d37-a24a-a9c6e1f2f874",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "a1385ed2-8081-4de6-ac28-52297aa7bcf3"
        },
        "item": {
          "id": "57ebc6e3-873b-4942-8549-684c17102d24",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "db5822a3-dffd-43ec-93b9-9037f3430552",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e09cd492-e8de-4f2a-a5f4-661abf56f041",
        "cursor": {
          "ref": "87af2b87-f083-4124-b480-bd3c1a51324d",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "d42d4615-076e-43eb-bc9e-5a9e11f5695a"
        },
        "item": {
          "id": "e09cd492-e8de-4f2a-a5f4-661abf56f041",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "dee019be-237e-454f-8626-5d078cd3f832",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdfddfcd-9329-4bf5-b117-4b02c45d29f6",
        "cursor": {
          "ref": "8cbb3d7d-7f11-4e2e-9c26-2610c0d1410e",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "962d4a15-71d7-4116-83c6-9b74f785ac4e"
        },
        "item": {
          "id": "fdfddfcd-9329-4bf5-b117-4b02c45d29f6",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "6a7f3047-5b26-40ca-b78e-470fa88a9ca8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "724adaed-edaa-45cf-8cc6-bb90e88c9de4",
        "cursor": {
          "ref": "f3154a6a-8b07-422e-86be-da1a512ece88",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "9b29325d-c21e-411f-9cb1-3390d26ca459"
        },
        "item": {
          "id": "724adaed-edaa-45cf-8cc6-bb90e88c9de4",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "e7d83217-3049-40d3-b0d0-397154b59f0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10a3fb22-c5df-49dc-b0cc-c21f682083d6",
        "cursor": {
          "ref": "089020c1-7249-469f-9e9e-b38617b276ca",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "046e2e13-07c3-439b-b136-db3d5f19f484"
        },
        "item": {
          "id": "10a3fb22-c5df-49dc-b0cc-c21f682083d6",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "c36792b9-3bde-4683-9ea1-48520c470d52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cd8e7b7-9416-4a52-ad46-34591ce3f8e1",
        "cursor": {
          "ref": "6ee4b674-f821-40d1-9afd-ce408874fb1a",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "a2728409-c628-4161-8b39-33ed9ffc4fb6"
        },
        "item": {
          "id": "1cd8e7b7-9416-4a52-ad46-34591ce3f8e1",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "bdc2fa8c-87e5-46cd-9060-264087439758",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96888f1a-15e5-442d-8dac-032c35b31a05",
        "cursor": {
          "ref": "7ec70da1-40e2-4002-9c1c-7f2437ad8ae3",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "3c6f8f50-9318-4b90-ae58-68cd12c581bc"
        },
        "item": {
          "id": "96888f1a-15e5-442d-8dac-032c35b31a05",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "8ed6c1d7-e507-47b3-b32c-dba86a1eeb0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94b7f4ed-0467-4d2c-ae5c-d517c236c89b",
        "cursor": {
          "ref": "624e3459-0512-4fdb-9918-539c78e687ed",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "cbb87d97-288c-4712-87f1-46a82f5cd8a4"
        },
        "item": {
          "id": "94b7f4ed-0467-4d2c-ae5c-d517c236c89b",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "0e600761-6636-494a-bee0-3d786452eca1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e5f8576-9468-494a-a9c7-a160e3b1ac60",
        "cursor": {
          "ref": "37e32edf-108b-4a90-afb4-4512ee8e2f4f",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "14eed6c4-741c-4467-91f3-0be839616976"
        },
        "item": {
          "id": "9e5f8576-9468-494a-a9c7-a160e3b1ac60",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "8a3aaa11-c621-4ee2-9ed1-0180471eba45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b89ac217-11c7-4864-89d2-de3eefa93136",
        "cursor": {
          "ref": "18bde715-a081-4ba1-96e3-2f8badcb8a19",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "f07c107e-6789-4648-943a-d22119531a2c"
        },
        "item": {
          "id": "b89ac217-11c7-4864-89d2-de3eefa93136",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "a483dbce-9c0d-4975-a6b2-4201406a8079",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a925802-5eaf-4918-a3b7-000a3583e7c0",
        "cursor": {
          "ref": "5903bdcc-ff20-4eae-bf43-1e496fc9022f",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "e38e7aa6-c5dc-4393-804b-2b9c8565365d"
        },
        "item": {
          "id": "4a925802-5eaf-4918-a3b7-000a3583e7c0",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "e7e229fa-aae1-4853-9c75-611734521651",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "935cd8de-f943-44b2-abb6-deca863fc16e",
        "cursor": {
          "ref": "ef2a04b3-ec15-4abf-8cfe-cbfa3c6a5981",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "02ae675b-ab7c-4238-b21d-9f45c9c64dce"
        },
        "item": {
          "id": "935cd8de-f943-44b2-abb6-deca863fc16e",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "531d8bed-6ece-45aa-ba82-94428c4217c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33cef431-c87c-4ac5-b484-8bb363d93c8d",
        "cursor": {
          "ref": "5dc31dcd-9ef2-4c13-94bd-4fcf844579e0",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "615db264-9b2e-4a10-8a91-643d559cdc1b"
        },
        "item": {
          "id": "33cef431-c87c-4ac5-b484-8bb363d93c8d",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "61ee1905-466d-44fd-bcb7-aa226b89f440",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1f1fd13-473b-4637-9689-f6cb18b87d83",
        "cursor": {
          "ref": "4c339efe-6c57-48fe-a07d-1f5852079487",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "2f1a6577-76ed-49db-9a60-8a425f02f93d"
        },
        "item": {
          "id": "c1f1fd13-473b-4637-9689-f6cb18b87d83",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "a35753c3-80d1-4f28-a55a-94287b6b5df8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3421d5fd-a828-472c-8f9d-5f1c5c463cd5",
        "cursor": {
          "ref": "0a172804-879e-4131-aa2f-95ffb09c7a80",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "a9aa5653-6ab2-47cc-9364-b26df1e8c436"
        },
        "item": {
          "id": "3421d5fd-a828-472c-8f9d-5f1c5c463cd5",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "549aa35a-62f3-43fb-9c43-af83062d1e0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab30e1c8-5be1-4e63-9950-110d5373aafe",
        "cursor": {
          "ref": "404ea27d-e2cc-4aac-9ede-aa078a8999a1",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "40e4ad54-dc57-4906-88c2-5f7f80273192"
        },
        "item": {
          "id": "ab30e1c8-5be1-4e63-9950-110d5373aafe",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "ee9577c6-e5ae-42d8-84dc-e31a33ae62fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea93b6bf-ab92-4f96-a305-bdc2305c95aa",
        "cursor": {
          "ref": "ecab8ec7-3e48-42aa-82f1-b6d136298f3f",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "bca11410-0e42-42e3-b8e8-31550d965ca7"
        },
        "item": {
          "id": "ea93b6bf-ab92-4f96-a305-bdc2305c95aa",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "13fae05d-b6ea-4721-87aa-4c6c3fd0c2ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7177ccc-9645-4ad4-94ca-2ebf55a46ef0",
        "cursor": {
          "ref": "b81520a2-31bb-4635-b5f8-2bac1440f8a1",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "13855334-6614-41ef-8705-65d54c11f1a0"
        },
        "item": {
          "id": "d7177ccc-9645-4ad4-94ca-2ebf55a46ef0",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "992ca7ce-9727-4265-a18c-96a08ce8e7fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8476a051-cbe3-49bd-8dbe-12ed7208d7f2",
        "cursor": {
          "ref": "aceb0565-2154-4dd4-8713-5df32abcce58",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "76e2709b-8d19-443f-80fb-293e4858a16f"
        },
        "item": {
          "id": "8476a051-cbe3-49bd-8dbe-12ed7208d7f2",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "31136548-ba3d-4b50-9ebb-d1d4a88f4874",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10332e3b-e02e-4556-a653-84fa96c9099c",
        "cursor": {
          "ref": "870a2f7e-8c6f-4bfe-b9dc-67f574e1d0d1",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "9119b1fc-e197-411e-8bdf-81b987f2cdb1"
        },
        "item": {
          "id": "10332e3b-e02e-4556-a653-84fa96c9099c",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "9ee5a746-db91-4d65-8e97-224a043f1a8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fd5fbc9-4718-487f-8ddb-4d7fd89ea050",
        "cursor": {
          "ref": "6006f8e8-0858-49d9-bab1-ce95a3396758",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "2ad1bc1a-ca88-4e19-bab2-9b3b917e290f"
        },
        "item": {
          "id": "3fd5fbc9-4718-487f-8ddb-4d7fd89ea050",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "c3deeb83-478e-4644-90df-bbfd3c3f9f5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10ff4185-98e3-4a63-ac1e-2efd4966d47d",
        "cursor": {
          "ref": "732ee26d-4c54-41df-8820-943af86afe36",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "8c9dc2f5-16ef-40bc-815e-6395961fb94a"
        },
        "item": {
          "id": "10ff4185-98e3-4a63-ac1e-2efd4966d47d",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "95d7aabd-1577-4cd4-9a93-aaf5e0a3e9bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aca8039d-d165-4bab-a3fb-9b5146da32fc",
        "cursor": {
          "ref": "235373d7-46a7-4927-8817-34571e5c6d68",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "406db1f1-a1fc-4f4d-8aee-1711ef96ba65"
        },
        "item": {
          "id": "aca8039d-d165-4bab-a3fb-9b5146da32fc",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "566b206c-933f-46b1-bfd7-43ba406dc616",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d11c28fc-9e5a-4fa5-b6de-065ba754ea5d",
        "cursor": {
          "ref": "10b603a2-d25e-487f-9543-e0f8a07370f4",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "81f260af-c1f4-4a28-9f4d-3a97c7c4cadd"
        },
        "item": {
          "id": "d11c28fc-9e5a-4fa5-b6de-065ba754ea5d",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "ee4cb9b3-12c7-4f36-83b8-406c57c57010",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df7914d4-987a-47ad-bf8e-8c62622d1e63",
        "cursor": {
          "ref": "5d1c8307-641a-47f4-8c2c-469422dd2ae6",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "74d2db13-9e60-430d-aff4-8d86bd4d6f17"
        },
        "item": {
          "id": "df7914d4-987a-47ad-bf8e-8c62622d1e63",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "c9479819-fec6-448b-908c-905c2688191b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4c24410-eda2-4f47-a6e0-d511f8a78374",
        "cursor": {
          "ref": "f28f25dc-3219-44e9-906d-60c764157ad5",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "e5d9d8c9-61ea-420e-b423-29412e4f29d5"
        },
        "item": {
          "id": "c4c24410-eda2-4f47-a6e0-d511f8a78374",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "66a21a65-ba28-46b4-8f3f-26f36ef847af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66e8727f-a781-4e4a-b1cf-a5175f2ea2e1",
        "cursor": {
          "ref": "cc3f58ce-c643-4330-b2c8-ca75302b4997",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "6c8b903e-f30f-4a1f-8eca-4b0eceb0cee6"
        },
        "item": {
          "id": "66e8727f-a781-4e4a-b1cf-a5175f2ea2e1",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "c596914d-c6e8-42a6-bbb7-e4d1b89e56cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59be47f3-927b-4f4c-90c3-08caa5675e8f",
        "cursor": {
          "ref": "567f884a-2b31-4cb4-b372-b07753c739f0",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "8cfb18fe-5863-425e-b22d-7c1d066cb88a"
        },
        "item": {
          "id": "59be47f3-927b-4f4c-90c3-08caa5675e8f",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "bd18ebc2-e655-4af8-8de9-3e390a154eba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79c3a0ce-dd0a-428f-a6ac-811148b83037",
        "cursor": {
          "ref": "33cae084-0468-48ee-a159-38b706f2271e",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "e703a77a-294b-43a4-92ab-6ec82e351253"
        },
        "item": {
          "id": "79c3a0ce-dd0a-428f-a6ac-811148b83037",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "153c1713-ab57-4d86-bc86-08716af09a87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0a9e711-9659-493a-a3ee-c1d10dbbab9d",
        "cursor": {
          "ref": "f46b2b5c-c871-41c3-80b7-75117b977f3e",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "a17468bf-e0a1-40a4-8a04-3fc684536e1e"
        },
        "item": {
          "id": "f0a9e711-9659-493a-a3ee-c1d10dbbab9d",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "b5ab1a31-7b66-4e8d-9983-12b5e5bac765",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6c37aa0-2cd2-41dd-a9c0-b91e8ad13c9b",
        "cursor": {
          "ref": "4fa555ce-59d8-4322-b0cf-3556a8d7054a",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "616b9a13-5d15-413e-979d-d9dacbc3f02e"
        },
        "item": {
          "id": "d6c37aa0-2cd2-41dd-a9c0-b91e8ad13c9b",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "2a2f7ff6-d725-4399-83ed-c47258761448",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afe205c4-fe06-46a2-9ea3-3fa07c65e9e2",
        "cursor": {
          "ref": "885a1448-7fef-4019-8961-c9e648a088a9",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "55db18bf-129b-4e1a-8fbf-a5ccdd2ae1f6"
        },
        "item": {
          "id": "afe205c4-fe06-46a2-9ea3-3fa07c65e9e2",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "394b9f00-2122-453b-95b7-00b4e5e37ce3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fa07253-81e0-417b-90fd-76608e45cd0d",
        "cursor": {
          "ref": "c71af88b-f8e7-468c-bc43-a4c7bcc70604",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "11599bfd-9060-42ef-8d00-e22bba7723c4"
        },
        "item": {
          "id": "6fa07253-81e0-417b-90fd-76608e45cd0d",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "e9ed63bc-8321-437a-9f19-6dadf4f9c889",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79b3a8d9-12c2-4a1b-bdb2-e1bc8c332e24",
        "cursor": {
          "ref": "94952216-cc0f-459c-9ce0-2aee45409e6c",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "dd14113b-8907-4407-8ae8-f9b019c6559a"
        },
        "item": {
          "id": "79b3a8d9-12c2-4a1b-bdb2-e1bc8c332e24",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "3228c97b-d686-4c8d-a361-012f69bbd0b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7a77a25-0529-45f1-b14f-8403160331f9",
        "cursor": {
          "ref": "ea5d5e5a-f57a-4053-8b96-feb32c4e88fd",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "509c4b06-fae7-463c-a277-f1ab68211cce"
        },
        "item": {
          "id": "b7a77a25-0529-45f1-b14f-8403160331f9",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "88419e66-e40e-4596-a275-3d09d546fae7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5476f7e-565d-404d-8ebb-0cc4baff9bb5",
        "cursor": {
          "ref": "95a5e2d9-3b9c-4562-a85f-3992f874268c",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "402c4624-5bb3-4717-b4f5-b3cf7ba7c390"
        },
        "item": {
          "id": "d5476f7e-565d-404d-8ebb-0cc4baff9bb5",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "59839436-8ed0-4dfb-89af-e618b5c2a6d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5905274-7838-4672-8008-25031d19f919",
        "cursor": {
          "ref": "3d319cd9-ce8c-4134-acf4-f3d9fc53cad4",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "9a8e815f-3b1e-4350-a2e5-ea919c0fa3b1"
        },
        "item": {
          "id": "e5905274-7838-4672-8008-25031d19f919",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "7adab421-8245-4e38-9194-b6f3f6d77818",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89015810-d1d8-4875-a578-bb1c3be00097",
        "cursor": {
          "ref": "e37ccd0c-fc3a-470e-9e65-a032b7b6a9c2",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "2d8829c2-5271-46f7-8cfd-7af2c316ebeb"
        },
        "item": {
          "id": "89015810-d1d8-4875-a578-bb1c3be00097",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "c7e4b43b-85c9-44ae-84de-2e8fe026c773",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 1359
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b0c27d4-f6d2-4867-be64-d4d542af2367",
        "cursor": {
          "ref": "2e3ce178-695a-45df-8a28-426f0af7bb0a",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "9fa1179e-62fd-4084-a877-53fd25e79364"
        },
        "item": {
          "id": "4b0c27d4-f6d2-4867-be64-d4d542af2367",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "6ed8920a-56ba-42f2-a615-30d19e2f55a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ea7b41d-6fd9-4370-b4e7-48cfd50960b2",
        "cursor": {
          "ref": "67a51c24-ea5f-49c9-aac7-8c08355f1fa5",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "5198d267-81fa-4e92-8ac6-3519a8570fae"
        },
        "item": {
          "id": "9ea7b41d-6fd9-4370-b4e7-48cfd50960b2",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "7881c6ee-d33e-41b3-aebd-952e4e5fb4e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7630f8fe-d61a-4713-a081-0e81ff9fc8ab",
        "cursor": {
          "ref": "a3e95b8d-1f9e-451e-8129-ee6c1a25e68a",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "8f53ccdf-6e16-4232-bf06-20f9c68c3b2d"
        },
        "item": {
          "id": "7630f8fe-d61a-4713-a081-0e81ff9fc8ab",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "75f69da5-009c-4e94-8e9d-34eb5592ce72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c836903b-e27b-429c-ae73-7e3ee4873571",
        "cursor": {
          "ref": "f27baa9b-d619-45ec-9f7d-db73de13379c",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "74d3be00-7edf-4d9e-ba43-4db738585d2a"
        },
        "item": {
          "id": "c836903b-e27b-429c-ae73-7e3ee4873571",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "51908b97-c3ca-4a92-9237-e13fe5557a90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 1365
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da80cef5-75a7-4c08-9230-05e0680d10dc",
        "cursor": {
          "ref": "ed6bbfec-24a7-4817-860c-3657483692c5",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "295d003e-dd56-4572-91c9-76a2ff5c48e7"
        },
        "item": {
          "id": "da80cef5-75a7-4c08-9230-05e0680d10dc",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "22fcc0b3-3b01-43fc-a3c7-27d5ec8ead15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 1395
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28aaee76-eba1-46c1-9aa9-b4ebacbc469e",
        "cursor": {
          "ref": "16196f6b-4e2e-41cf-97b9-0d36053fd79c",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "85368eb9-1b99-4694-8f39-ceab5485616b"
        },
        "item": {
          "id": "28aaee76-eba1-46c1-9aa9-b4ebacbc469e",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "e8b69274-047b-4739-a93c-e513c128f5b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34c15fb9-e2ec-46a9-af0f-67443645cd99",
        "cursor": {
          "ref": "8640e42e-1152-4ed3-86f6-e443b4557693",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "d4927ec0-3539-48f0-8b87-d10508010e19"
        },
        "item": {
          "id": "34c15fb9-e2ec-46a9-af0f-67443645cd99",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "23690c47-5aec-41dd-bd63-d76eb0827040",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c755784-e7ef-4990-b0ce-e78d32fc355b",
        "cursor": {
          "ref": "9fd0e3e6-92f4-4385-b24b-9368f00feafa",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "05c1b4b8-4355-4cb5-8114-e4f75fe1e780"
        },
        "item": {
          "id": "1c755784-e7ef-4990-b0ce-e78d32fc355b",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "748e627c-62d8-478b-a1b6-7c2f1bc6b9cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "857d1405-5da3-411c-b25c-708c23d4cfb3",
        "cursor": {
          "ref": "4c369cfa-ecc1-47fa-95af-57ae1ec70a55",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "4737b25d-9239-4e00-b93b-b465f9864330"
        },
        "item": {
          "id": "857d1405-5da3-411c-b25c-708c23d4cfb3",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "2b82c3d1-6561-49d3-9336-d0c1f134b0c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d49697d8-b8ea-4f72-9ea7-3f8e9614fd39",
        "cursor": {
          "ref": "971ec5ec-766a-49f1-8aa7-074efeb62bbc",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "ef1900aa-afb5-4035-816c-ef90ee0666e6"
        },
        "item": {
          "id": "d49697d8-b8ea-4f72-9ea7-3f8e9614fd39",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "5959aa03-aba0-4be0-afee-5ebc97d52675",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd8f3f67-2c99-4f0c-9071-8a2c435c02a1",
        "cursor": {
          "ref": "2c50960f-ca6c-4d8e-8068-06fefb7ef24b",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "a9a884dc-1031-478e-9bab-c5d1939e126d"
        },
        "item": {
          "id": "fd8f3f67-2c99-4f0c-9071-8a2c435c02a1",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "2c144c92-6471-4c47-ab53-a72490ba9ca1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20242c06-3488-460e-b9ac-c71926512888",
        "cursor": {
          "ref": "69ad15af-ab65-427b-90dd-4f45989866fc",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "f19e5792-228f-46d6-bc76-2a1eb2db0a31"
        },
        "item": {
          "id": "20242c06-3488-460e-b9ac-c71926512888",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "c7b4a1de-aa39-41e1-a7d4-6cafccc65e90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e6647de-7276-405e-b804-fb217b585bda",
        "cursor": {
          "ref": "1da37c65-1f6e-4e93-af4f-c058e9f5250f",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "f1117b1a-d08b-4b94-812b-47928bea9c24"
        },
        "item": {
          "id": "5e6647de-7276-405e-b804-fb217b585bda",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "07d188aa-3da8-42d5-9f3d-c4cf44bd5ba3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5604da5-eaf9-470f-9250-6e0ddb7d7eb1",
        "cursor": {
          "ref": "c4059edc-bfbf-4915-9b4f-060392ea96c5",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "8db57f56-7f07-4c9b-90ea-ccad2582495d"
        },
        "item": {
          "id": "e5604da5-eaf9-470f-9250-6e0ddb7d7eb1",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "4e58c5db-cb79-4f8b-be1c-a1ac4bd218d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fee772e2-053e-4dd3-8800-5ed9c91cad46",
        "cursor": {
          "ref": "51ec403b-ecc1-4c65-a9c6-ef171900cb78",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "296483ea-ae10-431a-bfd8-a9777e9168e3"
        },
        "item": {
          "id": "fee772e2-053e-4dd3-8800-5ed9c91cad46",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "65393347-f699-4a09-8bdb-bc45e50adc26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf26db9a-9496-434f-ae3b-5fa81793e3cb",
        "cursor": {
          "ref": "07dec193-c16a-45e6-a3af-d4e60a7acef0",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "93c61682-c2c8-45da-8049-63bcd491589a"
        },
        "item": {
          "id": "cf26db9a-9496-434f-ae3b-5fa81793e3cb",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "927d8145-0b34-4ec6-8447-5a57633c6077",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a1ba301-6a20-4782-a34f-b20c0dc01394",
        "cursor": {
          "ref": "084fcb03-65ca-4e63-8490-7bb5f6dd9d46",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "9eafe51c-b1ab-4c2a-9d03-17fa039e5ad9"
        },
        "item": {
          "id": "1a1ba301-6a20-4782-a34f-b20c0dc01394",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "0701e1d5-63b9-4ada-8b9e-e9ac205efe6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8adb29e6-6ad7-4460-8bda-8a4296318a38",
        "cursor": {
          "ref": "b0c06598-4da2-4218-b125-b63a17aac2d6",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "122c8e79-2abb-499c-a081-e2ff8a6359b7"
        },
        "item": {
          "id": "8adb29e6-6ad7-4460-8bda-8a4296318a38",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "607bae43-e134-42bb-adc0-e212afb8c4c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccad80ce-914a-409a-b57e-038a25f9a750",
        "cursor": {
          "ref": "ee7276b0-dca9-46b2-908d-fb4486a35ab8",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "037e2683-8634-426f-8ef7-dee405c635b0"
        },
        "item": {
          "id": "ccad80ce-914a-409a-b57e-038a25f9a750",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "66d3e979-2c5d-41d9-81c8-ad16c11fff46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f27a122-139c-40ba-ad1c-a798d198e716",
        "cursor": {
          "ref": "66b48c11-d5da-492f-a8e4-2ef048b661ec",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "f6db484a-76c7-497d-a981-08e588482da8"
        },
        "item": {
          "id": "8f27a122-139c-40ba-ad1c-a798d198e716",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "f47d54e4-9556-4099-b00c-b0d024ff10a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "897bf185-376a-4bfc-924a-ca262cb42b29",
        "cursor": {
          "ref": "cb68fb62-a463-4ed0-830a-6125e39b4a52",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "23d3aa3a-cbe0-4d43-8b4b-ac04be68173c"
        },
        "item": {
          "id": "897bf185-376a-4bfc-924a-ca262cb42b29",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "31696ae7-767f-42a9-bafd-2df575f53a00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "222b6e3a-05bc-45c8-9fcc-5db977885c00",
        "cursor": {
          "ref": "8666e02b-3365-40b5-aea4-54665261b39b",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "807d1cd3-02c6-4d92-be3a-c7decbada961"
        },
        "item": {
          "id": "222b6e3a-05bc-45c8-9fcc-5db977885c00",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "86454797-ce9b-4249-adf5-8b3c91528166",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b8fbbc0-8043-42ef-9436-7322dd382519",
        "cursor": {
          "ref": "7514f8b7-10c0-45ff-b46d-cef044e266b9",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "43a5a1ac-462e-41ce-9292-8963058d609a"
        },
        "item": {
          "id": "8b8fbbc0-8043-42ef-9436-7322dd382519",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "95204d94-3293-4e10-bbd4-20062c5a4340",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c85b6ac-ca4f-4cac-9b96-705c281c5004",
        "cursor": {
          "ref": "f7571841-28ad-456e-9dbd-c6a9d3528221",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "3b439e1b-595e-426f-ba11-49383ac85af3"
        },
        "item": {
          "id": "0c85b6ac-ca4f-4cac-9b96-705c281c5004",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "6edc9644-b24d-4a11-8441-7a9ecfaaddb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3b2bd8d-1a07-4d37-b961-edbaaad11f7d",
        "cursor": {
          "ref": "aa5d5f01-f2f6-452b-a853-80922f4472ba",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "180775db-c94c-467a-a432-80dd9e67406f"
        },
        "item": {
          "id": "f3b2bd8d-1a07-4d37-b961-edbaaad11f7d",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "c3b3fd47-6c9d-429d-bc87-1138e88fe4c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "323df37a-5f1d-4d82-827f-90ad65ab6513",
        "cursor": {
          "ref": "74a65b17-1c45-4b2f-9ba8-7ccc7f1ae296",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "04b9f20d-4146-4ba8-8105-de5d3e178151"
        },
        "item": {
          "id": "323df37a-5f1d-4d82-827f-90ad65ab6513",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "fce7a8d2-d15e-481c-adad-631709b565c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15fe84bd-c9a6-44e4-8c77-2aa7cde6d0b4",
        "cursor": {
          "ref": "70e041be-cda4-432e-9aa4-4288ea94e266",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "2dd954c5-3cd3-496e-84f4-26999de3364e"
        },
        "item": {
          "id": "15fe84bd-c9a6-44e4-8c77-2aa7cde6d0b4",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "42ed9134-e971-45aa-a072-e6c50d41950e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7acc7043-d318-4ab0-bf2b-8e7d5e65ef34",
        "cursor": {
          "ref": "de3a20e4-5db1-4a99-ad7c-4a6d7b900df6",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "e3ad9f2c-07fb-4f6c-837e-908620108ec0"
        },
        "item": {
          "id": "7acc7043-d318-4ab0-bf2b-8e7d5e65ef34",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "2636b86c-c512-44c3-aa0f-9607e88febb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5630fe8b-e010-4f91-b024-5c6df6c7b46d",
        "cursor": {
          "ref": "fff010b7-7aa0-4181-a5a2-35fa169e0c21",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "658c1fd0-b4e2-4ace-8165-2d0537c9c995"
        },
        "item": {
          "id": "5630fe8b-e010-4f91-b024-5c6df6c7b46d",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "4930ad05-3a7d-4885-bd3e-b03b2987518f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1f23d1c-9383-4db3-9ca0-0fcf0d1d2b6c",
        "cursor": {
          "ref": "8c6ac1f7-99d9-44fd-a21e-497e788cb30c",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "6b36d36f-605e-4cbe-ba09-01c15a643718"
        },
        "item": {
          "id": "d1f23d1c-9383-4db3-9ca0-0fcf0d1d2b6c",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "c501e0f6-8891-4514-b685-6c38d0a11be4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "826e1f41-1579-4c2a-8d38-b5c78808eef0",
        "cursor": {
          "ref": "f45c1931-0df7-4cd4-8413-169b7f287f6a",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "57dc971d-3ea1-433e-b8a0-21c909f4db3d"
        },
        "item": {
          "id": "826e1f41-1579-4c2a-8d38-b5c78808eef0",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "57bf4a67-54de-4dd3-93bf-c87b88124b69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b95c95b-a966-4176-a19b-18d541de7722",
        "cursor": {
          "ref": "03650268-2a75-4602-8863-89f77dab0442",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "e736403f-a26d-4c50-aec6-b6f462edf0f3"
        },
        "item": {
          "id": "7b95c95b-a966-4176-a19b-18d541de7722",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "addd40c0-e6fc-4c9a-85da-73cc2c95457e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e3d6b86-e9d9-4975-ac92-1e03a78547d4",
        "cursor": {
          "ref": "7449c0d6-b459-49eb-9e27-7e5f05b2a338",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "395bc168-6f59-42c8-a4c4-f191798f258e"
        },
        "item": {
          "id": "0e3d6b86-e9d9-4975-ac92-1e03a78547d4",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "e0c05322-158b-4013-90c1-918e4a7fd04f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94fb12eb-fd68-4af5-91fb-a76871f829be",
        "cursor": {
          "ref": "6807662d-740c-4f48-97ac-a49995b0bef7",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "fdfe2a43-ea60-4889-8872-70bf8d9fa704"
        },
        "item": {
          "id": "94fb12eb-fd68-4af5-91fb-a76871f829be",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "d27fcb09-fce0-49ba-9562-2bac25b8c5b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f2f107c-f871-4dfe-837f-bc1cb8dc1a78",
        "cursor": {
          "ref": "edb98340-118d-43e3-aaa4-53d353cf1e24",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "e3bb69f6-cf99-4f87-b8e1-7f355fb6a859"
        },
        "item": {
          "id": "9f2f107c-f871-4dfe-837f-bc1cb8dc1a78",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "ffe6a11b-b128-4335-bf0c-d0deada47c92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efa4b144-777b-4995-a604-57f9dd1c91c8",
        "cursor": {
          "ref": "d1951a1e-039f-4ebe-914a-2ea4f6091a7b",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "deb35898-2ecf-4e53-9663-24276e77ac60"
        },
        "item": {
          "id": "efa4b144-777b-4995-a604-57f9dd1c91c8",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "016eb9c0-991a-48f1-9600-b76efdc6cd05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaff8443-54a7-4850-be31-054f121f2a4e",
        "cursor": {
          "ref": "21831dd8-8705-4dac-ab16-f6092007ea90",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "0eb16696-6292-4211-9b2e-2b3714c36844"
        },
        "item": {
          "id": "eaff8443-54a7-4850-be31-054f121f2a4e",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "9fc13711-7ed4-45d2-a82d-99fb1e69e8e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5644304-ada2-44d1-966c-05f42afae7d4",
        "cursor": {
          "ref": "db5a5b08-81f3-425a-b31e-a6760e761004",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "c499cd37-5750-446c-a806-19b51794e15a"
        },
        "item": {
          "id": "e5644304-ada2-44d1-966c-05f42afae7d4",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "d7fb3a3d-6dbd-4b10-9b97-bec1f9293865",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c47eb805-91b6-4608-a622-fe8698527c20",
        "cursor": {
          "ref": "3067e5df-9874-4421-8eb3-0a53756f7127",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "6892590e-8b29-406c-b89f-cf8364c0aa52"
        },
        "item": {
          "id": "c47eb805-91b6-4608-a622-fe8698527c20",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "86094cb1-dcf3-4d03-82c7-598d62d69446",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a92181a-d800-4908-a3ec-f8c4f15b1ea0",
        "cursor": {
          "ref": "fa9fe8e0-b723-43d3-82f9-f782deed4682",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "fba8345c-c0da-4816-af3f-6e8bf51091a7"
        },
        "item": {
          "id": "7a92181a-d800-4908-a3ec-f8c4f15b1ea0",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "08d1cc14-880c-4b7a-bb2c-1bd00ed41a63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ab48059-e2b8-4bc4-8809-ef9ed37e7084",
        "cursor": {
          "ref": "5e7538f7-5671-431f-9bd6-ada057888f78",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "de76a8cc-cf5c-4b7a-86e7-d4490fb91a46"
        },
        "item": {
          "id": "5ab48059-e2b8-4bc4-8809-ef9ed37e7084",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "fd5ec2e8-4238-49ba-912d-c2b94c457870",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d13381d-b3ea-4a8f-935e-fd5fee30a9ba",
        "cursor": {
          "ref": "0f101a00-09b8-484b-9f50-b695c1c7650e",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "6ef743bd-80e3-448f-9c90-6ffcd376816b"
        },
        "item": {
          "id": "1d13381d-b3ea-4a8f-935e-fd5fee30a9ba",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "5fb1a5ad-3500-4cb8-b10f-3dbcc051a8a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06ad43f4-194d-43bf-9645-79ad3bb42710",
        "cursor": {
          "ref": "cb3c59c3-4c3a-41d4-a83b-86c49bb6dd21",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "45daa75b-fb58-462c-9f01-c3e532931556"
        },
        "item": {
          "id": "06ad43f4-194d-43bf-9645-79ad3bb42710",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "532fd21b-42f2-4efb-9b1f-a8ab83bdd549",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6339ba2a-9fb0-4a78-abd3-3b6f8bd1ecb0",
        "cursor": {
          "ref": "3ef1ba13-4bd7-49fa-a784-3291cf6bf2f6",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "6fa6bccf-1353-4e03-acbd-3d84aa034191"
        },
        "item": {
          "id": "6339ba2a-9fb0-4a78-abd3-3b6f8bd1ecb0",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "afccd7fa-b2f0-499e-9fd9-fecea4d84cec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10246c31-a88a-4adf-9cf7-29e81f313802",
        "cursor": {
          "ref": "d102e5f1-c042-468f-91b6-0f0a1c088ae3",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "ccf9afb5-b4ec-4bf2-8ee8-3b72eb87fe96"
        },
        "item": {
          "id": "10246c31-a88a-4adf-9cf7-29e81f313802",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "4bf2433d-28f3-4b02-8dfa-9ee60e9c11c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88c42258-96c3-4c95-904f-84d33437121a",
        "cursor": {
          "ref": "7e982a09-112e-4756-8522-d18e46147c51",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "b17d2a37-fb6c-4e83-8c9d-e9cf3943aa1a"
        },
        "item": {
          "id": "88c42258-96c3-4c95-904f-84d33437121a",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "a96179c2-e02a-4a5f-86a7-9deb1e32ea62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4be50146-7862-4393-aece-34ede90afc5e",
        "cursor": {
          "ref": "dcc70d03-6751-4405-9b3d-01fade7021f0",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "0647ae8e-a3ae-469a-906e-dfb5343f0a46"
        },
        "item": {
          "id": "4be50146-7862-4393-aece-34ede90afc5e",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "b3f1b297-691f-441e-ba83-96e7da15e0e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5341a0de-98f8-4f3c-9ba0-741431ac005a",
        "cursor": {
          "ref": "7a70f9e6-2ead-4ea6-80ef-f44e7890771c",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "0a8aadaa-c42b-4630-ae1d-a85ae0988a35"
        },
        "item": {
          "id": "5341a0de-98f8-4f3c-9ba0-741431ac005a",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "5423d012-447e-429a-84db-8ddf65f42df4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f185e1c0-7352-4ca6-861d-bfe3215815d7",
        "cursor": {
          "ref": "32475160-50f4-43f0-9251-90bf788a3e49",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "d7383e98-e347-496e-a318-36efe5176247"
        },
        "item": {
          "id": "f185e1c0-7352-4ca6-861d-bfe3215815d7",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "fb92aa48-6e29-4fa4-ada5-303daf3c8c9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e603261d-8a14-4c87-bab2-7d423a9632fe",
        "cursor": {
          "ref": "fc338bf8-960d-4d5e-a489-9b5bde063074",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "521fa9bc-fbad-4b3b-984e-113aecf1ce3a"
        },
        "item": {
          "id": "e603261d-8a14-4c87-bab2-7d423a9632fe",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "6a38e699-134b-44be-841e-001752e066be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60a22ffe-b2f7-4940-a462-a342356bddf4",
        "cursor": {
          "ref": "8118a4f4-a4d7-4fb9-a5a5-4e094a56880f",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "6326f5ee-ffe6-4a8c-b28f-157cfb32562c"
        },
        "item": {
          "id": "60a22ffe-b2f7-4940-a462-a342356bddf4",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "ca1d7343-d4d7-48ab-a751-5efb721366eb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a434571c-84fd-4963-9c60-1df1faf9e884",
        "cursor": {
          "ref": "89967032-dbc6-496d-9235-a715848ae59a",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "d0119555-1739-4dcf-9eaf-eceb0c9781bd"
        },
        "item": {
          "id": "a434571c-84fd-4963-9c60-1df1faf9e884",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "936f1b70-3137-4831-8d7a-b3946794eed8",
          "status": "OK",
          "code": 200,
          "responseTime": 76,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "87b3d382-d108-42e1-a8e1-c2e37d3bd2a9",
        "cursor": {
          "ref": "25dec123-c147-4e7a-847e-95bb1d9cd526",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "43420037-61bc-4e9a-9d68-1d31c5c3008e"
        },
        "item": {
          "id": "87b3d382-d108-42e1-a8e1-c2e37d3bd2a9",
          "name": "credentials_verify"
        },
        "response": {
          "id": "cca9c89d-064e-40a5-a10b-f9bd8561dc25",
          "status": "OK",
          "code": 200,
          "responseTime": 1416,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "223adae1-8bbb-49ca-bd23-f455de9a9b10",
        "cursor": {
          "ref": "164f0aad-b8a6-4acd-8912-1fea3373b408",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "8adb7995-2711-4bc6-b9b0-2c26ac106d7c"
        },
        "item": {
          "id": "223adae1-8bbb-49ca-bd23-f455de9a9b10",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "d2bd7d86-f075-4b64-8c83-e37f7b68d0f0",
          "status": "OK",
          "code": 200,
          "responseTime": 1411,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "d87a4e62-29ce-4f16-b903-acef10d2c456",
        "cursor": {
          "ref": "ed191511-c7da-4cab-b8a8-abb31eda6794",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "63b79ada-af86-4e9c-b721-acd8876467cb"
        },
        "item": {
          "id": "d87a4e62-29ce-4f16-b903-acef10d2c456",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "7030ec8a-5efa-4a23-ab9b-9cba03b7254c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d87a4e62-29ce-4f16-b903-acef10d2c456",
        "cursor": {
          "ref": "ed191511-c7da-4cab-b8a8-abb31eda6794",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "63b79ada-af86-4e9c-b721-acd8876467cb"
        },
        "item": {
          "id": "d87a4e62-29ce-4f16-b903-acef10d2c456",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "7030ec8a-5efa-4a23-ab9b-9cba03b7254c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf463208-22b4-468d-ae2d-cc8748465812",
        "cursor": {
          "ref": "64a3a88a-5b0a-444e-bc04-8309a80a7592",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "987c617a-5afc-49de-881e-5c6c22a2e0bc"
        },
        "item": {
          "id": "cf463208-22b4-468d-ae2d-cc8748465812",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "1f709cdb-224f-4708-8e8e-f0b714dd0a5b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f29b719-2e27-4445-af33-385deac44a6d",
        "cursor": {
          "ref": "0cb776e0-4a05-4dfe-af5e-8540bab03ed3",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "604586b3-b247-4c04-9b48-96f48bdf266e"
        },
        "item": {
          "id": "5f29b719-2e27-4445-af33-385deac44a6d",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "0c1e4397-0ab5-4ee8-8259-f8ee0249bb8b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}